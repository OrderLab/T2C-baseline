diff --git a/bin/zkEnv.sh b/bin/zkEnv.sh
index 8d93a50c7..f1d67b850 100755
--- a/bin/zkEnv.sh
+++ b/bin/zkEnv.sh
@@ -121,6 +121,8 @@ do
    CLASSPATH="$d:$CLASSPATH"
 done
 
+CLASSPATH="$ZOOBINDIR/../../Semantic-Daikon-Checker/target/*:$CLASSPATH"
+
 #make it work for developers
 CLASSPATH="$ZOOBINDIR/../build/classes:$CLASSPATH"
 
diff --git a/bin/zkServer.sh b/bin/zkServer.sh
index 5be02c150..a183a1e2c 100755
--- a/bin/zkServer.sh
+++ b/bin/zkServer.sh
@@ -158,7 +158,7 @@ start)
     nohup "$JAVA" $ZOO_DATADIR_AUTOCREATE "-Dzookeeper.log.dir=${ZOO_LOG_DIR}" \
     "-Dzookeeper.log.file=${ZOO_LOG_FILE}" "-Dzookeeper.root.logger=${ZOO_LOG4J_PROP}" \
     -XX:+HeapDumpOnOutOfMemoryError -XX:OnOutOfMemoryError='kill -9 %p' \
-    -cp "$CLASSPATH" $JVMFLAGS $ZOOMAIN "$ZOOCFG" > "$_ZOO_DAEMON_OUT" 2>&1 < /dev/null &
+    -cp "$CLASSPATH" $JVMFLAGS -Ddaikon.checkratio=0.99 $ZOOMAIN "$ZOOCFG" > "$_ZOO_DAEMON_OUT" 2>&1 < /dev/null &
     if [ $? -eq 0 ]
     then
       case "$OSTYPE" in
diff --git a/zookeeper-server/pom.xml b/zookeeper-server/pom.xml
index a58d23d3d..52284e7bb 100755
--- a/zookeeper-server/pom.xml
+++ b/zookeeper-server/pom.xml
@@ -33,6 +33,13 @@
   <description>ZooKeeper server</description>
 
   <dependencies>
+    <dependency>
+      <groupId>daikon</groupId>
+      <artifactId>Semantic-Daikon-Checker</artifactId>
+      <version>1.0</version>
+      <scope>system</scope>
+      <systemPath>${project.basedir}/../../Semantic-Daikon-Checker/target/Semantic-Daikon-checker-1.0-SNAPSHOT-jar-with-dependencies.jar</systemPath>
+    </dependency>
     <dependency>
       <groupId>com.github.spotbugs</groupId>
       <artifactId>spotbugs-annotations</artifactId>
diff --git a/zookeeper-server/src/main/java/org/apache/zookeeper/server/ZKDatabase.java b/zookeeper-server/src/main/java/org/apache/zookeeper/server/ZKDatabase.java
index f758f5de5..94ce2a64c 100644
--- a/zookeeper-server/src/main/java/org/apache/zookeeper/server/ZKDatabase.java
+++ b/zookeeper-server/src/main/java/org/apache/zookeeper/server/ZKDatabase.java
@@ -18,6 +18,9 @@
 
 package org.apache.zookeeper.server;
 
+import daikon.DaikonLogger;
+import daikon.GlobalState;
+import daikon.InvariantChecker;
 import java.io.File;
 import java.io.IOException;
 import java.io.PrintWriter;
@@ -638,7 +641,27 @@ public void serializeSnapshot(OutputArchive oa) throws IOException, InterruptedE
      */
     public boolean append(Request si) throws IOException {
         txnCount.incrementAndGet();
-        return this.snapLog.append(si);
+        // return this.snapLog.append(si);
+        boolean res = this.snapLog.append(si);
+        LOG.info("DIMAS: " + GlobalState.mode.toString());
+        switch (GlobalState.mode)
+        {
+            case TEST:
+                //CHANG: we expose states at the entry of all requests
+                try {
+                    DaikonLogger.getLogger().dumpStates();
+                } catch (Exception e) {
+                    // TODO: handle exception
+                }
+                break;
+            case PRODUCTION:
+                InvariantChecker.assertAll();
+                break;
+            case ASSERTING:
+                LOG.trace("Asserting, so skip another triggered");
+                break;
+        }
+        return res;
     }
 
     /**
diff --git a/zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java b/zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java
index 6a58dc16f..60a3e1360 100644
--- a/zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java
+++ b/zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java
@@ -18,6 +18,11 @@
 
 package org.apache.zookeeper.server;
 
+import daikon.DaikonLogger;
+import daikon.GlobalState;
+import daikon.Pair;
+import java.lang.reflect.Field;
+import java.util.*;
 import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
 import java.io.ByteArrayOutputStream;
 import java.io.File;
@@ -93,6 +98,9 @@
  */
 public class ZooKeeperServer implements SessionExpirer, ServerStats.Provider {
 
+    //CHANG: for testing use
+    public static ZooKeeperServer zksInstance = null;
+
     protected static final Logger LOG;
 
     public static final String GLOBAL_OUTSTANDING_LIMIT = "zookeeper.globalOutstandingLimit";
@@ -695,6 +703,8 @@ private void startupWithServerState(State state) {
         registerMetrics();
 
         setState(state);
+        zksInstance = this;
+        GlobalState.mode = GlobalState.T2CMode.PRODUCTION;
 
         requestPathMetricsCollector.start();
 
