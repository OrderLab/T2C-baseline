===========================================================================
org.apache.cassandra.cql3.SimpleQueryTest@collectionDeletionTest-54916894:::dump
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.allocatingFrom.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.availableSegment.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.joinRing
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.useStrictConsistency
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionSpaceCheck
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.enabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.partitionSSTablesByTokenRange
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_ENABLED
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.isEnabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.shouldDefragment
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.supportsEarlyOpen
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.data.loadsstables
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.directories.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.keyspace.initialized
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.allColumnFilter.isFetchAll
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.viewManager.baseTableMetadata.isCompound
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MIN_THRESHOLD
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CFMetadataInstance.partitioner.MINIMUM.serialVersionUID
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.executor.syncComplete.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.managerThreadWaitQueue.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.segmentPrepared.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == StorageService.instance.threadCounter
CFMetadataInstance.isCounter == CFMetadataInstance.isDense
CFMetadataInstance.isCounter == CFMetadataInstance.isIndex
CFMetadataInstance.isCounter == CFMetadataInstance.isSuper
CFMetadataInstance.isCounter == CFMetadataInstance.isView
CFMetadataInstance.isCounter == CFMetadataInstance.partitioner.partitionOrdering.isByteOrderComparable
CFMetadataInstance.isCounter == CommitLog.instance.executor.shutdown
CFMetadataInstance.isCounter == CommitLog.instance.executor.syncRequested
CFMetadataInstance.isCounter == CommitLog.instance.segmentManager.shutdown
CFMetadataInstance.isCounter == StorageService.instance.allowSimultaneousMoves
CFMetadataInstance.isCounter == StorageService.instance.authSetupCalled
CFMetadataInstance.isCounter == StorageService.instance.authSetupComplete
CFMetadataInstance.isCounter == StorageService.instance.gossipActive
CFMetadataInstance.isCounter == StorageService.instance.initialized
CFMetadataInstance.isCounter == StorageService.instance.isBootstrapMode
CFMetadataInstance.isCounter == StorageService.instance.isDecommissioning
CFMetadataInstance.isCounter == StorageService.instance.isRebuilding
CFMetadataInstance.isCounter == StorageService.instance.isShutdown
CFMetadataInstance.isCounter == StorageService.instance.isSurveyMode
CFMetadataInstance.isCounter == StorageService.instance.joined
CFMetadataInstance.isCounter == StorageService.instance.replacing
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.compactionLogger.enabled
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.currentBoundaries.isInvalid
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.diskBoundaryManager.diskBoundaries.isInvalid
CFMetadataInstance.isCounter == cfsInstance.keyspace.TEST_FAIL_WRITES
CFMetadataInstance.isCounter == cfsInstance.keyspace.viewManager.enableCoordinatorBatchlog
CFMetadataInstance.isCounter == cfsInstance.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.metric.aliasFactory.isIndex
CFMetadataInstance.isCounter == cfsInstance.metric.factory.isIndex
CFMetadataInstance.isCounter == cfsInstance.readOrdering.current.isBlocking
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isDense
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isView
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.executor.syncComplete.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.bufferPool.usedBuffers
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.managerThreadWaitQueue.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.segmentPrepared.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == QueryProcessor.instance.lastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.statics.complexIdx == QueryProcessor.instance.thriftLastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.legacyProgressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.nextRepairCommand
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.progressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.remainingCFs
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.tokenMetadata.ringVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.totalCFs
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.compactionLogger.identifier
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.currentBoundaries.directoriesVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.diskBoundaryManager.diskBoundaries.ringVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.keyspace.TEST_FAIL_MV_LOCKS_COUNT
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.keyspace.replicationStrategy.lastInvalidatedVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.readOrdering.current.running
CFMetadataInstance.partitionColumns.statics.complexIdx == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.HEAP_SIZE == StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.HEAP_SIZE == StorageService.instance.valueFactory.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.HEAP_SIZE == cfsInstance.metadata.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.MAXIMUM == StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CFMetadataInstance.partitioner.MAXIMUM == StorageService.instance.valueFactory.partitioner.MAXIMUM
CFMetadataInstance.partitioner.MAXIMUM == cfsInstance.metadata.partitioner.MAXIMUM
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == CommitLog.instance.configuration.encryptionContext.chunkLength
CommitLog.instance.executor.markerIntervalNanos == CommitLog.instance.executor.syncIntervalNanos
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.managerThreadWaitQueue.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.segmentPrepared.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.keyspace.writeOrder.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.readOrdering.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)-1
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == CommitLog.instance.segmentManager.availableSegment.ENTRY_OVERHEAD_SIZE
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == CommitLog.instance.segmentManager.availableSegment.SYNC_MARKER_SIZE
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.availableSegment.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.bufferPool.bufferSize
CommitLog.instance.segmentManager.allocatingFrom.idBase == CommitLog.instance.segmentManager.availableSegment.idBase
CommitLog.instance.segmentManager.allocatingFrom.nextId == CommitLog.instance.segmentManager.availableSegment.nextId
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == CommitLog.instance.segmentManager.availableSegment.replayLimitId
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == CommitLog.instance.segmentManager.availableSegment.lastSyncedOffset
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE == resultSetInstance.rows_FOR_ENCLOSING_USE
cfsInstance.compactionStrategyManager.isActive == cfsInstance.valid
CFMetadataInstance.allColumnFilter.isFetchAll == true
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK == 2
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == 4
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == 1
CFMetadataInstance.isCounter == false
CFMetadataInstance.partitionColumns.regulars.complexIdx == 0 || CFMetadataInstance.partitionColumns.regulars.complexIdx == 1
CFMetadataInstance.partitioner.HEAP_SIZE == 24
CFMetadataInstance.partitioner.MAXIMUM == 9223372036854775807L
CFMetadataInstance.partitioner.MINIMUM.token == -9223372036854775808L
CFMetadataInstance.resource.hash == -1493090401 || CFMetadataInstance.resource.hash == -1493090400
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == 65536
CommitLog.instance.MAX_MUTATION_SIZE == 2621440
CommitLog.instance.archiver.restorePointInTime == 4510987932000L
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS == 100
CommitLog.instance.executor.markerIntervalNanos == 1000000
CommitLog.instance.executor.pending == 0 || CommitLog.instance.executor.pending == 1
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == 12
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == 8
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == 5242880
CommitLog.instance.segmentManager.allocatingFrom.fd == 177 || CommitLog.instance.segmentManager.allocatingFrom.fd == 181 || CommitLog.instance.segmentManager.allocatingFrom.fd == 215
CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224501L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224502L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224503L
CommitLog.instance.segmentManager.allocatingFrom.idBase == 1731353224472L
CommitLog.instance.segmentManager.allocatingFrom.nextId == 31 || CommitLog.instance.segmentManager.allocatingFrom.nextId == 32 || CommitLog.instance.segmentManager.allocatingFrom.nextId == 33
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == 1731353224475L
CommitLog.instance.segmentManager.availableSegment.allocatePosition == 28
CommitLog.instance.segmentManager.availableSegment.fd == 177 || CommitLog.instance.segmentManager.availableSegment.fd == 181 || CommitLog.instance.segmentManager.availableSegment.fd == 215
CommitLog.instance.segmentManager.availableSegment.id == 1731353224502L || CommitLog.instance.segmentManager.availableSegment.id == 1731353224503L || CommitLog.instance.segmentManager.availableSegment.id == 1731353224504L
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == 20
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize == 3
CommitLog.instance.segmentManager.size == 10485760 || CommitLog.instance.segmentManager.size == 15728640
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
("oneOf.java.jpp: SEQUENCE unimplemented" != null)
StorageService.instance.RING_DELAY == 30000
daikon.Quant.fuzzy.eq(StorageService.instance.traceProbability, 0.0)
cfsInstance.compactionStrategyManager.fanout == 10
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD == 32
cfsInstance.fileIndexGenerator == 0 || cfsInstance.fileIndexGenerator == 1 || cfsInstance.fileIndexGenerator == 2
cfsInstance.indexManager.DEFAULT_PAGE_SIZE == 10000
cfsInstance.metadata.resource.hash == -1493090401 || cfsInstance.metadata.resource.hash == -1493090400
cfsInstance.sampleLatencyNanos == 2500000000L
resultSetInstance.metadata.columnCount >= 1
daikon.Quant.eltsNotEqual(resultSetInstance.rows_FOR_ENCLOSING_USE, null)
daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) == 0 || daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) == 1 || daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) == 2
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.size
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK >= cfsInstance.fileIndexGenerator
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != resultSetInstance.metadata.columnCount
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.size
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > cfsInstance.fileIndexGenerator
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > cfsInstance.readOrdering.current.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK >= CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK > CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK >= CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.size
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK > cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK <= resultSetInstance.metadata.columnCount
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.partitionColumns.regulars.complexIdx >= CFMetadataInstance.partitionColumns.statics.complexIdx
CFMetadataInstance.partitionColumns.regulars.complexIdx < CFMetadataInstance.partitioner.HEAP_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CFMetadataInstance.partitioner.MAXIMUM
CFMetadataInstance.partitionColumns.regulars.complexIdx > CFMetadataInstance.partitioner.MINIMUM.token
CFMetadataInstance.partitionColumns.regulars.complexIdx > CFMetadataInstance.resource.hash
CFMetadataInstance.partitionColumns.regulars.complexIdx < CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.MAX_MUTATION_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.archiver.restorePointInTime
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.markerIntervalNanos
CFMetadataInstance.partitionColumns.regulars.complexIdx >= CommitLog.instance.executor.pending
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.written
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.idBase
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitionColumns.regulars.complexIdx < StorageService.instance.RING_DELAY
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.compactionStrategyManager.fanout
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CFMetadataInstance.partitionColumns.regulars.complexIdx <= cfsInstance.fileIndexGenerator
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx > cfsInstance.metadata.resource.hash
CFMetadataInstance.partitionColumns.regulars.complexIdx <= cfsInstance.readOrdering.current.id
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.sampleLatencyNanos
CFMetadataInstance.partitionColumns.regulars.complexIdx <= resultSetInstance.metadata.columnCount
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitionColumns.statics.complexIdx <= CommitLog.instance.executor.pending
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.written
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitionColumns.statics.complexIdx <= cfsInstance.fileIndexGenerator
CFMetadataInstance.partitionColumns.statics.complexIdx <= cfsInstance.readOrdering.current.id
CFMetadataInstance.partitionColumns.statics.complexIdx < resultSetInstance.metadata.columnCount
CFMetadataInstance.partitionColumns.statics.complexIdx <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.HEAP_SIZE > CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.HEAP_SIZE > CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.executor.written
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.HEAP_SIZE != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.HEAP_SIZE != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.HEAP_SIZE > cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.HEAP_SIZE > cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.HEAP_SIZE > cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.HEAP_SIZE > resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.HEAP_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.MAXIMUM > CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.written
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.MAXIMUM > resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.MAXIMUM > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.MINIMUM.token < CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.written
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.MINIMUM.token < resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.MINIMUM.token < daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.resource.hash < CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE
CFMetadataInstance.resource.hash < CommitLog.instance.MAX_MUTATION_SIZE
CFMetadataInstance.resource.hash < CommitLog.instance.archiver.restorePointInTime
CFMetadataInstance.resource.hash < CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS
CFMetadataInstance.resource.hash < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.resource.hash < CommitLog.instance.executor.markerIntervalNanos
CFMetadataInstance.resource.hash < CommitLog.instance.executor.pending
CFMetadataInstance.resource.hash < CommitLog.instance.executor.syncComplete.CANCELLED
CFMetadataInstance.resource.hash < CommitLog.instance.executor.written
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.idBase
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.size
CFMetadataInstance.resource.hash < StorageService.instance.RING_DELAY
CFMetadataInstance.resource.hash < cfsInstance.compactionStrategyManager.fanout
CFMetadataInstance.resource.hash < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CFMetadataInstance.resource.hash < cfsInstance.fileIndexGenerator
CFMetadataInstance.resource.hash < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CFMetadataInstance.resource.hash >= cfsInstance.metadata.resource.hash
CFMetadataInstance.resource.hash < cfsInstance.readOrdering.current.id
CFMetadataInstance.resource.hash < cfsInstance.sampleLatencyNanos
CFMetadataInstance.resource.hash < resultSetInstance.metadata.columnCount
CFMetadataInstance.resource.hash < daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.executor.pending
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.executor.written
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.size
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > cfsInstance.fileIndexGenerator
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > cfsInstance.metadata.resource.hash
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > cfsInstance.readOrdering.current.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > resultSetInstance.metadata.columnCount
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.executor.pending
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.executor.written
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.size
CommitLog.instance.MAX_MUTATION_SIZE > cfsInstance.fileIndexGenerator
CommitLog.instance.MAX_MUTATION_SIZE > cfsInstance.metadata.resource.hash
CommitLog.instance.MAX_MUTATION_SIZE > cfsInstance.readOrdering.current.id
CommitLog.instance.MAX_MUTATION_SIZE > resultSetInstance.metadata.columnCount
CommitLog.instance.MAX_MUTATION_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.archiver.restorePointInTime < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.executor.pending
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.executor.written
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.size
CommitLog.instance.archiver.restorePointInTime > cfsInstance.fileIndexGenerator
CommitLog.instance.archiver.restorePointInTime > cfsInstance.metadata.resource.hash
CommitLog.instance.archiver.restorePointInTime > cfsInstance.readOrdering.current.id
CommitLog.instance.archiver.restorePointInTime % resultSetInstance.metadata.columnCount == 0
CommitLog.instance.archiver.restorePointInTime > resultSetInstance.metadata.columnCount
CommitLog.instance.archiver.restorePointInTime > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > CommitLog.instance.executor.pending
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.executor.written
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS != CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.markerIntervalNanos
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.pending
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.written
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.size
CommitLog.instance.executor.lastSyncedAt > StorageService.instance.RING_DELAY
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.lastSyncedAt > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.lastSyncedAt > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.lastSyncedAt > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.lastSyncedAt > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.lastSyncedAt > cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.lastSyncedAt > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.lastSyncedAt > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.executor.pending
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.executor.written
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.markerIntervalNanos > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.markerIntervalNanos > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.markerIntervalNanos > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.markerIntervalNanos > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.markerIntervalNanos > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.pending < CommitLog.instance.executor.written
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.pending < StorageService.instance.RING_DELAY
CommitLog.instance.executor.pending < cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.pending < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.pending <= cfsInstance.fileIndexGenerator
CommitLog.instance.executor.pending < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.pending > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.pending <= cfsInstance.readOrdering.current.id
CommitLog.instance.executor.pending < cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.pending % resultSetInstance.metadata.columnCount == 0
CommitLog.instance.executor.pending <= resultSetInstance.metadata.columnCount
CommitLog.instance.executor.syncComplete.CANCELLED > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.syncComplete.CANCELLED <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.written != CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.written != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.written != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.written < StorageService.instance.RING_DELAY
CommitLog.instance.executor.written > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.written > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.written > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.written < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.written > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.written > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.written < cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.written > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.written > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE != resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 8 == 0
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition >= CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.fd != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.fd != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.fd != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.fd < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.fd < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.fd < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.fd > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.fd > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.id < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.id > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.id > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.id > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.idBase < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.idBase > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.idBase > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset >= CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset >= CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset >= CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.nextId > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.nextId > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.nextId > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.nextId < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.nextId > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.nextId > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.allocatePosition > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.allocatePosition > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.allocatePosition > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.allocatePosition > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.allocatePosition > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.fd < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.availableSegment.fd > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.availableSegment.fd > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.availableSegment.fd < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.fd < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.fd < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.fd < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.availableSegment.fd > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.fd > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.id > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.availableSegment.id > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.id > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset >= resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize >= cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.size > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.size > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.size > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.size > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.size > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.size > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.size > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.size < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.size > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.size > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
daikon.Quant.subsetOf(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE, resultSetInstance.rows_FOR_ENCLOSING_USE)
StorageService.instance.RING_DELAY > cfsInstance.fileIndexGenerator
StorageService.instance.RING_DELAY > cfsInstance.metadata.resource.hash
StorageService.instance.RING_DELAY > cfsInstance.readOrdering.current.id
StorageService.instance.RING_DELAY % resultSetInstance.metadata.columnCount == 0
StorageService.instance.RING_DELAY > resultSetInstance.metadata.columnCount
StorageService.instance.RING_DELAY > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.compactionStrategyManager.fanout > cfsInstance.fileIndexGenerator
cfsInstance.compactionStrategyManager.fanout > cfsInstance.metadata.resource.hash
cfsInstance.compactionStrategyManager.fanout > cfsInstance.readOrdering.current.id
cfsInstance.compactionStrategyManager.fanout != resultSetInstance.metadata.columnCount
cfsInstance.compactionStrategyManager.fanout > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > cfsInstance.fileIndexGenerator
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > cfsInstance.metadata.resource.hash
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > cfsInstance.readOrdering.current.id
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > resultSetInstance.metadata.columnCount
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.fileIndexGenerator < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
cfsInstance.fileIndexGenerator > cfsInstance.metadata.resource.hash
cfsInstance.fileIndexGenerator < cfsInstance.sampleLatencyNanos
cfsInstance.fileIndexGenerator >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > cfsInstance.metadata.resource.hash
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > cfsInstance.readOrdering.current.id
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > resultSetInstance.metadata.columnCount
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.metadata.resource.hash < cfsInstance.readOrdering.current.id
cfsInstance.metadata.resource.hash < cfsInstance.sampleLatencyNanos
cfsInstance.metadata.resource.hash < resultSetInstance.metadata.columnCount
cfsInstance.metadata.resource.hash < daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
cfsInstance.readOrdering.current.id < cfsInstance.sampleLatencyNanos
cfsInstance.readOrdering.current.id >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.sampleLatencyNanos > resultSetInstance.metadata.columnCount
cfsInstance.sampleLatencyNanos > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
resultSetInstance.metadata.columnCount >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
10485760 * CFMetadataInstance.partitionColumns.regulars.complexIdx + 5242880 * CommitLog.instance.segmentManager.allocatingFrom.id - CommitLog.instance.segmentManager.size - 9.0772771936718029E18 == 0
CFMetadataInstance.partitionColumns.regulars.complexIdx + CommitLog.instance.segmentManager.allocatingFrom.nextId - cfsInstance.metadata.resource.hash - 1493090433 == 0
10485760 * CFMetadataInstance.partitionColumns.regulars.complexIdx + 5242880 * CommitLog.instance.segmentManager.availableSegment.id - CommitLog.instance.segmentManager.size - 9.0772771936770458E18 == 0
CFMetadataInstance.resource.hash + CommitLog.instance.executor.pending + daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) + 1493090400 == 0
10485760 * CFMetadataInstance.resource.hash - 5242880 * CommitLog.instance.segmentManager.allocatingFrom.id + CommitLog.instance.segmentManager.size + 9.0929333812645069E18 == 0
10485760 * CFMetadataInstance.resource.hash - 5242880 * CommitLog.instance.segmentManager.allocatingFrom.nextId + CommitLog.instance.segmentManager.size + 1.565618775523328E16 == 0
CFMetadataInstance.resource.hash - CommitLog.instance.segmentManager.allocatingFrom.nextId + cfsInstance.metadata.resource.hash + 2.986180833E9 == 0
99614720 * CFMetadataInstance.resource.hash + 2621440 * CommitLog.instance.segmentManager.availableSegment.fd + 19 * CommitLog.instance.segmentManager.size + 1.4873378146746368E17 == 0
10485760 * CFMetadataInstance.resource.hash - 5242880 * CommitLog.instance.segmentManager.availableSegment.id + CommitLog.instance.segmentManager.size + 9.0929333812697498E18 == 0
81 * CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.allocatePosition + CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset + 8 == 0
10485760 * CommitLog.instance.executor.pending + 5242880 * CommitLog.instance.segmentManager.allocatingFrom.id + CommitLog.instance.segmentManager.size - 9.0772771936927744E18 == 0
CommitLog.instance.executor.pending + CommitLog.instance.segmentManager.allocatingFrom.id + daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224502E12 == 0
81 * CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset + CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset == 0
10485760 * CommitLog.instance.executor.pending + 5242880 * CommitLog.instance.segmentManager.availableSegment.id + CommitLog.instance.segmentManager.size - 9.0772771936980173E18 == 0
CommitLog.instance.executor.pending + CommitLog.instance.segmentManager.availableSegment.id + daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224503E12 == 0
CommitLog.instance.segmentManager.allocatingFrom.fd + 38 * cfsInstance.fileIndexGenerator + 76 * cfsInstance.metadata.resource.hash + 1.13474870185E11 == 0
5242880 * CommitLog.instance.segmentManager.allocatingFrom.id - CommitLog.instance.segmentManager.size - 10485760 * cfsInstance.metadata.resource.hash - 9.0929333812645069E18 == 0
CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.fileIndexGenerator - 3 * cfsInstance.metadata.resource.hash - 1.735832495702E12 == 0
CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.readOrdering.current.id - daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224498E12 == 0
5242880 * CommitLog.instance.segmentManager.allocatingFrom.nextId - CommitLog.instance.segmentManager.size - 10485760 * cfsInstance.metadata.resource.hash - 1.565618775523328E16 == 0
CommitLog.instance.segmentManager.allocatingFrom.nextId - cfsInstance.fileIndexGenerator - 3 * cfsInstance.metadata.resource.hash - 4.479271232E9 == 0
2621440 * CommitLog.instance.segmentManager.availableSegment.fd + 19 * CommitLog.instance.segmentManager.size + 99614720 * cfsInstance.metadata.resource.hash + 1.4873378146746368E17 == 0
5242880 * CommitLog.instance.segmentManager.availableSegment.id - CommitLog.instance.segmentManager.size - 10485760 * cfsInstance.metadata.resource.hash - 9.0929333812697498E18 == 0
CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.fileIndexGenerator - 3 * cfsInstance.metadata.resource.hash - 1.735832495703E12 == 0
CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.readOrdering.current.id - daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224499E12 == 0
===========================================================================
org.apache.cassandra.cql3.SimpleQueryTest@limitWithMultigetTest-54916894:::dump
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.allocatingFrom.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.availableSegment.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.joinRing
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.useStrictConsistency
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionSpaceCheck
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.enabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.partitionSSTablesByTokenRange
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_ENABLED
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.isEnabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.shouldDefragment
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.supportsEarlyOpen
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.data.loadsstables
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.directories.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.keyspace.initialized
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.allColumnFilter.isFetchAll
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.viewManager.baseTableMetadata.isCompound
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MIN_THRESHOLD
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CFMetadataInstance.partitioner.MINIMUM.serialVersionUID
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.executor.syncComplete.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.managerThreadWaitQueue.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.segmentPrepared.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == StorageService.instance.threadCounter
CFMetadataInstance.isCounter == CFMetadataInstance.isDense
CFMetadataInstance.isCounter == CFMetadataInstance.isIndex
CFMetadataInstance.isCounter == CFMetadataInstance.isSuper
CFMetadataInstance.isCounter == CFMetadataInstance.isView
CFMetadataInstance.isCounter == CFMetadataInstance.keyValidator.isByteOrderComparable
CFMetadataInstance.isCounter == CFMetadataInstance.partitioner.partitionOrdering.isByteOrderComparable
CFMetadataInstance.isCounter == CommitLog.instance.executor.shutdown
CFMetadataInstance.isCounter == CommitLog.instance.executor.syncRequested
CFMetadataInstance.isCounter == CommitLog.instance.segmentManager.shutdown
CFMetadataInstance.isCounter == StorageService.instance.allowSimultaneousMoves
CFMetadataInstance.isCounter == StorageService.instance.authSetupCalled
CFMetadataInstance.isCounter == StorageService.instance.authSetupComplete
CFMetadataInstance.isCounter == StorageService.instance.gossipActive
CFMetadataInstance.isCounter == StorageService.instance.initialized
CFMetadataInstance.isCounter == StorageService.instance.isBootstrapMode
CFMetadataInstance.isCounter == StorageService.instance.isDecommissioning
CFMetadataInstance.isCounter == StorageService.instance.isRebuilding
CFMetadataInstance.isCounter == StorageService.instance.isShutdown
CFMetadataInstance.isCounter == StorageService.instance.isSurveyMode
CFMetadataInstance.isCounter == StorageService.instance.joined
CFMetadataInstance.isCounter == StorageService.instance.replacing
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.compactionLogger.enabled
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.currentBoundaries.isInvalid
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.diskBoundaryManager.diskBoundaries.isInvalid
CFMetadataInstance.isCounter == cfsInstance.keyspace.TEST_FAIL_WRITES
CFMetadataInstance.isCounter == cfsInstance.keyspace.viewManager.enableCoordinatorBatchlog
CFMetadataInstance.isCounter == cfsInstance.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.metadata.keyValidator.isByteOrderComparable
CFMetadataInstance.isCounter == cfsInstance.metric.aliasFactory.isIndex
CFMetadataInstance.isCounter == cfsInstance.metric.factory.isIndex
CFMetadataInstance.isCounter == cfsInstance.readOrdering.current.isBlocking
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isDense
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isView
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.executor.syncComplete.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.bufferPool.usedBuffers
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.managerThreadWaitQueue.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.segmentPrepared.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == QueryProcessor.instance.lastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.statics.complexIdx == QueryProcessor.instance.thriftLastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.legacyProgressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.nextRepairCommand
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.progressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.remainingCFs
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.tokenMetadata.ringVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.totalCFs
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.compactionLogger.identifier
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.currentBoundaries.directoriesVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.diskBoundaryManager.diskBoundaries.ringVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.keyspace.TEST_FAIL_MV_LOCKS_COUNT
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.keyspace.replicationStrategy.lastInvalidatedVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.readOrdering.current.running
CFMetadataInstance.partitionColumns.statics.complexIdx == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.HEAP_SIZE == StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.HEAP_SIZE == StorageService.instance.valueFactory.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.HEAP_SIZE == cfsInstance.metadata.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.MAXIMUM == StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CFMetadataInstance.partitioner.MAXIMUM == StorageService.instance.valueFactory.partitioner.MAXIMUM
CFMetadataInstance.partitioner.MAXIMUM == cfsInstance.metadata.partitioner.MAXIMUM
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == CommitLog.instance.configuration.encryptionContext.chunkLength
CommitLog.instance.executor.markerIntervalNanos == CommitLog.instance.executor.syncIntervalNanos
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.managerThreadWaitQueue.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.segmentPrepared.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.keyspace.writeOrder.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.readOrdering.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)-1
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == CommitLog.instance.segmentManager.availableSegment.ENTRY_OVERHEAD_SIZE
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == CommitLog.instance.segmentManager.availableSegment.SYNC_MARKER_SIZE
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.availableSegment.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.bufferPool.bufferSize
CommitLog.instance.segmentManager.allocatingFrom.idBase == CommitLog.instance.segmentManager.availableSegment.idBase
CommitLog.instance.segmentManager.allocatingFrom.nextId == CommitLog.instance.segmentManager.availableSegment.nextId
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == CommitLog.instance.segmentManager.availableSegment.replayLimitId
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == CommitLog.instance.segmentManager.availableSegment.lastSyncedOffset
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE == resultSetInstance.rows_FOR_ENCLOSING_USE
cfsInstance.compactionStrategyManager.isActive == cfsInstance.valid
CFMetadataInstance.allColumnFilter.isFetchAll == true
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK == 2
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == 4
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == 1
CFMetadataInstance.isCounter == false
CFMetadataInstance.partitionColumns.regulars.complexIdx == 0 || CFMetadataInstance.partitionColumns.regulars.complexIdx == 1
CFMetadataInstance.partitioner.HEAP_SIZE == 24
CFMetadataInstance.partitioner.MAXIMUM == 9223372036854775807L
CFMetadataInstance.partitioner.MINIMUM.token == -9223372036854775808L
CFMetadataInstance.resource.hash == -1493090400 || CFMetadataInstance.resource.hash == -1493090399
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == 65536
CommitLog.instance.MAX_MUTATION_SIZE == 2621440
CommitLog.instance.archiver.restorePointInTime == 4510987932000L
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS == 100
CommitLog.instance.executor.markerIntervalNanos == 1000000
CommitLog.instance.executor.pending == 0 || CommitLog.instance.executor.pending == 1
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == 12
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == 8
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == 5242880
CommitLog.instance.segmentManager.allocatingFrom.fd == 177 || CommitLog.instance.segmentManager.allocatingFrom.fd == 181 || CommitLog.instance.segmentManager.allocatingFrom.fd == 187
CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224503L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224504L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224505L
CommitLog.instance.segmentManager.allocatingFrom.idBase == 1731353224472L
CommitLog.instance.segmentManager.allocatingFrom.nextId == 33 || CommitLog.instance.segmentManager.allocatingFrom.nextId == 34 || CommitLog.instance.segmentManager.allocatingFrom.nextId == 35
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == 1731353224475L
CommitLog.instance.segmentManager.availableSegment.allocatePosition == 28
CommitLog.instance.segmentManager.availableSegment.fd == 181 || CommitLog.instance.segmentManager.availableSegment.fd == 187 || CommitLog.instance.segmentManager.availableSegment.fd == 252
CommitLog.instance.segmentManager.availableSegment.id == 1731353224504L || CommitLog.instance.segmentManager.availableSegment.id == 1731353224505L || CommitLog.instance.segmentManager.availableSegment.id == 1731353224506L
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == 20
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize == 3
CommitLog.instance.segmentManager.size == 10485760 || CommitLog.instance.segmentManager.size == 15728640
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
("oneOf.java.jpp: SEQUENCE unimplemented" != null)
StorageService.instance.RING_DELAY == 30000
daikon.Quant.fuzzy.eq(StorageService.instance.traceProbability, 0.0)
cfsInstance.compactionStrategyManager.fanout == 10
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD == 32
cfsInstance.fileIndexGenerator == 0 || cfsInstance.fileIndexGenerator == 1 || cfsInstance.fileIndexGenerator == 2
cfsInstance.indexManager.DEFAULT_PAGE_SIZE == 10000
cfsInstance.metadata.resource.hash == -1493090400 || cfsInstance.metadata.resource.hash == -1493090399
cfsInstance.readOrdering.current.id == 0 || cfsInstance.readOrdering.current.id == 1 || cfsInstance.readOrdering.current.id == 3
cfsInstance.sampleLatencyNanos == 2500000000L
resultSetInstance.metadata.columnCount >= 1
daikon.Quant.eltsNotEqual(resultSetInstance.rows_FOR_ENCLOSING_USE, null)
daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) == 0 || daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) == 1 || daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) == 2
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.size
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK >= cfsInstance.fileIndexGenerator
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != cfsInstance.readOrdering.current.id
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != resultSetInstance.metadata.columnCount
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.size
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > cfsInstance.fileIndexGenerator
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > cfsInstance.readOrdering.current.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK >= CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK > CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK >= CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.size
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK > cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK <= resultSetInstance.metadata.columnCount
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.partitionColumns.regulars.complexIdx >= CFMetadataInstance.partitionColumns.statics.complexIdx
CFMetadataInstance.partitionColumns.regulars.complexIdx < CFMetadataInstance.partitioner.HEAP_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CFMetadataInstance.partitioner.MAXIMUM
CFMetadataInstance.partitionColumns.regulars.complexIdx > CFMetadataInstance.partitioner.MINIMUM.token
CFMetadataInstance.partitionColumns.regulars.complexIdx > CFMetadataInstance.resource.hash
CFMetadataInstance.partitionColumns.regulars.complexIdx < CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.MAX_MUTATION_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.archiver.restorePointInTime
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.markerIntervalNanos
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.written
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.idBase
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitionColumns.regulars.complexIdx < StorageService.instance.RING_DELAY
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.compactionStrategyManager.fanout
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx > cfsInstance.metadata.resource.hash
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.sampleLatencyNanos
CFMetadataInstance.partitionColumns.regulars.complexIdx <= resultSetInstance.metadata.columnCount
CFMetadataInstance.partitionColumns.regulars.complexIdx >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitionColumns.statics.complexIdx <= CommitLog.instance.executor.pending
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.written
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitionColumns.statics.complexIdx <= cfsInstance.fileIndexGenerator
CFMetadataInstance.partitionColumns.statics.complexIdx <= cfsInstance.readOrdering.current.id
CFMetadataInstance.partitionColumns.statics.complexIdx < resultSetInstance.metadata.columnCount
CFMetadataInstance.partitionColumns.statics.complexIdx <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.HEAP_SIZE > CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.HEAP_SIZE > CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.executor.written
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.HEAP_SIZE != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.HEAP_SIZE != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.HEAP_SIZE > cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.HEAP_SIZE > cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.HEAP_SIZE > cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.HEAP_SIZE > resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.HEAP_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.MAXIMUM > CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.written
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.MAXIMUM > resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.MAXIMUM > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.MINIMUM.token < CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.written
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.MINIMUM.token < resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.MINIMUM.token < daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.resource.hash < CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE
CFMetadataInstance.resource.hash < CommitLog.instance.MAX_MUTATION_SIZE
CFMetadataInstance.resource.hash < CommitLog.instance.archiver.restorePointInTime
CFMetadataInstance.resource.hash < CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS
CFMetadataInstance.resource.hash < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.resource.hash < CommitLog.instance.executor.markerIntervalNanos
CFMetadataInstance.resource.hash < CommitLog.instance.executor.pending
CFMetadataInstance.resource.hash < CommitLog.instance.executor.syncComplete.CANCELLED
CFMetadataInstance.resource.hash < CommitLog.instance.executor.written
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.idBase
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.size
CFMetadataInstance.resource.hash < StorageService.instance.RING_DELAY
CFMetadataInstance.resource.hash < cfsInstance.compactionStrategyManager.fanout
CFMetadataInstance.resource.hash < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CFMetadataInstance.resource.hash < cfsInstance.fileIndexGenerator
CFMetadataInstance.resource.hash < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CFMetadataInstance.resource.hash >= cfsInstance.metadata.resource.hash
CFMetadataInstance.resource.hash < cfsInstance.readOrdering.current.id
CFMetadataInstance.resource.hash < cfsInstance.sampleLatencyNanos
CFMetadataInstance.resource.hash < resultSetInstance.metadata.columnCount
CFMetadataInstance.resource.hash < daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.executor.pending
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.executor.written
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.size
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > cfsInstance.fileIndexGenerator
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > cfsInstance.metadata.resource.hash
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > cfsInstance.readOrdering.current.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > resultSetInstance.metadata.columnCount
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.executor.pending
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.executor.written
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.size
CommitLog.instance.MAX_MUTATION_SIZE > cfsInstance.fileIndexGenerator
CommitLog.instance.MAX_MUTATION_SIZE > cfsInstance.metadata.resource.hash
CommitLog.instance.MAX_MUTATION_SIZE > cfsInstance.readOrdering.current.id
CommitLog.instance.MAX_MUTATION_SIZE > resultSetInstance.metadata.columnCount
CommitLog.instance.MAX_MUTATION_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.archiver.restorePointInTime < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.executor.pending
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.executor.written
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.size
CommitLog.instance.archiver.restorePointInTime > cfsInstance.fileIndexGenerator
CommitLog.instance.archiver.restorePointInTime > cfsInstance.metadata.resource.hash
CommitLog.instance.archiver.restorePointInTime > cfsInstance.readOrdering.current.id
CommitLog.instance.archiver.restorePointInTime % resultSetInstance.metadata.columnCount == 0
CommitLog.instance.archiver.restorePointInTime > resultSetInstance.metadata.columnCount
CommitLog.instance.archiver.restorePointInTime > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > CommitLog.instance.executor.pending
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.executor.written
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS != CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.markerIntervalNanos
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.pending
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.written
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.size
CommitLog.instance.executor.lastSyncedAt > StorageService.instance.RING_DELAY
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.lastSyncedAt > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.lastSyncedAt > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.lastSyncedAt > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.lastSyncedAt > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.lastSyncedAt > cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.lastSyncedAt > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.lastSyncedAt > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.executor.pending
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.executor.written
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.markerIntervalNanos > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.markerIntervalNanos > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.markerIntervalNanos > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.markerIntervalNanos > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.markerIntervalNanos > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.pending < CommitLog.instance.executor.written
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.pending < StorageService.instance.RING_DELAY
CommitLog.instance.executor.pending < cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.pending < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.pending <= cfsInstance.fileIndexGenerator
CommitLog.instance.executor.pending < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.pending > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.pending <= cfsInstance.readOrdering.current.id
CommitLog.instance.executor.pending < cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.pending <= resultSetInstance.metadata.columnCount
CommitLog.instance.executor.syncComplete.CANCELLED > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.syncComplete.CANCELLED <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.written != CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.written != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.written != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.written < StorageService.instance.RING_DELAY
CommitLog.instance.executor.written > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.written > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.written > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.written < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.written > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.written > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.written < cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.written > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.written > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE != resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition >= CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.fd != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.fd != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.fd < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.fd < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.fd < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.fd > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.fd > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.id < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.id > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.id > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.id > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.idBase < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.idBase > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.idBase > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset >= CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset >= CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset >= CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.nextId > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.nextId > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.nextId > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.nextId < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.nextId > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.nextId > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.allocatePosition > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.allocatePosition > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.allocatePosition > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.allocatePosition > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.allocatePosition > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.fd < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.availableSegment.fd > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.availableSegment.fd > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.availableSegment.fd < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.fd < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.fd < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.fd < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.availableSegment.fd > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.fd > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.id > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.availableSegment.id > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.id > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset >= resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize >= cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.size > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.size > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.size > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.size > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.size > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.size > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.size > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.size < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.size > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.size > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
daikon.Quant.subsetOf(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE, resultSetInstance.rows_FOR_ENCLOSING_USE)
StorageService.instance.RING_DELAY > cfsInstance.fileIndexGenerator
StorageService.instance.RING_DELAY > cfsInstance.metadata.resource.hash
StorageService.instance.RING_DELAY > cfsInstance.readOrdering.current.id
StorageService.instance.RING_DELAY % resultSetInstance.metadata.columnCount == 0
StorageService.instance.RING_DELAY > resultSetInstance.metadata.columnCount
StorageService.instance.RING_DELAY > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.compactionStrategyManager.fanout > cfsInstance.fileIndexGenerator
cfsInstance.compactionStrategyManager.fanout > cfsInstance.metadata.resource.hash
cfsInstance.compactionStrategyManager.fanout > cfsInstance.readOrdering.current.id
cfsInstance.compactionStrategyManager.fanout != resultSetInstance.metadata.columnCount
cfsInstance.compactionStrategyManager.fanout > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > cfsInstance.fileIndexGenerator
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > cfsInstance.metadata.resource.hash
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > cfsInstance.readOrdering.current.id
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > resultSetInstance.metadata.columnCount
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.fileIndexGenerator < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
cfsInstance.fileIndexGenerator > cfsInstance.metadata.resource.hash
cfsInstance.fileIndexGenerator < cfsInstance.sampleLatencyNanos
cfsInstance.fileIndexGenerator != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > cfsInstance.metadata.resource.hash
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > cfsInstance.readOrdering.current.id
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > resultSetInstance.metadata.columnCount
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.metadata.resource.hash < cfsInstance.readOrdering.current.id
cfsInstance.metadata.resource.hash < cfsInstance.sampleLatencyNanos
cfsInstance.metadata.resource.hash < resultSetInstance.metadata.columnCount
cfsInstance.metadata.resource.hash < daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
cfsInstance.readOrdering.current.id < cfsInstance.sampleLatencyNanos
cfsInstance.readOrdering.current.id != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
cfsInstance.sampleLatencyNanos > resultSetInstance.metadata.columnCount
cfsInstance.sampleLatencyNanos > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
resultSetInstance.metadata.columnCount >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.partitionColumns.regulars.complexIdx - CommitLog.instance.segmentManager.allocatingFrom.nextId + cfsInstance.metadata.resource.hash + 1493090433 == 0
CFMetadataInstance.resource.hash + CommitLog.instance.executor.pending + daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) + 1493090399 == 0
CFMetadataInstance.resource.hash - CommitLog.instance.segmentManager.allocatingFrom.nextId + cfsInstance.metadata.resource.hash + 2.986180833E9 == 0
3 * CommitLog.instance.executor.lastSyncedAt - 252498456 * CommitLog.instance.executor.written + 56159374 * resultSetInstance.metadata.columnCount - 2.68149641622346E14 == 0
957 * CommitLog.instance.executor.lastSyncedAt - 504996912 * CommitLog.instance.segmentManager.allocatingFrom.allocatePosition + 1.7914840306E10 * resultSetInstance.metadata.columnCount - 8.5630088210032672E16 == 0
957 * CommitLog.instance.executor.lastSyncedAt - 504996912 * CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset + 1.7914840306E10 * resultSetInstance.metadata.columnCount - 8.5630092250007968E16 == 0
957 * CommitLog.instance.executor.lastSyncedAt - 504996912 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset + 1.7914840306E10 * resultSetInstance.metadata.columnCount - 8.5630092250007968E16 == 0
3 * CommitLog.instance.executor.lastSyncedAt + 50700812 * resultSetInstance.metadata.columnCount + 504996912 * daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 2.6843394942524E14 == 0
3 * CommitLog.instance.executor.lastSyncedAt + 50700812 * resultSetInstance.metadata.columnCount + 504996912 * daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1 - 2.68433444428328E14 == 0
CommitLog.instance.executor.pending + CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.fileIndexGenerator - 1.731353224502E12 == 0
2 * CommitLog.instance.executor.pending - 2 * CommitLog.instance.segmentManager.allocatingFrom.id + cfsInstance.readOrdering.current.id + 3.462706449003E12 == 0
CommitLog.instance.executor.pending + CommitLog.instance.segmentManager.allocatingFrom.id + daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224504E12 == 0
CommitLog.instance.executor.pending + CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.fileIndexGenerator - 1.731353224503E12 == 0
2 * CommitLog.instance.executor.pending - 2 * CommitLog.instance.segmentManager.availableSegment.id + cfsInstance.readOrdering.current.id + 3.462706449005E12 == 0
CommitLog.instance.executor.pending + CommitLog.instance.segmentManager.availableSegment.id + daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224505E12 == 0
CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.fileIndexGenerator - 3 * cfsInstance.metadata.resource.hash - 1.735832495701E12 == 0
CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.fileIndexGenerator - daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224501E12 == 0
2 * CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.readOrdering.current.id - 2 * daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 3.462706449003E12 == 0
CommitLog.instance.segmentManager.allocatingFrom.nextId - cfsInstance.fileIndexGenerator - 3 * cfsInstance.metadata.resource.hash - 4.479271231E9 == 0
CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.fileIndexGenerator - 3 * cfsInstance.metadata.resource.hash - 1.735832495702E12 == 0
CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.fileIndexGenerator - daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224502E12 == 0
2 * CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.readOrdering.current.id - 2 * daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 3.462706449005E12 == 0
CommitLog.instance.segmentManager.size - 5242880 * cfsInstance.fileIndexGenerator - 10485760 * cfsInstance.metadata.resource.hash - 1.5656187592704E16 == 0
===========================================================================
org.apache.cassandra.cql3.SimpleQueryTest@restrictionOnRegularColumnWithStaticColumnPresentTest-54916894:::dump
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.allocatingFrom.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.availableSegment.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.joinRing
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.useStrictConsistency
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionSpaceCheck
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.enabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.isActive
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.partitionSSTablesByTokenRange
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_ENABLED
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.isEnabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.shouldDefragment
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.supportsEarlyOpen
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.data.loadsstables
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.directories.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.keyspace.initialized
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.allColumnFilter.isFetchAll
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.valid
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.viewManager.baseTableMetadata.isCompound
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MIN_THRESHOLD
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CFMetadataInstance.partitioner.MINIMUM.serialVersionUID
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.executor.syncComplete.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.managerThreadWaitQueue.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.segmentPrepared.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == StorageService.instance.threadCounter
CFMetadataInstance.isCounter == CFMetadataInstance.isDense
CFMetadataInstance.isCounter == CFMetadataInstance.isIndex
CFMetadataInstance.isCounter == CFMetadataInstance.isSuper
CFMetadataInstance.isCounter == CFMetadataInstance.isView
CFMetadataInstance.isCounter == CFMetadataInstance.partitioner.partitionOrdering.isByteOrderComparable
CFMetadataInstance.isCounter == CommitLog.instance.executor.shutdown
CFMetadataInstance.isCounter == CommitLog.instance.segmentManager.shutdown
CFMetadataInstance.isCounter == StorageService.instance.allowSimultaneousMoves
CFMetadataInstance.isCounter == StorageService.instance.authSetupCalled
CFMetadataInstance.isCounter == StorageService.instance.authSetupComplete
CFMetadataInstance.isCounter == StorageService.instance.gossipActive
CFMetadataInstance.isCounter == StorageService.instance.initialized
CFMetadataInstance.isCounter == StorageService.instance.isBootstrapMode
CFMetadataInstance.isCounter == StorageService.instance.isDecommissioning
CFMetadataInstance.isCounter == StorageService.instance.isRebuilding
CFMetadataInstance.isCounter == StorageService.instance.isShutdown
CFMetadataInstance.isCounter == StorageService.instance.isSurveyMode
CFMetadataInstance.isCounter == StorageService.instance.joined
CFMetadataInstance.isCounter == StorageService.instance.replacing
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.compactionLogger.enabled
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.currentBoundaries.isInvalid
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.diskBoundaryManager.diskBoundaries.isInvalid
CFMetadataInstance.isCounter == cfsInstance.keyspace.TEST_FAIL_WRITES
CFMetadataInstance.isCounter == cfsInstance.keyspace.viewManager.enableCoordinatorBatchlog
CFMetadataInstance.isCounter == cfsInstance.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.metric.aliasFactory.isIndex
CFMetadataInstance.isCounter == cfsInstance.metric.factory.isIndex
CFMetadataInstance.isCounter == cfsInstance.readOrdering.current.isBlocking
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isDense
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isView
CFMetadataInstance.partitionColumns.regulars.complexIdx == CFMetadataInstance.partitionColumns.statics.complexIdx
CFMetadataInstance.partitioner.HEAP_SIZE == StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.HEAP_SIZE == StorageService.instance.valueFactory.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.HEAP_SIZE == cfsInstance.metadata.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.MAXIMUM == StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CFMetadataInstance.partitioner.MAXIMUM == StorageService.instance.valueFactory.partitioner.MAXIMUM
CFMetadataInstance.partitioner.MAXIMUM == cfsInstance.metadata.partitioner.MAXIMUM
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == CommitLog.instance.configuration.encryptionContext.chunkLength
CommitLog.instance.executor.markerIntervalNanos == CommitLog.instance.executor.syncIntervalNanos
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.managerThreadWaitQueue.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.segmentPrepared.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.keyspace.writeOrder.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.readOrdering.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)-1
CommitLog.instance.executor.syncComplete.NOT_SET == CommitLog.instance.segmentManager.bufferPool.usedBuffers
CommitLog.instance.executor.syncComplete.NOT_SET == CommitLog.instance.segmentManager.managerThreadWaitQueue.NOT_SET
CommitLog.instance.executor.syncComplete.NOT_SET == CommitLog.instance.segmentManager.segmentPrepared.NOT_SET
CommitLog.instance.executor.syncComplete.NOT_SET == QueryProcessor.instance.lastMinuteEvictionsCount
CommitLog.instance.executor.syncComplete.NOT_SET == QueryProcessor.instance.thriftLastMinuteEvictionsCount
CommitLog.instance.executor.syncComplete.NOT_SET == StorageService.instance.legacyProgressSupport.notificationSerialNumber
CommitLog.instance.executor.syncComplete.NOT_SET == StorageService.instance.nextRepairCommand
CommitLog.instance.executor.syncComplete.NOT_SET == StorageService.instance.progressSupport.notificationSerialNumber
CommitLog.instance.executor.syncComplete.NOT_SET == StorageService.instance.remainingCFs
CommitLog.instance.executor.syncComplete.NOT_SET == StorageService.instance.tokenMetadata.ringVersion
CommitLog.instance.executor.syncComplete.NOT_SET == StorageService.instance.totalCFs
CommitLog.instance.executor.syncComplete.NOT_SET == cfsInstance.compactionStrategyManager.compactionLogger.identifier
CommitLog.instance.executor.syncComplete.NOT_SET == cfsInstance.compactionStrategyManager.currentBoundaries.directoriesVersion
CommitLog.instance.executor.syncComplete.NOT_SET == cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.executor.syncComplete.NOT_SET == cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CommitLog.instance.executor.syncComplete.NOT_SET == cfsInstance.diskBoundaryManager.diskBoundaries.ringVersion
CommitLog.instance.executor.syncComplete.NOT_SET == cfsInstance.fileIndexGenerator
CommitLog.instance.executor.syncComplete.NOT_SET == cfsInstance.keyspace.TEST_FAIL_MV_LOCKS_COUNT
CommitLog.instance.executor.syncComplete.NOT_SET == cfsInstance.keyspace.replicationStrategy.lastInvalidatedVersion
CommitLog.instance.executor.syncComplete.NOT_SET == cfsInstance.readOrdering.current.id
CommitLog.instance.executor.syncComplete.NOT_SET == cfsInstance.readOrdering.current.running
CommitLog.instance.executor.syncComplete.NOT_SET == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == CommitLog.instance.segmentManager.availableSegment.ENTRY_OVERHEAD_SIZE
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == CommitLog.instance.segmentManager.availableSegment.SYNC_MARKER_SIZE
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.availableSegment.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.bufferPool.bufferSize
CommitLog.instance.segmentManager.allocatingFrom.idBase == CommitLog.instance.segmentManager.availableSegment.idBase
CommitLog.instance.segmentManager.allocatingFrom.nextId == CommitLog.instance.segmentManager.availableSegment.nextId
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == CommitLog.instance.segmentManager.availableSegment.replayLimitId
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == CommitLog.instance.segmentManager.availableSegment.lastSyncedOffset
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE == resultSetInstance.rows_FOR_ENCLOSING_USE
CFMetadataInstance.allColumnFilter.isFetchAll == true
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK == 2
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == 4
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == 1
CFMetadataInstance.isCounter == false
CFMetadataInstance.partitionColumns.regulars.complexIdx == 0 || CFMetadataInstance.partitionColumns.regulars.complexIdx == 1
CFMetadataInstance.partitioner.HEAP_SIZE == 24
CFMetadataInstance.partitioner.MAXIMUM == 9223372036854775807L
CFMetadataInstance.partitioner.MINIMUM.token == -9223372036854775808L
CFMetadataInstance.resource.hash == -1145774585 || CFMetadataInstance.resource.hash == 2144393068
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == 65536
CommitLog.instance.MAX_MUTATION_SIZE == 2621440
CommitLog.instance.archiver.restorePointInTime == 4510987932000L
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS == 100
CommitLog.instance.executor.markerIntervalNanos == 1000000
CommitLog.instance.executor.pending == 0 || CommitLog.instance.executor.pending == 1 || CommitLog.instance.executor.pending == 2
CommitLog.instance.executor.written >= 1
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == 12
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == 8
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == 5242880
CommitLog.instance.segmentManager.allocatingFrom.fd == 177 || CommitLog.instance.segmentManager.allocatingFrom.fd == 178
CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224476L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224477L
CommitLog.instance.segmentManager.allocatingFrom.idBase == 1731353224472L
CommitLog.instance.segmentManager.allocatingFrom.nextId == 6 || CommitLog.instance.segmentManager.allocatingFrom.nextId == 7
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == 1731353224475L
CommitLog.instance.segmentManager.availableSegment.allocatePosition == 28
CommitLog.instance.segmentManager.availableSegment.fd == 178 || CommitLog.instance.segmentManager.availableSegment.fd == 211
CommitLog.instance.segmentManager.availableSegment.id == 1731353224477L || CommitLog.instance.segmentManager.availableSegment.id == 1731353224478L
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == 20
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize == 3
CommitLog.instance.segmentManager.size == 10485760 || CommitLog.instance.segmentManager.size == 15728640
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
("oneOf.java.jpp: SEQUENCE unimplemented" != null)
StorageService.instance.RING_DELAY == 30000
daikon.Quant.fuzzy.eq(StorageService.instance.traceProbability, 0.0)
cfsInstance.compactionStrategyManager.fanout == 10
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD == 32
cfsInstance.indexManager.DEFAULT_PAGE_SIZE == 10000
cfsInstance.metadata.resource.hash == -1614813437 || cfsInstance.metadata.resource.hash == 152082639 || cfsInstance.metadata.resource.hash == 2144393068
cfsInstance.sampleLatencyNanos == 2500000000L
resultSetInstance.metadata.columnCount >= 1
daikon.Quant.eltsNotEqual(resultSetInstance.rows_FOR_ENCLOSING_USE, null)
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK >= CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.size
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != resultSetInstance.metadata.columnCount
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK != CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.size
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK != cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK >= CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK != CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK <= CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.size
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK != cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK <= resultSetInstance.metadata.columnCount
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.partitionColumns.regulars.complexIdx < CFMetadataInstance.partitioner.HEAP_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CFMetadataInstance.partitioner.MAXIMUM
CFMetadataInstance.partitionColumns.regulars.complexIdx > CFMetadataInstance.partitioner.MINIMUM.token
CFMetadataInstance.partitionColumns.regulars.complexIdx != CFMetadataInstance.resource.hash
CFMetadataInstance.partitionColumns.regulars.complexIdx < CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.MAX_MUTATION_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.archiver.restorePointInTime
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.markerIntervalNanos
CFMetadataInstance.partitionColumns.regulars.complexIdx >= CommitLog.instance.executor.syncComplete.NOT_SET
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.written
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.idBase
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitionColumns.regulars.complexIdx < StorageService.instance.RING_DELAY
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.compactionStrategyManager.fanout
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx != cfsInstance.metadata.resource.hash
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.sampleLatencyNanos
CFMetadataInstance.partitionColumns.regulars.complexIdx <= resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.HEAP_SIZE != CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.HEAP_SIZE > CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.HEAP_SIZE > CommitLog.instance.executor.written
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.HEAP_SIZE != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.HEAP_SIZE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.HEAP_SIZE != cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.HEAP_SIZE > resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.HEAP_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.MAXIMUM > CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.written
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.MAXIMUM > resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.MAXIMUM > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.MINIMUM.token < CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.written
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.MINIMUM.token < resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.MINIMUM.token < daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.resource.hash != CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE
CFMetadataInstance.resource.hash != CommitLog.instance.MAX_MUTATION_SIZE
CFMetadataInstance.resource.hash < CommitLog.instance.archiver.restorePointInTime
CFMetadataInstance.resource.hash != CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS
CFMetadataInstance.resource.hash < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.resource.hash != CommitLog.instance.executor.markerIntervalNanos
CFMetadataInstance.resource.hash != CommitLog.instance.executor.pending
CFMetadataInstance.resource.hash != CommitLog.instance.executor.syncComplete.CANCELLED
CFMetadataInstance.resource.hash != CommitLog.instance.executor.syncComplete.NOT_SET
CFMetadataInstance.resource.hash != CommitLog.instance.executor.written
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.idBase
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.availableSegment.allocatePosition
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.size
CFMetadataInstance.resource.hash != StorageService.instance.RING_DELAY
CFMetadataInstance.resource.hash != cfsInstance.compactionStrategyManager.fanout
CFMetadataInstance.resource.hash != cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CFMetadataInstance.resource.hash != cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CFMetadataInstance.resource.hash < cfsInstance.sampleLatencyNanos
CFMetadataInstance.resource.hash != resultSetInstance.metadata.columnCount
CFMetadataInstance.resource.hash != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.resource.hash != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.executor.pending
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.executor.written
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.size
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE != cfsInstance.metadata.resource.hash
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > resultSetInstance.metadata.columnCount
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.executor.pending
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.executor.written
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.size
CommitLog.instance.MAX_MUTATION_SIZE != cfsInstance.metadata.resource.hash
CommitLog.instance.MAX_MUTATION_SIZE > resultSetInstance.metadata.columnCount
CommitLog.instance.MAX_MUTATION_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.archiver.restorePointInTime < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.executor.pending
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.executor.written
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.size
CommitLog.instance.archiver.restorePointInTime > cfsInstance.metadata.resource.hash
CommitLog.instance.archiver.restorePointInTime % resultSetInstance.metadata.columnCount == 0
CommitLog.instance.archiver.restorePointInTime > resultSetInstance.metadata.columnCount
CommitLog.instance.archiver.restorePointInTime > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > CommitLog.instance.executor.pending
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > CommitLog.instance.executor.written
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS != cfsInstance.metadata.resource.hash
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.markerIntervalNanos
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.pending
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.syncComplete.NOT_SET
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.written
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.size
CommitLog.instance.executor.lastSyncedAt > StorageService.instance.RING_DELAY
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.lastSyncedAt > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.lastSyncedAt > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.lastSyncedAt > cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.lastSyncedAt > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.lastSyncedAt > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.executor.pending
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.executor.written
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.markerIntervalNanos != cfsInstance.metadata.resource.hash
CommitLog.instance.executor.markerIntervalNanos > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.markerIntervalNanos > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.pending >= CommitLog.instance.executor.syncComplete.NOT_SET
CommitLog.instance.executor.pending < CommitLog.instance.executor.written
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.pending < StorageService.instance.RING_DELAY
CommitLog.instance.executor.pending < cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.pending < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.pending < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.pending != cfsInstance.metadata.resource.hash
CommitLog.instance.executor.pending < cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.pending < resultSetInstance.metadata.columnCount
CommitLog.instance.executor.syncComplete.CANCELLED != cfsInstance.metadata.resource.hash
CommitLog.instance.executor.syncComplete.CANCELLED <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.executor.written
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.syncComplete.NOT_SET != cfsInstance.metadata.resource.hash
CommitLog.instance.executor.syncComplete.NOT_SET < resultSetInstance.metadata.columnCount
CommitLog.instance.executor.syncComplete.NOT_SET <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.written != CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.written < StorageService.instance.RING_DELAY
CommitLog.instance.executor.written < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.written < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.written != cfsInstance.metadata.resource.hash
CommitLog.instance.executor.written < cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.written >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE != resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.fd != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.fd != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.fd < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.fd < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.fd != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.fd < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.fd > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.fd > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.id < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.id > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.id > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.id > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.idBase < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.idBase > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.idBase > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset >= CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset >= CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.nextId > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.nextId < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.nextId != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.nextId > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.allocatePosition != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.allocatePosition > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.allocatePosition > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.fd < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.availableSegment.fd > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.availableSegment.fd > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.availableSegment.fd < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.fd < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.availableSegment.fd < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.availableSegment.fd != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.fd < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.availableSegment.fd > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.fd > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.id > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.availableSegment.id > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.id > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset >= resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CommitLog.instance.segmentManager.size > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.size > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.size > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.size > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.size != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.size < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.size > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.size > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
daikon.Quant.subsetOf(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE, resultSetInstance.rows_FOR_ENCLOSING_USE)
StorageService.instance.RING_DELAY != cfsInstance.metadata.resource.hash
StorageService.instance.RING_DELAY % resultSetInstance.metadata.columnCount == 0
StorageService.instance.RING_DELAY > resultSetInstance.metadata.columnCount
StorageService.instance.RING_DELAY > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.compactionStrategyManager.fanout != cfsInstance.metadata.resource.hash
cfsInstance.compactionStrategyManager.fanout != resultSetInstance.metadata.columnCount
cfsInstance.compactionStrategyManager.fanout > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD != cfsInstance.metadata.resource.hash
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > resultSetInstance.metadata.columnCount
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.indexManager.DEFAULT_PAGE_SIZE != cfsInstance.metadata.resource.hash
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > resultSetInstance.metadata.columnCount
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.metadata.resource.hash < cfsInstance.sampleLatencyNanos
cfsInstance.metadata.resource.hash != resultSetInstance.metadata.columnCount
cfsInstance.metadata.resource.hash != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.metadata.resource.hash != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
cfsInstance.sampleLatencyNanos > resultSetInstance.metadata.columnCount
cfsInstance.sampleLatencyNanos > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
resultSetInstance.metadata.columnCount >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.lastSyncedAt - 32406705 * resultSetInstance.metadata.columnCount + 242687123 * daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 8.9332302442052E13 == 0
CommitLog.instance.executor.lastSyncedAt - 32406705 * resultSetInstance.metadata.columnCount + 242687123 * daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1 - 8.9332059754929E13 == 0
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 218 * CommitLog.instance.segmentManager.allocatingFrom.id - CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset + 3.7743500293576E14 == 0
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 310 * CommitLog.instance.segmentManager.allocatingFrom.id - CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset + 5.36719499587552E14 == 0
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 218 * CommitLog.instance.segmentManager.availableSegment.id + 3.77435002935978E14 == 0
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 310 * CommitLog.instance.segmentManager.availableSegment.id + 5.3671949958786194E14 == 0
92 * CommitLog.instance.segmentManager.allocatingFrom.id - CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset + CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 1.59284496651792E14 == 0
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 92 * CommitLog.instance.segmentManager.availableSegment.id + 1.59284496651884E14 == 0
===========================================================================
org.apache.cassandra.cql3.SimpleQueryTest@staticDistinctTest-54916894:::dump
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.allocatingFrom.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.availableSegment.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.joinRing
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.useStrictConsistency
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionSpaceCheck
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.enabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.partitionSSTablesByTokenRange
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_ENABLED
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.isEnabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.shouldDefragment
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.supportsEarlyOpen
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.data.loadsstables
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.directories.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.keyspace.initialized
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.allColumnFilter.isFetchAll
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.viewManager.baseTableMetadata.isCompound
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MIN_THRESHOLD
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CFMetadataInstance.partitioner.MINIMUM.serialVersionUID
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.executor.syncComplete.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.managerThreadWaitQueue.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.segmentPrepared.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == StorageService.instance.threadCounter
CFMetadataInstance.isCounter == CFMetadataInstance.isDense
CFMetadataInstance.isCounter == CFMetadataInstance.isIndex
CFMetadataInstance.isCounter == CFMetadataInstance.isSuper
CFMetadataInstance.isCounter == CFMetadataInstance.isView
CFMetadataInstance.isCounter == CFMetadataInstance.keyValidator.isByteOrderComparable
CFMetadataInstance.isCounter == CFMetadataInstance.partitioner.partitionOrdering.isByteOrderComparable
CFMetadataInstance.isCounter == CommitLog.instance.executor.shutdown
CFMetadataInstance.isCounter == CommitLog.instance.executor.syncRequested
CFMetadataInstance.isCounter == CommitLog.instance.segmentManager.shutdown
CFMetadataInstance.isCounter == StorageService.instance.allowSimultaneousMoves
CFMetadataInstance.isCounter == StorageService.instance.authSetupCalled
CFMetadataInstance.isCounter == StorageService.instance.authSetupComplete
CFMetadataInstance.isCounter == StorageService.instance.gossipActive
CFMetadataInstance.isCounter == StorageService.instance.initialized
CFMetadataInstance.isCounter == StorageService.instance.isBootstrapMode
CFMetadataInstance.isCounter == StorageService.instance.isDecommissioning
CFMetadataInstance.isCounter == StorageService.instance.isRebuilding
CFMetadataInstance.isCounter == StorageService.instance.isShutdown
CFMetadataInstance.isCounter == StorageService.instance.isSurveyMode
CFMetadataInstance.isCounter == StorageService.instance.joined
CFMetadataInstance.isCounter == StorageService.instance.replacing
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.compactionLogger.enabled
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.currentBoundaries.isInvalid
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.diskBoundaryManager.diskBoundaries.isInvalid
CFMetadataInstance.isCounter == cfsInstance.keyspace.TEST_FAIL_WRITES
CFMetadataInstance.isCounter == cfsInstance.keyspace.viewManager.enableCoordinatorBatchlog
CFMetadataInstance.isCounter == cfsInstance.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.metadata.keyValidator.isByteOrderComparable
CFMetadataInstance.isCounter == cfsInstance.metric.aliasFactory.isIndex
CFMetadataInstance.isCounter == cfsInstance.metric.factory.isIndex
CFMetadataInstance.isCounter == cfsInstance.readOrdering.current.isBlocking
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isDense
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isView
CFMetadataInstance.partitioner.HEAP_SIZE == StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.HEAP_SIZE == StorageService.instance.valueFactory.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.HEAP_SIZE == cfsInstance.metadata.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.MAXIMUM == StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CFMetadataInstance.partitioner.MAXIMUM == StorageService.instance.valueFactory.partitioner.MAXIMUM
CFMetadataInstance.partitioner.MAXIMUM == cfsInstance.metadata.partitioner.MAXIMUM
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == CommitLog.instance.configuration.encryptionContext.chunkLength
CommitLog.instance.executor.markerIntervalNanos == CommitLog.instance.executor.syncIntervalNanos
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.managerThreadWaitQueue.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.segmentPrepared.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.keyspace.writeOrder.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.readOrdering.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)-1
CommitLog.instance.executor.syncComplete.NOT_SET == CommitLog.instance.segmentManager.bufferPool.usedBuffers
CommitLog.instance.executor.syncComplete.NOT_SET == CommitLog.instance.segmentManager.managerThreadWaitQueue.NOT_SET
CommitLog.instance.executor.syncComplete.NOT_SET == CommitLog.instance.segmentManager.segmentPrepared.NOT_SET
CommitLog.instance.executor.syncComplete.NOT_SET == QueryProcessor.instance.lastMinuteEvictionsCount
CommitLog.instance.executor.syncComplete.NOT_SET == QueryProcessor.instance.thriftLastMinuteEvictionsCount
CommitLog.instance.executor.syncComplete.NOT_SET == StorageService.instance.legacyProgressSupport.notificationSerialNumber
CommitLog.instance.executor.syncComplete.NOT_SET == StorageService.instance.nextRepairCommand
CommitLog.instance.executor.syncComplete.NOT_SET == StorageService.instance.progressSupport.notificationSerialNumber
CommitLog.instance.executor.syncComplete.NOT_SET == StorageService.instance.remainingCFs
CommitLog.instance.executor.syncComplete.NOT_SET == StorageService.instance.tokenMetadata.ringVersion
CommitLog.instance.executor.syncComplete.NOT_SET == StorageService.instance.totalCFs
CommitLog.instance.executor.syncComplete.NOT_SET == cfsInstance.compactionStrategyManager.compactionLogger.identifier
CommitLog.instance.executor.syncComplete.NOT_SET == cfsInstance.compactionStrategyManager.currentBoundaries.directoriesVersion
CommitLog.instance.executor.syncComplete.NOT_SET == cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.executor.syncComplete.NOT_SET == cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CommitLog.instance.executor.syncComplete.NOT_SET == cfsInstance.diskBoundaryManager.diskBoundaries.ringVersion
CommitLog.instance.executor.syncComplete.NOT_SET == cfsInstance.keyspace.TEST_FAIL_MV_LOCKS_COUNT
CommitLog.instance.executor.syncComplete.NOT_SET == cfsInstance.keyspace.replicationStrategy.lastInvalidatedVersion
CommitLog.instance.executor.syncComplete.NOT_SET == cfsInstance.readOrdering.current.running
CommitLog.instance.executor.syncComplete.NOT_SET == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == CommitLog.instance.segmentManager.availableSegment.ENTRY_OVERHEAD_SIZE
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == CommitLog.instance.segmentManager.availableSegment.SYNC_MARKER_SIZE
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.availableSegment.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.bufferPool.bufferSize
CommitLog.instance.segmentManager.allocatingFrom.idBase == CommitLog.instance.segmentManager.availableSegment.idBase
CommitLog.instance.segmentManager.allocatingFrom.nextId == CommitLog.instance.segmentManager.availableSegment.nextId
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == CommitLog.instance.segmentManager.availableSegment.replayLimitId
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == CommitLog.instance.segmentManager.availableSegment.lastSyncedOffset
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE == resultSetInstance.rows_FOR_ENCLOSING_USE
cfsInstance.compactionStrategyManager.isActive == cfsInstance.valid
CFMetadataInstance.allColumnFilter.isFetchAll == true
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK == 2
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == 4
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == 1
CFMetadataInstance.isCounter == false
CFMetadataInstance.partitionColumns.regulars.complexIdx == 0 || CFMetadataInstance.partitionColumns.regulars.complexIdx == 1
CFMetadataInstance.partitionColumns.statics.complexIdx == 0 || CFMetadataInstance.partitionColumns.statics.complexIdx == 1
CFMetadataInstance.partitioner.HEAP_SIZE == 24
CFMetadataInstance.partitioner.MAXIMUM == 9223372036854775807L
CFMetadataInstance.partitioner.MINIMUM.token == -9223372036854775808L
CFMetadataInstance.resource.hash == -1493090399 || CFMetadataInstance.resource.hash == -1493090398
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == 65536
CommitLog.instance.MAX_MUTATION_SIZE == 2621440
CommitLog.instance.archiver.restorePointInTime == 4510987932000L
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS == 100
CommitLog.instance.executor.markerIntervalNanos == 1000000
CommitLog.instance.executor.pending == 0 || CommitLog.instance.executor.pending == 1 || CommitLog.instance.executor.pending == 2
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == 12
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == 8
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == 5242880
CommitLog.instance.segmentManager.allocatingFrom.fd == 177 || CommitLog.instance.segmentManager.allocatingFrom.fd == 187 || CommitLog.instance.segmentManager.allocatingFrom.fd == 252
CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224505L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224506L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224507L
CommitLog.instance.segmentManager.allocatingFrom.idBase == 1731353224472L
CommitLog.instance.segmentManager.allocatingFrom.nextId == 35 || CommitLog.instance.segmentManager.allocatingFrom.nextId == 36 || CommitLog.instance.segmentManager.allocatingFrom.nextId == 37
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == 1731353224475L
CommitLog.instance.segmentManager.availableSegment.allocatePosition == 28
CommitLog.instance.segmentManager.availableSegment.fd == 177 || CommitLog.instance.segmentManager.availableSegment.fd == 214 || CommitLog.instance.segmentManager.availableSegment.fd == 252
CommitLog.instance.segmentManager.availableSegment.id == 1731353224506L || CommitLog.instance.segmentManager.availableSegment.id == 1731353224507L || CommitLog.instance.segmentManager.availableSegment.id == 1731353224508L
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == 20
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize == 3
CommitLog.instance.segmentManager.size == 10485760 || CommitLog.instance.segmentManager.size == 15728640
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
("oneOf.java.jpp: SEQUENCE unimplemented" != null)
StorageService.instance.RING_DELAY == 30000
daikon.Quant.fuzzy.eq(StorageService.instance.traceProbability, 0.0)
cfsInstance.compactionStrategyManager.fanout == 10
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD == 32
cfsInstance.fileIndexGenerator == 0 || cfsInstance.fileIndexGenerator == 1
cfsInstance.indexManager.DEFAULT_PAGE_SIZE == 10000
cfsInstance.metadata.resource.hash == -1493090399 || cfsInstance.metadata.resource.hash == -1493090398
cfsInstance.readOrdering.current.id == 0 || cfsInstance.readOrdering.current.id == 1 || cfsInstance.readOrdering.current.id == 2
cfsInstance.sampleLatencyNanos == 2500000000L
resultSetInstance.metadata.columnCount >= 1
daikon.Quant.eltsNotEqual(resultSetInstance.rows_FOR_ENCLOSING_USE, null)
daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) == 0 || daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) == 1 || daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) == 3
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > CFMetadataInstance.partitionColumns.statics.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK >= CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.size
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > cfsInstance.fileIndexGenerator
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK >= cfsInstance.readOrdering.current.id
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > CFMetadataInstance.partitionColumns.statics.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.size
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > cfsInstance.fileIndexGenerator
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > cfsInstance.readOrdering.current.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK >= CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK >= CFMetadataInstance.partitionColumns.statics.complexIdx
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK > CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.size
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK >= cfsInstance.fileIndexGenerator
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK > cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK <= resultSetInstance.metadata.columnCount
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.partitionColumns.regulars.complexIdx != CFMetadataInstance.partitionColumns.statics.complexIdx
CFMetadataInstance.partitionColumns.regulars.complexIdx < CFMetadataInstance.partitioner.HEAP_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CFMetadataInstance.partitioner.MAXIMUM
CFMetadataInstance.partitionColumns.regulars.complexIdx > CFMetadataInstance.partitioner.MINIMUM.token
CFMetadataInstance.partitionColumns.regulars.complexIdx > CFMetadataInstance.resource.hash
CFMetadataInstance.partitionColumns.regulars.complexIdx < CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.MAX_MUTATION_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.archiver.restorePointInTime
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.markerIntervalNanos
CFMetadataInstance.partitionColumns.regulars.complexIdx >= CommitLog.instance.executor.syncComplete.NOT_SET
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.written
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.idBase
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitionColumns.regulars.complexIdx < StorageService.instance.RING_DELAY
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.compactionStrategyManager.fanout
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CFMetadataInstance.partitionColumns.regulars.complexIdx <= cfsInstance.fileIndexGenerator
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx > cfsInstance.metadata.resource.hash
CFMetadataInstance.partitionColumns.regulars.complexIdx <= cfsInstance.readOrdering.current.id
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.sampleLatencyNanos
CFMetadataInstance.partitionColumns.regulars.complexIdx <= resultSetInstance.metadata.columnCount
CFMetadataInstance.partitionColumns.statics.complexIdx < CFMetadataInstance.partitioner.HEAP_SIZE
CFMetadataInstance.partitionColumns.statics.complexIdx < CFMetadataInstance.partitioner.MAXIMUM
CFMetadataInstance.partitionColumns.statics.complexIdx > CFMetadataInstance.partitioner.MINIMUM.token
CFMetadataInstance.partitionColumns.statics.complexIdx > CFMetadataInstance.resource.hash
CFMetadataInstance.partitionColumns.statics.complexIdx < CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.MAX_MUTATION_SIZE
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.archiver.restorePointInTime
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.markerIntervalNanos
CFMetadataInstance.partitionColumns.statics.complexIdx >= CommitLog.instance.executor.syncComplete.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.written
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.idBase
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitionColumns.statics.complexIdx < StorageService.instance.RING_DELAY
CFMetadataInstance.partitionColumns.statics.complexIdx < cfsInstance.compactionStrategyManager.fanout
CFMetadataInstance.partitionColumns.statics.complexIdx < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CFMetadataInstance.partitionColumns.statics.complexIdx < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CFMetadataInstance.partitionColumns.statics.complexIdx > cfsInstance.metadata.resource.hash
CFMetadataInstance.partitionColumns.statics.complexIdx < cfsInstance.sampleLatencyNanos
CFMetadataInstance.partitionColumns.statics.complexIdx <= resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.HEAP_SIZE > CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.HEAP_SIZE > CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.executor.written
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.HEAP_SIZE > cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.HEAP_SIZE > cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.HEAP_SIZE > cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.HEAP_SIZE > resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.HEAP_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.MAXIMUM > CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.written
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.MAXIMUM > resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.MAXIMUM > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.MINIMUM.token < CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.written
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.MINIMUM.token < resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.MINIMUM.token < daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.resource.hash < CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE
CFMetadataInstance.resource.hash < CommitLog.instance.MAX_MUTATION_SIZE
CFMetadataInstance.resource.hash < CommitLog.instance.archiver.restorePointInTime
CFMetadataInstance.resource.hash < CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS
CFMetadataInstance.resource.hash < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.resource.hash < CommitLog.instance.executor.markerIntervalNanos
CFMetadataInstance.resource.hash < CommitLog.instance.executor.pending
CFMetadataInstance.resource.hash < CommitLog.instance.executor.syncComplete.CANCELLED
CFMetadataInstance.resource.hash < CommitLog.instance.executor.written
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.idBase
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.size
CFMetadataInstance.resource.hash < StorageService.instance.RING_DELAY
CFMetadataInstance.resource.hash < cfsInstance.compactionStrategyManager.fanout
CFMetadataInstance.resource.hash < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CFMetadataInstance.resource.hash < cfsInstance.fileIndexGenerator
CFMetadataInstance.resource.hash < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CFMetadataInstance.resource.hash >= cfsInstance.metadata.resource.hash
CFMetadataInstance.resource.hash < cfsInstance.readOrdering.current.id
CFMetadataInstance.resource.hash < cfsInstance.sampleLatencyNanos
CFMetadataInstance.resource.hash < resultSetInstance.metadata.columnCount
CFMetadataInstance.resource.hash < daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.executor.pending
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.executor.written
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.size
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > cfsInstance.fileIndexGenerator
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > cfsInstance.metadata.resource.hash
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > cfsInstance.readOrdering.current.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > resultSetInstance.metadata.columnCount
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.executor.pending
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.executor.written
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.size
CommitLog.instance.MAX_MUTATION_SIZE > cfsInstance.fileIndexGenerator
CommitLog.instance.MAX_MUTATION_SIZE > cfsInstance.metadata.resource.hash
CommitLog.instance.MAX_MUTATION_SIZE > cfsInstance.readOrdering.current.id
CommitLog.instance.MAX_MUTATION_SIZE > resultSetInstance.metadata.columnCount
CommitLog.instance.MAX_MUTATION_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.archiver.restorePointInTime < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.executor.pending
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.executor.written
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.size
CommitLog.instance.archiver.restorePointInTime > cfsInstance.fileIndexGenerator
CommitLog.instance.archiver.restorePointInTime > cfsInstance.metadata.resource.hash
CommitLog.instance.archiver.restorePointInTime > cfsInstance.readOrdering.current.id
CommitLog.instance.archiver.restorePointInTime % resultSetInstance.metadata.columnCount == 0
CommitLog.instance.archiver.restorePointInTime > resultSetInstance.metadata.columnCount
CommitLog.instance.archiver.restorePointInTime > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > CommitLog.instance.executor.pending
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.executor.written
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.markerIntervalNanos
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.pending
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.syncComplete.NOT_SET
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.written
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.size
CommitLog.instance.executor.lastSyncedAt > StorageService.instance.RING_DELAY
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.lastSyncedAt > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.lastSyncedAt > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.lastSyncedAt > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.lastSyncedAt > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.lastSyncedAt > cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.lastSyncedAt > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.lastSyncedAt > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.executor.pending
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.executor.written
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.markerIntervalNanos > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.markerIntervalNanos > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.markerIntervalNanos > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.markerIntervalNanos > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.markerIntervalNanos > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.pending >= CommitLog.instance.executor.syncComplete.NOT_SET
CommitLog.instance.executor.pending < CommitLog.instance.executor.written
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.pending < StorageService.instance.RING_DELAY
CommitLog.instance.executor.pending < cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.pending < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.pending < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.pending > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.pending < cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.pending <= resultSetInstance.metadata.columnCount
CommitLog.instance.executor.syncComplete.CANCELLED > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.syncComplete.CANCELLED <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.executor.written
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.syncComplete.NOT_SET <= cfsInstance.fileIndexGenerator
CommitLog.instance.executor.syncComplete.NOT_SET <= cfsInstance.readOrdering.current.id
CommitLog.instance.executor.syncComplete.NOT_SET < resultSetInstance.metadata.columnCount
CommitLog.instance.executor.syncComplete.NOT_SET <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.written != CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.written != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.written != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.written < StorageService.instance.RING_DELAY
CommitLog.instance.executor.written > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.written > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.written > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.written < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.written > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.written > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.written < cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.written > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.written > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE != resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 8 == 0
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.fd != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.fd != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.fd != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.fd < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.fd < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.fd < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.fd > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.fd > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.id < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.id > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.id > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.id > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.idBase < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.idBase > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.idBase > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset >= CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.nextId > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.nextId > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.nextId > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.nextId < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.nextId > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.nextId > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.allocatePosition > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.allocatePosition > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.allocatePosition > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.allocatePosition > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.allocatePosition > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.fd < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.availableSegment.fd > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.availableSegment.fd > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.availableSegment.fd < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.fd < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.fd < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.fd < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.availableSegment.fd > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.fd > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.id > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.availableSegment.id > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.id > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset >= resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.size > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.size > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.size > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.size > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.size > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.size > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.size > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.size < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.size > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.size > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
daikon.Quant.subsetOf(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE, resultSetInstance.rows_FOR_ENCLOSING_USE)
StorageService.instance.RING_DELAY > cfsInstance.fileIndexGenerator
StorageService.instance.RING_DELAY > cfsInstance.metadata.resource.hash
StorageService.instance.RING_DELAY > cfsInstance.readOrdering.current.id
StorageService.instance.RING_DELAY % resultSetInstance.metadata.columnCount == 0
StorageService.instance.RING_DELAY > resultSetInstance.metadata.columnCount
StorageService.instance.RING_DELAY > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.compactionStrategyManager.fanout > cfsInstance.fileIndexGenerator
cfsInstance.compactionStrategyManager.fanout > cfsInstance.metadata.resource.hash
cfsInstance.compactionStrategyManager.fanout > cfsInstance.readOrdering.current.id
cfsInstance.compactionStrategyManager.fanout != resultSetInstance.metadata.columnCount
cfsInstance.compactionStrategyManager.fanout > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > cfsInstance.fileIndexGenerator
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > cfsInstance.metadata.resource.hash
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > cfsInstance.readOrdering.current.id
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > resultSetInstance.metadata.columnCount
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.fileIndexGenerator < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
cfsInstance.fileIndexGenerator > cfsInstance.metadata.resource.hash
cfsInstance.fileIndexGenerator < cfsInstance.sampleLatencyNanos
cfsInstance.fileIndexGenerator <= resultSetInstance.metadata.columnCount
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > cfsInstance.metadata.resource.hash
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > cfsInstance.readOrdering.current.id
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > resultSetInstance.metadata.columnCount
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.metadata.resource.hash < cfsInstance.readOrdering.current.id
cfsInstance.metadata.resource.hash < cfsInstance.sampleLatencyNanos
cfsInstance.metadata.resource.hash < resultSetInstance.metadata.columnCount
cfsInstance.metadata.resource.hash < daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
cfsInstance.readOrdering.current.id < cfsInstance.sampleLatencyNanos
cfsInstance.readOrdering.current.id >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
cfsInstance.sampleLatencyNanos > resultSetInstance.metadata.columnCount
cfsInstance.sampleLatencyNanos > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
resultSetInstance.metadata.columnCount >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
2 * CFMetadataInstance.partitionColumns.regulars.complexIdx + CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.fileIndexGenerator - 1.731353224506E12 == 0
CFMetadataInstance.partitionColumns.regulars.complexIdx + CommitLog.instance.segmentManager.allocatingFrom.nextId - cfsInstance.metadata.resource.hash - 1493090435 == 0
2 * CFMetadataInstance.partitionColumns.regulars.complexIdx + CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.fileIndexGenerator - 1.731353224507E12 == 0
2 * CFMetadataInstance.partitionColumns.statics.complexIdx - CommitLog.instance.segmentManager.allocatingFrom.id + cfsInstance.fileIndexGenerator + 1.731353224504E12 == 0
CFMetadataInstance.partitionColumns.statics.complexIdx - CommitLog.instance.segmentManager.allocatingFrom.nextId + cfsInstance.metadata.resource.hash + 1493090434 == 0
2 * CFMetadataInstance.partitionColumns.statics.complexIdx - CommitLog.instance.segmentManager.availableSegment.id + cfsInstance.fileIndexGenerator + 1.731353224505E12 == 0
2 * CFMetadataInstance.resource.hash + CommitLog.instance.executor.pending - 2 * daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) + 2.986180798E9 == 0
75 * CFMetadataInstance.resource.hash + CommitLog.instance.segmentManager.allocatingFrom.fd + 75 * cfsInstance.fileIndexGenerator + 1.11981779598E11 == 0
2 * CFMetadataInstance.resource.hash - CommitLog.instance.segmentManager.allocatingFrom.id + cfsInstance.fileIndexGenerator + 1.734339405302E12 == 0
2 * CFMetadataInstance.resource.hash - CommitLog.instance.segmentManager.allocatingFrom.nextId + cfsInstance.fileIndexGenerator + 2.986180832E9 == 0
CFMetadataInstance.resource.hash - CommitLog.instance.segmentManager.allocatingFrom.nextId + cfsInstance.metadata.resource.hash + 2.986180833E9 == 0
393216000 * CFMetadataInstance.resource.hash + 5242880 * CommitLog.instance.segmentManager.availableSegment.fd - 37 * CommitLog.instance.segmentManager.size + 5.8710703339995136E17 == 0
2 * CFMetadataInstance.resource.hash - CommitLog.instance.segmentManager.availableSegment.id + cfsInstance.fileIndexGenerator + 1.734339405303E12 == 0
2 * CommitLog.instance.executor.lastSyncedAt - 460328361 * CommitLog.instance.executor.pending - 471826074 * CommitLog.instance.executor.written - 1.78418440401974E14 == 0
2 * CommitLog.instance.executor.lastSyncedAt + 11497713 * CommitLog.instance.executor.pending - 1415478222 * daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.7897000508248E14 == 0
4 * CommitLog.instance.executor.lastSyncedAt - 22995426 * CommitLog.instance.executor.written + 1380985083 * resultSetInstance.metadata.columnCount - 3.57920033437381E14 == 0
2 * CommitLog.instance.executor.lastSyncedAt - 11497713 * CommitLog.instance.executor.written - 1380985083 * daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.78956564255983E14 == 0
2 * CommitLog.instance.executor.lastSyncedAt - 11497713 * CommitLog.instance.executor.written - 1380985083 * daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1 - 1.78957945241066E14 == 0
1460 * CommitLog.instance.executor.lastSyncedAt - 1537961254 * CommitLog.instance.segmentManager.allocatingFrom.allocatePosition + 2.00598513333E11 * resultSetInstance.metadata.columnCount - 1.30646878196920016E17 == 0
319 * CommitLog.instance.executor.lastSyncedAt - 61241516 * CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 2.00598513333E11 * daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 2.8545627071698876E16 == 0
319 * CommitLog.instance.executor.lastSyncedAt - 61241516 * CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 2.00598513333E11 * daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1 - 2.8545827670212208E16 == 0
1460 * CommitLog.instance.executor.lastSyncedAt - 1537961254 * CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset + 2.00598513333E11 * resultSetInstance.metadata.columnCount - 1.30646890500610048E17 == 0
319 * CommitLog.instance.executor.lastSyncedAt - 61241516 * CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 2.00598513333E11 * daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 2.8545627561631004E16 == 0
319 * CommitLog.instance.executor.lastSyncedAt - 61241516 * CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 2.00598513333E11 * daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1 - 2.8545828160144336E16 == 0
319 * CommitLog.instance.executor.lastSyncedAt - 11497713 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset + 1.10521608183E11 * resultSetInstance.metadata.columnCount - 2.854625185049204E16 == 0
319 * CommitLog.instance.executor.lastSyncedAt - 11497713 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 2.21043216366E11 * daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 2.8545699242451128E16 == 0
319 * CommitLog.instance.executor.lastSyncedAt - 11497713 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 2.21043216366E11 * daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1 - 2.8545920285667492E16 == 0
CommitLog.instance.executor.pending + 2 * CommitLog.instance.segmentManager.allocatingFrom.id - 2 * daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 3.46270644901E12 == 0
CommitLog.instance.executor.pending + 2 * CommitLog.instance.segmentManager.availableSegment.id - 2 * daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 3.462706449012E12 == 0
CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.fileIndexGenerator + cfsInstance.readOrdering.current.id - 1.731353224506E12 == 0
CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.readOrdering.current.id - daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224503E12 == 0
5242880 * CommitLog.instance.segmentManager.availableSegment.fd - 37 * CommitLog.instance.segmentManager.size + 393216000 * cfsInstance.metadata.resource.hash + 5.8710703339995136E17 == 0
CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.fileIndexGenerator + cfsInstance.readOrdering.current.id - 1.731353224507E12 == 0
CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.readOrdering.current.id - daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224504E12 == 0
===========================================================================
org.apache.cassandra.cql3.SimpleQueryTest@test2ndaryIndexBug1968446361:::dump
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.allocatingFrom.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.availableSegment.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.joinRing
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.useStrictConsistency
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionSpaceCheck
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.enabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_ENABLED
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.isEnabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.shouldDefragment
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.supportsEarlyOpen
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.data.loadsstables
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.keyspace.initialized
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.allColumnFilter.isFetchAll
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MIN_THRESHOLD
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CFMetadataInstance.partitioner.MINIMUM.serialVersionUID
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.executor.syncComplete.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.managerThreadWaitQueue.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.segmentPrepared.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == StorageService.instance.threadCounter
CFMetadataInstance.compactValueColumn.NO_POSITION == CFMetadataInstance.compactValueColumn.position
CFMetadataInstance.compactValueColumn.NO_POSITION == CommitLog.instance.executor.syncComplete.CANCELLED
CFMetadataInstance.compactValueColumn.NO_POSITION == cfsInstance.metadata.compactValueColumn.NO_POSITION
CFMetadataInstance.compactValueColumn.comparisonOrder == cfsInstance.metadata.compactValueColumn.comparisonOrder
CFMetadataInstance.compactValueColumn.hash == cfsInstance.metadata.compactValueColumn.hash
CFMetadataInstance.compactValueColumn.name.interned == CFMetadataInstance.compactValueColumn.type.isByteOrderComparable
CFMetadataInstance.compactValueColumn.name.interned == CFMetadataInstance.isCompound
CFMetadataInstance.compactValueColumn.name.interned == CFMetadataInstance.isCounter
CFMetadataInstance.compactValueColumn.name.interned == CFMetadataInstance.isIndex
CFMetadataInstance.compactValueColumn.name.interned == CFMetadataInstance.partitioner.partitionOrdering.isByteOrderComparable
CFMetadataInstance.compactValueColumn.name.interned == cfsInstance.directories.metadata.isCompound
CFMetadataInstance.isCounter == CFMetadataInstance.isSuper
CFMetadataInstance.isCounter == CFMetadataInstance.isView
CFMetadataInstance.isCounter == CFMetadataInstance.keyValidator.isByteOrderComparable
CFMetadataInstance.isCounter == CFMetadataInstance.partitioner.comparator.isByteOrderComparable
CFMetadataInstance.isCounter == CFMetadataInstance.partitioner.partitionOrdering.isByteOrderComparable
CFMetadataInstance.isCounter == CommitLog.instance.executor.shutdown
CFMetadataInstance.isCounter == CommitLog.instance.segmentManager.shutdown
CFMetadataInstance.isCounter == StorageService.instance.allowSimultaneousMoves
CFMetadataInstance.isCounter == StorageService.instance.authSetupCalled
CFMetadataInstance.isCounter == StorageService.instance.authSetupComplete
CFMetadataInstance.isCounter == StorageService.instance.gossipActive
CFMetadataInstance.isCounter == StorageService.instance.initialized
CFMetadataInstance.isCounter == StorageService.instance.isBootstrapMode
CFMetadataInstance.isCounter == StorageService.instance.isDecommissioning
CFMetadataInstance.isCounter == StorageService.instance.isRebuilding
CFMetadataInstance.isCounter == StorageService.instance.isShutdown
CFMetadataInstance.isCounter == StorageService.instance.isSurveyMode
CFMetadataInstance.isCounter == StorageService.instance.joined
CFMetadataInstance.isCounter == StorageService.instance.replacing
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.compactionLogger.enabled
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.currentBoundaries.isInvalid
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.keyspace.TEST_FAIL_WRITES
CFMetadataInstance.isCounter == cfsInstance.keyspace.viewManager.enableCoordinatorBatchlog
CFMetadataInstance.isCounter == cfsInstance.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.metadata.keyValidator.isByteOrderComparable
CFMetadataInstance.isCounter == cfsInstance.readOrdering.current.isBlocking
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isView
CFMetadataInstance.isDense == CFMetadataInstance.partitioner.comparator.isByteOrderComparable
CFMetadataInstance.isIndex == CFMetadataInstance.partitioner.partitionOrdering.isByteOrderComparable
CFMetadataInstance.isIndex == cfsInstance.directories.metadata.isIndex
CFMetadataInstance.isIndex == cfsInstance.metadata.isIndex
CFMetadataInstance.isIndex == cfsInstance.metric.aliasFactory.isIndex
CFMetadataInstance.isIndex == cfsInstance.metric.factory.isIndex
CFMetadataInstance.partitionColumns.regulars.complexIdx == CFMetadataInstance.partitioner.MINIMUM.serialVersionUID
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.executor.syncComplete.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.bufferPool.usedBuffers
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.managerThreadWaitQueue.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.segmentPrepared.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == QueryProcessor.instance.lastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.statics.complexIdx == QueryProcessor.instance.thriftLastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.legacyProgressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.nextRepairCommand
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.progressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.remainingCFs
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.tokenMetadata.ringVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.totalCFs
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.compactionLogger.identifier
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.currentBoundaries.directoriesVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.keyspace.TEST_FAIL_MV_LOCKS_COUNT
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.keyspace.replicationStrategy.lastInvalidatedVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.readOrdering.current.running
CFMetadataInstance.partitionColumns.statics.complexIdx == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.EMPTY_SIZE == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CFMetadataInstance.partitioner.EMPTY_SIZE == cfsInstance.metadata.partitioner.EMPTY_SIZE
CFMetadataInstance.partitioner.HEAP_SIZE == StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.HEAP_SIZE == cfsInstance.metadata.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.MAXIMUM == StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CFMetadataInstance.partitioner.MAXIMUM == cfsInstance.metadata.partitioner.MAXIMUM
CFMetadataInstance.partitioner.comparator.isByteOrderComparable == CommitLog.instance.executor.syncRequested
CFMetadataInstance.partitioner.comparator.isByteOrderComparable == cfsInstance.compactionStrategyManager.partitionSSTablesByTokenRange
CFMetadataInstance.partitioner.comparator.isByteOrderComparable == cfsInstance.directories.metadata.isDense
CFMetadataInstance.partitioner.partitionOrdering.isByteOrderComparable == cfsInstance.diskBoundaryManager.diskBoundaries.isInvalid
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == CommitLog.instance.configuration.encryptionContext.chunkLength
CommitLog.instance.executor.markerIntervalNanos == CommitLog.instance.executor.syncIntervalNanos
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.managerThreadWaitQueue.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.segmentPrepared.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.keyspace.writeOrder.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.metadata.compactValueColumn.NO_POSITION
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.readOrdering.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)-1
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == CommitLog.instance.segmentManager.availableSegment.ENTRY_OVERHEAD_SIZE
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == CommitLog.instance.segmentManager.availableSegment.SYNC_MARKER_SIZE
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.availableSegment.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.bufferPool.bufferSize
CommitLog.instance.segmentManager.allocatingFrom.idBase == CommitLog.instance.segmentManager.availableSegment.idBase
CommitLog.instance.segmentManager.allocatingFrom.nextId == CommitLog.instance.segmentManager.availableSegment.nextId
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == CommitLog.instance.segmentManager.availableSegment.replayLimitId
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == CommitLog.instance.segmentManager.availableSegment.lastSyncedOffset
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE == resultSetInstance.rows_FOR_ENCLOSING_USE
StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE == StorageService.instance.valueFactory.partitioner.HEAP_SIZE
StorageService.instance.tokenMetadata.partitioner.MAXIMUM == StorageService.instance.valueFactory.partitioner.MAXIMUM
cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion == cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
cfsInstance.compactionStrategyManager.isActive == cfsInstance.valid
cfsInstance.directories.metadata.isCompound == cfsInstance.metadata.isCompound
cfsInstance.directories.metadata.isCompound == cfsInstance.viewManager.baseTableMetadata.isCompound
cfsInstance.directories.metadata.isDense == cfsInstance.metadata.isDense
cfsInstance.directories.metadata.isDense == cfsInstance.viewManager.baseTableMetadata.isDense
cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion == cfsInstance.diskBoundaryManager.diskBoundaries.ringVersion
cfsInstance.metadata.compactValueColumn.NO_POSITION == cfsInstance.metadata.compactValueColumn.position
CFMetadataInstance.allColumnFilter.isFetchAll == true
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK == 2
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == 4
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == 1
CFMetadataInstance.compactValueColumn.NO_POSITION == -1
CFMetadataInstance.compactValueColumn.comparisonOrder == 4611956916719281408L
CFMetadataInstance.compactValueColumn.hash == 1376485651
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE == 48
CFMetadataInstance.compactValueColumn.name.interned == false
CFMetadataInstance.compactValueColumn.name.prefixComparison == -693153616176873472L
CFMetadataInstance.isCounter == false
CFMetadataInstance.partitionColumns.regulars.complexIdx == 0 || CFMetadataInstance.partitionColumns.regulars.complexIdx == 1
CFMetadataInstance.partitioner.EMPTY_SIZE == 32
CFMetadataInstance.partitioner.HEAP_SIZE == 24
CFMetadataInstance.partitioner.MAXIMUM == 9223372036854775807L
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID == 1
CFMetadataInstance.partitioner.MINIMUM.token == -9223372036854775808L
CFMetadataInstance.partitioner.comparator.isByteOrderComparable == false
CFMetadataInstance.partitioner.partitionOrdering.isByteOrderComparable == false
CFMetadataInstance.resource.hash == -1493090397 || CFMetadataInstance.resource.hash == -1493090396 || CFMetadataInstance.resource.hash == 1377534570
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == 65536
CommitLog.instance.MAX_MUTATION_SIZE == 2621440
CommitLog.instance.archiver.restorePointInTime == 4510987932000L
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS == 100
CommitLog.instance.executor.markerIntervalNanos == 1000000
CommitLog.instance.executor.pending == 0 || CommitLog.instance.executor.pending == 1 || CommitLog.instance.executor.pending == 2
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == 12
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == 8
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == 5242880
CommitLog.instance.segmentManager.allocatingFrom.fd == 177 || CommitLog.instance.segmentManager.allocatingFrom.fd == 178 || CommitLog.instance.segmentManager.allocatingFrom.fd == 182
CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224509L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224510L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224511L
CommitLog.instance.segmentManager.allocatingFrom.idBase == 1731353224472L
CommitLog.instance.segmentManager.allocatingFrom.nextId == 39 || CommitLog.instance.segmentManager.allocatingFrom.nextId == 40 || CommitLog.instance.segmentManager.allocatingFrom.nextId == 41
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == 1731353224475L
CommitLog.instance.segmentManager.availableSegment.allocatePosition == 28
CommitLog.instance.segmentManager.availableSegment.fd == 177 || CommitLog.instance.segmentManager.availableSegment.fd == 178 || CommitLog.instance.segmentManager.availableSegment.fd == 182
CommitLog.instance.segmentManager.availableSegment.id == 1731353224510L || CommitLog.instance.segmentManager.availableSegment.id == 1731353224511L || CommitLog.instance.segmentManager.availableSegment.id == 1731353224512L
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == 20
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize == 3
CommitLog.instance.segmentManager.size == 10485760 || CommitLog.instance.segmentManager.size == 15728640
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
("oneOf.java.jpp: SEQUENCE unimplemented" != null)
StorageService.instance.RING_DELAY == 30000
StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE == 24
StorageService.instance.tokenMetadata.partitioner.MAXIMUM == 9223372036854775807L
daikon.Quant.fuzzy.eq(StorageService.instance.traceProbability, 0.0)
cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion == -1 || cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion == 0
cfsInstance.compactionStrategyManager.fanout == 10
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD == 32
cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion == 0
cfsInstance.fileIndexGenerator == 0 || cfsInstance.fileIndexGenerator == 1 || cfsInstance.fileIndexGenerator == 2
cfsInstance.indexManager.DEFAULT_PAGE_SIZE == 10000
cfsInstance.metadata.compactValueColumn.NO_POSITION == -1
cfsInstance.metadata.compactValueColumn.comparisonOrder == 4611956916719281408L
cfsInstance.metadata.compactValueColumn.hash == 1376485651
cfsInstance.metadata.resource.hash == -1493090397 || cfsInstance.metadata.resource.hash == -1493090396 || cfsInstance.metadata.resource.hash == 1377534570
cfsInstance.readOrdering.current.id == 0 || cfsInstance.readOrdering.current.id == 1 || cfsInstance.readOrdering.current.id == 3
cfsInstance.sampleLatencyNanos == 2500000000L
resultSetInstance.metadata.columnCount >= 1
daikon.Quant.eltsNotEqual(resultSetInstance.rows_FOR_ENCLOSING_USE, null)
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK >= CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.size
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK >= cfsInstance.fileIndexGenerator
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != cfsInstance.readOrdering.current.id
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != resultSetInstance.metadata.columnCount
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK != CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.size
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > cfsInstance.fileIndexGenerator
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK != cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > cfsInstance.readOrdering.current.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK >= CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK != CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.size
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK != cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK <= resultSetInstance.metadata.columnCount
CFMetadataInstance.compactValueColumn.NO_POSITION < CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.compactValueColumn.NO_POSITION > CFMetadataInstance.resource.hash
CFMetadataInstance.compactValueColumn.NO_POSITION < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.compactValueColumn.NO_POSITION < CommitLog.instance.executor.pending
CFMetadataInstance.compactValueColumn.NO_POSITION < CommitLog.instance.executor.written
CFMetadataInstance.compactValueColumn.NO_POSITION < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.compactValueColumn.NO_POSITION < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.compactValueColumn.NO_POSITION < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.compactValueColumn.NO_POSITION < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.compactValueColumn.NO_POSITION < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.compactValueColumn.NO_POSITION < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.compactValueColumn.NO_POSITION < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.compactValueColumn.NO_POSITION < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.compactValueColumn.NO_POSITION < CommitLog.instance.segmentManager.size
CFMetadataInstance.compactValueColumn.NO_POSITION < cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.compactValueColumn.NO_POSITION < cfsInstance.fileIndexGenerator
CFMetadataInstance.compactValueColumn.NO_POSITION > cfsInstance.metadata.resource.hash
CFMetadataInstance.compactValueColumn.NO_POSITION < cfsInstance.readOrdering.current.id
CFMetadataInstance.compactValueColumn.NO_POSITION < resultSetInstance.metadata.columnCount
CFMetadataInstance.compactValueColumn.NO_POSITION <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.compactValueColumn.comparisonOrder > CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.compactValueColumn.comparisonOrder > CFMetadataInstance.resource.hash
CFMetadataInstance.compactValueColumn.comparisonOrder > CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.compactValueColumn.comparisonOrder > CommitLog.instance.executor.pending
CFMetadataInstance.compactValueColumn.comparisonOrder > CommitLog.instance.executor.written
CFMetadataInstance.compactValueColumn.comparisonOrder > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.compactValueColumn.comparisonOrder > CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.compactValueColumn.comparisonOrder > CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.compactValueColumn.comparisonOrder > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.compactValueColumn.comparisonOrder > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.compactValueColumn.comparisonOrder > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.compactValueColumn.comparisonOrder > CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.compactValueColumn.comparisonOrder > CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.compactValueColumn.comparisonOrder > CommitLog.instance.segmentManager.size
CFMetadataInstance.compactValueColumn.comparisonOrder > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.compactValueColumn.comparisonOrder > cfsInstance.fileIndexGenerator
CFMetadataInstance.compactValueColumn.comparisonOrder > cfsInstance.metadata.resource.hash
CFMetadataInstance.compactValueColumn.comparisonOrder > cfsInstance.readOrdering.current.id
CFMetadataInstance.compactValueColumn.comparisonOrder > resultSetInstance.metadata.columnCount
CFMetadataInstance.compactValueColumn.comparisonOrder > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.compactValueColumn.hash > CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.compactValueColumn.hash > CFMetadataInstance.resource.hash
CFMetadataInstance.compactValueColumn.hash < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.compactValueColumn.hash > CommitLog.instance.executor.pending
CFMetadataInstance.compactValueColumn.hash > CommitLog.instance.executor.written
CFMetadataInstance.compactValueColumn.hash > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.compactValueColumn.hash > CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.compactValueColumn.hash < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.compactValueColumn.hash > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.compactValueColumn.hash > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.compactValueColumn.hash > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.compactValueColumn.hash > CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.compactValueColumn.hash < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.compactValueColumn.hash > CommitLog.instance.segmentManager.size
CFMetadataInstance.compactValueColumn.hash > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.compactValueColumn.hash > cfsInstance.fileIndexGenerator
CFMetadataInstance.compactValueColumn.hash > cfsInstance.metadata.resource.hash
CFMetadataInstance.compactValueColumn.hash > cfsInstance.readOrdering.current.id
CFMetadataInstance.compactValueColumn.hash > resultSetInstance.metadata.columnCount
CFMetadataInstance.compactValueColumn.hash > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE > CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE > CFMetadataInstance.resource.hash
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE > CommitLog.instance.executor.pending
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE < CommitLog.instance.executor.written
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE < CommitLog.instance.segmentManager.size
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE > cfsInstance.fileIndexGenerator
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE > cfsInstance.metadata.resource.hash
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE > cfsInstance.readOrdering.current.id
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE > resultSetInstance.metadata.columnCount
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.compactValueColumn.name.prefixComparison < CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.compactValueColumn.name.prefixComparison < CFMetadataInstance.resource.hash
CFMetadataInstance.compactValueColumn.name.prefixComparison < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.compactValueColumn.name.prefixComparison < CommitLog.instance.executor.pending
CFMetadataInstance.compactValueColumn.name.prefixComparison < CommitLog.instance.executor.written
CFMetadataInstance.compactValueColumn.name.prefixComparison < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.compactValueColumn.name.prefixComparison < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.compactValueColumn.name.prefixComparison < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.compactValueColumn.name.prefixComparison < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.compactValueColumn.name.prefixComparison < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.compactValueColumn.name.prefixComparison < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.compactValueColumn.name.prefixComparison < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.compactValueColumn.name.prefixComparison < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.compactValueColumn.name.prefixComparison < CommitLog.instance.segmentManager.size
CFMetadataInstance.compactValueColumn.name.prefixComparison < cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.compactValueColumn.name.prefixComparison < cfsInstance.fileIndexGenerator
CFMetadataInstance.compactValueColumn.name.prefixComparison < cfsInstance.metadata.resource.hash
CFMetadataInstance.compactValueColumn.name.prefixComparison < cfsInstance.readOrdering.current.id
CFMetadataInstance.compactValueColumn.name.prefixComparison < resultSetInstance.metadata.columnCount
CFMetadataInstance.compactValueColumn.name.prefixComparison < daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.partitionColumns.regulars.complexIdx >= CFMetadataInstance.partitionColumns.statics.complexIdx
CFMetadataInstance.partitionColumns.regulars.complexIdx < CFMetadataInstance.partitioner.EMPTY_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CFMetadataInstance.partitioner.HEAP_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CFMetadataInstance.partitioner.MAXIMUM
CFMetadataInstance.partitionColumns.regulars.complexIdx > CFMetadataInstance.partitioner.MINIMUM.token
CFMetadataInstance.partitionColumns.regulars.complexIdx != CFMetadataInstance.resource.hash
CFMetadataInstance.partitionColumns.regulars.complexIdx < CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.MAX_MUTATION_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.archiver.restorePointInTime
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.markerIntervalNanos
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.written
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.idBase
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitionColumns.regulars.complexIdx < StorageService.instance.RING_DELAY
CFMetadataInstance.partitionColumns.regulars.complexIdx < StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CFMetadataInstance.partitionColumns.regulars.complexIdx > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.compactionStrategyManager.fanout
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CFMetadataInstance.partitionColumns.regulars.complexIdx > cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx > cfsInstance.metadata.compactValueColumn.NO_POSITION
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.metadata.compactValueColumn.comparisonOrder
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.metadata.compactValueColumn.hash
CFMetadataInstance.partitionColumns.regulars.complexIdx != cfsInstance.metadata.resource.hash
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.sampleLatencyNanos
CFMetadataInstance.partitionColumns.regulars.complexIdx <= resultSetInstance.metadata.columnCount
CFMetadataInstance.partitionColumns.statics.complexIdx != CFMetadataInstance.resource.hash
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitionColumns.statics.complexIdx <= CommitLog.instance.executor.pending
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.written
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitionColumns.statics.complexIdx >= cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.partitionColumns.statics.complexIdx <= cfsInstance.fileIndexGenerator
CFMetadataInstance.partitionColumns.statics.complexIdx != cfsInstance.metadata.resource.hash
CFMetadataInstance.partitionColumns.statics.complexIdx <= cfsInstance.readOrdering.current.id
CFMetadataInstance.partitionColumns.statics.complexIdx < resultSetInstance.metadata.columnCount
CFMetadataInstance.partitionColumns.statics.complexIdx <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.EMPTY_SIZE < CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.EMPTY_SIZE > CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.executor.written
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.EMPTY_SIZE > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.partitioner.EMPTY_SIZE > cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.EMPTY_SIZE < cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.EMPTY_SIZE > cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.EMPTY_SIZE > resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.EMPTY_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.HEAP_SIZE > CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.HEAP_SIZE > CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.executor.written
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.HEAP_SIZE > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.partitioner.HEAP_SIZE > cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.HEAP_SIZE > cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.HEAP_SIZE > cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.HEAP_SIZE > resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.HEAP_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.MAXIMUM > CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.written
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.MAXIMUM > resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.MAXIMUM > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID > CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID < CommitLog.instance.executor.written
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID > cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID <= resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.partitioner.MINIMUM.token < CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.written
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.MINIMUM.token < resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.MINIMUM.token < daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.resource.hash != CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE
CFMetadataInstance.resource.hash != CommitLog.instance.MAX_MUTATION_SIZE
CFMetadataInstance.resource.hash < CommitLog.instance.archiver.restorePointInTime
CFMetadataInstance.resource.hash != CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS
CFMetadataInstance.resource.hash < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.resource.hash != CommitLog.instance.executor.markerIntervalNanos
CFMetadataInstance.resource.hash != CommitLog.instance.executor.pending
CFMetadataInstance.resource.hash != CommitLog.instance.executor.syncComplete.CANCELLED
CFMetadataInstance.resource.hash != CommitLog.instance.executor.written
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.idBase
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.availableSegment.allocatePosition
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.size
CFMetadataInstance.resource.hash != StorageService.instance.RING_DELAY
CFMetadataInstance.resource.hash != StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CFMetadataInstance.resource.hash < StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CFMetadataInstance.resource.hash != cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.resource.hash != cfsInstance.compactionStrategyManager.fanout
CFMetadataInstance.resource.hash != cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CFMetadataInstance.resource.hash < cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CFMetadataInstance.resource.hash != cfsInstance.fileIndexGenerator
CFMetadataInstance.resource.hash != cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CFMetadataInstance.resource.hash < cfsInstance.metadata.compactValueColumn.NO_POSITION
CFMetadataInstance.resource.hash < cfsInstance.metadata.compactValueColumn.comparisonOrder
CFMetadataInstance.resource.hash < cfsInstance.metadata.compactValueColumn.hash
CFMetadataInstance.resource.hash >= cfsInstance.metadata.resource.hash
CFMetadataInstance.resource.hash != cfsInstance.readOrdering.current.id
CFMetadataInstance.resource.hash < cfsInstance.sampleLatencyNanos
CFMetadataInstance.resource.hash != resultSetInstance.metadata.columnCount
CFMetadataInstance.resource.hash != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.resource.hash != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.executor.pending
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.executor.written
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.size
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > cfsInstance.fileIndexGenerator
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE != cfsInstance.metadata.resource.hash
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > cfsInstance.readOrdering.current.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > resultSetInstance.metadata.columnCount
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.executor.pending
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.executor.written
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.size
CommitLog.instance.MAX_MUTATION_SIZE > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.MAX_MUTATION_SIZE > cfsInstance.fileIndexGenerator
CommitLog.instance.MAX_MUTATION_SIZE != cfsInstance.metadata.resource.hash
CommitLog.instance.MAX_MUTATION_SIZE > cfsInstance.readOrdering.current.id
CommitLog.instance.MAX_MUTATION_SIZE > resultSetInstance.metadata.columnCount
CommitLog.instance.MAX_MUTATION_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.archiver.restorePointInTime < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.executor.pending
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.executor.written
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.size
CommitLog.instance.archiver.restorePointInTime > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.archiver.restorePointInTime > cfsInstance.fileIndexGenerator
CommitLog.instance.archiver.restorePointInTime > cfsInstance.metadata.resource.hash
CommitLog.instance.archiver.restorePointInTime > cfsInstance.readOrdering.current.id
CommitLog.instance.archiver.restorePointInTime % resultSetInstance.metadata.columnCount == 0
CommitLog.instance.archiver.restorePointInTime > resultSetInstance.metadata.columnCount
CommitLog.instance.archiver.restorePointInTime > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > CommitLog.instance.executor.pending
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.executor.written
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS != cfsInstance.metadata.resource.hash
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.markerIntervalNanos
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.pending
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.written
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.size
CommitLog.instance.executor.lastSyncedAt > StorageService.instance.RING_DELAY
CommitLog.instance.executor.lastSyncedAt > StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CommitLog.instance.executor.lastSyncedAt < StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.lastSyncedAt > cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CommitLog.instance.executor.lastSyncedAt > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.lastSyncedAt > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.lastSyncedAt > cfsInstance.metadata.compactValueColumn.NO_POSITION
CommitLog.instance.executor.lastSyncedAt < cfsInstance.metadata.compactValueColumn.comparisonOrder
CommitLog.instance.executor.lastSyncedAt > cfsInstance.metadata.compactValueColumn.hash
CommitLog.instance.executor.lastSyncedAt > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.lastSyncedAt > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.lastSyncedAt > cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.lastSyncedAt > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.lastSyncedAt > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.executor.pending
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.executor.written
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.markerIntervalNanos > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.executor.markerIntervalNanos > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.markerIntervalNanos != cfsInstance.metadata.resource.hash
CommitLog.instance.executor.markerIntervalNanos > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.markerIntervalNanos > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.markerIntervalNanos > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.pending < CommitLog.instance.executor.written
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.pending < StorageService.instance.RING_DELAY
CommitLog.instance.executor.pending < StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CommitLog.instance.executor.pending < StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CommitLog.instance.executor.pending >= cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.executor.pending < cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.pending < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.pending >= cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CommitLog.instance.executor.pending < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.pending > cfsInstance.metadata.compactValueColumn.NO_POSITION
CommitLog.instance.executor.pending < cfsInstance.metadata.compactValueColumn.comparisonOrder
CommitLog.instance.executor.pending < cfsInstance.metadata.compactValueColumn.hash
CommitLog.instance.executor.pending != cfsInstance.metadata.resource.hash
CommitLog.instance.executor.pending < cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.pending <= resultSetInstance.metadata.columnCount
CommitLog.instance.executor.syncComplete.CANCELLED <= cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.executor.syncComplete.CANCELLED != cfsInstance.metadata.resource.hash
CommitLog.instance.executor.syncComplete.CANCELLED <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.written != CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.written != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.written != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.written < StorageService.instance.RING_DELAY
CommitLog.instance.executor.written > StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CommitLog.instance.executor.written < StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CommitLog.instance.executor.written > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.executor.written > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.written > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.written > cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CommitLog.instance.executor.written > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.written < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.written > cfsInstance.metadata.compactValueColumn.NO_POSITION
CommitLog.instance.executor.written < cfsInstance.metadata.compactValueColumn.comparisonOrder
CommitLog.instance.executor.written < cfsInstance.metadata.compactValueColumn.hash
CommitLog.instance.executor.written != cfsInstance.metadata.resource.hash
CommitLog.instance.executor.written > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.written < cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.written > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.written > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE != resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.metadata.compactValueColumn.NO_POSITION
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.metadata.compactValueColumn.comparisonOrder
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.metadata.compactValueColumn.hash
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.fd != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.fd < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.fd > StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CommitLog.instance.segmentManager.allocatingFrom.fd < StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.fd < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.metadata.compactValueColumn.NO_POSITION
CommitLog.instance.segmentManager.allocatingFrom.fd < cfsInstance.metadata.compactValueColumn.comparisonOrder
CommitLog.instance.segmentManager.allocatingFrom.fd < cfsInstance.metadata.compactValueColumn.hash
CommitLog.instance.segmentManager.allocatingFrom.fd != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.fd < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.fd > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.fd > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.id < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.id > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.id > StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CommitLog.instance.segmentManager.allocatingFrom.id < StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.metadata.compactValueColumn.NO_POSITION
CommitLog.instance.segmentManager.allocatingFrom.id < cfsInstance.metadata.compactValueColumn.comparisonOrder
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.metadata.compactValueColumn.hash
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.id > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.id > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.idBase < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.idBase > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.idBase > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset >= CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.metadata.compactValueColumn.NO_POSITION
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.metadata.compactValueColumn.comparisonOrder
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.metadata.compactValueColumn.hash
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.metadata.compactValueColumn.NO_POSITION
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.metadata.compactValueColumn.comparisonOrder
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.metadata.compactValueColumn.hash
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.nextId > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.nextId > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.nextId > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.nextId < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.nextId > StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CommitLog.instance.segmentManager.allocatingFrom.nextId < StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.metadata.compactValueColumn.NO_POSITION
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.metadata.compactValueColumn.comparisonOrder
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.metadata.compactValueColumn.hash
CommitLog.instance.segmentManager.allocatingFrom.nextId != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.nextId > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.nextId > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.allocatePosition > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.availableSegment.allocatePosition > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.allocatePosition != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.allocatePosition > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.allocatePosition > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.allocatePosition > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.fd < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.availableSegment.fd > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.availableSegment.fd > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.availableSegment.fd < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.fd < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.availableSegment.fd > StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CommitLog.instance.segmentManager.availableSegment.fd < StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.fd < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.metadata.compactValueColumn.NO_POSITION
CommitLog.instance.segmentManager.availableSegment.fd < cfsInstance.metadata.compactValueColumn.comparisonOrder
CommitLog.instance.segmentManager.availableSegment.fd < cfsInstance.metadata.compactValueColumn.hash
CommitLog.instance.segmentManager.availableSegment.fd != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.fd < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.availableSegment.fd > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.fd > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.id > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.availableSegment.id > StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CommitLog.instance.segmentManager.availableSegment.id < StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.metadata.compactValueColumn.NO_POSITION
CommitLog.instance.segmentManager.availableSegment.id < cfsInstance.metadata.compactValueColumn.comparisonOrder
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.metadata.compactValueColumn.hash
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.availableSegment.id > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.id > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset >= resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize >= cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CommitLog.instance.segmentManager.size > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.size > StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CommitLog.instance.segmentManager.size < StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CommitLog.instance.segmentManager.size > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.size > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.size > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.size > cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CommitLog.instance.segmentManager.size > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.size > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.size > cfsInstance.metadata.compactValueColumn.NO_POSITION
CommitLog.instance.segmentManager.size < cfsInstance.metadata.compactValueColumn.comparisonOrder
CommitLog.instance.segmentManager.size < cfsInstance.metadata.compactValueColumn.hash
CommitLog.instance.segmentManager.size != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.size > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.size < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.size > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.size > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
daikon.Quant.subsetOf(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE, resultSetInstance.rows_FOR_ENCLOSING_USE)
StorageService.instance.RING_DELAY > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
StorageService.instance.RING_DELAY > cfsInstance.fileIndexGenerator
StorageService.instance.RING_DELAY != cfsInstance.metadata.resource.hash
StorageService.instance.RING_DELAY > cfsInstance.readOrdering.current.id
StorageService.instance.RING_DELAY % resultSetInstance.metadata.columnCount == 0
StorageService.instance.RING_DELAY > resultSetInstance.metadata.columnCount
StorageService.instance.RING_DELAY > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE > cfsInstance.fileIndexGenerator
StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE != cfsInstance.metadata.resource.hash
StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE > cfsInstance.readOrdering.current.id
StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE > resultSetInstance.metadata.columnCount
StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
StorageService.instance.tokenMetadata.partitioner.MAXIMUM > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
StorageService.instance.tokenMetadata.partitioner.MAXIMUM > cfsInstance.fileIndexGenerator
StorageService.instance.tokenMetadata.partitioner.MAXIMUM > cfsInstance.metadata.resource.hash
StorageService.instance.tokenMetadata.partitioner.MAXIMUM > cfsInstance.readOrdering.current.id
StorageService.instance.tokenMetadata.partitioner.MAXIMUM > resultSetInstance.metadata.columnCount
StorageService.instance.tokenMetadata.partitioner.MAXIMUM > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion < cfsInstance.compactionStrategyManager.fanout
cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion <= cfsInstance.fileIndexGenerator
cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion > cfsInstance.metadata.compactValueColumn.NO_POSITION
cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion < cfsInstance.metadata.compactValueColumn.comparisonOrder
cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion < cfsInstance.metadata.compactValueColumn.hash
cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion != cfsInstance.metadata.resource.hash
cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion <= cfsInstance.readOrdering.current.id
cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion < cfsInstance.sampleLatencyNanos
cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion < resultSetInstance.metadata.columnCount
cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.compactionStrategyManager.fanout > cfsInstance.fileIndexGenerator
cfsInstance.compactionStrategyManager.fanout != cfsInstance.metadata.resource.hash
cfsInstance.compactionStrategyManager.fanout > cfsInstance.readOrdering.current.id
cfsInstance.compactionStrategyManager.fanout != resultSetInstance.metadata.columnCount
cfsInstance.compactionStrategyManager.fanout > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > cfsInstance.fileIndexGenerator
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD != cfsInstance.metadata.resource.hash
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > cfsInstance.readOrdering.current.id
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > resultSetInstance.metadata.columnCount
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion <= cfsInstance.fileIndexGenerator
cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion > cfsInstance.metadata.resource.hash
cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion <= cfsInstance.readOrdering.current.id
cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion < resultSetInstance.metadata.columnCount
cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.fileIndexGenerator < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
cfsInstance.fileIndexGenerator > cfsInstance.metadata.compactValueColumn.NO_POSITION
cfsInstance.fileIndexGenerator < cfsInstance.metadata.compactValueColumn.comparisonOrder
cfsInstance.fileIndexGenerator < cfsInstance.metadata.compactValueColumn.hash
cfsInstance.fileIndexGenerator != cfsInstance.metadata.resource.hash
cfsInstance.fileIndexGenerator < cfsInstance.sampleLatencyNanos
cfsInstance.indexManager.DEFAULT_PAGE_SIZE != cfsInstance.metadata.resource.hash
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > cfsInstance.readOrdering.current.id
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > resultSetInstance.metadata.columnCount
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.metadata.compactValueColumn.NO_POSITION > cfsInstance.metadata.resource.hash
cfsInstance.metadata.compactValueColumn.NO_POSITION < cfsInstance.readOrdering.current.id
cfsInstance.metadata.compactValueColumn.NO_POSITION < resultSetInstance.metadata.columnCount
cfsInstance.metadata.compactValueColumn.NO_POSITION <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
cfsInstance.metadata.compactValueColumn.comparisonOrder > cfsInstance.metadata.resource.hash
cfsInstance.metadata.compactValueColumn.comparisonOrder > cfsInstance.readOrdering.current.id
cfsInstance.metadata.compactValueColumn.comparisonOrder > resultSetInstance.metadata.columnCount
cfsInstance.metadata.compactValueColumn.comparisonOrder > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.metadata.compactValueColumn.hash > cfsInstance.metadata.resource.hash
cfsInstance.metadata.compactValueColumn.hash > cfsInstance.readOrdering.current.id
cfsInstance.metadata.compactValueColumn.hash > resultSetInstance.metadata.columnCount
cfsInstance.metadata.compactValueColumn.hash > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.metadata.resource.hash != cfsInstance.readOrdering.current.id
cfsInstance.metadata.resource.hash < cfsInstance.sampleLatencyNanos
cfsInstance.metadata.resource.hash != resultSetInstance.metadata.columnCount
cfsInstance.metadata.resource.hash != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.metadata.resource.hash != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
cfsInstance.readOrdering.current.id < cfsInstance.sampleLatencyNanos
cfsInstance.sampleLatencyNanos > resultSetInstance.metadata.columnCount
cfsInstance.sampleLatencyNanos > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
resultSetInstance.metadata.columnCount >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
5242880 * CFMetadataInstance.partitionColumns.regulars.complexIdx + 5242880 * CommitLog.instance.segmentManager.allocatingFrom.id - CommitLog.instance.segmentManager.size - 9.077277193708503E18 == 0
5242880 * CFMetadataInstance.partitionColumns.regulars.complexIdx + 5242880 * CommitLog.instance.segmentManager.availableSegment.id - CommitLog.instance.segmentManager.size - 9.0772771937137459E18 == 0
5.741249932E9 * CFMetadataInstance.partitionColumns.regulars.complexIdx + cfsInstance.fileIndexGenerator + 2 * cfsInstance.metadata.resource.hash - 2.75506914E9 == 0
CommitLog.instance.executor.lastSyncedAt - 27338555 * CommitLog.instance.executor.pending - 65535743 * CommitLog.instance.executor.written - 8.9417810196661E13 == 0
92 * CommitLog.instance.executor.lastSyncedAt - 3.514141296E9 * CommitLog.instance.executor.written - 27338555 * CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 8.229588349707137E15 == 0
92 * CommitLog.instance.executor.lastSyncedAt - 3.514141296E9 * CommitLog.instance.executor.written - 27338555 * CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 8.229588568415577E15 == 0
119 * CommitLog.instance.executor.lastSyncedAt - 1.0313900477E10 * CommitLog.instance.executor.written + 27338555 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 1.0637569383079894E16 == 0
5242880 * CommitLog.instance.segmentManager.allocatingFrom.id - CommitLog.instance.segmentManager.size + 5242880 * cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion - 9.0772771937032602E18 == 0
CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.fileIndexGenerator - daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224507E12 == 0
2 * CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.readOrdering.current.id - 2 * daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 3.462706449015E12 == 0
5242880 * CommitLog.instance.segmentManager.availableSegment.id - CommitLog.instance.segmentManager.size + 5242880 * cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion - 9.077277193708503E18 == 0
CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.fileIndexGenerator - daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224508E12 == 0
2 * CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.readOrdering.current.id - 2 * daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 3.462706449017E12 == 0
5.741249932E9 * cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion + cfsInstance.fileIndexGenerator + 2 * cfsInstance.metadata.resource.hash + 2.986180792E9 == 0
===========================================================================
org.apache.cassandra.cql3.SimpleQueryTest@test2ndaryIndexes-1159781553:::dump
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.keyValidator.isByteOrderComparable
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.partitioner.comparator.isByteOrderComparable
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.allocatingFrom.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.availableSegment.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.joinRing
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.useStrictConsistency
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionSpaceCheck
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.enabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_ENABLED
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.isEnabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.shouldDefragment
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.supportsEarlyOpen
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.data.loadsstables
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.directories.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.keyspace.initialized
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.allColumnFilter.isFetchAll
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.keyValidator.isByteOrderComparable
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.viewManager.baseTableMetadata.isCompound
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MIN_THRESHOLD
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CFMetadataInstance.partitioner.MINIMUM.serialVersionUID
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.executor.syncComplete.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.managerThreadWaitQueue.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.segmentPrepared.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == StorageService.instance.threadCounter
CFMetadataInstance.isCounter == CFMetadataInstance.isDense
CFMetadataInstance.isCounter == CFMetadataInstance.isSuper
CFMetadataInstance.isCounter == CFMetadataInstance.isView
CFMetadataInstance.isCounter == CFMetadataInstance.partitioner.partitionOrdering.isByteOrderComparable
CFMetadataInstance.isCounter == CommitLog.instance.executor.shutdown
CFMetadataInstance.isCounter == CommitLog.instance.executor.syncRequested
CFMetadataInstance.isCounter == CommitLog.instance.segmentManager.shutdown
CFMetadataInstance.isCounter == StorageService.instance.allowSimultaneousMoves
CFMetadataInstance.isCounter == StorageService.instance.authSetupCalled
CFMetadataInstance.isCounter == StorageService.instance.authSetupComplete
CFMetadataInstance.isCounter == StorageService.instance.gossipActive
CFMetadataInstance.isCounter == StorageService.instance.initialized
CFMetadataInstance.isCounter == StorageService.instance.isBootstrapMode
CFMetadataInstance.isCounter == StorageService.instance.isDecommissioning
CFMetadataInstance.isCounter == StorageService.instance.isRebuilding
CFMetadataInstance.isCounter == StorageService.instance.isShutdown
CFMetadataInstance.isCounter == StorageService.instance.isSurveyMode
CFMetadataInstance.isCounter == StorageService.instance.joined
CFMetadataInstance.isCounter == StorageService.instance.replacing
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.compactionLogger.enabled
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.currentBoundaries.isInvalid
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.keyspace.TEST_FAIL_WRITES
CFMetadataInstance.isCounter == cfsInstance.keyspace.viewManager.enableCoordinatorBatchlog
CFMetadataInstance.isCounter == cfsInstance.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.readOrdering.current.isBlocking
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isDense
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isView
CFMetadataInstance.isIndex == CFMetadataInstance.partitioner.comparator.isByteOrderComparable
CFMetadataInstance.isIndex == CFMetadataInstance.partitioner.partitionOrdering.isByteOrderComparable
CFMetadataInstance.isIndex == cfsInstance.directories.metadata.isIndex
CFMetadataInstance.isIndex == cfsInstance.metadata.isIndex
CFMetadataInstance.isIndex == cfsInstance.metric.aliasFactory.isIndex
CFMetadataInstance.isIndex == cfsInstance.metric.factory.isIndex
CFMetadataInstance.partitionColumns.regulars.complexIdx == CFMetadataInstance.partitioner.MINIMUM.serialVersionUID
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.executor.syncComplete.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.bufferPool.usedBuffers
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.managerThreadWaitQueue.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.segmentPrepared.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == QueryProcessor.instance.lastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.statics.complexIdx == QueryProcessor.instance.thriftLastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.legacyProgressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.nextRepairCommand
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.progressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.remainingCFs
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.tokenMetadata.ringVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.totalCFs
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.compactionLogger.identifier
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.currentBoundaries.directoriesVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.keyspace.TEST_FAIL_MV_LOCKS_COUNT
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.keyspace.replicationStrategy.lastInvalidatedVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.readOrdering.current.running
CFMetadataInstance.partitionColumns.statics.complexIdx == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.EMPTY_SIZE == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CFMetadataInstance.partitioner.EMPTY_SIZE == cfsInstance.metadata.partitioner.EMPTY_SIZE
CFMetadataInstance.partitioner.HEAP_SIZE == StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.HEAP_SIZE == cfsInstance.metadata.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.MAXIMUM == StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CFMetadataInstance.partitioner.MAXIMUM == cfsInstance.metadata.partitioner.MAXIMUM
CFMetadataInstance.partitioner.comparator.isByteOrderComparable == cfsInstance.compactionStrategyManager.isActive
CFMetadataInstance.partitioner.partitionOrdering.isByteOrderComparable == cfsInstance.diskBoundaryManager.diskBoundaries.isInvalid
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == CommitLog.instance.configuration.encryptionContext.chunkLength
CommitLog.instance.executor.markerIntervalNanos == CommitLog.instance.executor.syncIntervalNanos
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.managerThreadWaitQueue.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.segmentPrepared.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.keyspace.writeOrder.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.readOrdering.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)-1
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == CommitLog.instance.segmentManager.availableSegment.ENTRY_OVERHEAD_SIZE
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == CommitLog.instance.segmentManager.availableSegment.SYNC_MARKER_SIZE
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.availableSegment.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.bufferPool.bufferSize
CommitLog.instance.segmentManager.allocatingFrom.idBase == CommitLog.instance.segmentManager.availableSegment.idBase
CommitLog.instance.segmentManager.allocatingFrom.nextId == CommitLog.instance.segmentManager.availableSegment.nextId
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == CommitLog.instance.segmentManager.availableSegment.replayLimitId
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == CommitLog.instance.segmentManager.availableSegment.lastSyncedOffset
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE == resultSetInstance.rows_FOR_ENCLOSING_USE
StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE == StorageService.instance.valueFactory.partitioner.HEAP_SIZE
StorageService.instance.tokenMetadata.partitioner.MAXIMUM == StorageService.instance.valueFactory.partitioner.MAXIMUM
cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion == cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
cfsInstance.compactionStrategyManager.isActive == cfsInstance.valid
cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion == cfsInstance.diskBoundaryManager.diskBoundaries.ringVersion
CFMetadataInstance.allColumnFilter.isFetchAll == true
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK == 2
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == 4
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == 1
CFMetadataInstance.isCounter == false
CFMetadataInstance.partitionColumns.regulars.complexIdx == 0 || CFMetadataInstance.partitionColumns.regulars.complexIdx == 1
CFMetadataInstance.partitioner.EMPTY_SIZE == 32
CFMetadataInstance.partitioner.HEAP_SIZE == 24
CFMetadataInstance.partitioner.MAXIMUM == 9223372036854775807L
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID == 1
CFMetadataInstance.partitioner.MINIMUM.token == -9223372036854775808L
CFMetadataInstance.partitioner.comparator.isByteOrderComparable == true
CFMetadataInstance.partitioner.partitionOrdering.isByteOrderComparable == false
CFMetadataInstance.resource.hash == -1493090403 || CFMetadataInstance.resource.hash == 1292670864 || CFMetadataInstance.resource.hash == 2144393077
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == 65536
CommitLog.instance.MAX_MUTATION_SIZE == 2621440
CommitLog.instance.archiver.restorePointInTime == 4510987932000L
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS == 100
CommitLog.instance.executor.markerIntervalNanos == 1000000
CommitLog.instance.executor.pending == 0 || CommitLog.instance.executor.pending == 1
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == 12
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == 8
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == 5242880
CommitLog.instance.segmentManager.allocatingFrom.fd == 179 || CommitLog.instance.segmentManager.allocatingFrom.fd == 183 || CommitLog.instance.segmentManager.allocatingFrom.fd == 217
CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224495L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224496L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224497L
CommitLog.instance.segmentManager.allocatingFrom.idBase == 1731353224472L
CommitLog.instance.segmentManager.allocatingFrom.nextId == 25 || CommitLog.instance.segmentManager.allocatingFrom.nextId == 26 || CommitLog.instance.segmentManager.allocatingFrom.nextId == 27
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == 1731353224475L
CommitLog.instance.segmentManager.availableSegment.allocatePosition == 28
CommitLog.instance.segmentManager.availableSegment.fd == 177 || CommitLog.instance.segmentManager.availableSegment.fd == 183 || CommitLog.instance.segmentManager.availableSegment.fd == 217
CommitLog.instance.segmentManager.availableSegment.id == 1731353224496L || CommitLog.instance.segmentManager.availableSegment.id == 1731353224497L || CommitLog.instance.segmentManager.availableSegment.id == 1731353224498L
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == 20
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize == 3
CommitLog.instance.segmentManager.size == 10485760 || CommitLog.instance.segmentManager.size == 15728640
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
("oneOf.java.jpp: SEQUENCE unimplemented" != null)
StorageService.instance.RING_DELAY == 30000
StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE == 24
StorageService.instance.tokenMetadata.partitioner.MAXIMUM == 9223372036854775807L
daikon.Quant.fuzzy.eq(StorageService.instance.traceProbability, 0.0)
cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion == -1 || cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion == 0
cfsInstance.compactionStrategyManager.fanout == 10
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD == 32
cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion == 0
cfsInstance.fileIndexGenerator == 0 || cfsInstance.fileIndexGenerator == 1 || cfsInstance.fileIndexGenerator == 2
cfsInstance.indexManager.DEFAULT_PAGE_SIZE == 10000
cfsInstance.metadata.resource.hash == -1493090403 || cfsInstance.metadata.resource.hash == 1292670864 || cfsInstance.metadata.resource.hash == 2144393077
cfsInstance.readOrdering.current.id == 0 || cfsInstance.readOrdering.current.id == 2 || cfsInstance.readOrdering.current.id == 3
cfsInstance.sampleLatencyNanos == 0 || cfsInstance.sampleLatencyNanos == 2500000000L
resultSetInstance.metadata.columnCount >= 1
daikon.Quant.eltsNotEqual(resultSetInstance.rows_FOR_ENCLOSING_USE, null)
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.size
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK >= cfsInstance.fileIndexGenerator
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != cfsInstance.sampleLatencyNanos
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != resultSetInstance.metadata.columnCount
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK != CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.size
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > cfsInstance.fileIndexGenerator
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK != cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > cfsInstance.readOrdering.current.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK != cfsInstance.sampleLatencyNanos
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK >= CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK != CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK >= CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.size
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK != cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK != cfsInstance.readOrdering.current.id
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK != cfsInstance.sampleLatencyNanos
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK <= resultSetInstance.metadata.columnCount
CFMetadataInstance.partitionColumns.regulars.complexIdx >= CFMetadataInstance.partitionColumns.statics.complexIdx
CFMetadataInstance.partitionColumns.regulars.complexIdx < CFMetadataInstance.partitioner.EMPTY_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CFMetadataInstance.partitioner.HEAP_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CFMetadataInstance.partitioner.MAXIMUM
CFMetadataInstance.partitionColumns.regulars.complexIdx > CFMetadataInstance.partitioner.MINIMUM.token
CFMetadataInstance.partitionColumns.regulars.complexIdx != CFMetadataInstance.resource.hash
CFMetadataInstance.partitionColumns.regulars.complexIdx < CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.MAX_MUTATION_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.archiver.restorePointInTime
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.markerIntervalNanos
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.written
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.idBase
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitionColumns.regulars.complexIdx < StorageService.instance.RING_DELAY
CFMetadataInstance.partitionColumns.regulars.complexIdx < StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CFMetadataInstance.partitionColumns.regulars.complexIdx > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.compactionStrategyManager.fanout
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CFMetadataInstance.partitionColumns.regulars.complexIdx > cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx != cfsInstance.metadata.resource.hash
CFMetadataInstance.partitionColumns.regulars.complexIdx != cfsInstance.sampleLatencyNanos
CFMetadataInstance.partitionColumns.regulars.complexIdx <= resultSetInstance.metadata.columnCount
CFMetadataInstance.partitionColumns.regulars.complexIdx != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.partitionColumns.statics.complexIdx != CFMetadataInstance.resource.hash
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitionColumns.statics.complexIdx <= CommitLog.instance.executor.pending
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.written
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitionColumns.statics.complexIdx >= cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.partitionColumns.statics.complexIdx <= cfsInstance.fileIndexGenerator
CFMetadataInstance.partitionColumns.statics.complexIdx != cfsInstance.metadata.resource.hash
CFMetadataInstance.partitionColumns.statics.complexIdx <= cfsInstance.readOrdering.current.id
CFMetadataInstance.partitionColumns.statics.complexIdx <= cfsInstance.sampleLatencyNanos
CFMetadataInstance.partitionColumns.statics.complexIdx < resultSetInstance.metadata.columnCount
CFMetadataInstance.partitionColumns.statics.complexIdx <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.EMPTY_SIZE < CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.EMPTY_SIZE > CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.executor.written
CFMetadataInstance.partitioner.EMPTY_SIZE != CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.EMPTY_SIZE != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.EMPTY_SIZE != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.EMPTY_SIZE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.EMPTY_SIZE > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.partitioner.EMPTY_SIZE > cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.EMPTY_SIZE < cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.EMPTY_SIZE > cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.EMPTY_SIZE < cfsInstance.sampleLatencyNanos
CFMetadataInstance.partitioner.EMPTY_SIZE > resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.EMPTY_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.HEAP_SIZE != CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.HEAP_SIZE > CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.executor.written
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.HEAP_SIZE > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.partitioner.HEAP_SIZE > cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.HEAP_SIZE != cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.HEAP_SIZE > cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.HEAP_SIZE != cfsInstance.sampleLatencyNanos
CFMetadataInstance.partitioner.HEAP_SIZE > resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.HEAP_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.MAXIMUM > CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.written
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.sampleLatencyNanos
CFMetadataInstance.partitioner.MAXIMUM > resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.MAXIMUM > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID != CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID >= CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID < CommitLog.instance.executor.written
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID != cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID != cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID != cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID != cfsInstance.sampleLatencyNanos
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID <= resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.partitioner.MINIMUM.token < CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.written
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.sampleLatencyNanos
CFMetadataInstance.partitioner.MINIMUM.token < resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.MINIMUM.token < daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.resource.hash != CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE
CFMetadataInstance.resource.hash != CommitLog.instance.MAX_MUTATION_SIZE
CFMetadataInstance.resource.hash < CommitLog.instance.archiver.restorePointInTime
CFMetadataInstance.resource.hash != CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS
CFMetadataInstance.resource.hash < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.resource.hash != CommitLog.instance.executor.markerIntervalNanos
CFMetadataInstance.resource.hash != CommitLog.instance.executor.pending
CFMetadataInstance.resource.hash != CommitLog.instance.executor.syncComplete.CANCELLED
CFMetadataInstance.resource.hash != CommitLog.instance.executor.written
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.idBase
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.availableSegment.allocatePosition
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.size
CFMetadataInstance.resource.hash != StorageService.instance.RING_DELAY
CFMetadataInstance.resource.hash != StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CFMetadataInstance.resource.hash < StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CFMetadataInstance.resource.hash != cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.resource.hash != cfsInstance.compactionStrategyManager.fanout
CFMetadataInstance.resource.hash != cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CFMetadataInstance.resource.hash != cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CFMetadataInstance.resource.hash != cfsInstance.fileIndexGenerator
CFMetadataInstance.resource.hash != cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CFMetadataInstance.resource.hash <= cfsInstance.metadata.resource.hash
CFMetadataInstance.resource.hash != cfsInstance.readOrdering.current.id
CFMetadataInstance.resource.hash != cfsInstance.sampleLatencyNanos
CFMetadataInstance.resource.hash != resultSetInstance.metadata.columnCount
CFMetadataInstance.resource.hash != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.resource.hash != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.executor.pending
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.executor.written
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.size
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > cfsInstance.fileIndexGenerator
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE != cfsInstance.metadata.resource.hash
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > cfsInstance.readOrdering.current.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE != cfsInstance.sampleLatencyNanos
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > resultSetInstance.metadata.columnCount
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.executor.pending
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.executor.written
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.size
CommitLog.instance.MAX_MUTATION_SIZE > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.MAX_MUTATION_SIZE > cfsInstance.fileIndexGenerator
CommitLog.instance.MAX_MUTATION_SIZE != cfsInstance.metadata.resource.hash
CommitLog.instance.MAX_MUTATION_SIZE > cfsInstance.readOrdering.current.id
CommitLog.instance.MAX_MUTATION_SIZE != cfsInstance.sampleLatencyNanos
CommitLog.instance.MAX_MUTATION_SIZE > resultSetInstance.metadata.columnCount
CommitLog.instance.MAX_MUTATION_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.archiver.restorePointInTime < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.executor.pending
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.executor.written
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.size
CommitLog.instance.archiver.restorePointInTime > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.archiver.restorePointInTime > cfsInstance.fileIndexGenerator
CommitLog.instance.archiver.restorePointInTime > cfsInstance.metadata.resource.hash
CommitLog.instance.archiver.restorePointInTime > cfsInstance.readOrdering.current.id
CommitLog.instance.archiver.restorePointInTime > cfsInstance.sampleLatencyNanos
CommitLog.instance.archiver.restorePointInTime % resultSetInstance.metadata.columnCount == 0
CommitLog.instance.archiver.restorePointInTime > resultSetInstance.metadata.columnCount
CommitLog.instance.archiver.restorePointInTime > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > CommitLog.instance.executor.pending
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.executor.written
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS != CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS != cfsInstance.metadata.resource.hash
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS != cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.markerIntervalNanos
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.pending
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.written
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.size
CommitLog.instance.executor.lastSyncedAt > StorageService.instance.RING_DELAY
CommitLog.instance.executor.lastSyncedAt > StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CommitLog.instance.executor.lastSyncedAt < StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.lastSyncedAt > cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CommitLog.instance.executor.lastSyncedAt > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.lastSyncedAt > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.lastSyncedAt > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.lastSyncedAt > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.lastSyncedAt > cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.lastSyncedAt > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.lastSyncedAt > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.executor.pending
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.executor.written
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.markerIntervalNanos > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.executor.markerIntervalNanos > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.markerIntervalNanos != cfsInstance.metadata.resource.hash
CommitLog.instance.executor.markerIntervalNanos > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.markerIntervalNanos != cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.markerIntervalNanos > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.markerIntervalNanos > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.pending < CommitLog.instance.executor.written
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.pending < StorageService.instance.RING_DELAY
CommitLog.instance.executor.pending < StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CommitLog.instance.executor.pending < StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CommitLog.instance.executor.pending >= cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.executor.pending < cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.pending < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.pending >= cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CommitLog.instance.executor.pending <= cfsInstance.fileIndexGenerator
CommitLog.instance.executor.pending < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.pending != cfsInstance.metadata.resource.hash
CommitLog.instance.executor.pending <= resultSetInstance.metadata.columnCount
CommitLog.instance.executor.syncComplete.CANCELLED <= cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.executor.syncComplete.CANCELLED != cfsInstance.metadata.resource.hash
CommitLog.instance.executor.syncComplete.CANCELLED <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.written != CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.written != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.written != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.written < StorageService.instance.RING_DELAY
CommitLog.instance.executor.written > StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CommitLog.instance.executor.written < StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CommitLog.instance.executor.written > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.executor.written > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.written > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.written > cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CommitLog.instance.executor.written > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.written < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.written != cfsInstance.metadata.resource.hash
CommitLog.instance.executor.written > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.written != cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.written > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.written > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE != resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 8 == 0
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition >= CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.fd != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.fd != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.fd != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.fd < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.fd > StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CommitLog.instance.segmentManager.allocatingFrom.fd < StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.fd < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.fd != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.fd != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.fd > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.fd > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.id < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.id > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.id > StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CommitLog.instance.segmentManager.allocatingFrom.id < StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.id > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.id > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.idBase < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.idBase > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.idBase > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset >= CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset >= CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset >= CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.nextId > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.nextId > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.nextId < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.nextId > StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CommitLog.instance.segmentManager.allocatingFrom.nextId < StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.nextId != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.nextId != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.nextId > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.nextId > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.allocatePosition > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.availableSegment.allocatePosition > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.allocatePosition != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.allocatePosition > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.allocatePosition != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.availableSegment.allocatePosition > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.allocatePosition > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.fd < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.availableSegment.fd > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.availableSegment.fd > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.availableSegment.fd < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.fd < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.availableSegment.fd > StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CommitLog.instance.segmentManager.availableSegment.fd < StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.fd < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.availableSegment.fd != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.fd != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.availableSegment.fd > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.fd > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.id > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.availableSegment.id > StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CommitLog.instance.segmentManager.availableSegment.id < StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.availableSegment.id > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.id > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset >= resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize >= cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.size > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.size > StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CommitLog.instance.segmentManager.size < StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CommitLog.instance.segmentManager.size > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.size > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.size > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.size > cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CommitLog.instance.segmentManager.size > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.size > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.size != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.size > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.size != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.size > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.size > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
daikon.Quant.subsetOf(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE, resultSetInstance.rows_FOR_ENCLOSING_USE)
StorageService.instance.RING_DELAY > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
StorageService.instance.RING_DELAY > cfsInstance.fileIndexGenerator
StorageService.instance.RING_DELAY != cfsInstance.metadata.resource.hash
StorageService.instance.RING_DELAY > cfsInstance.readOrdering.current.id
StorageService.instance.RING_DELAY != cfsInstance.sampleLatencyNanos
StorageService.instance.RING_DELAY % resultSetInstance.metadata.columnCount == 0
StorageService.instance.RING_DELAY > resultSetInstance.metadata.columnCount
StorageService.instance.RING_DELAY > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE > cfsInstance.fileIndexGenerator
StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE != cfsInstance.metadata.resource.hash
StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE > cfsInstance.readOrdering.current.id
StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE != cfsInstance.sampleLatencyNanos
StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE > resultSetInstance.metadata.columnCount
StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
StorageService.instance.tokenMetadata.partitioner.MAXIMUM > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
StorageService.instance.tokenMetadata.partitioner.MAXIMUM > cfsInstance.fileIndexGenerator
StorageService.instance.tokenMetadata.partitioner.MAXIMUM > cfsInstance.metadata.resource.hash
StorageService.instance.tokenMetadata.partitioner.MAXIMUM > cfsInstance.readOrdering.current.id
StorageService.instance.tokenMetadata.partitioner.MAXIMUM > cfsInstance.sampleLatencyNanos
StorageService.instance.tokenMetadata.partitioner.MAXIMUM > resultSetInstance.metadata.columnCount
StorageService.instance.tokenMetadata.partitioner.MAXIMUM > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion < cfsInstance.compactionStrategyManager.fanout
cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion <= cfsInstance.fileIndexGenerator
cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion != cfsInstance.metadata.resource.hash
cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion <= cfsInstance.readOrdering.current.id
cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion <= cfsInstance.sampleLatencyNanos
cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion < resultSetInstance.metadata.columnCount
cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.compactionStrategyManager.fanout > cfsInstance.fileIndexGenerator
cfsInstance.compactionStrategyManager.fanout != cfsInstance.metadata.resource.hash
cfsInstance.compactionStrategyManager.fanout > cfsInstance.readOrdering.current.id
cfsInstance.compactionStrategyManager.fanout != cfsInstance.sampleLatencyNanos
cfsInstance.compactionStrategyManager.fanout != resultSetInstance.metadata.columnCount
cfsInstance.compactionStrategyManager.fanout > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > cfsInstance.fileIndexGenerator
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD != cfsInstance.metadata.resource.hash
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > cfsInstance.readOrdering.current.id
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD != cfsInstance.sampleLatencyNanos
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > resultSetInstance.metadata.columnCount
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion <= cfsInstance.fileIndexGenerator
cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion != cfsInstance.metadata.resource.hash
cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion <= cfsInstance.readOrdering.current.id
cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion <= cfsInstance.sampleLatencyNanos
cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion < resultSetInstance.metadata.columnCount
cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.fileIndexGenerator < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
cfsInstance.fileIndexGenerator != cfsInstance.metadata.resource.hash
cfsInstance.fileIndexGenerator != cfsInstance.sampleLatencyNanos
cfsInstance.indexManager.DEFAULT_PAGE_SIZE != cfsInstance.metadata.resource.hash
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > cfsInstance.readOrdering.current.id
cfsInstance.indexManager.DEFAULT_PAGE_SIZE != cfsInstance.sampleLatencyNanos
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > resultSetInstance.metadata.columnCount
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.metadata.resource.hash != cfsInstance.readOrdering.current.id
cfsInstance.metadata.resource.hash != cfsInstance.sampleLatencyNanos
cfsInstance.metadata.resource.hash != resultSetInstance.metadata.columnCount
cfsInstance.metadata.resource.hash != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.metadata.resource.hash != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
cfsInstance.readOrdering.current.id != cfsInstance.sampleLatencyNanos
cfsInstance.sampleLatencyNanos != resultSetInstance.metadata.columnCount
resultSetInstance.metadata.columnCount >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
2 * CFMetadataInstance.partitionColumns.regulars.complexIdx - CommitLog.instance.executor.pending + CommitLog.instance.segmentManager.allocatingFrom.id - 1.731353224497E12 == 0
2 * CFMetadataInstance.partitionColumns.regulars.complexIdx - CommitLog.instance.executor.pending + CommitLog.instance.segmentManager.availableSegment.id - 1.731353224498E12 == 0
2621440 * CommitLog.instance.executor.pending - 2621440 * CommitLog.instance.segmentManager.allocatingFrom.id + CommitLog.instance.segmentManager.size + 4.538638596809687E18 == 0
CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.id - 2 * cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion + 1.731353224495E12 == 0
2 * CommitLog.instance.executor.pending - 2 * CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.fileIndexGenerator + 3.462706448992E12 == 0
3 * CommitLog.instance.executor.pending - 3 * CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.readOrdering.current.id + 5.194059673488E12 == 0
2621440 * CommitLog.instance.executor.pending - 2621440 * CommitLog.instance.segmentManager.availableSegment.id + CommitLog.instance.segmentManager.size + 4.5386385968123085E18 == 0
CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.availableSegment.id - 2 * cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion + 1.731353224496E12 == 0
2 * CommitLog.instance.executor.pending - 2 * CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.fileIndexGenerator + 3.462706448994E12 == 0
3 * CommitLog.instance.executor.pending - 3 * CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.readOrdering.current.id + 5.194059673491E12 == 0
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 89 * CommitLog.instance.segmentManager.allocatingFrom.id - CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset + 1.54090436980047E14 == 0
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 89 * CommitLog.instance.segmentManager.availableSegment.id + 1.54090436980136E14 == 0
46 * CommitLog.instance.segmentManager.allocatingFrom.id + 3 * CommitLog.instance.segmentManager.availableSegment.fd - 28 * cfsInstance.fileIndexGenerator - 7.9642248327365E13 == 0
CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.readOrdering.current.id - daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224492E12 == 0
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 89 * CommitLog.instance.segmentManager.availableSegment.id + 1.54090436980144E14 == 0
3 * CommitLog.instance.segmentManager.availableSegment.fd + 46 * CommitLog.instance.segmentManager.availableSegment.id - 28 * cfsInstance.fileIndexGenerator - 7.9642248327411E13 == 0
CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.readOrdering.current.id - daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224493E12 == 0
===========================================================================
org.apache.cassandra.cql3.SimpleQueryTest@testCompactStorageUpdateWithNull-1221656276:::dump
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.allocatingFrom.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.availableSegment.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.joinRing
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.useStrictConsistency
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionSpaceCheck
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.enabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.partitionSSTablesByTokenRange
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_ENABLED
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.isEnabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.shouldDefragment
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.supportsEarlyOpen
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.data.loadsstables
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.keyspace.initialized
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.allColumnFilter.isFetchAll
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MIN_THRESHOLD
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CFMetadataInstance.partitioner.MINIMUM.serialVersionUID
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.executor.syncComplete.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.managerThreadWaitQueue.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.segmentPrepared.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == StorageService.instance.threadCounter
CFMetadataInstance.compactValueColumn.NO_POSITION == CFMetadataInstance.compactValueColumn.position
CFMetadataInstance.compactValueColumn.NO_POSITION == CommitLog.instance.executor.syncComplete.CANCELLED
CFMetadataInstance.compactValueColumn.NO_POSITION == cfsInstance.metadata.compactValueColumn.NO_POSITION
CFMetadataInstance.compactValueColumn.comparisonOrder == cfsInstance.metadata.compactValueColumn.comparisonOrder
CFMetadataInstance.compactValueColumn.hash == cfsInstance.metadata.compactValueColumn.hash
CFMetadataInstance.compactValueColumn.type.isByteOrderComparable == CFMetadataInstance.isCompound
CFMetadataInstance.compactValueColumn.type.isByteOrderComparable == CFMetadataInstance.isCounter
CFMetadataInstance.isCounter == CFMetadataInstance.isIndex
CFMetadataInstance.isCounter == CFMetadataInstance.isSuper
CFMetadataInstance.isCounter == CFMetadataInstance.isView
CFMetadataInstance.isCounter == CFMetadataInstance.keyValidator.isByteOrderComparable
CFMetadataInstance.isCounter == CFMetadataInstance.partitioner.partitionOrdering.isByteOrderComparable
CFMetadataInstance.isCounter == CommitLog.instance.executor.shutdown
CFMetadataInstance.isCounter == CommitLog.instance.executor.syncRequested
CFMetadataInstance.isCounter == CommitLog.instance.segmentManager.shutdown
CFMetadataInstance.isCounter == StorageService.instance.allowSimultaneousMoves
CFMetadataInstance.isCounter == StorageService.instance.authSetupCalled
CFMetadataInstance.isCounter == StorageService.instance.authSetupComplete
CFMetadataInstance.isCounter == StorageService.instance.gossipActive
CFMetadataInstance.isCounter == StorageService.instance.initialized
CFMetadataInstance.isCounter == StorageService.instance.isBootstrapMode
CFMetadataInstance.isCounter == StorageService.instance.isDecommissioning
CFMetadataInstance.isCounter == StorageService.instance.isRebuilding
CFMetadataInstance.isCounter == StorageService.instance.isShutdown
CFMetadataInstance.isCounter == StorageService.instance.isSurveyMode
CFMetadataInstance.isCounter == StorageService.instance.joined
CFMetadataInstance.isCounter == StorageService.instance.replacing
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.compactionLogger.enabled
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.currentBoundaries.isInvalid
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.diskBoundaryManager.diskBoundaries.isInvalid
CFMetadataInstance.isCounter == cfsInstance.keyspace.TEST_FAIL_WRITES
CFMetadataInstance.isCounter == cfsInstance.keyspace.viewManager.enableCoordinatorBatchlog
CFMetadataInstance.isCounter == cfsInstance.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.metadata.keyValidator.isByteOrderComparable
CFMetadataInstance.isCounter == cfsInstance.metric.aliasFactory.isIndex
CFMetadataInstance.isCounter == cfsInstance.metric.factory.isIndex
CFMetadataInstance.isCounter == cfsInstance.readOrdering.current.isBlocking
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isView
CFMetadataInstance.partitioner.HEAP_SIZE == StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.HEAP_SIZE == StorageService.instance.valueFactory.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.HEAP_SIZE == cfsInstance.metadata.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.MAXIMUM == StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CFMetadataInstance.partitioner.MAXIMUM == StorageService.instance.valueFactory.partitioner.MAXIMUM
CFMetadataInstance.partitioner.MAXIMUM == cfsInstance.metadata.partitioner.MAXIMUM
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == CommitLog.instance.configuration.encryptionContext.chunkLength
CommitLog.instance.executor.markerIntervalNanos == CommitLog.instance.executor.syncIntervalNanos
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.managerThreadWaitQueue.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.segmentPrepared.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.keyspace.writeOrder.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.metadata.compactValueColumn.NO_POSITION
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.readOrdering.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)-1
CommitLog.instance.executor.syncComplete.NOT_SET == CommitLog.instance.segmentManager.bufferPool.usedBuffers
CommitLog.instance.executor.syncComplete.NOT_SET == CommitLog.instance.segmentManager.managerThreadWaitQueue.NOT_SET
CommitLog.instance.executor.syncComplete.NOT_SET == CommitLog.instance.segmentManager.segmentPrepared.NOT_SET
CommitLog.instance.executor.syncComplete.NOT_SET == QueryProcessor.instance.lastMinuteEvictionsCount
CommitLog.instance.executor.syncComplete.NOT_SET == QueryProcessor.instance.thriftLastMinuteEvictionsCount
CommitLog.instance.executor.syncComplete.NOT_SET == StorageService.instance.legacyProgressSupport.notificationSerialNumber
CommitLog.instance.executor.syncComplete.NOT_SET == StorageService.instance.nextRepairCommand
CommitLog.instance.executor.syncComplete.NOT_SET == StorageService.instance.progressSupport.notificationSerialNumber
CommitLog.instance.executor.syncComplete.NOT_SET == StorageService.instance.remainingCFs
CommitLog.instance.executor.syncComplete.NOT_SET == StorageService.instance.tokenMetadata.ringVersion
CommitLog.instance.executor.syncComplete.NOT_SET == StorageService.instance.totalCFs
CommitLog.instance.executor.syncComplete.NOT_SET == cfsInstance.compactionStrategyManager.compactionLogger.identifier
CommitLog.instance.executor.syncComplete.NOT_SET == cfsInstance.compactionStrategyManager.currentBoundaries.directoriesVersion
CommitLog.instance.executor.syncComplete.NOT_SET == cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.executor.syncComplete.NOT_SET == cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CommitLog.instance.executor.syncComplete.NOT_SET == cfsInstance.diskBoundaryManager.diskBoundaries.ringVersion
CommitLog.instance.executor.syncComplete.NOT_SET == cfsInstance.keyspace.TEST_FAIL_MV_LOCKS_COUNT
CommitLog.instance.executor.syncComplete.NOT_SET == cfsInstance.keyspace.replicationStrategy.lastInvalidatedVersion
CommitLog.instance.executor.syncComplete.NOT_SET == cfsInstance.readOrdering.current.running
CommitLog.instance.executor.syncComplete.NOT_SET == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == CommitLog.instance.segmentManager.availableSegment.ENTRY_OVERHEAD_SIZE
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == CommitLog.instance.segmentManager.availableSegment.SYNC_MARKER_SIZE
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.availableSegment.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.bufferPool.bufferSize
CommitLog.instance.segmentManager.allocatingFrom.idBase == CommitLog.instance.segmentManager.availableSegment.idBase
CommitLog.instance.segmentManager.allocatingFrom.nextId == CommitLog.instance.segmentManager.availableSegment.nextId
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == CommitLog.instance.segmentManager.availableSegment.replayLimitId
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == CommitLog.instance.segmentManager.availableSegment.lastSyncedOffset
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE == resultSetInstance.rows_FOR_ENCLOSING_USE
cfsInstance.compactionStrategyManager.isActive == cfsInstance.valid
cfsInstance.directories.metadata.isCompound == cfsInstance.metadata.isCompound
cfsInstance.directories.metadata.isCompound == cfsInstance.viewManager.baseTableMetadata.isCompound
cfsInstance.directories.metadata.isDense == cfsInstance.metadata.isDense
cfsInstance.directories.metadata.isDense == cfsInstance.viewManager.baseTableMetadata.isDense
cfsInstance.metadata.compactValueColumn.NO_POSITION == cfsInstance.metadata.compactValueColumn.position
CFMetadataInstance.allColumnFilter.isFetchAll == true
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK == 2
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == 4
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == 1
CFMetadataInstance.compactValueColumn.NO_POSITION == -1
CFMetadataInstance.compactValueColumn.comparisonOrder == 4611956916719281408L
CFMetadataInstance.compactValueColumn.hash == 0 || CFMetadataInstance.compactValueColumn.hash == 1376485651
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE == 48
CFMetadataInstance.compactValueColumn.name.prefixComparison == -693153616176873472L
CFMetadataInstance.compactValueColumn.type.isByteOrderComparable == false
CFMetadataInstance.isCounter == false
CFMetadataInstance.partitionColumns.regulars.complexIdx == 0 || CFMetadataInstance.partitionColumns.regulars.complexIdx == 1
CFMetadataInstance.partitionColumns.statics.complexIdx == 0 || CFMetadataInstance.partitionColumns.statics.complexIdx == 1
CFMetadataInstance.partitioner.HEAP_SIZE == 24
CFMetadataInstance.partitioner.MAXIMUM == 9223372036854775807L
CFMetadataInstance.partitioner.MINIMUM.token == -9223372036854775808L
CFMetadataInstance.resource.hash == -1493090398 || CFMetadataInstance.resource.hash == -1493090397
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == 65536
CommitLog.instance.MAX_MUTATION_SIZE == 2621440
CommitLog.instance.archiver.restorePointInTime == 4510987932000L
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS == 100
CommitLog.instance.executor.markerIntervalNanos == 1000000
CommitLog.instance.executor.pending == 0 || CommitLog.instance.executor.pending == 1
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == 12
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == 8
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == 5242880
CommitLog.instance.segmentManager.allocatingFrom.fd == 177 || CommitLog.instance.segmentManager.allocatingFrom.fd == 178 || CommitLog.instance.segmentManager.allocatingFrom.fd == 214
CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224507L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224508L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224509L
CommitLog.instance.segmentManager.allocatingFrom.idBase == 1731353224472L
CommitLog.instance.segmentManager.allocatingFrom.nextId == 37 || CommitLog.instance.segmentManager.allocatingFrom.nextId == 38 || CommitLog.instance.segmentManager.allocatingFrom.nextId == 39
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == 1731353224475L
CommitLog.instance.segmentManager.availableSegment.allocatePosition == 28
CommitLog.instance.segmentManager.availableSegment.fd == 178 || CommitLog.instance.segmentManager.availableSegment.fd == 182 || CommitLog.instance.segmentManager.availableSegment.fd == 214
CommitLog.instance.segmentManager.availableSegment.id == 1731353224508L || CommitLog.instance.segmentManager.availableSegment.id == 1731353224509L || CommitLog.instance.segmentManager.availableSegment.id == 1731353224510L
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == 20
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize == 3
CommitLog.instance.segmentManager.size == 10485760
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
("oneOf.java.jpp: SEQUENCE unimplemented" != null)
StorageService.instance.RING_DELAY == 30000
daikon.Quant.fuzzy.eq(StorageService.instance.traceProbability, 0.0)
cfsInstance.compactionStrategyManager.fanout == 10
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD == 32
cfsInstance.fileIndexGenerator == 0 || cfsInstance.fileIndexGenerator == 1
cfsInstance.indexManager.DEFAULT_PAGE_SIZE == 10000
cfsInstance.metadata.compactValueColumn.NO_POSITION == -1
cfsInstance.metadata.compactValueColumn.comparisonOrder == 4611956916719281408L
cfsInstance.metadata.compactValueColumn.hash == 1376485651
cfsInstance.metadata.resource.hash == -1493090398 || cfsInstance.metadata.resource.hash == -1493090397
cfsInstance.readOrdering.current.id == 0 || cfsInstance.readOrdering.current.id == 1 || cfsInstance.readOrdering.current.id == 2
cfsInstance.sampleLatencyNanos == 2500000000L
resultSetInstance.metadata.columnCount >= 1
daikon.Quant.eltsNotEqual(resultSetInstance.rows_FOR_ENCLOSING_USE, null)
daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) == 0 || daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) == 1 || daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) == 3
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != CFMetadataInstance.compactValueColumn.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > CFMetadataInstance.partitionColumns.statics.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > cfsInstance.fileIndexGenerator
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK >= cfsInstance.readOrdering.current.id
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != resultSetInstance.metadata.columnCount
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK != CFMetadataInstance.compactValueColumn.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > CFMetadataInstance.partitionColumns.statics.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > cfsInstance.fileIndexGenerator
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > cfsInstance.readOrdering.current.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK != CFMetadataInstance.compactValueColumn.hash
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK >= CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK >= CFMetadataInstance.partitionColumns.statics.complexIdx
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK > CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK >= CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK >= cfsInstance.fileIndexGenerator
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK > cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK <= resultSetInstance.metadata.columnCount
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.compactValueColumn.NO_POSITION < CFMetadataInstance.compactValueColumn.hash
CFMetadataInstance.compactValueColumn.NO_POSITION < CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.compactValueColumn.NO_POSITION < CFMetadataInstance.partitionColumns.statics.complexIdx
CFMetadataInstance.compactValueColumn.NO_POSITION > CFMetadataInstance.resource.hash
CFMetadataInstance.compactValueColumn.NO_POSITION < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.compactValueColumn.NO_POSITION < CommitLog.instance.executor.pending
CFMetadataInstance.compactValueColumn.NO_POSITION < CommitLog.instance.executor.written
CFMetadataInstance.compactValueColumn.NO_POSITION < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.compactValueColumn.NO_POSITION < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.compactValueColumn.NO_POSITION < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.compactValueColumn.NO_POSITION < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.compactValueColumn.NO_POSITION < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.compactValueColumn.NO_POSITION < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.compactValueColumn.NO_POSITION < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.compactValueColumn.NO_POSITION < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.compactValueColumn.NO_POSITION < cfsInstance.fileIndexGenerator
CFMetadataInstance.compactValueColumn.NO_POSITION > cfsInstance.metadata.resource.hash
CFMetadataInstance.compactValueColumn.NO_POSITION < cfsInstance.readOrdering.current.id
CFMetadataInstance.compactValueColumn.NO_POSITION < resultSetInstance.metadata.columnCount
CFMetadataInstance.compactValueColumn.NO_POSITION <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.compactValueColumn.comparisonOrder > CFMetadataInstance.compactValueColumn.hash
CFMetadataInstance.compactValueColumn.comparisonOrder > CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.compactValueColumn.comparisonOrder > CFMetadataInstance.partitionColumns.statics.complexIdx
CFMetadataInstance.compactValueColumn.comparisonOrder > CFMetadataInstance.resource.hash
CFMetadataInstance.compactValueColumn.comparisonOrder > CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.compactValueColumn.comparisonOrder > CommitLog.instance.executor.pending
CFMetadataInstance.compactValueColumn.comparisonOrder > CommitLog.instance.executor.written
CFMetadataInstance.compactValueColumn.comparisonOrder > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.compactValueColumn.comparisonOrder > CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.compactValueColumn.comparisonOrder > CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.compactValueColumn.comparisonOrder > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.compactValueColumn.comparisonOrder > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.compactValueColumn.comparisonOrder > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.compactValueColumn.comparisonOrder > CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.compactValueColumn.comparisonOrder > CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.compactValueColumn.comparisonOrder > cfsInstance.fileIndexGenerator
CFMetadataInstance.compactValueColumn.comparisonOrder > cfsInstance.metadata.resource.hash
CFMetadataInstance.compactValueColumn.comparisonOrder > cfsInstance.readOrdering.current.id
CFMetadataInstance.compactValueColumn.comparisonOrder > resultSetInstance.metadata.columnCount
CFMetadataInstance.compactValueColumn.comparisonOrder > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.compactValueColumn.hash != CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE
CFMetadataInstance.compactValueColumn.hash > CFMetadataInstance.compactValueColumn.name.prefixComparison
CFMetadataInstance.compactValueColumn.hash != CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.compactValueColumn.hash >= CFMetadataInstance.partitionColumns.statics.complexIdx
CFMetadataInstance.compactValueColumn.hash != CFMetadataInstance.partitioner.HEAP_SIZE
CFMetadataInstance.compactValueColumn.hash < CFMetadataInstance.partitioner.MAXIMUM
CFMetadataInstance.compactValueColumn.hash > CFMetadataInstance.partitioner.MINIMUM.token
CFMetadataInstance.compactValueColumn.hash > CFMetadataInstance.resource.hash
CFMetadataInstance.compactValueColumn.hash != CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE
CFMetadataInstance.compactValueColumn.hash != CommitLog.instance.MAX_MUTATION_SIZE
CFMetadataInstance.compactValueColumn.hash < CommitLog.instance.archiver.restorePointInTime
CFMetadataInstance.compactValueColumn.hash != CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS
CFMetadataInstance.compactValueColumn.hash < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.compactValueColumn.hash != CommitLog.instance.executor.markerIntervalNanos
CFMetadataInstance.compactValueColumn.hash >= CommitLog.instance.executor.pending
CFMetadataInstance.compactValueColumn.hash >= CommitLog.instance.executor.syncComplete.NOT_SET
CFMetadataInstance.compactValueColumn.hash != CommitLog.instance.executor.written
CFMetadataInstance.compactValueColumn.hash != CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CFMetadataInstance.compactValueColumn.hash != CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CFMetadataInstance.compactValueColumn.hash != CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.compactValueColumn.hash != CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CFMetadataInstance.compactValueColumn.hash != CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.compactValueColumn.hash < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.compactValueColumn.hash < CommitLog.instance.segmentManager.allocatingFrom.idBase
CFMetadataInstance.compactValueColumn.hash != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.compactValueColumn.hash != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.compactValueColumn.hash != CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.compactValueColumn.hash < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CFMetadataInstance.compactValueColumn.hash != CommitLog.instance.segmentManager.availableSegment.allocatePosition
CFMetadataInstance.compactValueColumn.hash != CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.compactValueColumn.hash < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.compactValueColumn.hash != CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CFMetadataInstance.compactValueColumn.hash != CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CFMetadataInstance.compactValueColumn.hash != CommitLog.instance.segmentManager.size
CFMetadataInstance.compactValueColumn.hash != StorageService.instance.RING_DELAY
CFMetadataInstance.compactValueColumn.hash != cfsInstance.compactionStrategyManager.fanout
CFMetadataInstance.compactValueColumn.hash != cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CFMetadataInstance.compactValueColumn.hash != cfsInstance.fileIndexGenerator
CFMetadataInstance.compactValueColumn.hash != cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CFMetadataInstance.compactValueColumn.hash > cfsInstance.metadata.compactValueColumn.NO_POSITION
CFMetadataInstance.compactValueColumn.hash < cfsInstance.metadata.compactValueColumn.comparisonOrder
CFMetadataInstance.compactValueColumn.hash > cfsInstance.metadata.resource.hash
CFMetadataInstance.compactValueColumn.hash != cfsInstance.readOrdering.current.id
CFMetadataInstance.compactValueColumn.hash < cfsInstance.sampleLatencyNanos
CFMetadataInstance.compactValueColumn.hash != resultSetInstance.metadata.columnCount
CFMetadataInstance.compactValueColumn.hash >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE > CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE > CFMetadataInstance.partitionColumns.statics.complexIdx
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE > CFMetadataInstance.resource.hash
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE > CommitLog.instance.executor.pending
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE < CommitLog.instance.executor.written
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE != CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE > cfsInstance.fileIndexGenerator
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE > cfsInstance.metadata.resource.hash
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE > cfsInstance.readOrdering.current.id
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE > resultSetInstance.metadata.columnCount
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.compactValueColumn.name.prefixComparison < CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.compactValueColumn.name.prefixComparison < CFMetadataInstance.partitionColumns.statics.complexIdx
CFMetadataInstance.compactValueColumn.name.prefixComparison < CFMetadataInstance.resource.hash
CFMetadataInstance.compactValueColumn.name.prefixComparison < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.compactValueColumn.name.prefixComparison < CommitLog.instance.executor.pending
CFMetadataInstance.compactValueColumn.name.prefixComparison < CommitLog.instance.executor.written
CFMetadataInstance.compactValueColumn.name.prefixComparison < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.compactValueColumn.name.prefixComparison < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.compactValueColumn.name.prefixComparison < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.compactValueColumn.name.prefixComparison < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.compactValueColumn.name.prefixComparison < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.compactValueColumn.name.prefixComparison < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.compactValueColumn.name.prefixComparison < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.compactValueColumn.name.prefixComparison < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.compactValueColumn.name.prefixComparison < cfsInstance.fileIndexGenerator
CFMetadataInstance.compactValueColumn.name.prefixComparison < cfsInstance.metadata.resource.hash
CFMetadataInstance.compactValueColumn.name.prefixComparison < cfsInstance.readOrdering.current.id
CFMetadataInstance.compactValueColumn.name.prefixComparison < resultSetInstance.metadata.columnCount
CFMetadataInstance.compactValueColumn.name.prefixComparison < daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.partitionColumns.regulars.complexIdx != CFMetadataInstance.partitionColumns.statics.complexIdx
CFMetadataInstance.partitionColumns.regulars.complexIdx < CFMetadataInstance.partitioner.HEAP_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CFMetadataInstance.partitioner.MAXIMUM
CFMetadataInstance.partitionColumns.regulars.complexIdx > CFMetadataInstance.partitioner.MINIMUM.token
CFMetadataInstance.partitionColumns.regulars.complexIdx > CFMetadataInstance.resource.hash
CFMetadataInstance.partitionColumns.regulars.complexIdx < CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.MAX_MUTATION_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.archiver.restorePointInTime
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.markerIntervalNanos
CFMetadataInstance.partitionColumns.regulars.complexIdx >= CommitLog.instance.executor.syncComplete.NOT_SET
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.written
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.idBase
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitionColumns.regulars.complexIdx < StorageService.instance.RING_DELAY
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.compactionStrategyManager.fanout
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx > cfsInstance.metadata.compactValueColumn.NO_POSITION
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.metadata.compactValueColumn.comparisonOrder
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.metadata.compactValueColumn.hash
CFMetadataInstance.partitionColumns.regulars.complexIdx > cfsInstance.metadata.resource.hash
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.sampleLatencyNanos
CFMetadataInstance.partitionColumns.regulars.complexIdx <= resultSetInstance.metadata.columnCount
CFMetadataInstance.partitionColumns.statics.complexIdx < CFMetadataInstance.partitioner.HEAP_SIZE
CFMetadataInstance.partitionColumns.statics.complexIdx < CFMetadataInstance.partitioner.MAXIMUM
CFMetadataInstance.partitionColumns.statics.complexIdx > CFMetadataInstance.partitioner.MINIMUM.token
CFMetadataInstance.partitionColumns.statics.complexIdx > CFMetadataInstance.resource.hash
CFMetadataInstance.partitionColumns.statics.complexIdx < CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.MAX_MUTATION_SIZE
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.archiver.restorePointInTime
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.markerIntervalNanos
CFMetadataInstance.partitionColumns.statics.complexIdx >= CommitLog.instance.executor.syncComplete.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.written
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.idBase
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitionColumns.statics.complexIdx < StorageService.instance.RING_DELAY
CFMetadataInstance.partitionColumns.statics.complexIdx < cfsInstance.compactionStrategyManager.fanout
CFMetadataInstance.partitionColumns.statics.complexIdx < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CFMetadataInstance.partitionColumns.statics.complexIdx <= cfsInstance.fileIndexGenerator
CFMetadataInstance.partitionColumns.statics.complexIdx < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CFMetadataInstance.partitionColumns.statics.complexIdx > cfsInstance.metadata.compactValueColumn.NO_POSITION
CFMetadataInstance.partitionColumns.statics.complexIdx < cfsInstance.metadata.compactValueColumn.comparisonOrder
CFMetadataInstance.partitionColumns.statics.complexIdx < cfsInstance.metadata.compactValueColumn.hash
CFMetadataInstance.partitionColumns.statics.complexIdx > cfsInstance.metadata.resource.hash
CFMetadataInstance.partitionColumns.statics.complexIdx <= cfsInstance.readOrdering.current.id
CFMetadataInstance.partitionColumns.statics.complexIdx < cfsInstance.sampleLatencyNanos
CFMetadataInstance.partitionColumns.statics.complexIdx <= resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.HEAP_SIZE > CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.HEAP_SIZE > CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.executor.written
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.HEAP_SIZE != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.HEAP_SIZE != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.HEAP_SIZE > cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.HEAP_SIZE > cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.HEAP_SIZE > cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.HEAP_SIZE > resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.HEAP_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.MAXIMUM > CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.written
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.MAXIMUM > resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.MAXIMUM > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.MINIMUM.token < CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.written
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.MINIMUM.token < resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.MINIMUM.token < daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.resource.hash < CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE
CFMetadataInstance.resource.hash < CommitLog.instance.MAX_MUTATION_SIZE
CFMetadataInstance.resource.hash < CommitLog.instance.archiver.restorePointInTime
CFMetadataInstance.resource.hash < CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS
CFMetadataInstance.resource.hash < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.resource.hash < CommitLog.instance.executor.markerIntervalNanos
CFMetadataInstance.resource.hash < CommitLog.instance.executor.pending
CFMetadataInstance.resource.hash < CommitLog.instance.executor.syncComplete.CANCELLED
CFMetadataInstance.resource.hash < CommitLog.instance.executor.written
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.idBase
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.size
CFMetadataInstance.resource.hash < StorageService.instance.RING_DELAY
CFMetadataInstance.resource.hash < cfsInstance.compactionStrategyManager.fanout
CFMetadataInstance.resource.hash < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CFMetadataInstance.resource.hash < cfsInstance.fileIndexGenerator
CFMetadataInstance.resource.hash < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CFMetadataInstance.resource.hash < cfsInstance.metadata.compactValueColumn.NO_POSITION
CFMetadataInstance.resource.hash < cfsInstance.metadata.compactValueColumn.comparisonOrder
CFMetadataInstance.resource.hash < cfsInstance.metadata.compactValueColumn.hash
CFMetadataInstance.resource.hash >= cfsInstance.metadata.resource.hash
CFMetadataInstance.resource.hash < cfsInstance.readOrdering.current.id
CFMetadataInstance.resource.hash < cfsInstance.sampleLatencyNanos
CFMetadataInstance.resource.hash < resultSetInstance.metadata.columnCount
CFMetadataInstance.resource.hash < daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.executor.pending
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.executor.written
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > cfsInstance.fileIndexGenerator
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > cfsInstance.metadata.resource.hash
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > cfsInstance.readOrdering.current.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > resultSetInstance.metadata.columnCount
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.executor.pending
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.executor.written
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.MAX_MUTATION_SIZE > cfsInstance.fileIndexGenerator
CommitLog.instance.MAX_MUTATION_SIZE > cfsInstance.metadata.resource.hash
CommitLog.instance.MAX_MUTATION_SIZE > cfsInstance.readOrdering.current.id
CommitLog.instance.MAX_MUTATION_SIZE > resultSetInstance.metadata.columnCount
CommitLog.instance.MAX_MUTATION_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.archiver.restorePointInTime < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.executor.pending
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.executor.written
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.archiver.restorePointInTime > cfsInstance.fileIndexGenerator
CommitLog.instance.archiver.restorePointInTime > cfsInstance.metadata.resource.hash
CommitLog.instance.archiver.restorePointInTime > cfsInstance.readOrdering.current.id
CommitLog.instance.archiver.restorePointInTime % resultSetInstance.metadata.columnCount == 0
CommitLog.instance.archiver.restorePointInTime > resultSetInstance.metadata.columnCount
CommitLog.instance.archiver.restorePointInTime > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > CommitLog.instance.executor.pending
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.executor.written
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS != CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.markerIntervalNanos
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.pending
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.syncComplete.NOT_SET
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.written
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.size
CommitLog.instance.executor.lastSyncedAt > StorageService.instance.RING_DELAY
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.lastSyncedAt > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.lastSyncedAt > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.lastSyncedAt > cfsInstance.metadata.compactValueColumn.NO_POSITION
CommitLog.instance.executor.lastSyncedAt < cfsInstance.metadata.compactValueColumn.comparisonOrder
CommitLog.instance.executor.lastSyncedAt > cfsInstance.metadata.compactValueColumn.hash
CommitLog.instance.executor.lastSyncedAt > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.lastSyncedAt > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.lastSyncedAt > cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.lastSyncedAt > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.lastSyncedAt > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.executor.pending
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.executor.written
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.markerIntervalNanos > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.markerIntervalNanos > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.markerIntervalNanos > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.markerIntervalNanos > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.markerIntervalNanos > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.pending >= CommitLog.instance.executor.syncComplete.NOT_SET
CommitLog.instance.executor.pending < CommitLog.instance.executor.written
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.pending < StorageService.instance.RING_DELAY
CommitLog.instance.executor.pending < cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.pending < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.pending <= cfsInstance.fileIndexGenerator
CommitLog.instance.executor.pending < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.pending > cfsInstance.metadata.compactValueColumn.NO_POSITION
CommitLog.instance.executor.pending < cfsInstance.metadata.compactValueColumn.comparisonOrder
CommitLog.instance.executor.pending < cfsInstance.metadata.compactValueColumn.hash
CommitLog.instance.executor.pending > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.pending <= cfsInstance.readOrdering.current.id
CommitLog.instance.executor.pending < cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.pending <= resultSetInstance.metadata.columnCount
CommitLog.instance.executor.syncComplete.CANCELLED > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.syncComplete.CANCELLED <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.executor.written
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.syncComplete.NOT_SET <= cfsInstance.fileIndexGenerator
CommitLog.instance.executor.syncComplete.NOT_SET <= cfsInstance.readOrdering.current.id
CommitLog.instance.executor.syncComplete.NOT_SET < resultSetInstance.metadata.columnCount
CommitLog.instance.executor.syncComplete.NOT_SET <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.written != CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.written != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.written != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.written < StorageService.instance.RING_DELAY
CommitLog.instance.executor.written > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.written > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.written > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.written < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.written > cfsInstance.metadata.compactValueColumn.NO_POSITION
CommitLog.instance.executor.written < cfsInstance.metadata.compactValueColumn.comparisonOrder
CommitLog.instance.executor.written < cfsInstance.metadata.compactValueColumn.hash
CommitLog.instance.executor.written > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.written > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.written < cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.written > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.written > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE != resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 8 == 0
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition >= CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.metadata.compactValueColumn.NO_POSITION
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.metadata.compactValueColumn.comparisonOrder
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.metadata.compactValueColumn.hash
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.fd != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.fd != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.fd != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.fd < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.fd < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.metadata.compactValueColumn.NO_POSITION
CommitLog.instance.segmentManager.allocatingFrom.fd < cfsInstance.metadata.compactValueColumn.comparisonOrder
CommitLog.instance.segmentManager.allocatingFrom.fd < cfsInstance.metadata.compactValueColumn.hash
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.fd < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.fd > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.fd > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.id < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.id > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.metadata.compactValueColumn.NO_POSITION
CommitLog.instance.segmentManager.allocatingFrom.id < cfsInstance.metadata.compactValueColumn.comparisonOrder
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.metadata.compactValueColumn.hash
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.id > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.id > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.idBase < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.idBase > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.idBase > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset >= CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset >= CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.metadata.compactValueColumn.NO_POSITION
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.metadata.compactValueColumn.comparisonOrder
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.metadata.compactValueColumn.hash
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset >= CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.metadata.compactValueColumn.NO_POSITION
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.metadata.compactValueColumn.comparisonOrder
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.metadata.compactValueColumn.hash
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.nextId > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.nextId > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.nextId > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.nextId < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.metadata.compactValueColumn.NO_POSITION
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.metadata.compactValueColumn.comparisonOrder
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.metadata.compactValueColumn.hash
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.nextId > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.nextId > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.availableSegment.allocatePosition > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.allocatePosition > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.allocatePosition > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.allocatePosition > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.allocatePosition > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.fd < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.availableSegment.fd > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.availableSegment.fd > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.availableSegment.fd < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.fd < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.fd < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.metadata.compactValueColumn.NO_POSITION
CommitLog.instance.segmentManager.availableSegment.fd < cfsInstance.metadata.compactValueColumn.comparisonOrder
CommitLog.instance.segmentManager.availableSegment.fd < cfsInstance.metadata.compactValueColumn.hash
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.fd < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.availableSegment.fd > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.fd > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.id > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.metadata.compactValueColumn.NO_POSITION
CommitLog.instance.segmentManager.availableSegment.id < cfsInstance.metadata.compactValueColumn.comparisonOrder
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.metadata.compactValueColumn.hash
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.availableSegment.id > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.id > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset >= resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.size > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.size > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.size > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.size > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.size > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
daikon.Quant.subsetOf(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE, resultSetInstance.rows_FOR_ENCLOSING_USE)
StorageService.instance.RING_DELAY > cfsInstance.fileIndexGenerator
StorageService.instance.RING_DELAY > cfsInstance.metadata.resource.hash
StorageService.instance.RING_DELAY > cfsInstance.readOrdering.current.id
StorageService.instance.RING_DELAY % resultSetInstance.metadata.columnCount == 0
StorageService.instance.RING_DELAY > resultSetInstance.metadata.columnCount
StorageService.instance.RING_DELAY > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.compactionStrategyManager.fanout > cfsInstance.fileIndexGenerator
cfsInstance.compactionStrategyManager.fanout > cfsInstance.metadata.resource.hash
cfsInstance.compactionStrategyManager.fanout > cfsInstance.readOrdering.current.id
cfsInstance.compactionStrategyManager.fanout != resultSetInstance.metadata.columnCount
cfsInstance.compactionStrategyManager.fanout > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > cfsInstance.fileIndexGenerator
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > cfsInstance.metadata.resource.hash
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > cfsInstance.readOrdering.current.id
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > resultSetInstance.metadata.columnCount
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.fileIndexGenerator < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
cfsInstance.fileIndexGenerator > cfsInstance.metadata.compactValueColumn.NO_POSITION
cfsInstance.fileIndexGenerator < cfsInstance.metadata.compactValueColumn.comparisonOrder
cfsInstance.fileIndexGenerator < cfsInstance.metadata.compactValueColumn.hash
cfsInstance.fileIndexGenerator > cfsInstance.metadata.resource.hash
cfsInstance.fileIndexGenerator < cfsInstance.sampleLatencyNanos
cfsInstance.fileIndexGenerator <= resultSetInstance.metadata.columnCount
cfsInstance.fileIndexGenerator != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > cfsInstance.metadata.resource.hash
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > cfsInstance.readOrdering.current.id
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > resultSetInstance.metadata.columnCount
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.metadata.compactValueColumn.NO_POSITION > cfsInstance.metadata.resource.hash
cfsInstance.metadata.compactValueColumn.NO_POSITION < cfsInstance.readOrdering.current.id
cfsInstance.metadata.compactValueColumn.NO_POSITION < resultSetInstance.metadata.columnCount
cfsInstance.metadata.compactValueColumn.NO_POSITION <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
cfsInstance.metadata.compactValueColumn.comparisonOrder > cfsInstance.metadata.resource.hash
cfsInstance.metadata.compactValueColumn.comparisonOrder > cfsInstance.readOrdering.current.id
cfsInstance.metadata.compactValueColumn.comparisonOrder > resultSetInstance.metadata.columnCount
cfsInstance.metadata.compactValueColumn.comparisonOrder > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.metadata.compactValueColumn.hash > cfsInstance.metadata.resource.hash
cfsInstance.metadata.compactValueColumn.hash > cfsInstance.readOrdering.current.id
cfsInstance.metadata.compactValueColumn.hash > resultSetInstance.metadata.columnCount
cfsInstance.metadata.compactValueColumn.hash > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.metadata.resource.hash < cfsInstance.readOrdering.current.id
cfsInstance.metadata.resource.hash < cfsInstance.sampleLatencyNanos
cfsInstance.metadata.resource.hash < resultSetInstance.metadata.columnCount
cfsInstance.metadata.resource.hash < daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
cfsInstance.readOrdering.current.id < cfsInstance.sampleLatencyNanos
cfsInstance.readOrdering.current.id >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
cfsInstance.sampleLatencyNanos > resultSetInstance.metadata.columnCount
cfsInstance.sampleLatencyNanos > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
resultSetInstance.metadata.columnCount >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitionColumns.regulars.complexIdx - CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.id + 1.731353224508E12 == 0
CFMetadataInstance.partitionColumns.regulars.complexIdx - CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.availableSegment.id + 1.731353224509E12 == 0
CFMetadataInstance.partitionColumns.regulars.complexIdx + CommitLog.instance.executor.pending - cfsInstance.metadata.resource.hash - 1493090399 == 0
2 * CFMetadataInstance.partitionColumns.regulars.complexIdx - CommitLog.instance.segmentManager.allocatingFrom.id + cfsInstance.fileIndexGenerator + 1.731353224506E12 == 0
CFMetadataInstance.partitionColumns.regulars.complexIdx - CommitLog.instance.segmentManager.allocatingFrom.nextId + cfsInstance.metadata.resource.hash + 1493090435 == 0
2 * CFMetadataInstance.partitionColumns.regulars.complexIdx - CommitLog.instance.segmentManager.availableSegment.id + cfsInstance.fileIndexGenerator + 1.731353224507E12 == 0
CFMetadataInstance.partitionColumns.statics.complexIdx + CommitLog.instance.executor.pending + CommitLog.instance.segmentManager.allocatingFrom.id - 1.731353224509E12 == 0
CFMetadataInstance.partitionColumns.statics.complexIdx + CommitLog.instance.executor.pending + CommitLog.instance.segmentManager.availableSegment.id - 1.73135322451E12 == 0
CFMetadataInstance.partitionColumns.statics.complexIdx - CommitLog.instance.executor.pending + cfsInstance.metadata.resource.hash + 1493090398 == 0
2 * CFMetadataInstance.partitionColumns.statics.complexIdx + CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.fileIndexGenerator - 1.731353224508E12 == 0
CFMetadataInstance.partitionColumns.statics.complexIdx + CommitLog.instance.segmentManager.allocatingFrom.nextId - cfsInstance.metadata.resource.hash - 1493090436 == 0
2 * CFMetadataInstance.partitionColumns.statics.complexIdx + CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.fileIndexGenerator - 1.731353224509E12 == 0
37 * CFMetadataInstance.resource.hash - 37 * CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.fd + 5.524434494E10 == 0
CFMetadataInstance.resource.hash - CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.id + 1.732846314906E12 == 0
CFMetadataInstance.resource.hash - CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.nextId + 1493090436 == 0
36 * CFMetadataInstance.resource.hash - 36 * CommitLog.instance.executor.pending + CommitLog.instance.segmentManager.availableSegment.fd + 5.375125415E10 == 0
CFMetadataInstance.resource.hash - CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.availableSegment.id + 1.732846314907E12 == 0
CFMetadataInstance.resource.hash - CommitLog.instance.executor.pending + cfsInstance.fileIndexGenerator + 1493090397 == 0
2 * CFMetadataInstance.resource.hash - CommitLog.instance.segmentManager.allocatingFrom.id + cfsInstance.fileIndexGenerator + 1.734339405302E12 == 0
2 * CFMetadataInstance.resource.hash - CommitLog.instance.segmentManager.allocatingFrom.nextId + cfsInstance.fileIndexGenerator + 2.986180832E9 == 0
CFMetadataInstance.resource.hash - CommitLog.instance.segmentManager.allocatingFrom.nextId + cfsInstance.metadata.resource.hash + 2.986180833E9 == 0
2 * CFMetadataInstance.resource.hash - CommitLog.instance.segmentManager.availableSegment.id + cfsInstance.fileIndexGenerator + 1.734339405303E12 == 0
73 * CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.fd + 37 * CommitLog.instance.segmentManager.allocatingFrom.id - 6.4060069306655E13 == 0
73 * CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.fd + 37 * CommitLog.instance.segmentManager.availableSegment.id - 6.4060069306692E13 == 0
37 * CommitLog.instance.executor.pending + CommitLog.instance.segmentManager.allocatingFrom.fd - 37 * cfsInstance.metadata.resource.hash - 5.524434494E10 == 0
CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.fileIndexGenerator + 1.731353224508E12 == 0
CommitLog.instance.executor.pending + CommitLog.instance.segmentManager.allocatingFrom.nextId - cfsInstance.metadata.resource.hash - 1493090436 == 0
36 * CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.availableSegment.fd - 36 * cfsInstance.metadata.resource.hash - 5.375125415E10 == 0
CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.fileIndexGenerator + 1.731353224509E12 == 0
CommitLog.instance.executor.pending - cfsInstance.fileIndexGenerator - cfsInstance.metadata.resource.hash - 1493090397 == 0
CommitLog.instance.executor.pending + 2 * cfsInstance.metadata.resource.hash + cfsInstance.readOrdering.current.id + 2.986180794E9 == 0
CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.fileIndexGenerator - 2 * cfsInstance.metadata.resource.hash - 1.734339405302E12 == 0
CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.readOrdering.current.id - daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224505E12 == 0
CommitLog.instance.segmentManager.allocatingFrom.nextId - cfsInstance.fileIndexGenerator - 2 * cfsInstance.metadata.resource.hash - 2.986180832E9 == 0
CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.fileIndexGenerator - 2 * cfsInstance.metadata.resource.hash - 1.734339405303E12 == 0
CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.readOrdering.current.id - daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224506E12 == 0
===========================================================================
org.apache.cassandra.cql3.SimpleQueryTest@testDistinct-54916894:::dump
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.keyValidator.isByteOrderComparable
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.allocatingFrom.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.availableSegment.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.joinRing
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.useStrictConsistency
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionSpaceCheck
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.enabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.partitionSSTablesByTokenRange
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_ENABLED
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.isEnabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.shouldDefragment
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.supportsEarlyOpen
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.data.loadsstables
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.directories.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.keyspace.initialized
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.allColumnFilter.isFetchAll
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.keyValidator.isByteOrderComparable
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.viewManager.baseTableMetadata.isCompound
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MIN_THRESHOLD
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CFMetadataInstance.partitioner.MINIMUM.serialVersionUID
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.executor.syncComplete.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.managerThreadWaitQueue.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.segmentPrepared.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == StorageService.instance.threadCounter
CFMetadataInstance.isCounter == CFMetadataInstance.isDense
CFMetadataInstance.isCounter == CFMetadataInstance.isIndex
CFMetadataInstance.isCounter == CFMetadataInstance.isSuper
CFMetadataInstance.isCounter == CFMetadataInstance.isView
CFMetadataInstance.isCounter == CFMetadataInstance.partitioner.partitionOrdering.isByteOrderComparable
CFMetadataInstance.isCounter == CommitLog.instance.executor.shutdown
CFMetadataInstance.isCounter == CommitLog.instance.segmentManager.shutdown
CFMetadataInstance.isCounter == StorageService.instance.allowSimultaneousMoves
CFMetadataInstance.isCounter == StorageService.instance.authSetupCalled
CFMetadataInstance.isCounter == StorageService.instance.authSetupComplete
CFMetadataInstance.isCounter == StorageService.instance.gossipActive
CFMetadataInstance.isCounter == StorageService.instance.initialized
CFMetadataInstance.isCounter == StorageService.instance.isBootstrapMode
CFMetadataInstance.isCounter == StorageService.instance.isDecommissioning
CFMetadataInstance.isCounter == StorageService.instance.isRebuilding
CFMetadataInstance.isCounter == StorageService.instance.isShutdown
CFMetadataInstance.isCounter == StorageService.instance.isSurveyMode
CFMetadataInstance.isCounter == StorageService.instance.joined
CFMetadataInstance.isCounter == StorageService.instance.replacing
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.compactionLogger.enabled
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.currentBoundaries.isInvalid
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.diskBoundaryManager.diskBoundaries.isInvalid
CFMetadataInstance.isCounter == cfsInstance.keyspace.TEST_FAIL_WRITES
CFMetadataInstance.isCounter == cfsInstance.keyspace.viewManager.enableCoordinatorBatchlog
CFMetadataInstance.isCounter == cfsInstance.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.metric.aliasFactory.isIndex
CFMetadataInstance.isCounter == cfsInstance.metric.factory.isIndex
CFMetadataInstance.isCounter == cfsInstance.readOrdering.current.isBlocking
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isDense
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isView
CFMetadataInstance.partitioner.HEAP_SIZE == StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.HEAP_SIZE == StorageService.instance.valueFactory.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.HEAP_SIZE == cfsInstance.metadata.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.MAXIMUM == StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CFMetadataInstance.partitioner.MAXIMUM == StorageService.instance.valueFactory.partitioner.MAXIMUM
CFMetadataInstance.partitioner.MAXIMUM == cfsInstance.metadata.partitioner.MAXIMUM
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == CommitLog.instance.configuration.encryptionContext.chunkLength
CommitLog.instance.executor.markerIntervalNanos == CommitLog.instance.executor.syncIntervalNanos
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.managerThreadWaitQueue.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.segmentPrepared.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.keyspace.writeOrder.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.readOrdering.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)-1
CommitLog.instance.executor.syncComplete.NOT_SET == CommitLog.instance.segmentManager.bufferPool.usedBuffers
CommitLog.instance.executor.syncComplete.NOT_SET == CommitLog.instance.segmentManager.managerThreadWaitQueue.NOT_SET
CommitLog.instance.executor.syncComplete.NOT_SET == CommitLog.instance.segmentManager.segmentPrepared.NOT_SET
CommitLog.instance.executor.syncComplete.NOT_SET == QueryProcessor.instance.lastMinuteEvictionsCount
CommitLog.instance.executor.syncComplete.NOT_SET == QueryProcessor.instance.thriftLastMinuteEvictionsCount
CommitLog.instance.executor.syncComplete.NOT_SET == StorageService.instance.legacyProgressSupport.notificationSerialNumber
CommitLog.instance.executor.syncComplete.NOT_SET == StorageService.instance.nextRepairCommand
CommitLog.instance.executor.syncComplete.NOT_SET == StorageService.instance.progressSupport.notificationSerialNumber
CommitLog.instance.executor.syncComplete.NOT_SET == StorageService.instance.remainingCFs
CommitLog.instance.executor.syncComplete.NOT_SET == StorageService.instance.tokenMetadata.ringVersion
CommitLog.instance.executor.syncComplete.NOT_SET == StorageService.instance.totalCFs
CommitLog.instance.executor.syncComplete.NOT_SET == cfsInstance.compactionStrategyManager.compactionLogger.identifier
CommitLog.instance.executor.syncComplete.NOT_SET == cfsInstance.compactionStrategyManager.currentBoundaries.directoriesVersion
CommitLog.instance.executor.syncComplete.NOT_SET == cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.executor.syncComplete.NOT_SET == cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CommitLog.instance.executor.syncComplete.NOT_SET == cfsInstance.diskBoundaryManager.diskBoundaries.ringVersion
CommitLog.instance.executor.syncComplete.NOT_SET == cfsInstance.keyspace.TEST_FAIL_MV_LOCKS_COUNT
CommitLog.instance.executor.syncComplete.NOT_SET == cfsInstance.keyspace.replicationStrategy.lastInvalidatedVersion
CommitLog.instance.executor.syncComplete.NOT_SET == cfsInstance.readOrdering.current.running
CommitLog.instance.executor.syncComplete.NOT_SET == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == CommitLog.instance.segmentManager.availableSegment.ENTRY_OVERHEAD_SIZE
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == CommitLog.instance.segmentManager.availableSegment.SYNC_MARKER_SIZE
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.availableSegment.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.bufferPool.bufferSize
CommitLog.instance.segmentManager.allocatingFrom.idBase == CommitLog.instance.segmentManager.availableSegment.idBase
CommitLog.instance.segmentManager.allocatingFrom.nextId == CommitLog.instance.segmentManager.availableSegment.nextId
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == CommitLog.instance.segmentManager.availableSegment.replayLimitId
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == CommitLog.instance.segmentManager.availableSegment.lastSyncedOffset
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE == resultSetInstance.rows_FOR_ENCLOSING_USE
cfsInstance.compactionStrategyManager.isActive == cfsInstance.valid
CFMetadataInstance.allColumnFilter.isFetchAll == true
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK == 2
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == 4
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == 1
CFMetadataInstance.isCounter == false
CFMetadataInstance.partitionColumns.statics.complexIdx == 0 || CFMetadataInstance.partitionColumns.statics.complexIdx == 1
CFMetadataInstance.partitioner.HEAP_SIZE == 24
CFMetadataInstance.partitioner.MAXIMUM == 9223372036854775807L
CFMetadataInstance.partitioner.MINIMUM.token == -9223372036854775808L
CFMetadataInstance.resource.hash == -1493090402 || CFMetadataInstance.resource.hash == -1493090401
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == 65536
CommitLog.instance.MAX_MUTATION_SIZE == 2621440
CommitLog.instance.archiver.restorePointInTime == 4510987932000L
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS == 100
CommitLog.instance.executor.markerIntervalNanos == 1000000
CommitLog.instance.executor.pending == 0 || CommitLog.instance.executor.pending == 1 || CommitLog.instance.executor.pending == 2
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == 12
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == 8
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == 5242880
CommitLog.instance.segmentManager.allocatingFrom.fd == 180 || CommitLog.instance.segmentManager.allocatingFrom.fd == 181 || CommitLog.instance.segmentManager.allocatingFrom.fd == 254
CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224499L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224500L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224501L
CommitLog.instance.segmentManager.allocatingFrom.idBase == 1731353224472L
CommitLog.instance.segmentManager.allocatingFrom.nextId == 29 || CommitLog.instance.segmentManager.allocatingFrom.nextId == 30 || CommitLog.instance.segmentManager.allocatingFrom.nextId == 31
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == 1731353224475L
CommitLog.instance.segmentManager.availableSegment.allocatePosition == 28
CommitLog.instance.segmentManager.availableSegment.fd == 181 || CommitLog.instance.segmentManager.availableSegment.fd == 215 || CommitLog.instance.segmentManager.availableSegment.fd == 254
CommitLog.instance.segmentManager.availableSegment.id == 1731353224500L || CommitLog.instance.segmentManager.availableSegment.id == 1731353224501L || CommitLog.instance.segmentManager.availableSegment.id == 1731353224502L
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == 20
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize == 3
CommitLog.instance.segmentManager.size == 10485760 || CommitLog.instance.segmentManager.size == 15728640
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
("oneOf.java.jpp: SEQUENCE unimplemented" != null)
StorageService.instance.RING_DELAY == 30000
daikon.Quant.fuzzy.eq(StorageService.instance.traceProbability, 0.0)
cfsInstance.compactionStrategyManager.fanout == 10
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD == 32
cfsInstance.indexManager.DEFAULT_PAGE_SIZE == 10000
cfsInstance.metadata.resource.hash == -1493090402 || cfsInstance.metadata.resource.hash == -1493090401
cfsInstance.readOrdering.current.id >= 0
cfsInstance.sampleLatencyNanos == 2500000000L
resultSetInstance.metadata.columnCount >= 1
daikon.Quant.eltsNotEqual(resultSetInstance.rows_FOR_ENCLOSING_USE, null)
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > CFMetadataInstance.partitionColumns.statics.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK >= CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.size
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != resultSetInstance.metadata.columnCount
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > CFMetadataInstance.partitionColumns.statics.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.size
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > cfsInstance.fileIndexGenerator
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK >= cfsInstance.readOrdering.current.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK >= CFMetadataInstance.partitionColumns.statics.complexIdx
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK > CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.size
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK > cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK <= resultSetInstance.metadata.columnCount
CFMetadataInstance.partitionColumns.statics.complexIdx < CFMetadataInstance.partitioner.HEAP_SIZE
CFMetadataInstance.partitionColumns.statics.complexIdx < CFMetadataInstance.partitioner.MAXIMUM
CFMetadataInstance.partitionColumns.statics.complexIdx > CFMetadataInstance.partitioner.MINIMUM.token
CFMetadataInstance.partitionColumns.statics.complexIdx > CFMetadataInstance.resource.hash
CFMetadataInstance.partitionColumns.statics.complexIdx < CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.MAX_MUTATION_SIZE
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.archiver.restorePointInTime
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.markerIntervalNanos
CFMetadataInstance.partitionColumns.statics.complexIdx >= CommitLog.instance.executor.syncComplete.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.written
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.idBase
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitionColumns.statics.complexIdx < StorageService.instance.RING_DELAY
CFMetadataInstance.partitionColumns.statics.complexIdx < cfsInstance.compactionStrategyManager.fanout
CFMetadataInstance.partitionColumns.statics.complexIdx < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CFMetadataInstance.partitionColumns.statics.complexIdx <= cfsInstance.fileIndexGenerator
CFMetadataInstance.partitionColumns.statics.complexIdx < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CFMetadataInstance.partitionColumns.statics.complexIdx > cfsInstance.metadata.resource.hash
CFMetadataInstance.partitionColumns.statics.complexIdx <= cfsInstance.readOrdering.current.id
CFMetadataInstance.partitionColumns.statics.complexIdx < cfsInstance.sampleLatencyNanos
CFMetadataInstance.partitionColumns.statics.complexIdx <= resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.HEAP_SIZE > CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.HEAP_SIZE > CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.executor.written
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.HEAP_SIZE != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.HEAP_SIZE != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.HEAP_SIZE > cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.HEAP_SIZE > cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.HEAP_SIZE > cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.HEAP_SIZE > resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.HEAP_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.MAXIMUM > CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.written
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.MAXIMUM > resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.MAXIMUM > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.MINIMUM.token < CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.written
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.MINIMUM.token < resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.MINIMUM.token < daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.resource.hash < CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE
CFMetadataInstance.resource.hash < CommitLog.instance.MAX_MUTATION_SIZE
CFMetadataInstance.resource.hash < CommitLog.instance.archiver.restorePointInTime
CFMetadataInstance.resource.hash < CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS
CFMetadataInstance.resource.hash < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.resource.hash < CommitLog.instance.executor.markerIntervalNanos
CFMetadataInstance.resource.hash < CommitLog.instance.executor.pending
CFMetadataInstance.resource.hash < CommitLog.instance.executor.syncComplete.CANCELLED
CFMetadataInstance.resource.hash < CommitLog.instance.executor.written
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.idBase
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.size
CFMetadataInstance.resource.hash < StorageService.instance.RING_DELAY
CFMetadataInstance.resource.hash < cfsInstance.compactionStrategyManager.fanout
CFMetadataInstance.resource.hash < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CFMetadataInstance.resource.hash < cfsInstance.fileIndexGenerator
CFMetadataInstance.resource.hash < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CFMetadataInstance.resource.hash >= cfsInstance.metadata.resource.hash
CFMetadataInstance.resource.hash < cfsInstance.readOrdering.current.id
CFMetadataInstance.resource.hash < cfsInstance.sampleLatencyNanos
CFMetadataInstance.resource.hash < resultSetInstance.metadata.columnCount
CFMetadataInstance.resource.hash < daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.executor.pending
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.executor.written
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.size
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > cfsInstance.fileIndexGenerator
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > cfsInstance.metadata.resource.hash
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > cfsInstance.readOrdering.current.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > resultSetInstance.metadata.columnCount
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.executor.pending
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.executor.written
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.size
CommitLog.instance.MAX_MUTATION_SIZE > cfsInstance.fileIndexGenerator
CommitLog.instance.MAX_MUTATION_SIZE > cfsInstance.metadata.resource.hash
CommitLog.instance.MAX_MUTATION_SIZE > cfsInstance.readOrdering.current.id
CommitLog.instance.MAX_MUTATION_SIZE > resultSetInstance.metadata.columnCount
CommitLog.instance.MAX_MUTATION_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.archiver.restorePointInTime < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.executor.pending
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.executor.written
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.size
CommitLog.instance.archiver.restorePointInTime > cfsInstance.fileIndexGenerator
CommitLog.instance.archiver.restorePointInTime > cfsInstance.metadata.resource.hash
CommitLog.instance.archiver.restorePointInTime > cfsInstance.readOrdering.current.id
CommitLog.instance.archiver.restorePointInTime % resultSetInstance.metadata.columnCount == 0
CommitLog.instance.archiver.restorePointInTime > resultSetInstance.metadata.columnCount
CommitLog.instance.archiver.restorePointInTime > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > CommitLog.instance.executor.pending
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.executor.written
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS != CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.markerIntervalNanos
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.pending
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.syncComplete.NOT_SET
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.written
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.size
CommitLog.instance.executor.lastSyncedAt > StorageService.instance.RING_DELAY
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.lastSyncedAt > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.lastSyncedAt > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.lastSyncedAt > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.lastSyncedAt > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.lastSyncedAt > cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.lastSyncedAt > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.lastSyncedAt > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.executor.pending
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.executor.written
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.markerIntervalNanos > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.markerIntervalNanos > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.markerIntervalNanos > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.markerIntervalNanos > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.markerIntervalNanos > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.pending >= CommitLog.instance.executor.syncComplete.NOT_SET
CommitLog.instance.executor.pending < CommitLog.instance.executor.written
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.pending < StorageService.instance.RING_DELAY
CommitLog.instance.executor.pending < cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.pending < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.pending <= cfsInstance.fileIndexGenerator
CommitLog.instance.executor.pending < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.pending > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.pending <= cfsInstance.readOrdering.current.id
CommitLog.instance.executor.pending < cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.pending <= resultSetInstance.metadata.columnCount
CommitLog.instance.executor.syncComplete.CANCELLED > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.syncComplete.CANCELLED <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.executor.written
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.syncComplete.NOT_SET <= cfsInstance.fileIndexGenerator
CommitLog.instance.executor.syncComplete.NOT_SET <= cfsInstance.readOrdering.current.id
CommitLog.instance.executor.syncComplete.NOT_SET < resultSetInstance.metadata.columnCount
CommitLog.instance.executor.syncComplete.NOT_SET <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.written != CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.written != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.written != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.written < StorageService.instance.RING_DELAY
CommitLog.instance.executor.written > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.written > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.written > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.written < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.written > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.written > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.written < cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.written > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.written > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE != resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition >= CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.fd != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.fd != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.fd != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.fd < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.fd < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.fd < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.fd > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.fd > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.id < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.id > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.id > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.id > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.idBase < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.idBase > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.idBase > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset >= CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset >= CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset >= CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.nextId > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.nextId > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.nextId > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.nextId < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.nextId > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.nextId > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.allocatePosition > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.allocatePosition > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.allocatePosition > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.allocatePosition > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.allocatePosition > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.fd < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.availableSegment.fd > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.availableSegment.fd > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.availableSegment.fd < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.fd < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.fd < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.fd < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.availableSegment.fd > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.fd > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.id > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.availableSegment.id > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.id > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset >= resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize >= cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.size > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.size > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.size > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.size > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.size > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.size > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.size > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.size < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.size > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.size > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
daikon.Quant.subsetOf(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE, resultSetInstance.rows_FOR_ENCLOSING_USE)
StorageService.instance.RING_DELAY > cfsInstance.fileIndexGenerator
StorageService.instance.RING_DELAY > cfsInstance.metadata.resource.hash
StorageService.instance.RING_DELAY > cfsInstance.readOrdering.current.id
StorageService.instance.RING_DELAY % resultSetInstance.metadata.columnCount == 0
StorageService.instance.RING_DELAY > resultSetInstance.metadata.columnCount
StorageService.instance.RING_DELAY > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.compactionStrategyManager.fanout > cfsInstance.fileIndexGenerator
cfsInstance.compactionStrategyManager.fanout > cfsInstance.metadata.resource.hash
cfsInstance.compactionStrategyManager.fanout > cfsInstance.readOrdering.current.id
cfsInstance.compactionStrategyManager.fanout != resultSetInstance.metadata.columnCount
cfsInstance.compactionStrategyManager.fanout > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > cfsInstance.fileIndexGenerator
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > cfsInstance.metadata.resource.hash
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > cfsInstance.readOrdering.current.id
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > resultSetInstance.metadata.columnCount
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.fileIndexGenerator < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
cfsInstance.fileIndexGenerator > cfsInstance.metadata.resource.hash
cfsInstance.fileIndexGenerator < cfsInstance.sampleLatencyNanos
cfsInstance.fileIndexGenerator >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > cfsInstance.metadata.resource.hash
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > cfsInstance.readOrdering.current.id
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > resultSetInstance.metadata.columnCount
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.metadata.resource.hash < cfsInstance.readOrdering.current.id
cfsInstance.metadata.resource.hash < cfsInstance.sampleLatencyNanos
cfsInstance.metadata.resource.hash < resultSetInstance.metadata.columnCount
cfsInstance.metadata.resource.hash < daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
cfsInstance.readOrdering.current.id < cfsInstance.sampleLatencyNanos
cfsInstance.readOrdering.current.id >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
cfsInstance.sampleLatencyNanos > resultSetInstance.metadata.columnCount
cfsInstance.sampleLatencyNanos > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
resultSetInstance.metadata.columnCount >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.partitionColumns.statics.complexIdx + CommitLog.instance.segmentManager.allocatingFrom.nextId - cfsInstance.metadata.resource.hash - 1493090432 == 0
387973120 * CFMetadataInstance.resource.hash - 5242880 * CommitLog.instance.segmentManager.allocatingFrom.fd - 73 * CommitLog.instance.segmentManager.size + 5.7927894341517312E17 == 0
CFMetadataInstance.resource.hash - CommitLog.instance.segmentManager.allocatingFrom.nextId + cfsInstance.metadata.resource.hash + 2.986180833E9 == 0
191365120 * CFMetadataInstance.resource.hash + 2621440 * CommitLog.instance.segmentManager.availableSegment.fd - 17 * CommitLog.instance.segmentManager.size + 2.857254234619904E17 == 0
6 * CommitLog.instance.executor.lastSyncedAt - 101303107 * CommitLog.instance.executor.written - 168593439 * resultSetInstance.metadata.columnCount - 5.36663600159258E14 == 0
816 * CommitLog.instance.executor.lastSyncedAt - 101303107 * CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 2.2928707704E10 * resultSetInstance.metadata.columnCount - 7.3000215673202528E16 == 0
816 * CommitLog.instance.executor.lastSyncedAt - 101303107 * CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 2.2928707704E10 * resultSetInstance.metadata.columnCount - 7.3000216483627392E16 == 0
816 * CommitLog.instance.executor.lastSyncedAt - 101303107 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 2.2928707704E10 * resultSetInstance.metadata.columnCount - 7.3000216483627392E16 == 0
2 * CommitLog.instance.executor.lastSyncedAt - 56197813 * resultSetInstance.metadata.columnCount + 101303107 * daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.78922444846942E14 == 0
2 * CommitLog.instance.executor.lastSyncedAt - 56197813 * resultSetInstance.metadata.columnCount + 101303107 * daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1 - 1.78922343543835E14 == 0
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 233 * CommitLog.instance.segmentManager.allocatingFrom.id - CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset + 4.03405301308259E14 == 0
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 90 * CommitLog.instance.segmentManager.allocatingFrom.id - CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset + 1.55821790204902E14 == 0
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 233 * CommitLog.instance.segmentManager.availableSegment.id + 4.03405301308492E14 == 0
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 90 * CommitLog.instance.segmentManager.availableSegment.id + 1.55821790204992E14 == 0
5242880 * CommitLog.instance.segmentManager.allocatingFrom.fd + 73 * CommitLog.instance.segmentManager.size - 387973120 * cfsInstance.metadata.resource.hash - 5.7927894341517312E17 == 0
CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.fileIndexGenerator - 4 * cfsInstance.metadata.resource.hash - 1.737325586104E12 == 0
CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.readOrdering.current.id - daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224495E12 == 0
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 90 * CommitLog.instance.segmentManager.availableSegment.id + 1.5582179020499997E14 == 0
CommitLog.instance.segmentManager.allocatingFrom.nextId - cfsInstance.fileIndexGenerator - 4 * cfsInstance.metadata.resource.hash - 5.972361634E9 == 0
2621440 * CommitLog.instance.segmentManager.availableSegment.fd - 17 * CommitLog.instance.segmentManager.size + 191365120 * cfsInstance.metadata.resource.hash + 2.857254234619904E17 == 0
CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.fileIndexGenerator - 4 * cfsInstance.metadata.resource.hash - 1.737325586105E12 == 0
CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.readOrdering.current.id - daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224496E12 == 0
CommitLog.instance.segmentManager.size - 2621440 * cfsInstance.fileIndexGenerator - 7864320 * cfsInstance.metadata.resource.hash - 1.174214071287808E16 == 0
===========================================================================
org.apache.cassandra.cql3.SimpleQueryTest@testDynamicCompactTables-1221656276:::dump
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.compactValueColumn.type.isByteOrderComparable
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.keyValidator.isByteOrderComparable
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.allocatingFrom.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.availableSegment.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.joinRing
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.useStrictConsistency
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionSpaceCheck
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.enabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.partitionSSTablesByTokenRange
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_ENABLED
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.isEnabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.shouldDefragment
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.supportsEarlyOpen
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.data.loadsstables
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.keyspace.initialized
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.allColumnFilter.isFetchAll
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.keyValidator.isByteOrderComparable
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MIN_THRESHOLD
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CFMetadataInstance.partitioner.MINIMUM.serialVersionUID
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.executor.syncComplete.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.managerThreadWaitQueue.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.segmentPrepared.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == StorageService.instance.threadCounter
CFMetadataInstance.compactValueColumn.NO_POSITION == CFMetadataInstance.compactValueColumn.position
CFMetadataInstance.compactValueColumn.NO_POSITION == CommitLog.instance.executor.syncComplete.CANCELLED
CFMetadataInstance.compactValueColumn.NO_POSITION == cfsInstance.metadata.compactValueColumn.NO_POSITION
CFMetadataInstance.compactValueColumn.comparisonOrder == cfsInstance.metadata.compactValueColumn.comparisonOrder
CFMetadataInstance.compactValueColumn.hash == cfsInstance.metadata.compactValueColumn.hash
CFMetadataInstance.compactValueColumn.name.interned == CFMetadataInstance.isCompound
CFMetadataInstance.compactValueColumn.name.interned == CFMetadataInstance.isCounter
CFMetadataInstance.compactValueColumn.name.interned == cfsInstance.directories.metadata.isCompound
CFMetadataInstance.isCounter == CFMetadataInstance.isDense
CFMetadataInstance.isCounter == CFMetadataInstance.isIndex
CFMetadataInstance.isCounter == CFMetadataInstance.isSuper
CFMetadataInstance.isCounter == CFMetadataInstance.isView
CFMetadataInstance.isCounter == CFMetadataInstance.partitioner.partitionOrdering.isByteOrderComparable
CFMetadataInstance.isCounter == CommitLog.instance.executor.shutdown
CFMetadataInstance.isCounter == CommitLog.instance.executor.syncRequested
CFMetadataInstance.isCounter == CommitLog.instance.segmentManager.shutdown
CFMetadataInstance.isCounter == StorageService.instance.allowSimultaneousMoves
CFMetadataInstance.isCounter == StorageService.instance.authSetupCalled
CFMetadataInstance.isCounter == StorageService.instance.authSetupComplete
CFMetadataInstance.isCounter == StorageService.instance.gossipActive
CFMetadataInstance.isCounter == StorageService.instance.initialized
CFMetadataInstance.isCounter == StorageService.instance.isBootstrapMode
CFMetadataInstance.isCounter == StorageService.instance.isDecommissioning
CFMetadataInstance.isCounter == StorageService.instance.isRebuilding
CFMetadataInstance.isCounter == StorageService.instance.isShutdown
CFMetadataInstance.isCounter == StorageService.instance.isSurveyMode
CFMetadataInstance.isCounter == StorageService.instance.joined
CFMetadataInstance.isCounter == StorageService.instance.replacing
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.compactionLogger.enabled
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.currentBoundaries.isInvalid
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.diskBoundaryManager.diskBoundaries.isInvalid
CFMetadataInstance.isCounter == cfsInstance.keyspace.TEST_FAIL_WRITES
CFMetadataInstance.isCounter == cfsInstance.keyspace.viewManager.enableCoordinatorBatchlog
CFMetadataInstance.isCounter == cfsInstance.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.metric.aliasFactory.isIndex
CFMetadataInstance.isCounter == cfsInstance.metric.factory.isIndex
CFMetadataInstance.isCounter == cfsInstance.readOrdering.current.isBlocking
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isDense
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isView
CFMetadataInstance.partitioner.HEAP_SIZE == StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.HEAP_SIZE == StorageService.instance.valueFactory.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.HEAP_SIZE == cfsInstance.metadata.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.MAXIMUM == StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CFMetadataInstance.partitioner.MAXIMUM == StorageService.instance.valueFactory.partitioner.MAXIMUM
CFMetadataInstance.partitioner.MAXIMUM == cfsInstance.metadata.partitioner.MAXIMUM
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == CommitLog.instance.configuration.encryptionContext.chunkLength
CommitLog.instance.executor.markerIntervalNanos == CommitLog.instance.executor.syncIntervalNanos
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.managerThreadWaitQueue.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.segmentPrepared.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.keyspace.writeOrder.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.metadata.compactValueColumn.NO_POSITION
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.readOrdering.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)-1
CommitLog.instance.executor.syncComplete.NOT_SET == CommitLog.instance.segmentManager.bufferPool.usedBuffers
CommitLog.instance.executor.syncComplete.NOT_SET == CommitLog.instance.segmentManager.managerThreadWaitQueue.NOT_SET
CommitLog.instance.executor.syncComplete.NOT_SET == CommitLog.instance.segmentManager.segmentPrepared.NOT_SET
CommitLog.instance.executor.syncComplete.NOT_SET == QueryProcessor.instance.lastMinuteEvictionsCount
CommitLog.instance.executor.syncComplete.NOT_SET == QueryProcessor.instance.thriftLastMinuteEvictionsCount
CommitLog.instance.executor.syncComplete.NOT_SET == StorageService.instance.legacyProgressSupport.notificationSerialNumber
CommitLog.instance.executor.syncComplete.NOT_SET == StorageService.instance.nextRepairCommand
CommitLog.instance.executor.syncComplete.NOT_SET == StorageService.instance.progressSupport.notificationSerialNumber
CommitLog.instance.executor.syncComplete.NOT_SET == StorageService.instance.remainingCFs
CommitLog.instance.executor.syncComplete.NOT_SET == StorageService.instance.tokenMetadata.ringVersion
CommitLog.instance.executor.syncComplete.NOT_SET == StorageService.instance.totalCFs
CommitLog.instance.executor.syncComplete.NOT_SET == cfsInstance.compactionStrategyManager.compactionLogger.identifier
CommitLog.instance.executor.syncComplete.NOT_SET == cfsInstance.compactionStrategyManager.currentBoundaries.directoriesVersion
CommitLog.instance.executor.syncComplete.NOT_SET == cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.executor.syncComplete.NOT_SET == cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CommitLog.instance.executor.syncComplete.NOT_SET == cfsInstance.diskBoundaryManager.diskBoundaries.ringVersion
CommitLog.instance.executor.syncComplete.NOT_SET == cfsInstance.keyspace.TEST_FAIL_MV_LOCKS_COUNT
CommitLog.instance.executor.syncComplete.NOT_SET == cfsInstance.keyspace.replicationStrategy.lastInvalidatedVersion
CommitLog.instance.executor.syncComplete.NOT_SET == cfsInstance.readOrdering.current.running
CommitLog.instance.executor.syncComplete.NOT_SET == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == CommitLog.instance.segmentManager.availableSegment.ENTRY_OVERHEAD_SIZE
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == CommitLog.instance.segmentManager.availableSegment.SYNC_MARKER_SIZE
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.availableSegment.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.bufferPool.bufferSize
CommitLog.instance.segmentManager.allocatingFrom.idBase == CommitLog.instance.segmentManager.availableSegment.idBase
CommitLog.instance.segmentManager.allocatingFrom.nextId == CommitLog.instance.segmentManager.availableSegment.nextId
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == CommitLog.instance.segmentManager.availableSegment.replayLimitId
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == CommitLog.instance.segmentManager.availableSegment.lastSyncedOffset
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE == resultSetInstance.rows_FOR_ENCLOSING_USE
cfsInstance.compactionStrategyManager.isActive == cfsInstance.valid
cfsInstance.directories.metadata.isCompound == cfsInstance.metadata.isCompound
cfsInstance.directories.metadata.isCompound == cfsInstance.viewManager.baseTableMetadata.isCompound
cfsInstance.metadata.compactValueColumn.NO_POSITION == cfsInstance.metadata.compactValueColumn.position
CFMetadataInstance.allColumnFilter.isFetchAll == true
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK == 2
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == 4
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == 1
CFMetadataInstance.compactValueColumn.NO_POSITION == -1
CFMetadataInstance.compactValueColumn.comparisonOrder == 4611956916719281408L
CFMetadataInstance.compactValueColumn.hash == -40591990
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE == 48
CFMetadataInstance.compactValueColumn.name.interned == false
CFMetadataInstance.compactValueColumn.name.prefixComparison == -693153616176873472L
CFMetadataInstance.compactValueColumn.type.isByteOrderComparable == true
CFMetadataInstance.isCounter == false
CFMetadataInstance.partitionColumns.statics.complexIdx == 0 || CFMetadataInstance.partitionColumns.statics.complexIdx == 2
CFMetadataInstance.partitioner.HEAP_SIZE == 24
CFMetadataInstance.partitioner.MAXIMUM == 9223372036854775807L
CFMetadataInstance.partitioner.MINIMUM.token == -9223372036854775808L
CFMetadataInstance.resource.hash == 2144393069 || CFMetadataInstance.resource.hash == 2144393070
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == 65536
CommitLog.instance.MAX_MUTATION_SIZE == 2621440
CommitLog.instance.archiver.restorePointInTime == 4510987932000L
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS == 100
CommitLog.instance.executor.markerIntervalNanos == 1000000
CommitLog.instance.executor.pending == 0 || CommitLog.instance.executor.pending == 1
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == 12
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == 8
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == 5242880
CommitLog.instance.segmentManager.allocatingFrom.fd == 177 || CommitLog.instance.segmentManager.allocatingFrom.fd == 180 || CommitLog.instance.segmentManager.allocatingFrom.fd == 229
CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224479L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224480L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224481L
CommitLog.instance.segmentManager.allocatingFrom.idBase == 1731353224472L
CommitLog.instance.segmentManager.allocatingFrom.nextId == 9 || CommitLog.instance.segmentManager.allocatingFrom.nextId == 10 || CommitLog.instance.segmentManager.allocatingFrom.nextId == 11
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == 1731353224475L
CommitLog.instance.segmentManager.availableSegment.allocatePosition == 28
CommitLog.instance.segmentManager.availableSegment.fd == 177 || CommitLog.instance.segmentManager.availableSegment.fd == 178 || CommitLog.instance.segmentManager.availableSegment.fd == 229
CommitLog.instance.segmentManager.availableSegment.id == 1731353224480L || CommitLog.instance.segmentManager.availableSegment.id == 1731353224481L || CommitLog.instance.segmentManager.availableSegment.id == 1731353224482L
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == 20
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize == 3
CommitLog.instance.segmentManager.size == 10485760 || CommitLog.instance.segmentManager.size == 15728640
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
("oneOf.java.jpp: SEQUENCE unimplemented" != null)
StorageService.instance.RING_DELAY == 30000
daikon.Quant.fuzzy.eq(StorageService.instance.traceProbability, 0.0)
cfsInstance.compactionStrategyManager.fanout == 10
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD == 32
cfsInstance.fileIndexGenerator == 0 || cfsInstance.fileIndexGenerator == 1 || cfsInstance.fileIndexGenerator == 2
cfsInstance.indexManager.DEFAULT_PAGE_SIZE == 10000
cfsInstance.metadata.compactValueColumn.NO_POSITION == -1
cfsInstance.metadata.compactValueColumn.comparisonOrder == 4611956916719281408L
cfsInstance.metadata.compactValueColumn.hash == -40591990
cfsInstance.metadata.resource.hash == 2144393069 || cfsInstance.metadata.resource.hash == 2144393070
cfsInstance.readOrdering.current.id == 0 || cfsInstance.readOrdering.current.id == 1 || cfsInstance.readOrdering.current.id == 2
cfsInstance.sampleLatencyNanos == 2500000000L
resultSetInstance.metadata.columnCount >= 1
daikon.Quant.eltsNotEqual(resultSetInstance.rows_FOR_ENCLOSING_USE, null)
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK >= CFMetadataInstance.partitionColumns.statics.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.size
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK >= cfsInstance.fileIndexGenerator
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK >= cfsInstance.readOrdering.current.id
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != resultSetInstance.metadata.columnCount
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > CFMetadataInstance.partitionColumns.statics.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.size
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > cfsInstance.fileIndexGenerator
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > cfsInstance.readOrdering.current.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK != CFMetadataInstance.partitionColumns.statics.complexIdx
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK >= CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.size
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK <= resultSetInstance.metadata.columnCount
CFMetadataInstance.compactValueColumn.NO_POSITION < CFMetadataInstance.partitionColumns.statics.complexIdx
CFMetadataInstance.compactValueColumn.NO_POSITION < CFMetadataInstance.resource.hash
CFMetadataInstance.compactValueColumn.NO_POSITION < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.compactValueColumn.NO_POSITION < CommitLog.instance.executor.pending
CFMetadataInstance.compactValueColumn.NO_POSITION < CommitLog.instance.executor.written
CFMetadataInstance.compactValueColumn.NO_POSITION < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.compactValueColumn.NO_POSITION < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.compactValueColumn.NO_POSITION < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.compactValueColumn.NO_POSITION < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.compactValueColumn.NO_POSITION < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.compactValueColumn.NO_POSITION < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.compactValueColumn.NO_POSITION < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.compactValueColumn.NO_POSITION < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.compactValueColumn.NO_POSITION < CommitLog.instance.segmentManager.size
CFMetadataInstance.compactValueColumn.NO_POSITION < cfsInstance.fileIndexGenerator
CFMetadataInstance.compactValueColumn.NO_POSITION < cfsInstance.metadata.resource.hash
CFMetadataInstance.compactValueColumn.NO_POSITION < cfsInstance.readOrdering.current.id
CFMetadataInstance.compactValueColumn.NO_POSITION < resultSetInstance.metadata.columnCount
CFMetadataInstance.compactValueColumn.NO_POSITION <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.compactValueColumn.comparisonOrder > CFMetadataInstance.partitionColumns.statics.complexIdx
CFMetadataInstance.compactValueColumn.comparisonOrder > CFMetadataInstance.resource.hash
CFMetadataInstance.compactValueColumn.comparisonOrder > CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.compactValueColumn.comparisonOrder > CommitLog.instance.executor.pending
CFMetadataInstance.compactValueColumn.comparisonOrder > CommitLog.instance.executor.written
CFMetadataInstance.compactValueColumn.comparisonOrder > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.compactValueColumn.comparisonOrder > CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.compactValueColumn.comparisonOrder > CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.compactValueColumn.comparisonOrder > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.compactValueColumn.comparisonOrder > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.compactValueColumn.comparisonOrder > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.compactValueColumn.comparisonOrder > CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.compactValueColumn.comparisonOrder > CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.compactValueColumn.comparisonOrder > CommitLog.instance.segmentManager.size
CFMetadataInstance.compactValueColumn.comparisonOrder > cfsInstance.fileIndexGenerator
CFMetadataInstance.compactValueColumn.comparisonOrder > cfsInstance.metadata.resource.hash
CFMetadataInstance.compactValueColumn.comparisonOrder > cfsInstance.readOrdering.current.id
CFMetadataInstance.compactValueColumn.comparisonOrder > resultSetInstance.metadata.columnCount
CFMetadataInstance.compactValueColumn.comparisonOrder > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.compactValueColumn.hash < CFMetadataInstance.partitionColumns.statics.complexIdx
CFMetadataInstance.compactValueColumn.hash < CFMetadataInstance.resource.hash
CFMetadataInstance.compactValueColumn.hash < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.compactValueColumn.hash < CommitLog.instance.executor.pending
CFMetadataInstance.compactValueColumn.hash < CommitLog.instance.executor.written
CFMetadataInstance.compactValueColumn.hash < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.compactValueColumn.hash < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.compactValueColumn.hash < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.compactValueColumn.hash < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.compactValueColumn.hash < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.compactValueColumn.hash < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.compactValueColumn.hash < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.compactValueColumn.hash < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.compactValueColumn.hash < CommitLog.instance.segmentManager.size
CFMetadataInstance.compactValueColumn.hash < cfsInstance.fileIndexGenerator
CFMetadataInstance.compactValueColumn.hash < cfsInstance.metadata.resource.hash
CFMetadataInstance.compactValueColumn.hash < cfsInstance.readOrdering.current.id
CFMetadataInstance.compactValueColumn.hash < resultSetInstance.metadata.columnCount
CFMetadataInstance.compactValueColumn.hash < daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE > CFMetadataInstance.partitionColumns.statics.complexIdx
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE < CFMetadataInstance.resource.hash
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE > CommitLog.instance.executor.pending
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE > CommitLog.instance.executor.written
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE < CommitLog.instance.segmentManager.size
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE > cfsInstance.fileIndexGenerator
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE < cfsInstance.metadata.resource.hash
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE > cfsInstance.readOrdering.current.id
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE % resultSetInstance.metadata.columnCount == 0
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE > resultSetInstance.metadata.columnCount
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.compactValueColumn.name.prefixComparison < CFMetadataInstance.partitionColumns.statics.complexIdx
CFMetadataInstance.compactValueColumn.name.prefixComparison < CFMetadataInstance.resource.hash
CFMetadataInstance.compactValueColumn.name.prefixComparison < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.compactValueColumn.name.prefixComparison < CommitLog.instance.executor.pending
CFMetadataInstance.compactValueColumn.name.prefixComparison < CommitLog.instance.executor.written
CFMetadataInstance.compactValueColumn.name.prefixComparison < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.compactValueColumn.name.prefixComparison < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.compactValueColumn.name.prefixComparison < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.compactValueColumn.name.prefixComparison < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.compactValueColumn.name.prefixComparison < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.compactValueColumn.name.prefixComparison < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.compactValueColumn.name.prefixComparison < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.compactValueColumn.name.prefixComparison < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.compactValueColumn.name.prefixComparison < CommitLog.instance.segmentManager.size
CFMetadataInstance.compactValueColumn.name.prefixComparison < cfsInstance.fileIndexGenerator
CFMetadataInstance.compactValueColumn.name.prefixComparison < cfsInstance.metadata.resource.hash
CFMetadataInstance.compactValueColumn.name.prefixComparison < cfsInstance.readOrdering.current.id
CFMetadataInstance.compactValueColumn.name.prefixComparison < resultSetInstance.metadata.columnCount
CFMetadataInstance.compactValueColumn.name.prefixComparison < daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.partitionColumns.statics.complexIdx < CFMetadataInstance.partitioner.HEAP_SIZE
CFMetadataInstance.partitionColumns.statics.complexIdx < CFMetadataInstance.partitioner.MAXIMUM
CFMetadataInstance.partitionColumns.statics.complexIdx > CFMetadataInstance.partitioner.MINIMUM.token
CFMetadataInstance.partitionColumns.statics.complexIdx < CFMetadataInstance.resource.hash
CFMetadataInstance.partitionColumns.statics.complexIdx < CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.MAX_MUTATION_SIZE
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.archiver.restorePointInTime
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.markerIntervalNanos
CFMetadataInstance.partitionColumns.statics.complexIdx >= CommitLog.instance.executor.syncComplete.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.written
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.idBase
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitionColumns.statics.complexIdx < StorageService.instance.RING_DELAY
CFMetadataInstance.partitionColumns.statics.complexIdx < cfsInstance.compactionStrategyManager.fanout
CFMetadataInstance.partitionColumns.statics.complexIdx < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CFMetadataInstance.partitionColumns.statics.complexIdx < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CFMetadataInstance.partitionColumns.statics.complexIdx > cfsInstance.metadata.compactValueColumn.NO_POSITION
CFMetadataInstance.partitionColumns.statics.complexIdx < cfsInstance.metadata.compactValueColumn.comparisonOrder
CFMetadataInstance.partitionColumns.statics.complexIdx > cfsInstance.metadata.compactValueColumn.hash
CFMetadataInstance.partitionColumns.statics.complexIdx < cfsInstance.metadata.resource.hash
CFMetadataInstance.partitionColumns.statics.complexIdx < cfsInstance.sampleLatencyNanos
CFMetadataInstance.partitionColumns.statics.complexIdx != resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.HEAP_SIZE < CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.HEAP_SIZE > CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.executor.written
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.HEAP_SIZE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.HEAP_SIZE > cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.HEAP_SIZE < cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.HEAP_SIZE > cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.HEAP_SIZE > resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.HEAP_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.MAXIMUM > CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.written
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.MAXIMUM > resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.MAXIMUM > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.MINIMUM.token < CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.written
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.MINIMUM.token < resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.MINIMUM.token < daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.resource.hash > CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE
CFMetadataInstance.resource.hash > CommitLog.instance.MAX_MUTATION_SIZE
CFMetadataInstance.resource.hash < CommitLog.instance.archiver.restorePointInTime
CFMetadataInstance.resource.hash > CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS
CFMetadataInstance.resource.hash < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.resource.hash > CommitLog.instance.executor.markerIntervalNanos
CFMetadataInstance.resource.hash > CommitLog.instance.executor.pending
CFMetadataInstance.resource.hash > CommitLog.instance.executor.syncComplete.NOT_SET
CFMetadataInstance.resource.hash > CommitLog.instance.executor.written
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.idBase
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.size
CFMetadataInstance.resource.hash > StorageService.instance.RING_DELAY
CFMetadataInstance.resource.hash > cfsInstance.compactionStrategyManager.fanout
CFMetadataInstance.resource.hash > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CFMetadataInstance.resource.hash > cfsInstance.fileIndexGenerator
CFMetadataInstance.resource.hash > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CFMetadataInstance.resource.hash > cfsInstance.metadata.compactValueColumn.NO_POSITION
CFMetadataInstance.resource.hash < cfsInstance.metadata.compactValueColumn.comparisonOrder
CFMetadataInstance.resource.hash > cfsInstance.metadata.compactValueColumn.hash
CFMetadataInstance.resource.hash >= cfsInstance.metadata.resource.hash
CFMetadataInstance.resource.hash > cfsInstance.readOrdering.current.id
CFMetadataInstance.resource.hash < cfsInstance.sampleLatencyNanos
CFMetadataInstance.resource.hash > resultSetInstance.metadata.columnCount
CFMetadataInstance.resource.hash > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.executor.pending
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.executor.written
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.size
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > cfsInstance.fileIndexGenerator
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < cfsInstance.metadata.resource.hash
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > cfsInstance.readOrdering.current.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > resultSetInstance.metadata.columnCount
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.executor.pending
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.executor.written
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.size
CommitLog.instance.MAX_MUTATION_SIZE > cfsInstance.fileIndexGenerator
CommitLog.instance.MAX_MUTATION_SIZE < cfsInstance.metadata.resource.hash
CommitLog.instance.MAX_MUTATION_SIZE > cfsInstance.readOrdering.current.id
CommitLog.instance.MAX_MUTATION_SIZE > resultSetInstance.metadata.columnCount
CommitLog.instance.MAX_MUTATION_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.archiver.restorePointInTime < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.executor.pending
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.executor.written
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.size
CommitLog.instance.archiver.restorePointInTime > cfsInstance.fileIndexGenerator
CommitLog.instance.archiver.restorePointInTime > cfsInstance.metadata.resource.hash
CommitLog.instance.archiver.restorePointInTime > cfsInstance.readOrdering.current.id
CommitLog.instance.archiver.restorePointInTime % resultSetInstance.metadata.columnCount == 0
CommitLog.instance.archiver.restorePointInTime > resultSetInstance.metadata.columnCount
CommitLog.instance.archiver.restorePointInTime > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > CommitLog.instance.executor.pending
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > CommitLog.instance.executor.written
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < cfsInstance.metadata.resource.hash
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.markerIntervalNanos
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.pending
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.syncComplete.NOT_SET
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.written
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.size
CommitLog.instance.executor.lastSyncedAt > StorageService.instance.RING_DELAY
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.lastSyncedAt > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.lastSyncedAt > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.lastSyncedAt > cfsInstance.metadata.compactValueColumn.NO_POSITION
CommitLog.instance.executor.lastSyncedAt < cfsInstance.metadata.compactValueColumn.comparisonOrder
CommitLog.instance.executor.lastSyncedAt > cfsInstance.metadata.compactValueColumn.hash
CommitLog.instance.executor.lastSyncedAt > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.lastSyncedAt > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.lastSyncedAt > cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.lastSyncedAt > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.lastSyncedAt > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.executor.pending
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.executor.written
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.markerIntervalNanos > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.markerIntervalNanos < cfsInstance.metadata.resource.hash
CommitLog.instance.executor.markerIntervalNanos > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.markerIntervalNanos > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.markerIntervalNanos > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.pending >= CommitLog.instance.executor.syncComplete.NOT_SET
CommitLog.instance.executor.pending < CommitLog.instance.executor.written
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.pending < StorageService.instance.RING_DELAY
CommitLog.instance.executor.pending < cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.pending < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.pending <= cfsInstance.fileIndexGenerator
CommitLog.instance.executor.pending < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.pending > cfsInstance.metadata.compactValueColumn.NO_POSITION
CommitLog.instance.executor.pending < cfsInstance.metadata.compactValueColumn.comparisonOrder
CommitLog.instance.executor.pending > cfsInstance.metadata.compactValueColumn.hash
CommitLog.instance.executor.pending < cfsInstance.metadata.resource.hash
CommitLog.instance.executor.pending <= cfsInstance.readOrdering.current.id
CommitLog.instance.executor.pending < cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.pending <= resultSetInstance.metadata.columnCount
CommitLog.instance.executor.syncComplete.CANCELLED <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.executor.written
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.syncComplete.NOT_SET <= cfsInstance.fileIndexGenerator
CommitLog.instance.executor.syncComplete.NOT_SET < cfsInstance.metadata.resource.hash
CommitLog.instance.executor.syncComplete.NOT_SET <= cfsInstance.readOrdering.current.id
CommitLog.instance.executor.syncComplete.NOT_SET < resultSetInstance.metadata.columnCount
CommitLog.instance.executor.syncComplete.NOT_SET <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.written < StorageService.instance.RING_DELAY
CommitLog.instance.executor.written > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.written > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.written > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.written < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.written > cfsInstance.metadata.compactValueColumn.NO_POSITION
CommitLog.instance.executor.written < cfsInstance.metadata.compactValueColumn.comparisonOrder
CommitLog.instance.executor.written > cfsInstance.metadata.compactValueColumn.hash
CommitLog.instance.executor.written < cfsInstance.metadata.resource.hash
CommitLog.instance.executor.written > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.written < cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.written > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.written > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE != resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 8 == 0
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.metadata.compactValueColumn.NO_POSITION
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.metadata.compactValueColumn.comparisonOrder
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.metadata.compactValueColumn.hash
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.fd != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.fd < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.fd < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.metadata.compactValueColumn.NO_POSITION
CommitLog.instance.segmentManager.allocatingFrom.fd < cfsInstance.metadata.compactValueColumn.comparisonOrder
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.metadata.compactValueColumn.hash
CommitLog.instance.segmentManager.allocatingFrom.fd < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.fd < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.fd > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.fd > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.id < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.id > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.metadata.compactValueColumn.NO_POSITION
CommitLog.instance.segmentManager.allocatingFrom.id < cfsInstance.metadata.compactValueColumn.comparisonOrder
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.metadata.compactValueColumn.hash
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.id > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.id > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.idBase < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.idBase > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.idBase > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset >= CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.metadata.compactValueColumn.NO_POSITION
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.metadata.compactValueColumn.comparisonOrder
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.metadata.compactValueColumn.hash
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.metadata.compactValueColumn.NO_POSITION
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.metadata.compactValueColumn.comparisonOrder
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.metadata.compactValueColumn.hash
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.nextId > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.nextId < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.metadata.compactValueColumn.NO_POSITION
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.metadata.compactValueColumn.comparisonOrder
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.metadata.compactValueColumn.hash
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.nextId != resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.nextId > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.allocatePosition > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.allocatePosition < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.allocatePosition > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.allocatePosition > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.allocatePosition > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.fd < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.availableSegment.fd > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.availableSegment.fd > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.availableSegment.fd < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.fd < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.fd < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.metadata.compactValueColumn.NO_POSITION
CommitLog.instance.segmentManager.availableSegment.fd < cfsInstance.metadata.compactValueColumn.comparisonOrder
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.metadata.compactValueColumn.hash
CommitLog.instance.segmentManager.availableSegment.fd < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.fd < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.availableSegment.fd > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.fd > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.id > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.metadata.compactValueColumn.NO_POSITION
CommitLog.instance.segmentManager.availableSegment.id < cfsInstance.metadata.compactValueColumn.comparisonOrder
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.metadata.compactValueColumn.hash
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.availableSegment.id > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.id > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset >= resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CommitLog.instance.segmentManager.size > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.size > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.size > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.size > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.size > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.size > cfsInstance.metadata.compactValueColumn.NO_POSITION
CommitLog.instance.segmentManager.size < cfsInstance.metadata.compactValueColumn.comparisonOrder
CommitLog.instance.segmentManager.size > cfsInstance.metadata.compactValueColumn.hash
CommitLog.instance.segmentManager.size < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.size > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.size < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.size > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.size > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
daikon.Quant.subsetOf(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE, resultSetInstance.rows_FOR_ENCLOSING_USE)
StorageService.instance.RING_DELAY > cfsInstance.fileIndexGenerator
StorageService.instance.RING_DELAY < cfsInstance.metadata.resource.hash
StorageService.instance.RING_DELAY > cfsInstance.readOrdering.current.id
StorageService.instance.RING_DELAY % resultSetInstance.metadata.columnCount == 0
StorageService.instance.RING_DELAY > resultSetInstance.metadata.columnCount
StorageService.instance.RING_DELAY > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.compactionStrategyManager.fanout > cfsInstance.fileIndexGenerator
cfsInstance.compactionStrategyManager.fanout < cfsInstance.metadata.resource.hash
cfsInstance.compactionStrategyManager.fanout > cfsInstance.readOrdering.current.id
cfsInstance.compactionStrategyManager.fanout != resultSetInstance.metadata.columnCount
cfsInstance.compactionStrategyManager.fanout > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > cfsInstance.fileIndexGenerator
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD < cfsInstance.metadata.resource.hash
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > cfsInstance.readOrdering.current.id
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > resultSetInstance.metadata.columnCount
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.fileIndexGenerator < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
cfsInstance.fileIndexGenerator > cfsInstance.metadata.compactValueColumn.NO_POSITION
cfsInstance.fileIndexGenerator < cfsInstance.metadata.compactValueColumn.comparisonOrder
cfsInstance.fileIndexGenerator > cfsInstance.metadata.compactValueColumn.hash
cfsInstance.fileIndexGenerator < cfsInstance.metadata.resource.hash
cfsInstance.fileIndexGenerator < cfsInstance.sampleLatencyNanos
cfsInstance.indexManager.DEFAULT_PAGE_SIZE < cfsInstance.metadata.resource.hash
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > cfsInstance.readOrdering.current.id
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > resultSetInstance.metadata.columnCount
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.metadata.compactValueColumn.NO_POSITION < cfsInstance.metadata.resource.hash
cfsInstance.metadata.compactValueColumn.NO_POSITION < cfsInstance.readOrdering.current.id
cfsInstance.metadata.compactValueColumn.NO_POSITION < resultSetInstance.metadata.columnCount
cfsInstance.metadata.compactValueColumn.NO_POSITION <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
cfsInstance.metadata.compactValueColumn.comparisonOrder > cfsInstance.metadata.resource.hash
cfsInstance.metadata.compactValueColumn.comparisonOrder > cfsInstance.readOrdering.current.id
cfsInstance.metadata.compactValueColumn.comparisonOrder > resultSetInstance.metadata.columnCount
cfsInstance.metadata.compactValueColumn.comparisonOrder > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.metadata.compactValueColumn.hash < cfsInstance.metadata.resource.hash
cfsInstance.metadata.compactValueColumn.hash < cfsInstance.readOrdering.current.id
cfsInstance.metadata.compactValueColumn.hash < resultSetInstance.metadata.columnCount
cfsInstance.metadata.compactValueColumn.hash < daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
cfsInstance.metadata.resource.hash > cfsInstance.readOrdering.current.id
cfsInstance.metadata.resource.hash < cfsInstance.sampleLatencyNanos
cfsInstance.metadata.resource.hash > resultSetInstance.metadata.columnCount
cfsInstance.metadata.resource.hash > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.readOrdering.current.id < cfsInstance.sampleLatencyNanos
cfsInstance.sampleLatencyNanos > resultSetInstance.metadata.columnCount
cfsInstance.sampleLatencyNanos > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
resultSetInstance.metadata.columnCount != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.partitionColumns.statics.complexIdx + CommitLog.instance.executor.pending + CommitLog.instance.segmentManager.allocatingFrom.id - 1.731353224481E12 == 0
CFMetadataInstance.partitionColumns.statics.complexIdx + CommitLog.instance.executor.pending + CommitLog.instance.segmentManager.availableSegment.id - 1.731353224482E12 == 0
CFMetadataInstance.partitionColumns.statics.complexIdx + 2 * CommitLog.instance.executor.pending + 2 * cfsInstance.metadata.resource.hash - 4.28878614E9 == 0
3 * CFMetadataInstance.partitionColumns.statics.complexIdx + 4 * CommitLog.instance.segmentManager.allocatingFrom.id - 2 * cfsInstance.fileIndexGenerator - 6.92541289792E12 == 0
CFMetadataInstance.partitionColumns.statics.complexIdx + 2 * CommitLog.instance.segmentManager.allocatingFrom.nextId - 2 * cfsInstance.metadata.resource.hash + 4.288786118E9 == 0
3 * CFMetadataInstance.partitionColumns.statics.complexIdx + 4 * CommitLog.instance.segmentManager.availableSegment.id - 2 * cfsInstance.fileIndexGenerator - 6.925412897924E12 == 0
52 * CFMetadataInstance.resource.hash - 52 * CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.fd - 1.11508439411E11 == 0
2 * CFMetadataInstance.resource.hash - CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.id + 1.727064438341E12 == 0
2 * CFMetadataInstance.resource.hash - CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.nextId - 4.288786129E9 == 0
2 * CFMetadataInstance.resource.hash - CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.availableSegment.id + 1.727064438342E12 == 0
2 * CFMetadataInstance.resource.hash - 2 * CommitLog.instance.executor.pending + cfsInstance.readOrdering.current.id - 4.28878614E9 == 0
CFMetadataInstance.resource.hash - CommitLog.instance.executor.pending - daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 2144393069 == 0
26 * CFMetadataInstance.resource.hash - CommitLog.instance.segmentManager.allocatingFrom.fd + 26 * cfsInstance.fileIndexGenerator - 5.5754219643E10 == 0
3 * CFMetadataInstance.resource.hash - 2 * CommitLog.instance.segmentManager.allocatingFrom.id + cfsInstance.fileIndexGenerator + 3.45627326975E12 == 0
3 * CFMetadataInstance.resource.hash - 2 * CommitLog.instance.segmentManager.allocatingFrom.nextId + cfsInstance.fileIndexGenerator - 6.43317919E9 == 0
CFMetadataInstance.resource.hash - CommitLog.instance.segmentManager.allocatingFrom.nextId + cfsInstance.metadata.resource.hash - 4.288786129E9 == 0
272629760 * CFMetadataInstance.resource.hash - 5242880 * CommitLog.instance.segmentManager.availableSegment.fd - 51 * CommitLog.instance.segmentManager.size - 5.8462536628436992E17 == 0
3 * CFMetadataInstance.resource.hash - 2 * CommitLog.instance.segmentManager.availableSegment.id + cfsInstance.fileIndexGenerator + 3.456273269752E12 == 0
2 * CommitLog.instance.executor.lastSyncedAt - 60717407 * resultSetInstance.metadata.columnCount + 487227648 * daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.78691247621199E14 == 0
2 * CommitLog.instance.executor.lastSyncedAt - 60717407 * resultSetInstance.metadata.columnCount + 487227648 * daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1 - 1.78690760393551E14 == 0
103 * CommitLog.instance.executor.pending - 52 * CommitLog.instance.segmentManager.allocatingFrom.id + CommitLog.instance.segmentManager.availableSegment.fd + 9.0030367672731E13 == 0
2621440 * CommitLog.instance.executor.pending - 2621440 * CommitLog.instance.segmentManager.allocatingFrom.id + CommitLog.instance.segmentManager.size + 4.538638596767744E18 == 0
CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.id + 2 * cfsInstance.metadata.resource.hash + 1.727064438341E12 == 0
2 * CommitLog.instance.executor.pending - 2 * CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.readOrdering.current.id + 3.46270644896E12 == 0
CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.nextId + 2 * cfsInstance.metadata.resource.hash - 4.288786129E9 == 0
103 * CommitLog.instance.executor.pending + CommitLog.instance.segmentManager.availableSegment.fd - 52 * CommitLog.instance.segmentManager.availableSegment.id + 9.0030367672783E13 == 0
52 * CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.availableSegment.fd + 52 * cfsInstance.metadata.resource.hash - 1.11508439411E11 == 0
2621440 * CommitLog.instance.executor.pending - 2621440 * CommitLog.instance.segmentManager.availableSegment.id + CommitLog.instance.segmentManager.size + 4.5386385967703654E18 == 0
CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.availableSegment.id + 2 * cfsInstance.metadata.resource.hash + 1.727064438342E12 == 0
2 * CommitLog.instance.executor.pending - 2 * CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.readOrdering.current.id + 3.462706448962E12 == 0
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 90 * CommitLog.instance.segmentManager.allocatingFrom.id - CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset + 1.55821790203102E14 == 0
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 90 * CommitLog.instance.segmentManager.availableSegment.id + 1.55821790203192E14 == 0
CommitLog.instance.segmentManager.allocatingFrom.fd - 26 * cfsInstance.fileIndexGenerator - 26 * cfsInstance.metadata.resource.hash + 5.5754219643E10 == 0
2 * CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.fileIndexGenerator - 3 * cfsInstance.metadata.resource.hash - 3.45627326975E12 == 0
CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.readOrdering.current.id - daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224477E12 == 0
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 90 * CommitLog.instance.segmentManager.availableSegment.id + 1.558217902032E14 == 0
2 * CommitLog.instance.segmentManager.allocatingFrom.nextId - cfsInstance.fileIndexGenerator - 3 * cfsInstance.metadata.resource.hash + 6.43317919E9 == 0
5242880 * CommitLog.instance.segmentManager.availableSegment.fd + 51 * CommitLog.instance.segmentManager.size - 272629760 * cfsInstance.metadata.resource.hash + 5.8462536628436992E17 == 0
2 * CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.fileIndexGenerator - 3 * cfsInstance.metadata.resource.hash - 3.456273269752E12 == 0
CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.readOrdering.current.id - daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224478E12 == 0
===========================================================================
org.apache.cassandra.cql3.SimpleQueryTest@testRangeTombstones-54916894:::dump
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.keyValidator.isByteOrderComparable
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.allocatingFrom.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.availableSegment.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.joinRing
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.useStrictConsistency
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionSpaceCheck
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.enabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.partitionSSTablesByTokenRange
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_ENABLED
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.isEnabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.shouldDefragment
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.supportsEarlyOpen
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.data.loadsstables
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.directories.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.keyspace.initialized
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.allColumnFilter.isFetchAll
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.keyValidator.isByteOrderComparable
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.viewManager.baseTableMetadata.isCompound
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MIN_THRESHOLD
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CFMetadataInstance.partitioner.MINIMUM.serialVersionUID
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.executor.syncComplete.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.managerThreadWaitQueue.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.segmentPrepared.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == StorageService.instance.threadCounter
CFMetadataInstance.isCounter == CFMetadataInstance.isDense
CFMetadataInstance.isCounter == CFMetadataInstance.isIndex
CFMetadataInstance.isCounter == CFMetadataInstance.isSuper
CFMetadataInstance.isCounter == CFMetadataInstance.isView
CFMetadataInstance.isCounter == CFMetadataInstance.partitioner.partitionOrdering.isByteOrderComparable
CFMetadataInstance.isCounter == CommitLog.instance.executor.shutdown
CFMetadataInstance.isCounter == CommitLog.instance.segmentManager.shutdown
CFMetadataInstance.isCounter == StorageService.instance.allowSimultaneousMoves
CFMetadataInstance.isCounter == StorageService.instance.authSetupCalled
CFMetadataInstance.isCounter == StorageService.instance.authSetupComplete
CFMetadataInstance.isCounter == StorageService.instance.gossipActive
CFMetadataInstance.isCounter == StorageService.instance.initialized
CFMetadataInstance.isCounter == StorageService.instance.isBootstrapMode
CFMetadataInstance.isCounter == StorageService.instance.isDecommissioning
CFMetadataInstance.isCounter == StorageService.instance.isRebuilding
CFMetadataInstance.isCounter == StorageService.instance.isShutdown
CFMetadataInstance.isCounter == StorageService.instance.isSurveyMode
CFMetadataInstance.isCounter == StorageService.instance.joined
CFMetadataInstance.isCounter == StorageService.instance.replacing
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.compactionLogger.enabled
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.currentBoundaries.isInvalid
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.diskBoundaryManager.diskBoundaries.isInvalid
CFMetadataInstance.isCounter == cfsInstance.keyspace.TEST_FAIL_WRITES
CFMetadataInstance.isCounter == cfsInstance.keyspace.viewManager.enableCoordinatorBatchlog
CFMetadataInstance.isCounter == cfsInstance.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.metric.aliasFactory.isIndex
CFMetadataInstance.isCounter == cfsInstance.metric.factory.isIndex
CFMetadataInstance.isCounter == cfsInstance.readOrdering.current.isBlocking
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isDense
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isView
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.executor.syncComplete.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.bufferPool.usedBuffers
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.managerThreadWaitQueue.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.segmentPrepared.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == QueryProcessor.instance.lastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.statics.complexIdx == QueryProcessor.instance.thriftLastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.legacyProgressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.nextRepairCommand
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.progressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.remainingCFs
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.tokenMetadata.ringVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.totalCFs
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.compactionLogger.identifier
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.currentBoundaries.directoriesVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.diskBoundaryManager.diskBoundaries.ringVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.keyspace.TEST_FAIL_MV_LOCKS_COUNT
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.keyspace.replicationStrategy.lastInvalidatedVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.readOrdering.current.running
CFMetadataInstance.partitionColumns.statics.complexIdx == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.HEAP_SIZE == StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.HEAP_SIZE == StorageService.instance.valueFactory.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.HEAP_SIZE == cfsInstance.metadata.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.MAXIMUM == StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CFMetadataInstance.partitioner.MAXIMUM == StorageService.instance.valueFactory.partitioner.MAXIMUM
CFMetadataInstance.partitioner.MAXIMUM == cfsInstance.metadata.partitioner.MAXIMUM
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == CommitLog.instance.configuration.encryptionContext.chunkLength
CommitLog.instance.executor.markerIntervalNanos == CommitLog.instance.executor.syncIntervalNanos
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.managerThreadWaitQueue.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.segmentPrepared.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.keyspace.writeOrder.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.readOrdering.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)-1
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == CommitLog.instance.segmentManager.availableSegment.ENTRY_OVERHEAD_SIZE
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == CommitLog.instance.segmentManager.availableSegment.SYNC_MARKER_SIZE
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.availableSegment.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.bufferPool.bufferSize
CommitLog.instance.segmentManager.allocatingFrom.idBase == CommitLog.instance.segmentManager.availableSegment.idBase
CommitLog.instance.segmentManager.allocatingFrom.nextId == CommitLog.instance.segmentManager.availableSegment.nextId
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == CommitLog.instance.segmentManager.availableSegment.replayLimitId
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == CommitLog.instance.segmentManager.availableSegment.lastSyncedOffset
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE == resultSetInstance.rows_FOR_ENCLOSING_USE
cfsInstance.compactionStrategyManager.isActive == cfsInstance.valid
CFMetadataInstance.allColumnFilter.isFetchAll == true
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK == 2
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == 4
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == 1
CFMetadataInstance.isCounter == false
CFMetadataInstance.partitionColumns.regulars.complexIdx == 1 || CFMetadataInstance.partitionColumns.regulars.complexIdx == 2
CFMetadataInstance.partitioner.HEAP_SIZE == 24
CFMetadataInstance.partitioner.MAXIMUM == 9223372036854775807L
CFMetadataInstance.partitioner.MINIMUM.token == -9223372036854775808L
CFMetadataInstance.resource.hash == 2144393076 || CFMetadataInstance.resource.hash == 2144393077
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == 65536
CommitLog.instance.MAX_MUTATION_SIZE == 2621440
CommitLog.instance.archiver.restorePointInTime == 4510987932000L
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS == 100
CommitLog.instance.executor.markerIntervalNanos == 1000000
CommitLog.instance.executor.pending == 0 || CommitLog.instance.executor.pending == 1
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == 12
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == 8
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == 5242880
CommitLog.instance.segmentManager.allocatingFrom.fd == 179 || CommitLog.instance.segmentManager.allocatingFrom.fd == 183 || CommitLog.instance.segmentManager.allocatingFrom.fd == 185
CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224493L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224494L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224495L
CommitLog.instance.segmentManager.allocatingFrom.idBase == 1731353224472L
CommitLog.instance.segmentManager.allocatingFrom.nextId == 23 || CommitLog.instance.segmentManager.allocatingFrom.nextId == 24 || CommitLog.instance.segmentManager.allocatingFrom.nextId == 25
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == 1731353224475L
CommitLog.instance.segmentManager.availableSegment.allocatePosition == 28
CommitLog.instance.segmentManager.availableSegment.fd == 179 || CommitLog.instance.segmentManager.availableSegment.fd == 183 || CommitLog.instance.segmentManager.availableSegment.fd == 217
CommitLog.instance.segmentManager.availableSegment.id == 1731353224494L || CommitLog.instance.segmentManager.availableSegment.id == 1731353224495L || CommitLog.instance.segmentManager.availableSegment.id == 1731353224496L
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == 20
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize == 3
CommitLog.instance.segmentManager.size == 10485760 || CommitLog.instance.segmentManager.size == 15728640
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
("oneOf.java.jpp: SEQUENCE unimplemented" != null)
StorageService.instance.RING_DELAY == 30000
daikon.Quant.fuzzy.eq(StorageService.instance.traceProbability, 0.0)
cfsInstance.compactionStrategyManager.fanout == 10
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD == 32
cfsInstance.fileIndexGenerator == 0 || cfsInstance.fileIndexGenerator == 1 || cfsInstance.fileIndexGenerator == 2
cfsInstance.indexManager.DEFAULT_PAGE_SIZE == 10000
cfsInstance.metadata.resource.hash == 2144393076 || cfsInstance.metadata.resource.hash == 2144393077
cfsInstance.readOrdering.current.id >= 0
cfsInstance.sampleLatencyNanos == 0 || cfsInstance.sampleLatencyNanos == 2500000000L
daikon.Quant.eltsNotEqual(resultSetInstance.rows_FOR_ENCLOSING_USE, null)
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK >= CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.size
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK >= cfsInstance.fileIndexGenerator
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != cfsInstance.sampleLatencyNanos
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != resultSetInstance.metadata.columnCount
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.size
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > cfsInstance.fileIndexGenerator
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > cfsInstance.readOrdering.current.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK != cfsInstance.sampleLatencyNanos
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK <= CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK >= CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.size
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK != cfsInstance.sampleLatencyNanos
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK <= resultSetInstance.metadata.columnCount
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.partitionColumns.regulars.complexIdx > CFMetadataInstance.partitionColumns.statics.complexIdx
CFMetadataInstance.partitionColumns.regulars.complexIdx < CFMetadataInstance.partitioner.HEAP_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CFMetadataInstance.partitioner.MAXIMUM
CFMetadataInstance.partitionColumns.regulars.complexIdx > CFMetadataInstance.partitioner.MINIMUM.token
CFMetadataInstance.partitionColumns.regulars.complexIdx < CFMetadataInstance.resource.hash
CFMetadataInstance.partitionColumns.regulars.complexIdx < CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.MAX_MUTATION_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.archiver.restorePointInTime
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.markerIntervalNanos
CFMetadataInstance.partitionColumns.regulars.complexIdx >= CommitLog.instance.executor.pending
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.written
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.idBase
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitionColumns.regulars.complexIdx < StorageService.instance.RING_DELAY
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.compactionStrategyManager.fanout
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
cfsInstance.fileIndexGenerator % CFMetadataInstance.partitionColumns.regulars.complexIdx == 0
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.metadata.resource.hash
CFMetadataInstance.partitionColumns.regulars.complexIdx != cfsInstance.sampleLatencyNanos
CFMetadataInstance.partitionColumns.regulars.complexIdx != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.partitionColumns.statics.complexIdx < CFMetadataInstance.resource.hash
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitionColumns.statics.complexIdx <= CommitLog.instance.executor.pending
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.written
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitionColumns.statics.complexIdx <= cfsInstance.fileIndexGenerator
CFMetadataInstance.partitionColumns.statics.complexIdx < cfsInstance.metadata.resource.hash
CFMetadataInstance.partitionColumns.statics.complexIdx <= cfsInstance.readOrdering.current.id
CFMetadataInstance.partitionColumns.statics.complexIdx <= cfsInstance.sampleLatencyNanos
CFMetadataInstance.partitionColumns.statics.complexIdx < resultSetInstance.metadata.columnCount
CFMetadataInstance.partitionColumns.statics.complexIdx <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.HEAP_SIZE < CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.HEAP_SIZE > CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.executor.written
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.HEAP_SIZE > cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.HEAP_SIZE < cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.HEAP_SIZE > cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.HEAP_SIZE != cfsInstance.sampleLatencyNanos
CFMetadataInstance.partitioner.HEAP_SIZE > resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.HEAP_SIZE != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.HEAP_SIZE != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.partitioner.MAXIMUM > CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.written
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.sampleLatencyNanos
CFMetadataInstance.partitioner.MAXIMUM > resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.MAXIMUM > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.MINIMUM.token < CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.written
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.sampleLatencyNanos
CFMetadataInstance.partitioner.MINIMUM.token < resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.MINIMUM.token < daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.resource.hash > CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE
CFMetadataInstance.resource.hash > CommitLog.instance.MAX_MUTATION_SIZE
CFMetadataInstance.resource.hash < CommitLog.instance.archiver.restorePointInTime
CFMetadataInstance.resource.hash > CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS
CFMetadataInstance.resource.hash < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.resource.hash > CommitLog.instance.executor.markerIntervalNanos
CFMetadataInstance.resource.hash > CommitLog.instance.executor.pending
CFMetadataInstance.resource.hash > CommitLog.instance.executor.written
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.idBase
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.size
CFMetadataInstance.resource.hash > StorageService.instance.RING_DELAY
CFMetadataInstance.resource.hash > cfsInstance.compactionStrategyManager.fanout
CFMetadataInstance.resource.hash > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CFMetadataInstance.resource.hash > cfsInstance.fileIndexGenerator
CFMetadataInstance.resource.hash > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CFMetadataInstance.resource.hash >= cfsInstance.metadata.resource.hash
CFMetadataInstance.resource.hash > cfsInstance.readOrdering.current.id
CFMetadataInstance.resource.hash != cfsInstance.sampleLatencyNanos
CFMetadataInstance.resource.hash > resultSetInstance.metadata.columnCount
CFMetadataInstance.resource.hash > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.executor.pending
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.executor.written
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.size
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > cfsInstance.fileIndexGenerator
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < cfsInstance.metadata.resource.hash
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > cfsInstance.readOrdering.current.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE != cfsInstance.sampleLatencyNanos
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > resultSetInstance.metadata.columnCount
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.executor.pending
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.executor.written
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.size
CommitLog.instance.MAX_MUTATION_SIZE > cfsInstance.fileIndexGenerator
CommitLog.instance.MAX_MUTATION_SIZE < cfsInstance.metadata.resource.hash
CommitLog.instance.MAX_MUTATION_SIZE > cfsInstance.readOrdering.current.id
CommitLog.instance.MAX_MUTATION_SIZE != cfsInstance.sampleLatencyNanos
CommitLog.instance.MAX_MUTATION_SIZE > resultSetInstance.metadata.columnCount
CommitLog.instance.MAX_MUTATION_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.archiver.restorePointInTime < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.executor.pending
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.executor.written
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.size
CommitLog.instance.archiver.restorePointInTime > cfsInstance.fileIndexGenerator
CommitLog.instance.archiver.restorePointInTime > cfsInstance.metadata.resource.hash
CommitLog.instance.archiver.restorePointInTime > cfsInstance.readOrdering.current.id
CommitLog.instance.archiver.restorePointInTime > cfsInstance.sampleLatencyNanos
CommitLog.instance.archiver.restorePointInTime % resultSetInstance.metadata.columnCount == 0
CommitLog.instance.archiver.restorePointInTime > resultSetInstance.metadata.columnCount
CommitLog.instance.archiver.restorePointInTime > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > CommitLog.instance.executor.pending
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.executor.written
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < cfsInstance.metadata.resource.hash
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS != cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.markerIntervalNanos
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.pending
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.written
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.size
CommitLog.instance.executor.lastSyncedAt > StorageService.instance.RING_DELAY
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.lastSyncedAt > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.lastSyncedAt > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.lastSyncedAt > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.lastSyncedAt > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.lastSyncedAt > cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.lastSyncedAt > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.lastSyncedAt > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.executor.pending
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.executor.written
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.markerIntervalNanos > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.markerIntervalNanos < cfsInstance.metadata.resource.hash
CommitLog.instance.executor.markerIntervalNanos > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.markerIntervalNanos != cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.markerIntervalNanos > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.markerIntervalNanos > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.pending < CommitLog.instance.executor.written
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.pending < StorageService.instance.RING_DELAY
CommitLog.instance.executor.pending < cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.pending < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.pending <= cfsInstance.fileIndexGenerator
CommitLog.instance.executor.pending < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.pending < cfsInstance.metadata.resource.hash
CommitLog.instance.executor.pending <= cfsInstance.readOrdering.current.id
CommitLog.instance.executor.pending <= resultSetInstance.metadata.columnCount
CommitLog.instance.executor.syncComplete.CANCELLED <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.written != CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.written != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.written != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.written < StorageService.instance.RING_DELAY
CommitLog.instance.executor.written > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.written > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.written > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.written < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.written < cfsInstance.metadata.resource.hash
CommitLog.instance.executor.written > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.written != cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.written > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.written > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE != resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 8 == 0
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.fd != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.fd < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.fd < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.fd < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.fd != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.fd > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.fd != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.fd != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.id < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.id > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.id > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.id > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.idBase < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.idBase > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.idBase > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset >= CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.nextId > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.nextId > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.nextId < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.nextId != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.nextId > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.nextId != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.nextId != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.allocatePosition > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.allocatePosition < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.allocatePosition > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.allocatePosition != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.availableSegment.allocatePosition > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.allocatePosition != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.allocatePosition != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CommitLog.instance.segmentManager.availableSegment.fd < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.availableSegment.fd > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.availableSegment.fd > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.availableSegment.fd < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.fd < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.fd < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.availableSegment.fd < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.fd != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.availableSegment.fd > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.fd != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.fd != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.id > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.availableSegment.id > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.id > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset >= resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize >= cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.size > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.size > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.size > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.size > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.size > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.size < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.size > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.size != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.size > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.size > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
daikon.Quant.subsetOf(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE, resultSetInstance.rows_FOR_ENCLOSING_USE)
StorageService.instance.RING_DELAY > cfsInstance.fileIndexGenerator
StorageService.instance.RING_DELAY < cfsInstance.metadata.resource.hash
StorageService.instance.RING_DELAY > cfsInstance.readOrdering.current.id
StorageService.instance.RING_DELAY != cfsInstance.sampleLatencyNanos
StorageService.instance.RING_DELAY % resultSetInstance.metadata.columnCount == 0
StorageService.instance.RING_DELAY > resultSetInstance.metadata.columnCount
StorageService.instance.RING_DELAY > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.compactionStrategyManager.fanout > cfsInstance.fileIndexGenerator
cfsInstance.compactionStrategyManager.fanout < cfsInstance.metadata.resource.hash
cfsInstance.compactionStrategyManager.fanout > cfsInstance.readOrdering.current.id
cfsInstance.compactionStrategyManager.fanout != cfsInstance.sampleLatencyNanos
cfsInstance.compactionStrategyManager.fanout != resultSetInstance.metadata.columnCount
cfsInstance.compactionStrategyManager.fanout != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.compactionStrategyManager.fanout != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > cfsInstance.fileIndexGenerator
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD < cfsInstance.metadata.resource.hash
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > cfsInstance.readOrdering.current.id
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD != cfsInstance.sampleLatencyNanos
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > resultSetInstance.metadata.columnCount
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
cfsInstance.fileIndexGenerator < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
cfsInstance.fileIndexGenerator < cfsInstance.metadata.resource.hash
cfsInstance.fileIndexGenerator != resultSetInstance.metadata.columnCount
cfsInstance.fileIndexGenerator != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
cfsInstance.indexManager.DEFAULT_PAGE_SIZE < cfsInstance.metadata.resource.hash
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > cfsInstance.readOrdering.current.id
cfsInstance.indexManager.DEFAULT_PAGE_SIZE != cfsInstance.sampleLatencyNanos
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > resultSetInstance.metadata.columnCount
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.metadata.resource.hash > cfsInstance.readOrdering.current.id
cfsInstance.metadata.resource.hash != cfsInstance.sampleLatencyNanos
cfsInstance.metadata.resource.hash > resultSetInstance.metadata.columnCount
cfsInstance.metadata.resource.hash > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.sampleLatencyNanos != resultSetInstance.metadata.columnCount
cfsInstance.sampleLatencyNanos != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
resultSetInstance.metadata.columnCount != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.partitionColumns.regulars.complexIdx + CommitLog.instance.executor.pending + CommitLog.instance.segmentManager.allocatingFrom.id - 1.731353224496E12 == 0
CFMetadataInstance.partitionColumns.regulars.complexIdx + CommitLog.instance.executor.pending + CommitLog.instance.segmentManager.availableSegment.id - 1.731353224497E12 == 0
CFMetadataInstance.partitionColumns.regulars.complexIdx + CommitLog.instance.segmentManager.allocatingFrom.nextId - cfsInstance.metadata.resource.hash + 2144393051 == 0
2 * CFMetadataInstance.resource.hash - 2 * CommitLog.instance.executor.pending + CommitLog.instance.segmentManager.allocatingFrom.fd - 4.288786335E9 == 0
CFMetadataInstance.resource.hash - CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.id + 1.729208831418E12 == 0
CFMetadataInstance.resource.hash - CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.nextId - 2144393052 == 0
4 * CFMetadataInstance.resource.hash - 4 * CommitLog.instance.executor.pending + CommitLog.instance.segmentManager.availableSegment.fd - 8.577572483E9 == 0
CFMetadataInstance.resource.hash - CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.availableSegment.id + 1.729208831419E12 == 0
CFMetadataInstance.resource.hash - CommitLog.instance.executor.pending - cfsInstance.readOrdering.current.id - 2144393073 == 0
CFMetadataInstance.resource.hash + CommitLog.instance.executor.pending + daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 2144393077 == 0
CFMetadataInstance.resource.hash - CommitLog.instance.segmentManager.allocatingFrom.nextId + cfsInstance.metadata.resource.hash - 4.288786129E9 == 0
CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.id + cfsInstance.readOrdering.current.id + 1.73135322449E12 == 0
CommitLog.instance.executor.pending + CommitLog.instance.segmentManager.allocatingFrom.id + daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224494E12 == 0
CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.availableSegment.id + cfsInstance.readOrdering.current.id + 1.731353224491E12 == 0
CommitLog.instance.executor.pending + CommitLog.instance.segmentManager.availableSegment.id + daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224495E12 == 0
2 * CommitLog.instance.segmentManager.allocatingFrom.fd + 6 * CommitLog.instance.segmentManager.allocatingFrom.id + cfsInstance.fileIndexGenerator - 1.038811934733E13 == 0
2 * CommitLog.instance.segmentManager.allocatingFrom.fd + 6 * CommitLog.instance.segmentManager.availableSegment.id + cfsInstance.fileIndexGenerator - 1.0388119347336E13 == 0
CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.readOrdering.current.id - daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.73135322449E12 == 0
CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.readOrdering.current.id - daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224491E12 == 0
===========================================================================
org.apache.cassandra.cql3.SimpleQueryTest@testRowDeletion-54916894:::dump
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.keyValidator.isByteOrderComparable
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.allocatingFrom.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.availableSegment.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.joinRing
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.useStrictConsistency
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionSpaceCheck
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.enabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.partitionSSTablesByTokenRange
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_ENABLED
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.isEnabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.shouldDefragment
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.supportsEarlyOpen
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.data.loadsstables
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.directories.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.keyspace.initialized
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.allColumnFilter.isFetchAll
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.keyValidator.isByteOrderComparable
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.viewManager.baseTableMetadata.isCompound
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MIN_THRESHOLD
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CFMetadataInstance.partitioner.MINIMUM.serialVersionUID
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.executor.syncComplete.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.managerThreadWaitQueue.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.segmentPrepared.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == StorageService.instance.threadCounter
CFMetadataInstance.isCounter == CFMetadataInstance.isDense
CFMetadataInstance.isCounter == CFMetadataInstance.isIndex
CFMetadataInstance.isCounter == CFMetadataInstance.isSuper
CFMetadataInstance.isCounter == CFMetadataInstance.isView
CFMetadataInstance.isCounter == CFMetadataInstance.partitioner.partitionOrdering.isByteOrderComparable
CFMetadataInstance.isCounter == CommitLog.instance.executor.shutdown
CFMetadataInstance.isCounter == CommitLog.instance.executor.syncRequested
CFMetadataInstance.isCounter == CommitLog.instance.segmentManager.shutdown
CFMetadataInstance.isCounter == StorageService.instance.allowSimultaneousMoves
CFMetadataInstance.isCounter == StorageService.instance.authSetupCalled
CFMetadataInstance.isCounter == StorageService.instance.authSetupComplete
CFMetadataInstance.isCounter == StorageService.instance.gossipActive
CFMetadataInstance.isCounter == StorageService.instance.initialized
CFMetadataInstance.isCounter == StorageService.instance.isBootstrapMode
CFMetadataInstance.isCounter == StorageService.instance.isDecommissioning
CFMetadataInstance.isCounter == StorageService.instance.isRebuilding
CFMetadataInstance.isCounter == StorageService.instance.isShutdown
CFMetadataInstance.isCounter == StorageService.instance.isSurveyMode
CFMetadataInstance.isCounter == StorageService.instance.joined
CFMetadataInstance.isCounter == StorageService.instance.replacing
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.compactionLogger.enabled
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.currentBoundaries.isInvalid
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.diskBoundaryManager.diskBoundaries.isInvalid
CFMetadataInstance.isCounter == cfsInstance.keyspace.TEST_FAIL_WRITES
CFMetadataInstance.isCounter == cfsInstance.keyspace.viewManager.enableCoordinatorBatchlog
CFMetadataInstance.isCounter == cfsInstance.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.metric.aliasFactory.isIndex
CFMetadataInstance.isCounter == cfsInstance.metric.factory.isIndex
CFMetadataInstance.isCounter == cfsInstance.readOrdering.current.isBlocking
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isDense
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isView
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.executor.syncComplete.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.bufferPool.usedBuffers
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.managerThreadWaitQueue.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.segmentPrepared.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == QueryProcessor.instance.lastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.statics.complexIdx == QueryProcessor.instance.thriftLastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.legacyProgressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.nextRepairCommand
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.progressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.remainingCFs
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.tokenMetadata.ringVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.totalCFs
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.compactionLogger.identifier
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.currentBoundaries.directoriesVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.diskBoundaryManager.diskBoundaries.ringVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.keyspace.TEST_FAIL_MV_LOCKS_COUNT
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.keyspace.replicationStrategy.lastInvalidatedVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.readOrdering.current.running
CFMetadataInstance.partitionColumns.statics.complexIdx == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.HEAP_SIZE == StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.HEAP_SIZE == StorageService.instance.valueFactory.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.HEAP_SIZE == cfsInstance.metadata.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.MAXIMUM == StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CFMetadataInstance.partitioner.MAXIMUM == StorageService.instance.valueFactory.partitioner.MAXIMUM
CFMetadataInstance.partitioner.MAXIMUM == cfsInstance.metadata.partitioner.MAXIMUM
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == CommitLog.instance.configuration.encryptionContext.chunkLength
CommitLog.instance.executor.markerIntervalNanos == CommitLog.instance.executor.syncIntervalNanos
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.managerThreadWaitQueue.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.segmentPrepared.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.keyspace.writeOrder.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.readOrdering.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)-1
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == CommitLog.instance.segmentManager.availableSegment.ENTRY_OVERHEAD_SIZE
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == CommitLog.instance.segmentManager.availableSegment.SYNC_MARKER_SIZE
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.availableSegment.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.bufferPool.bufferSize
CommitLog.instance.segmentManager.allocatingFrom.idBase == CommitLog.instance.segmentManager.availableSegment.idBase
CommitLog.instance.segmentManager.allocatingFrom.nextId == CommitLog.instance.segmentManager.availableSegment.nextId
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == CommitLog.instance.segmentManager.availableSegment.replayLimitId
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == CommitLog.instance.segmentManager.availableSegment.lastSyncedOffset
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE == resultSetInstance.rows_FOR_ENCLOSING_USE
cfsInstance.compactionStrategyManager.isActive == cfsInstance.valid
CFMetadataInstance.allColumnFilter.isFetchAll == true
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK == 2
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == 4
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == 1
CFMetadataInstance.isCounter == false
CFMetadataInstance.partitionColumns.regulars.complexIdx == 1 || CFMetadataInstance.partitionColumns.regulars.complexIdx == 2
CFMetadataInstance.partitioner.HEAP_SIZE == 24
CFMetadataInstance.partitioner.MAXIMUM == 9223372036854775807L
CFMetadataInstance.partitioner.MINIMUM.token == -9223372036854775808L
CFMetadataInstance.resource.hash == 2144393075 || CFMetadataInstance.resource.hash == 2144393076
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == 65536
CommitLog.instance.MAX_MUTATION_SIZE == 2621440
CommitLog.instance.archiver.restorePointInTime == 4510987932000L
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS == 100
CommitLog.instance.executor.markerIntervalNanos == 1000000
CommitLog.instance.executor.pending == 0 || CommitLog.instance.executor.pending == 1 || CommitLog.instance.executor.pending == 2
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == 12
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == 8
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == 5242880
CommitLog.instance.segmentManager.allocatingFrom.fd == 177 || CommitLog.instance.segmentManager.allocatingFrom.fd == 180 || CommitLog.instance.segmentManager.allocatingFrom.fd == 185
CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224491L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224492L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224493L
CommitLog.instance.segmentManager.allocatingFrom.idBase == 1731353224472L
CommitLog.instance.segmentManager.allocatingFrom.nextId == 21 || CommitLog.instance.segmentManager.allocatingFrom.nextId == 22 || CommitLog.instance.segmentManager.allocatingFrom.nextId == 23
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == 1731353224475L
CommitLog.instance.segmentManager.availableSegment.allocatePosition == 28
CommitLog.instance.segmentManager.availableSegment.fd == 180 || CommitLog.instance.segmentManager.availableSegment.fd == 183 || CommitLog.instance.segmentManager.availableSegment.fd == 185
CommitLog.instance.segmentManager.availableSegment.id == 1731353224492L || CommitLog.instance.segmentManager.availableSegment.id == 1731353224493L || CommitLog.instance.segmentManager.availableSegment.id == 1731353224494L
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == 20
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize == 3
CommitLog.instance.segmentManager.size == 10485760 || CommitLog.instance.segmentManager.size == 15728640
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
("oneOf.java.jpp: SEQUENCE unimplemented" != null)
StorageService.instance.RING_DELAY == 30000
daikon.Quant.fuzzy.eq(StorageService.instance.traceProbability, 0.0)
cfsInstance.compactionStrategyManager.fanout == 10
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD == 32
cfsInstance.fileIndexGenerator == 0 || cfsInstance.fileIndexGenerator == 1 || cfsInstance.fileIndexGenerator == 2
cfsInstance.indexManager.DEFAULT_PAGE_SIZE == 10000
cfsInstance.metadata.resource.hash == 2144393075 || cfsInstance.metadata.resource.hash == 2144393076
cfsInstance.readOrdering.current.id == 0 || cfsInstance.readOrdering.current.id == 1 || cfsInstance.readOrdering.current.id == 2
cfsInstance.sampleLatencyNanos == 0 || cfsInstance.sampleLatencyNanos == 2500000000L
resultSetInstance.metadata.columnCount >= 1
daikon.Quant.eltsNotEqual(resultSetInstance.rows_FOR_ENCLOSING_USE, null)
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK >= CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK >= CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.size
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK >= cfsInstance.fileIndexGenerator
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK >= cfsInstance.readOrdering.current.id
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != cfsInstance.sampleLatencyNanos
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != resultSetInstance.metadata.columnCount
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.size
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > cfsInstance.fileIndexGenerator
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > cfsInstance.readOrdering.current.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK != cfsInstance.sampleLatencyNanos
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK <= CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.size
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK != cfsInstance.sampleLatencyNanos
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK <= resultSetInstance.metadata.columnCount
CFMetadataInstance.partitionColumns.regulars.complexIdx > CFMetadataInstance.partitionColumns.statics.complexIdx
CFMetadataInstance.partitionColumns.regulars.complexIdx < CFMetadataInstance.partitioner.HEAP_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CFMetadataInstance.partitioner.MAXIMUM
CFMetadataInstance.partitionColumns.regulars.complexIdx > CFMetadataInstance.partitioner.MINIMUM.token
CFMetadataInstance.partitionColumns.regulars.complexIdx < CFMetadataInstance.resource.hash
CFMetadataInstance.partitionColumns.regulars.complexIdx < CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.MAX_MUTATION_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.archiver.restorePointInTime
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.markerIntervalNanos
CFMetadataInstance.partitionColumns.regulars.complexIdx != CommitLog.instance.executor.pending
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.written
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.idBase
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitionColumns.regulars.complexIdx < StorageService.instance.RING_DELAY
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.compactionStrategyManager.fanout
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CFMetadataInstance.partitionColumns.regulars.complexIdx >= cfsInstance.fileIndexGenerator
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.metadata.resource.hash
CFMetadataInstance.partitionColumns.regulars.complexIdx != cfsInstance.sampleLatencyNanos
CFMetadataInstance.partitionColumns.regulars.complexIdx != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.partitionColumns.statics.complexIdx < CFMetadataInstance.resource.hash
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitionColumns.statics.complexIdx <= CommitLog.instance.executor.pending
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.written
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitionColumns.statics.complexIdx <= cfsInstance.fileIndexGenerator
CFMetadataInstance.partitionColumns.statics.complexIdx < cfsInstance.metadata.resource.hash
CFMetadataInstance.partitionColumns.statics.complexIdx <= cfsInstance.readOrdering.current.id
CFMetadataInstance.partitionColumns.statics.complexIdx <= cfsInstance.sampleLatencyNanos
CFMetadataInstance.partitionColumns.statics.complexIdx < resultSetInstance.metadata.columnCount
CFMetadataInstance.partitionColumns.statics.complexIdx <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.HEAP_SIZE < CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.HEAP_SIZE > CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.executor.written
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.HEAP_SIZE != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.HEAP_SIZE != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.HEAP_SIZE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.HEAP_SIZE > cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.HEAP_SIZE < cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.HEAP_SIZE > cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.HEAP_SIZE != cfsInstance.sampleLatencyNanos
CFMetadataInstance.partitioner.HEAP_SIZE > resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.HEAP_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.MAXIMUM > CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.written
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.sampleLatencyNanos
CFMetadataInstance.partitioner.MAXIMUM > resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.MAXIMUM > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.MINIMUM.token < CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.written
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.sampleLatencyNanos
CFMetadataInstance.partitioner.MINIMUM.token < resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.MINIMUM.token < daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.resource.hash > CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE
CFMetadataInstance.resource.hash > CommitLog.instance.MAX_MUTATION_SIZE
CFMetadataInstance.resource.hash < CommitLog.instance.archiver.restorePointInTime
CFMetadataInstance.resource.hash > CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS
CFMetadataInstance.resource.hash < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.resource.hash > CommitLog.instance.executor.markerIntervalNanos
CFMetadataInstance.resource.hash > CommitLog.instance.executor.pending
CFMetadataInstance.resource.hash > CommitLog.instance.executor.written
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.idBase
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.size
CFMetadataInstance.resource.hash > StorageService.instance.RING_DELAY
CFMetadataInstance.resource.hash > cfsInstance.compactionStrategyManager.fanout
CFMetadataInstance.resource.hash > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CFMetadataInstance.resource.hash > cfsInstance.fileIndexGenerator
CFMetadataInstance.resource.hash > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CFMetadataInstance.resource.hash >= cfsInstance.metadata.resource.hash
CFMetadataInstance.resource.hash > cfsInstance.readOrdering.current.id
CFMetadataInstance.resource.hash != cfsInstance.sampleLatencyNanos
CFMetadataInstance.resource.hash > resultSetInstance.metadata.columnCount
CFMetadataInstance.resource.hash > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.executor.pending
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.executor.written
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.size
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > cfsInstance.fileIndexGenerator
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < cfsInstance.metadata.resource.hash
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > cfsInstance.readOrdering.current.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE != cfsInstance.sampleLatencyNanos
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > resultSetInstance.metadata.columnCount
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.executor.pending
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.executor.written
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.size
CommitLog.instance.MAX_MUTATION_SIZE > cfsInstance.fileIndexGenerator
CommitLog.instance.MAX_MUTATION_SIZE < cfsInstance.metadata.resource.hash
CommitLog.instance.MAX_MUTATION_SIZE > cfsInstance.readOrdering.current.id
CommitLog.instance.MAX_MUTATION_SIZE != cfsInstance.sampleLatencyNanos
CommitLog.instance.MAX_MUTATION_SIZE > resultSetInstance.metadata.columnCount
CommitLog.instance.MAX_MUTATION_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.archiver.restorePointInTime < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.executor.pending
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.executor.written
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.size
CommitLog.instance.archiver.restorePointInTime > cfsInstance.fileIndexGenerator
CommitLog.instance.archiver.restorePointInTime > cfsInstance.metadata.resource.hash
CommitLog.instance.archiver.restorePointInTime > cfsInstance.readOrdering.current.id
CommitLog.instance.archiver.restorePointInTime > cfsInstance.sampleLatencyNanos
CommitLog.instance.archiver.restorePointInTime % resultSetInstance.metadata.columnCount == 0
CommitLog.instance.archiver.restorePointInTime > resultSetInstance.metadata.columnCount
CommitLog.instance.archiver.restorePointInTime > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > CommitLog.instance.executor.pending
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.executor.written
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS != CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < cfsInstance.metadata.resource.hash
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS != cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.markerIntervalNanos
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.pending
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.written
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.size
CommitLog.instance.executor.lastSyncedAt > StorageService.instance.RING_DELAY
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.lastSyncedAt > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.lastSyncedAt > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.lastSyncedAt > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.lastSyncedAt > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.lastSyncedAt > cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.lastSyncedAt > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.lastSyncedAt > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.executor.pending
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.executor.written
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.markerIntervalNanos > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.markerIntervalNanos < cfsInstance.metadata.resource.hash
CommitLog.instance.executor.markerIntervalNanos > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.markerIntervalNanos != cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.markerIntervalNanos > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.markerIntervalNanos > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.pending < CommitLog.instance.executor.written
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.pending < StorageService.instance.RING_DELAY
CommitLog.instance.executor.pending < cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.pending < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.pending < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.pending < cfsInstance.metadata.resource.hash
CommitLog.instance.executor.pending <= cfsInstance.readOrdering.current.id
CommitLog.instance.executor.pending != resultSetInstance.metadata.columnCount
CommitLog.instance.executor.syncComplete.CANCELLED <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.written != CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.written != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.written != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.written < StorageService.instance.RING_DELAY
CommitLog.instance.executor.written > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.written > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.written > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.written < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.written < cfsInstance.metadata.resource.hash
CommitLog.instance.executor.written > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.written != cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.written > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.written > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE != resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 8 == 0
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition >= CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.fd != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.fd != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.fd != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.fd < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.fd < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.fd < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.fd != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.fd > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.fd > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.id < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.id > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.id > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.id > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.idBase < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.idBase > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.idBase > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset >= CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset >= CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset >= CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.nextId > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.nextId > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.nextId < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.nextId != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.nextId > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.nextId > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.allocatePosition > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.allocatePosition < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.allocatePosition > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.allocatePosition != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.availableSegment.allocatePosition > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.allocatePosition > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.fd < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.availableSegment.fd > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.availableSegment.fd > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.availableSegment.fd < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.fd < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.fd < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.availableSegment.fd < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.fd != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.availableSegment.fd > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.fd > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.id > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.availableSegment.id > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.id > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset >= resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CommitLog.instance.segmentManager.size > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.size > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.size > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.size > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.size > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.size < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.size > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.size != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.size > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.size > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
daikon.Quant.subsetOf(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE, resultSetInstance.rows_FOR_ENCLOSING_USE)
StorageService.instance.RING_DELAY > cfsInstance.fileIndexGenerator
StorageService.instance.RING_DELAY < cfsInstance.metadata.resource.hash
StorageService.instance.RING_DELAY > cfsInstance.readOrdering.current.id
StorageService.instance.RING_DELAY != cfsInstance.sampleLatencyNanos
StorageService.instance.RING_DELAY % resultSetInstance.metadata.columnCount == 0
StorageService.instance.RING_DELAY > resultSetInstance.metadata.columnCount
StorageService.instance.RING_DELAY > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.compactionStrategyManager.fanout > cfsInstance.fileIndexGenerator
cfsInstance.compactionStrategyManager.fanout < cfsInstance.metadata.resource.hash
cfsInstance.compactionStrategyManager.fanout > cfsInstance.readOrdering.current.id
cfsInstance.compactionStrategyManager.fanout != cfsInstance.sampleLatencyNanos
cfsInstance.compactionStrategyManager.fanout != resultSetInstance.metadata.columnCount
cfsInstance.compactionStrategyManager.fanout > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > cfsInstance.fileIndexGenerator
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD < cfsInstance.metadata.resource.hash
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > cfsInstance.readOrdering.current.id
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD != cfsInstance.sampleLatencyNanos
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > resultSetInstance.metadata.columnCount
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.fileIndexGenerator < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
cfsInstance.fileIndexGenerator < cfsInstance.metadata.resource.hash
cfsInstance.fileIndexGenerator != cfsInstance.sampleLatencyNanos
cfsInstance.fileIndexGenerator <= resultSetInstance.metadata.columnCount
cfsInstance.indexManager.DEFAULT_PAGE_SIZE < cfsInstance.metadata.resource.hash
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > cfsInstance.readOrdering.current.id
cfsInstance.indexManager.DEFAULT_PAGE_SIZE != cfsInstance.sampleLatencyNanos
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > resultSetInstance.metadata.columnCount
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.metadata.resource.hash > cfsInstance.readOrdering.current.id
cfsInstance.metadata.resource.hash != cfsInstance.sampleLatencyNanos
cfsInstance.metadata.resource.hash > resultSetInstance.metadata.columnCount
cfsInstance.metadata.resource.hash > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.readOrdering.current.id != cfsInstance.sampleLatencyNanos
cfsInstance.sampleLatencyNanos != resultSetInstance.metadata.columnCount
cfsInstance.sampleLatencyNanos % resultSetInstance.metadata.columnCount == 0
resultSetInstance.metadata.columnCount >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
5242880 * CFMetadataInstance.partitionColumns.regulars.complexIdx - 5242880 * CommitLog.instance.segmentManager.allocatingFrom.id + CommitLog.instance.segmentManager.size + 9.0772771936036454E18 == 0
3 * CFMetadataInstance.partitionColumns.regulars.complexIdx - 2 * CommitLog.instance.segmentManager.allocatingFrom.id + cfsInstance.fileIndexGenerator + 3.462706448978E12 == 0
CFMetadataInstance.partitionColumns.regulars.complexIdx - CommitLog.instance.segmentManager.allocatingFrom.nextId + cfsInstance.metadata.resource.hash - 2144393055 == 0
5242880 * CFMetadataInstance.partitionColumns.regulars.complexIdx - 5242880 * CommitLog.instance.segmentManager.availableSegment.id + CommitLog.instance.segmentManager.size + 9.0772771936088883E18 == 0
3 * CFMetadataInstance.partitionColumns.regulars.complexIdx - 2 * CommitLog.instance.segmentManager.availableSegment.id + cfsInstance.fileIndexGenerator + 3.46270644898E12 == 0
5242880 * CFMetadataInstance.resource.hash + 2621440 * CommitLog.instance.executor.pending + CommitLog.instance.segmentManager.size - 1.124279558078464E16 == 0
2 * CFMetadataInstance.resource.hash + CommitLog.instance.executor.pending - 2 * cfsInstance.readOrdering.current.id - 4.288786148E9 == 0
2 * CFMetadataInstance.resource.hash + CommitLog.instance.executor.pending + 2 * daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 4.288786152E9 == 0
26214400 * CFMetadataInstance.resource.hash - 5242880 * CommitLog.instance.segmentManager.allocatingFrom.fd + 3 * CommitLog.instance.segmentManager.size - 5.621397692874752E16 == 0
11 * CFMetadataInstance.resource.hash - 2 * CommitLog.instance.segmentManager.allocatingFrom.fd + 5 * cfsInstance.fileIndexGenerator - 2.3588323476E10 == 0
5242880 * CFMetadataInstance.resource.hash - 5242880 * CommitLog.instance.segmentManager.allocatingFrom.id + CommitLog.instance.segmentManager.size + 9.0660343980438323E18 == 0
3 * CFMetadataInstance.resource.hash - 2 * CommitLog.instance.segmentManager.allocatingFrom.id + cfsInstance.fileIndexGenerator + 3.456273269756E12 == 0
5242880 * CFMetadataInstance.resource.hash - 5242880 * CommitLog.instance.segmentManager.allocatingFrom.nextId + CommitLog.instance.segmentManager.size - 1.124279546544128E16 == 0
3 * CFMetadataInstance.resource.hash - 2 * CommitLog.instance.segmentManager.allocatingFrom.nextId + cfsInstance.fileIndexGenerator - 6.433179184E9 == 0
CFMetadataInstance.resource.hash - CommitLog.instance.segmentManager.allocatingFrom.nextId + cfsInstance.metadata.resource.hash - 4.288786129E9 == 0
5242880 * CFMetadataInstance.resource.hash - 1048576 * CommitLog.instance.segmentManager.availableSegment.fd + CommitLog.instance.segmentManager.size - 1.124279538679808E16 == 0
5242880 * CFMetadataInstance.resource.hash - 5242880 * CommitLog.instance.segmentManager.availableSegment.id + CommitLog.instance.segmentManager.size + 9.0660343980490752E18 == 0
3 * CFMetadataInstance.resource.hash - 2 * CommitLog.instance.segmentManager.availableSegment.id + cfsInstance.fileIndexGenerator + 3.456273269758E12 == 0
2621440 * CFMetadataInstance.resource.hash - CommitLog.instance.segmentManager.size + 2621440 * cfsInstance.fileIndexGenerator - 5.62139777466368E15 == 0
1250000000 * CFMetadataInstance.resource.hash - 1250000000 * cfsInstance.readOrdering.current.id - cfsInstance.sampleLatencyNanos - 2.6804913424999997E18 == 0
CommitLog.instance.executor.lastSyncedAt - 28089917 * resultSetInstance.metadata.columnCount + 224674956 * daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 8.9406998411439E13 == 0
CommitLog.instance.executor.lastSyncedAt - 28089917 * resultSetInstance.metadata.columnCount + 224674956 * daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1 - 8.9406773736483E13 == 0
CommitLog.instance.executor.pending + 2 * CommitLog.instance.segmentManager.allocatingFrom.id - 2 * cfsInstance.readOrdering.current.id - 3.46270644898E12 == 0
CommitLog.instance.executor.pending + 2 * CommitLog.instance.segmentManager.allocatingFrom.id + 2 * daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 3.462706448984E12 == 0
CommitLog.instance.executor.pending + 2 * CommitLog.instance.segmentManager.availableSegment.id - 2 * cfsInstance.readOrdering.current.id - 3.462706448982E12 == 0
CommitLog.instance.executor.pending + 2 * CommitLog.instance.segmentManager.availableSegment.id + 2 * daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 3.462706448986E12 == 0
5242880 * CommitLog.instance.segmentManager.allocatingFrom.fd - 3 * CommitLog.instance.segmentManager.size - 26214400 * cfsInstance.metadata.resource.hash + 5.621397692874752E16 == 0
2 * CommitLog.instance.segmentManager.allocatingFrom.fd - 5 * cfsInstance.fileIndexGenerator - 11 * cfsInstance.metadata.resource.hash + 2.3588323476E10 == 0
5242880 * CommitLog.instance.segmentManager.allocatingFrom.id - 3 * CommitLog.instance.segmentManager.size + 5242880 * cfsInstance.fileIndexGenerator - 9.0772771935931597E18 == 0
5242880 * CommitLog.instance.segmentManager.allocatingFrom.id - CommitLog.instance.segmentManager.size - 5242880 * cfsInstance.metadata.resource.hash - 9.0660343980438323E18 == 0
2 * CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.fileIndexGenerator - 3 * cfsInstance.metadata.resource.hash - 3.456273269756E12 == 0
CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.readOrdering.current.id - daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224489E12 == 0
5242880 * CommitLog.instance.segmentManager.allocatingFrom.nextId - CommitLog.instance.segmentManager.size - 5242880 * cfsInstance.metadata.resource.hash + 1.124279546544128E16 == 0
2 * CommitLog.instance.segmentManager.allocatingFrom.nextId - cfsInstance.fileIndexGenerator - 3 * cfsInstance.metadata.resource.hash + 6.433179184E9 == 0
1048576 * CommitLog.instance.segmentManager.availableSegment.fd - CommitLog.instance.segmentManager.size - 5242880 * cfsInstance.metadata.resource.hash + 1.124279538679808E16 == 0
5242880 * CommitLog.instance.segmentManager.availableSegment.id - 3 * CommitLog.instance.segmentManager.size + 5242880 * cfsInstance.fileIndexGenerator - 9.0772771935984026E18 == 0
5242880 * CommitLog.instance.segmentManager.availableSegment.id - CommitLog.instance.segmentManager.size - 5242880 * cfsInstance.metadata.resource.hash - 9.0660343980490752E18 == 0
2 * CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.fileIndexGenerator - 3 * cfsInstance.metadata.resource.hash - 3.456273269758E12 == 0
CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.readOrdering.current.id - daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.73135322449E12 == 0
CommitLog.instance.segmentManager.size - 2621440 * cfsInstance.fileIndexGenerator - 2621440 * cfsInstance.metadata.resource.hash + 5.62139777466368E15 == 0
===========================================================================
org.apache.cassandra.cql3.SimpleQueryTest@testRowFilteringOnStaticColumn-1159781553:::dump
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.allocatingFrom.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.availableSegment.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.joinRing
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.useStrictConsistency
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionSpaceCheck
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.enabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_ENABLED
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.isEnabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.shouldDefragment
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.supportsEarlyOpen
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.data.loadsstables
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.directories.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.keyspace.initialized
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.allColumnFilter.isFetchAll
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.viewManager.baseTableMetadata.isCompound
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MIN_THRESHOLD
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CFMetadataInstance.partitioner.MINIMUM.serialVersionUID
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.executor.syncComplete.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.managerThreadWaitQueue.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.segmentPrepared.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == StorageService.instance.threadCounter
CFMetadataInstance.isCounter == CFMetadataInstance.isDense
CFMetadataInstance.isCounter == CFMetadataInstance.isSuper
CFMetadataInstance.isCounter == CFMetadataInstance.isView
CFMetadataInstance.isCounter == CFMetadataInstance.keyValidator.isByteOrderComparable
CFMetadataInstance.isCounter == CFMetadataInstance.partitioner.comparator.isByteOrderComparable
CFMetadataInstance.isCounter == CFMetadataInstance.partitioner.partitionOrdering.isByteOrderComparable
CFMetadataInstance.isCounter == CommitLog.instance.executor.shutdown
CFMetadataInstance.isCounter == CommitLog.instance.executor.syncRequested
CFMetadataInstance.isCounter == CommitLog.instance.segmentManager.shutdown
CFMetadataInstance.isCounter == StorageService.instance.allowSimultaneousMoves
CFMetadataInstance.isCounter == StorageService.instance.authSetupCalled
CFMetadataInstance.isCounter == StorageService.instance.authSetupComplete
CFMetadataInstance.isCounter == StorageService.instance.gossipActive
CFMetadataInstance.isCounter == StorageService.instance.initialized
CFMetadataInstance.isCounter == StorageService.instance.isBootstrapMode
CFMetadataInstance.isCounter == StorageService.instance.isDecommissioning
CFMetadataInstance.isCounter == StorageService.instance.isRebuilding
CFMetadataInstance.isCounter == StorageService.instance.isShutdown
CFMetadataInstance.isCounter == StorageService.instance.isSurveyMode
CFMetadataInstance.isCounter == StorageService.instance.joined
CFMetadataInstance.isCounter == StorageService.instance.replacing
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.compactionLogger.enabled
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.currentBoundaries.isInvalid
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.diskBoundaryManager.diskBoundaries.isInvalid
CFMetadataInstance.isCounter == cfsInstance.keyspace.TEST_FAIL_WRITES
CFMetadataInstance.isCounter == cfsInstance.keyspace.viewManager.enableCoordinatorBatchlog
CFMetadataInstance.isCounter == cfsInstance.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.metadata.keyValidator.isByteOrderComparable
CFMetadataInstance.isCounter == cfsInstance.readOrdering.current.isBlocking
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isDense
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isView
CFMetadataInstance.isIndex == CFMetadataInstance.partitioner.partitionOrdering.isByteOrderComparable
CFMetadataInstance.isIndex == cfsInstance.diskBoundaryManager.diskBoundaries.isInvalid
CFMetadataInstance.partitionColumns.regulars.complexIdx == CommitLog.instance.executor.syncComplete.NOT_SET
CFMetadataInstance.partitionColumns.regulars.complexIdx == CommitLog.instance.segmentManager.bufferPool.usedBuffers
CFMetadataInstance.partitionColumns.regulars.complexIdx == CommitLog.instance.segmentManager.managerThreadWaitQueue.NOT_SET
CFMetadataInstance.partitionColumns.regulars.complexIdx == CommitLog.instance.segmentManager.segmentPrepared.NOT_SET
CFMetadataInstance.partitionColumns.regulars.complexIdx == QueryProcessor.instance.lastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.regulars.complexIdx == QueryProcessor.instance.thriftLastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.regulars.complexIdx == StorageService.instance.legacyProgressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.regulars.complexIdx == StorageService.instance.nextRepairCommand
CFMetadataInstance.partitionColumns.regulars.complexIdx == StorageService.instance.progressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.regulars.complexIdx == StorageService.instance.remainingCFs
CFMetadataInstance.partitionColumns.regulars.complexIdx == StorageService.instance.tokenMetadata.ringVersion
CFMetadataInstance.partitionColumns.regulars.complexIdx == StorageService.instance.totalCFs
CFMetadataInstance.partitionColumns.regulars.complexIdx == cfsInstance.compactionStrategyManager.compactionLogger.identifier
CFMetadataInstance.partitionColumns.regulars.complexIdx == cfsInstance.compactionStrategyManager.currentBoundaries.directoriesVersion
CFMetadataInstance.partitionColumns.regulars.complexIdx == cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CFMetadataInstance.partitionColumns.regulars.complexIdx == cfsInstance.keyspace.TEST_FAIL_MV_LOCKS_COUNT
CFMetadataInstance.partitionColumns.regulars.complexIdx == cfsInstance.keyspace.replicationStrategy.lastInvalidatedVersion
CFMetadataInstance.partitionColumns.regulars.complexIdx == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)
CFMetadataInstance.partitionColumns.statics.complexIdx == CFMetadataInstance.partitioner.MINIMUM.serialVersionUID
CFMetadataInstance.partitioner.EMPTY_SIZE == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CFMetadataInstance.partitioner.EMPTY_SIZE == cfsInstance.metadata.partitioner.EMPTY_SIZE
CFMetadataInstance.partitioner.HEAP_SIZE == StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.HEAP_SIZE == cfsInstance.metadata.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.MAXIMUM == StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CFMetadataInstance.partitioner.MAXIMUM == cfsInstance.metadata.partitioner.MAXIMUM
CFMetadataInstance.partitioner.comparator.isByteOrderComparable == cfsInstance.compactionStrategyManager.partitionSSTablesByTokenRange
CFMetadataInstance.partitioner.partitionOrdering.isByteOrderComparable == cfsInstance.diskBoundaryManager.diskBoundaries.isInvalid
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == CommitLog.instance.configuration.encryptionContext.chunkLength
CommitLog.instance.executor.markerIntervalNanos == CommitLog.instance.executor.syncIntervalNanos
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.managerThreadWaitQueue.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.segmentPrepared.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.keyspace.writeOrder.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.readOrdering.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)-1
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == CommitLog.instance.segmentManager.availableSegment.ENTRY_OVERHEAD_SIZE
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == CommitLog.instance.segmentManager.availableSegment.SYNC_MARKER_SIZE
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.availableSegment.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.bufferPool.bufferSize
CommitLog.instance.segmentManager.allocatingFrom.idBase == CommitLog.instance.segmentManager.availableSegment.idBase
CommitLog.instance.segmentManager.allocatingFrom.nextId == CommitLog.instance.segmentManager.availableSegment.nextId
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == CommitLog.instance.segmentManager.availableSegment.replayLimitId
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == CommitLog.instance.segmentManager.availableSegment.lastSyncedOffset
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE == resultSetInstance.rows_FOR_ENCLOSING_USE
StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE == StorageService.instance.valueFactory.partitioner.HEAP_SIZE
StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE == cfsInstance.metadata.partitioner.HEAP_SIZE
StorageService.instance.tokenMetadata.partitioner.MAXIMUM == StorageService.instance.valueFactory.partitioner.MAXIMUM
StorageService.instance.tokenMetadata.partitioner.MAXIMUM == cfsInstance.metadata.partitioner.MAXIMUM
cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion == cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
cfsInstance.compactionStrategyManager.isActive == cfsInstance.valid
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD == cfsInstance.metadata.partitioner.EMPTY_SIZE
cfsInstance.directories.metadata.isIndex == cfsInstance.diskBoundaryManager.diskBoundaries.isInvalid
cfsInstance.directories.metadata.isIndex == cfsInstance.metadata.isIndex
cfsInstance.directories.metadata.isIndex == cfsInstance.metric.aliasFactory.isIndex
cfsInstance.directories.metadata.isIndex == cfsInstance.metric.factory.isIndex
cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion == cfsInstance.diskBoundaryManager.diskBoundaries.ringVersion
CFMetadataInstance.allColumnFilter.isFetchAll == true
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK == 2
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == 4
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == 1
CFMetadataInstance.isCounter == false
CFMetadataInstance.partitionColumns.statics.complexIdx == 0 || CFMetadataInstance.partitionColumns.statics.complexIdx == 1
CFMetadataInstance.partitioner.EMPTY_SIZE == 32
CFMetadataInstance.partitioner.HEAP_SIZE == 24
CFMetadataInstance.partitioner.MAXIMUM == 9223372036854775807L
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID == 1
CFMetadataInstance.partitioner.MINIMUM.token == -9223372036854775808L
CFMetadataInstance.partitioner.comparator.isByteOrderComparable == false
CFMetadataInstance.partitioner.partitionOrdering.isByteOrderComparable == false
CFMetadataInstance.resource.hash == -1493090395 || CFMetadataInstance.resource.hash == 1377534570
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == 65536
CommitLog.instance.MAX_MUTATION_SIZE == 2621440
CommitLog.instance.archiver.restorePointInTime == 4510987932000L
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS == 100
CommitLog.instance.executor.markerIntervalNanos == 1000000
CommitLog.instance.executor.pending == 0 || CommitLog.instance.executor.pending == 1
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == 12
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == 8
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == 5242880
CommitLog.instance.segmentManager.allocatingFrom.fd == 177 || CommitLog.instance.segmentManager.allocatingFrom.fd == 178 || CommitLog.instance.segmentManager.allocatingFrom.fd == 190
CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224511L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224512L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224513L
CommitLog.instance.segmentManager.allocatingFrom.idBase == 1731353224472L
CommitLog.instance.segmentManager.allocatingFrom.nextId == 41 || CommitLog.instance.segmentManager.allocatingFrom.nextId == 42 || CommitLog.instance.segmentManager.allocatingFrom.nextId == 43
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == 1731353224475L
CommitLog.instance.segmentManager.availableSegment.allocatePosition == 28
CommitLog.instance.segmentManager.availableSegment.fd == 178 || CommitLog.instance.segmentManager.availableSegment.fd == 183 || CommitLog.instance.segmentManager.availableSegment.fd == 190
CommitLog.instance.segmentManager.availableSegment.id == 1731353224512L || CommitLog.instance.segmentManager.availableSegment.id == 1731353224513L || CommitLog.instance.segmentManager.availableSegment.id == 1731353224514L
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == 20
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize == 3
CommitLog.instance.segmentManager.size == 10485760 || CommitLog.instance.segmentManager.size == 15728640
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
("oneOf.java.jpp: SEQUENCE unimplemented" != null)
StorageService.instance.RING_DELAY == 30000
StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE == 24
StorageService.instance.tokenMetadata.partitioner.MAXIMUM == 9223372036854775807L
daikon.Quant.fuzzy.eq(StorageService.instance.traceProbability, 0.0)
cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion == -1 || cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion == 0
cfsInstance.compactionStrategyManager.fanout == 10
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD == 32
cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion == 0
cfsInstance.diskBoundaryManager.diskBoundaries.isInvalid == false
cfsInstance.fileIndexGenerator == 0 || cfsInstance.fileIndexGenerator == 1
cfsInstance.indexManager.DEFAULT_PAGE_SIZE == 10000
cfsInstance.metadata.partitioner.EMPTY_SIZE == 32
cfsInstance.metadata.partitioner.HEAP_SIZE == 24
cfsInstance.metadata.partitioner.MAXIMUM == 9223372036854775807L
cfsInstance.metadata.resource.hash == -1493090395 || cfsInstance.metadata.resource.hash == 1377534570
cfsInstance.readOrdering.current.id == 0 || cfsInstance.readOrdering.current.id == 1
cfsInstance.readOrdering.current.running == -1 || cfsInstance.readOrdering.current.running == 0
cfsInstance.sampleLatencyNanos == 2500000000L
resultSetInstance.metadata.columnCount >= 1
daikon.Quant.eltsNotEqual(resultSetInstance.rows_FOR_ENCLOSING_USE, null)
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > CFMetadataInstance.partitionColumns.statics.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.size
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > cfsInstance.fileIndexGenerator
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > cfsInstance.readOrdering.current.id
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > cfsInstance.readOrdering.current.running
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > CFMetadataInstance.partitionColumns.statics.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK != CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.size
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > cfsInstance.fileIndexGenerator
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK != cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > cfsInstance.readOrdering.current.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > cfsInstance.readOrdering.current.running
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK >= CFMetadataInstance.partitionColumns.statics.complexIdx
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK != CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK >= CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.size
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK >= cfsInstance.fileIndexGenerator
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK != cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK >= cfsInstance.readOrdering.current.id
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK > cfsInstance.readOrdering.current.running
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK <= resultSetInstance.metadata.columnCount
CFMetadataInstance.partitionColumns.regulars.complexIdx <= CFMetadataInstance.partitionColumns.statics.complexIdx
CFMetadataInstance.partitionColumns.regulars.complexIdx != CFMetadataInstance.resource.hash
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitionColumns.regulars.complexIdx <= CommitLog.instance.executor.pending
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.written
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitionColumns.regulars.complexIdx >= cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.partitionColumns.regulars.complexIdx <= cfsInstance.fileIndexGenerator
CFMetadataInstance.partitionColumns.regulars.complexIdx != cfsInstance.metadata.resource.hash
CFMetadataInstance.partitionColumns.regulars.complexIdx <= cfsInstance.readOrdering.current.id
CFMetadataInstance.partitionColumns.regulars.complexIdx >= cfsInstance.readOrdering.current.running
CFMetadataInstance.partitionColumns.regulars.complexIdx < resultSetInstance.metadata.columnCount
CFMetadataInstance.partitionColumns.regulars.complexIdx <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitionColumns.statics.complexIdx < CFMetadataInstance.partitioner.EMPTY_SIZE
CFMetadataInstance.partitionColumns.statics.complexIdx < CFMetadataInstance.partitioner.HEAP_SIZE
CFMetadataInstance.partitionColumns.statics.complexIdx < CFMetadataInstance.partitioner.MAXIMUM
CFMetadataInstance.partitionColumns.statics.complexIdx > CFMetadataInstance.partitioner.MINIMUM.token
CFMetadataInstance.partitionColumns.statics.complexIdx != CFMetadataInstance.resource.hash
CFMetadataInstance.partitionColumns.statics.complexIdx < CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.MAX_MUTATION_SIZE
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.archiver.restorePointInTime
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.markerIntervalNanos
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.written
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.idBase
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitionColumns.statics.complexIdx < StorageService.instance.RING_DELAY
CFMetadataInstance.partitionColumns.statics.complexIdx < StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CFMetadataInstance.partitionColumns.statics.complexIdx < StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CFMetadataInstance.partitionColumns.statics.complexIdx > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.partitionColumns.statics.complexIdx < cfsInstance.compactionStrategyManager.fanout
CFMetadataInstance.partitionColumns.statics.complexIdx < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CFMetadataInstance.partitionColumns.statics.complexIdx > cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CFMetadataInstance.partitionColumns.statics.complexIdx < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CFMetadataInstance.partitionColumns.statics.complexIdx < cfsInstance.metadata.partitioner.EMPTY_SIZE
CFMetadataInstance.partitionColumns.statics.complexIdx < cfsInstance.metadata.partitioner.HEAP_SIZE
CFMetadataInstance.partitionColumns.statics.complexIdx < cfsInstance.metadata.partitioner.MAXIMUM
CFMetadataInstance.partitionColumns.statics.complexIdx != cfsInstance.metadata.resource.hash
CFMetadataInstance.partitionColumns.statics.complexIdx >= cfsInstance.readOrdering.current.running
CFMetadataInstance.partitionColumns.statics.complexIdx < cfsInstance.sampleLatencyNanos
CFMetadataInstance.partitionColumns.statics.complexIdx <= resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.EMPTY_SIZE < CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.EMPTY_SIZE > CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.executor.written
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.EMPTY_SIZE > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.partitioner.EMPTY_SIZE > cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.EMPTY_SIZE < cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.EMPTY_SIZE > cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.EMPTY_SIZE > cfsInstance.readOrdering.current.running
CFMetadataInstance.partitioner.EMPTY_SIZE > resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.EMPTY_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.HEAP_SIZE > CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.HEAP_SIZE > CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.executor.written
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.HEAP_SIZE > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.partitioner.HEAP_SIZE > cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.HEAP_SIZE != cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.HEAP_SIZE > cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.HEAP_SIZE > cfsInstance.readOrdering.current.running
CFMetadataInstance.partitioner.HEAP_SIZE > resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.HEAP_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.MAXIMUM > CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.written
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.readOrdering.current.running
CFMetadataInstance.partitioner.MAXIMUM > resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.MAXIMUM > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID > CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID >= CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID < CommitLog.instance.executor.written
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID >= cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID != cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID >= cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID > cfsInstance.readOrdering.current.running
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID <= resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.MINIMUM.token < CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.written
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.readOrdering.current.running
CFMetadataInstance.partitioner.MINIMUM.token < resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.MINIMUM.token < daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.resource.hash != CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE
CFMetadataInstance.resource.hash != CommitLog.instance.MAX_MUTATION_SIZE
CFMetadataInstance.resource.hash < CommitLog.instance.archiver.restorePointInTime
CFMetadataInstance.resource.hash != CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS
CFMetadataInstance.resource.hash < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.resource.hash != CommitLog.instance.executor.markerIntervalNanos
CFMetadataInstance.resource.hash != CommitLog.instance.executor.pending
CFMetadataInstance.resource.hash != CommitLog.instance.executor.syncComplete.CANCELLED
CFMetadataInstance.resource.hash != CommitLog.instance.executor.written
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.idBase
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.availableSegment.allocatePosition
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.size
CFMetadataInstance.resource.hash != StorageService.instance.RING_DELAY
CFMetadataInstance.resource.hash != StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CFMetadataInstance.resource.hash < StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CFMetadataInstance.resource.hash != cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.resource.hash != cfsInstance.compactionStrategyManager.fanout
CFMetadataInstance.resource.hash != cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CFMetadataInstance.resource.hash < cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CFMetadataInstance.resource.hash != cfsInstance.fileIndexGenerator
CFMetadataInstance.resource.hash != cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CFMetadataInstance.resource.hash != cfsInstance.metadata.partitioner.EMPTY_SIZE
CFMetadataInstance.resource.hash < cfsInstance.metadata.partitioner.HEAP_SIZE
CFMetadataInstance.resource.hash < cfsInstance.metadata.partitioner.MAXIMUM
CFMetadataInstance.resource.hash <= cfsInstance.metadata.resource.hash
CFMetadataInstance.resource.hash != cfsInstance.readOrdering.current.id
CFMetadataInstance.resource.hash != cfsInstance.readOrdering.current.running
CFMetadataInstance.resource.hash < cfsInstance.sampleLatencyNanos
CFMetadataInstance.resource.hash != resultSetInstance.metadata.columnCount
CFMetadataInstance.resource.hash != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.resource.hash != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.executor.pending
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.executor.written
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.size
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > cfsInstance.fileIndexGenerator
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE != cfsInstance.metadata.resource.hash
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > cfsInstance.readOrdering.current.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > cfsInstance.readOrdering.current.running
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > resultSetInstance.metadata.columnCount
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.executor.pending
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.executor.written
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.size
CommitLog.instance.MAX_MUTATION_SIZE > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.MAX_MUTATION_SIZE > cfsInstance.fileIndexGenerator
CommitLog.instance.MAX_MUTATION_SIZE != cfsInstance.metadata.resource.hash
CommitLog.instance.MAX_MUTATION_SIZE > cfsInstance.readOrdering.current.id
CommitLog.instance.MAX_MUTATION_SIZE > cfsInstance.readOrdering.current.running
CommitLog.instance.MAX_MUTATION_SIZE > resultSetInstance.metadata.columnCount
CommitLog.instance.MAX_MUTATION_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.archiver.restorePointInTime < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.executor.pending
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.executor.written
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.size
CommitLog.instance.archiver.restorePointInTime > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.archiver.restorePointInTime > cfsInstance.fileIndexGenerator
CommitLog.instance.archiver.restorePointInTime > cfsInstance.metadata.resource.hash
CommitLog.instance.archiver.restorePointInTime > cfsInstance.readOrdering.current.id
CommitLog.instance.archiver.restorePointInTime > cfsInstance.readOrdering.current.running
CommitLog.instance.archiver.restorePointInTime % resultSetInstance.metadata.columnCount == 0
CommitLog.instance.archiver.restorePointInTime > resultSetInstance.metadata.columnCount
CommitLog.instance.archiver.restorePointInTime > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > CommitLog.instance.executor.pending
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.executor.written
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS != cfsInstance.metadata.resource.hash
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > cfsInstance.readOrdering.current.running
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.markerIntervalNanos
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.pending
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.written
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.size
CommitLog.instance.executor.lastSyncedAt > StorageService.instance.RING_DELAY
CommitLog.instance.executor.lastSyncedAt > StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CommitLog.instance.executor.lastSyncedAt < StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.lastSyncedAt > cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CommitLog.instance.executor.lastSyncedAt > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.lastSyncedAt > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.lastSyncedAt > cfsInstance.metadata.partitioner.EMPTY_SIZE
CommitLog.instance.executor.lastSyncedAt > cfsInstance.metadata.partitioner.HEAP_SIZE
CommitLog.instance.executor.lastSyncedAt < cfsInstance.metadata.partitioner.MAXIMUM
CommitLog.instance.executor.lastSyncedAt > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.lastSyncedAt > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.lastSyncedAt > cfsInstance.readOrdering.current.running
CommitLog.instance.executor.lastSyncedAt > cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.lastSyncedAt > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.lastSyncedAt > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.executor.pending
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.executor.written
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.markerIntervalNanos > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.executor.markerIntervalNanos > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.markerIntervalNanos != cfsInstance.metadata.resource.hash
CommitLog.instance.executor.markerIntervalNanos > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.markerIntervalNanos > cfsInstance.readOrdering.current.running
CommitLog.instance.executor.markerIntervalNanos > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.markerIntervalNanos > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.pending < CommitLog.instance.executor.written
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.pending < StorageService.instance.RING_DELAY
CommitLog.instance.executor.pending < StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CommitLog.instance.executor.pending < StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CommitLog.instance.executor.pending >= cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.executor.pending < cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.pending < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.pending >= cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CommitLog.instance.executor.pending < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.pending < cfsInstance.metadata.partitioner.EMPTY_SIZE
CommitLog.instance.executor.pending < cfsInstance.metadata.partitioner.HEAP_SIZE
CommitLog.instance.executor.pending < cfsInstance.metadata.partitioner.MAXIMUM
CommitLog.instance.executor.pending != cfsInstance.metadata.resource.hash
CommitLog.instance.executor.pending >= cfsInstance.readOrdering.current.running
CommitLog.instance.executor.pending < cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.pending <= resultSetInstance.metadata.columnCount
CommitLog.instance.executor.syncComplete.CANCELLED <= cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.executor.syncComplete.CANCELLED != cfsInstance.metadata.resource.hash
CommitLog.instance.executor.syncComplete.CANCELLED <= cfsInstance.readOrdering.current.running
CommitLog.instance.executor.syncComplete.CANCELLED <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.written != CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.written != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.written != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.written < StorageService.instance.RING_DELAY
CommitLog.instance.executor.written > StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CommitLog.instance.executor.written < StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CommitLog.instance.executor.written > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.executor.written > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.written > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.written > cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CommitLog.instance.executor.written > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.written < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.written > cfsInstance.metadata.partitioner.EMPTY_SIZE
CommitLog.instance.executor.written > cfsInstance.metadata.partitioner.HEAP_SIZE
CommitLog.instance.executor.written < cfsInstance.metadata.partitioner.MAXIMUM
CommitLog.instance.executor.written != cfsInstance.metadata.resource.hash
CommitLog.instance.executor.written > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.written > cfsInstance.readOrdering.current.running
CommitLog.instance.executor.written < cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.written > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.written > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > cfsInstance.readOrdering.current.running
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE != resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > cfsInstance.readOrdering.current.running
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 8 == 0
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.metadata.partitioner.EMPTY_SIZE
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.metadata.partitioner.HEAP_SIZE
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.metadata.partitioner.MAXIMUM
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.readOrdering.current.running
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > cfsInstance.readOrdering.current.running
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.fd != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.fd != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.fd != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.fd < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.fd > StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CommitLog.instance.segmentManager.allocatingFrom.fd < StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.fd < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.metadata.partitioner.EMPTY_SIZE
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.metadata.partitioner.HEAP_SIZE
CommitLog.instance.segmentManager.allocatingFrom.fd < cfsInstance.metadata.partitioner.MAXIMUM
CommitLog.instance.segmentManager.allocatingFrom.fd != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.readOrdering.current.running
CommitLog.instance.segmentManager.allocatingFrom.fd < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.fd > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.fd > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.id < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.id > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.id > StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CommitLog.instance.segmentManager.allocatingFrom.id < StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.metadata.partitioner.EMPTY_SIZE
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.metadata.partitioner.HEAP_SIZE
CommitLog.instance.segmentManager.allocatingFrom.id < cfsInstance.metadata.partitioner.MAXIMUM
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.readOrdering.current.running
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.id > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.id > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.idBase < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.readOrdering.current.running
CommitLog.instance.segmentManager.allocatingFrom.idBase > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.idBase > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset >= CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.metadata.partitioner.EMPTY_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.metadata.partitioner.HEAP_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.metadata.partitioner.MAXIMUM
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.readOrdering.current.running
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.metadata.partitioner.EMPTY_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.metadata.partitioner.HEAP_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.metadata.partitioner.MAXIMUM
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.readOrdering.current.running
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.nextId > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.nextId > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.nextId > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.nextId < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.nextId > StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CommitLog.instance.segmentManager.allocatingFrom.nextId < StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.metadata.partitioner.EMPTY_SIZE
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.metadata.partitioner.HEAP_SIZE
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.metadata.partitioner.MAXIMUM
CommitLog.instance.segmentManager.allocatingFrom.nextId != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.readOrdering.current.running
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.nextId > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.nextId > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.readOrdering.current.running
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.allocatePosition > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.availableSegment.allocatePosition > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.allocatePosition != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.allocatePosition > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.allocatePosition > cfsInstance.readOrdering.current.running
CommitLog.instance.segmentManager.availableSegment.allocatePosition > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.allocatePosition > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.fd < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.availableSegment.fd > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.availableSegment.fd > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.availableSegment.fd < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.fd < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.availableSegment.fd > StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CommitLog.instance.segmentManager.availableSegment.fd < StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.fd < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.metadata.partitioner.EMPTY_SIZE
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.metadata.partitioner.HEAP_SIZE
CommitLog.instance.segmentManager.availableSegment.fd < cfsInstance.metadata.partitioner.MAXIMUM
CommitLog.instance.segmentManager.availableSegment.fd != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.readOrdering.current.running
CommitLog.instance.segmentManager.availableSegment.fd < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.availableSegment.fd > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.fd > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.id > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.availableSegment.id > StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CommitLog.instance.segmentManager.availableSegment.id < StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.metadata.partitioner.EMPTY_SIZE
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.metadata.partitioner.HEAP_SIZE
CommitLog.instance.segmentManager.availableSegment.id < cfsInstance.metadata.partitioner.MAXIMUM
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.readOrdering.current.running
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.availableSegment.id > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.id > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > cfsInstance.readOrdering.current.running
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset >= resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize > cfsInstance.readOrdering.current.running
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.size > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.size > StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CommitLog.instance.segmentManager.size < StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CommitLog.instance.segmentManager.size > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.size > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.size > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.size > cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CommitLog.instance.segmentManager.size > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.size > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.size > cfsInstance.metadata.partitioner.EMPTY_SIZE
CommitLog.instance.segmentManager.size > cfsInstance.metadata.partitioner.HEAP_SIZE
CommitLog.instance.segmentManager.size < cfsInstance.metadata.partitioner.MAXIMUM
CommitLog.instance.segmentManager.size != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.size > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.size > cfsInstance.readOrdering.current.running
CommitLog.instance.segmentManager.size < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.size > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.size > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
daikon.Quant.subsetOf(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE, resultSetInstance.rows_FOR_ENCLOSING_USE)
StorageService.instance.RING_DELAY > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
StorageService.instance.RING_DELAY > cfsInstance.fileIndexGenerator
StorageService.instance.RING_DELAY != cfsInstance.metadata.resource.hash
StorageService.instance.RING_DELAY > cfsInstance.readOrdering.current.id
StorageService.instance.RING_DELAY > cfsInstance.readOrdering.current.running
StorageService.instance.RING_DELAY % resultSetInstance.metadata.columnCount == 0
StorageService.instance.RING_DELAY > resultSetInstance.metadata.columnCount
StorageService.instance.RING_DELAY > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE > cfsInstance.fileIndexGenerator
StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE != cfsInstance.metadata.resource.hash
StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE > cfsInstance.readOrdering.current.id
StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE > cfsInstance.readOrdering.current.running
StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE > resultSetInstance.metadata.columnCount
StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
StorageService.instance.tokenMetadata.partitioner.MAXIMUM > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
StorageService.instance.tokenMetadata.partitioner.MAXIMUM > cfsInstance.fileIndexGenerator
StorageService.instance.tokenMetadata.partitioner.MAXIMUM > cfsInstance.metadata.resource.hash
StorageService.instance.tokenMetadata.partitioner.MAXIMUM > cfsInstance.readOrdering.current.id
StorageService.instance.tokenMetadata.partitioner.MAXIMUM > cfsInstance.readOrdering.current.running
StorageService.instance.tokenMetadata.partitioner.MAXIMUM > resultSetInstance.metadata.columnCount
StorageService.instance.tokenMetadata.partitioner.MAXIMUM > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion < cfsInstance.compactionStrategyManager.fanout
cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion <= cfsInstance.fileIndexGenerator
cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion < cfsInstance.metadata.partitioner.EMPTY_SIZE
cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion < cfsInstance.metadata.partitioner.HEAP_SIZE
cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion < cfsInstance.metadata.partitioner.MAXIMUM
cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion != cfsInstance.metadata.resource.hash
cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion <= cfsInstance.readOrdering.current.id
cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion < cfsInstance.sampleLatencyNanos
cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion < resultSetInstance.metadata.columnCount
cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.compactionStrategyManager.fanout > cfsInstance.fileIndexGenerator
cfsInstance.compactionStrategyManager.fanout != cfsInstance.metadata.resource.hash
cfsInstance.compactionStrategyManager.fanout > cfsInstance.readOrdering.current.id
cfsInstance.compactionStrategyManager.fanout > cfsInstance.readOrdering.current.running
cfsInstance.compactionStrategyManager.fanout != resultSetInstance.metadata.columnCount
cfsInstance.compactionStrategyManager.fanout > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > cfsInstance.fileIndexGenerator
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD != cfsInstance.metadata.resource.hash
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > cfsInstance.readOrdering.current.id
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > cfsInstance.readOrdering.current.running
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > resultSetInstance.metadata.columnCount
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion <= cfsInstance.fileIndexGenerator
cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion > cfsInstance.metadata.resource.hash
cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion <= cfsInstance.readOrdering.current.id
cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion >= cfsInstance.readOrdering.current.running
cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion < resultSetInstance.metadata.columnCount
cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.fileIndexGenerator < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
cfsInstance.fileIndexGenerator < cfsInstance.metadata.partitioner.EMPTY_SIZE
cfsInstance.fileIndexGenerator < cfsInstance.metadata.partitioner.HEAP_SIZE
cfsInstance.fileIndexGenerator < cfsInstance.metadata.partitioner.MAXIMUM
cfsInstance.fileIndexGenerator != cfsInstance.metadata.resource.hash
cfsInstance.fileIndexGenerator >= cfsInstance.readOrdering.current.id
cfsInstance.fileIndexGenerator >= cfsInstance.readOrdering.current.running
cfsInstance.fileIndexGenerator < cfsInstance.sampleLatencyNanos
cfsInstance.fileIndexGenerator <= resultSetInstance.metadata.columnCount
cfsInstance.indexManager.DEFAULT_PAGE_SIZE != cfsInstance.metadata.resource.hash
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > cfsInstance.readOrdering.current.id
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > cfsInstance.readOrdering.current.running
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > resultSetInstance.metadata.columnCount
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.metadata.partitioner.EMPTY_SIZE < cfsInstance.metadata.resource.hash
cfsInstance.metadata.partitioner.EMPTY_SIZE > cfsInstance.readOrdering.current.id
cfsInstance.metadata.partitioner.EMPTY_SIZE > cfsInstance.readOrdering.current.running
cfsInstance.metadata.partitioner.EMPTY_SIZE > resultSetInstance.metadata.columnCount
cfsInstance.metadata.partitioner.EMPTY_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.metadata.partitioner.HEAP_SIZE > cfsInstance.metadata.resource.hash
cfsInstance.metadata.partitioner.HEAP_SIZE > cfsInstance.readOrdering.current.id
cfsInstance.metadata.partitioner.HEAP_SIZE > cfsInstance.readOrdering.current.running
cfsInstance.metadata.partitioner.HEAP_SIZE > resultSetInstance.metadata.columnCount
cfsInstance.metadata.partitioner.HEAP_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.metadata.partitioner.MAXIMUM > cfsInstance.metadata.resource.hash
cfsInstance.metadata.partitioner.MAXIMUM > cfsInstance.readOrdering.current.id
cfsInstance.metadata.partitioner.MAXIMUM > cfsInstance.readOrdering.current.running
cfsInstance.metadata.partitioner.MAXIMUM > resultSetInstance.metadata.columnCount
cfsInstance.metadata.partitioner.MAXIMUM > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.metadata.resource.hash != cfsInstance.readOrdering.current.id
cfsInstance.metadata.resource.hash != cfsInstance.readOrdering.current.running
cfsInstance.metadata.resource.hash < cfsInstance.sampleLatencyNanos
cfsInstance.metadata.resource.hash != resultSetInstance.metadata.columnCount
cfsInstance.metadata.resource.hash != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.metadata.resource.hash != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
cfsInstance.readOrdering.current.id >= cfsInstance.readOrdering.current.running
cfsInstance.readOrdering.current.id < cfsInstance.sampleLatencyNanos
cfsInstance.readOrdering.current.id <= resultSetInstance.metadata.columnCount
cfsInstance.readOrdering.current.running < cfsInstance.sampleLatencyNanos
cfsInstance.readOrdering.current.running < resultSetInstance.metadata.columnCount
cfsInstance.readOrdering.current.running <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.sampleLatencyNanos > resultSetInstance.metadata.columnCount
cfsInstance.sampleLatencyNanos > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
resultSetInstance.metadata.columnCount >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitionColumns.statics.complexIdx - CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.id + 1.731353224512E12 == 0
CFMetadataInstance.partitionColumns.statics.complexIdx - CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.availableSegment.id + 1.731353224513E12 == 0
CFMetadataInstance.partitionColumns.statics.complexIdx - CommitLog.instance.segmentManager.allocatingFrom.id + cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion + 1.731353224512E12 == 0
2 * CFMetadataInstance.partitionColumns.statics.complexIdx - CommitLog.instance.segmentManager.allocatingFrom.id + cfsInstance.fileIndexGenerator + 1.73135322451E12 == 0
CFMetadataInstance.partitionColumns.statics.complexIdx - CommitLog.instance.segmentManager.allocatingFrom.id + cfsInstance.readOrdering.current.id + 1.731353224511E12 == 0
CFMetadataInstance.partitionColumns.statics.complexIdx - CommitLog.instance.segmentManager.availableSegment.id + cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion + 1.731353224513E12 == 0
2 * CFMetadataInstance.partitionColumns.statics.complexIdx - CommitLog.instance.segmentManager.availableSegment.id + cfsInstance.fileIndexGenerator + 1.731353224511E12 == 0
CFMetadataInstance.partitionColumns.statics.complexIdx - CommitLog.instance.segmentManager.availableSegment.id + cfsInstance.readOrdering.current.id + 1.731353224512E12 == 0
2 * CommitLog.instance.executor.lastSyncedAt - 55386243 * CommitLog.instance.executor.pending - 119924157 * CommitLog.instance.executor.written - 1.78864213201081E14 == 0
60 * CommitLog.instance.executor.lastSyncedAt + 1936137420 * CommitLog.instance.executor.pending - 39974719 * CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 5.370629381748061E15 == 0
60 * CommitLog.instance.executor.lastSyncedAt + 1936137420 * CommitLog.instance.executor.pending - 39974719 * CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 5.370629701545813E15 == 0
60 * CommitLog.instance.executor.lastSyncedAt - 7.617820421E9 * CommitLog.instance.executor.pending - 39974719 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 5.370629701545813E15 == 0
CommitLog.instance.executor.lastSyncedAt + 32268957 * CommitLog.instance.executor.pending - 119924157 * daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 8.9511076657925E13 == 0
CommitLog.instance.executor.lastSyncedAt + 32268957 * CommitLog.instance.executor.pending - 119924157 * daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1 - 8.9511196582082E13 == 0
20 * CommitLog.instance.executor.lastSyncedAt - 645379140 * CommitLog.instance.executor.written - 6154027 * CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 1.789366147133333E15 == 0
20 * CommitLog.instance.executor.lastSyncedAt - 645379140 * CommitLog.instance.executor.written - 6154027 * CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 1.789366196365549E15 == 0
298 * CommitLog.instance.executor.lastSyncedAt - 2.2853461263E10 * CommitLog.instance.executor.written + 55386243 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 2.6644251187768416E16 == 0
CommitLog.instance.executor.lastSyncedAt - 32268957 * CommitLog.instance.executor.written - 55386243 * daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 8.9468578441556E13 == 0
CommitLog.instance.executor.lastSyncedAt - 32268957 * CommitLog.instance.executor.written - 55386243 * daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1 - 8.9468633827799E13 == 0
14340 * CommitLog.instance.executor.lastSyncedAt - 7.617820421E9 * CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 1936137420 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 1.28358043772688589E18 == 0
14340 * CommitLog.instance.executor.lastSyncedAt - 7.617820421E9 * CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 1936137420 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 1.28358049866944947E18 == 0
239 * CommitLog.instance.executor.lastSyncedAt - 32268957 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 2.2853461263E10 * daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 2.1393119150444616E16 == 0
239 * CommitLog.instance.executor.lastSyncedAt - 32268957 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 2.2853461263E10 * daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1 - 2.1393142003905876E16 == 0
CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.id + cfsInstance.readOrdering.current.id + 1.73135322451E12 == 0
CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.availableSegment.id + cfsInstance.readOrdering.current.id + 1.731353224511E12 == 0
CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.fileIndexGenerator + 2 * cfsInstance.readOrdering.current.id - 1.731353224512E12 == 0
CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.readOrdering.current.id - daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.73135322451E12 == 0
CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.fileIndexGenerator + 2 * cfsInstance.readOrdering.current.id - 1.731353224513E12 == 0
CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.readOrdering.current.id - daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224511E12 == 0
===========================================================================
org.apache.cassandra.cql3.SimpleQueryTest@testSStableTimestampOrdering-54916894:::dump
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.allocatingFrom.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.availableSegment.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.joinRing
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.useStrictConsistency
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionSpaceCheck
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.partitionSSTablesByTokenRange
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_ENABLED
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.isEnabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.shouldDefragment
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.supportsEarlyOpen
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.data.loadsstables
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.directories.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.keyspace.initialized
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.allColumnFilter.isFetchAll
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.viewManager.baseTableMetadata.isCompound
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MIN_THRESHOLD
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CFMetadataInstance.partitioner.MINIMUM.serialVersionUID
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.executor.syncComplete.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.managerThreadWaitQueue.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.segmentPrepared.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == StorageService.instance.threadCounter
CFMetadataInstance.isCounter == CFMetadataInstance.isDense
CFMetadataInstance.isCounter == CFMetadataInstance.isIndex
CFMetadataInstance.isCounter == CFMetadataInstance.isSuper
CFMetadataInstance.isCounter == CFMetadataInstance.isView
CFMetadataInstance.isCounter == CFMetadataInstance.keyValidator.isByteOrderComparable
CFMetadataInstance.isCounter == CFMetadataInstance.partitioner.partitionOrdering.isByteOrderComparable
CFMetadataInstance.isCounter == CommitLog.instance.executor.shutdown
CFMetadataInstance.isCounter == CommitLog.instance.executor.syncRequested
CFMetadataInstance.isCounter == CommitLog.instance.segmentManager.shutdown
CFMetadataInstance.isCounter == StorageService.instance.allowSimultaneousMoves
CFMetadataInstance.isCounter == StorageService.instance.authSetupCalled
CFMetadataInstance.isCounter == StorageService.instance.authSetupComplete
CFMetadataInstance.isCounter == StorageService.instance.gossipActive
CFMetadataInstance.isCounter == StorageService.instance.initialized
CFMetadataInstance.isCounter == StorageService.instance.isBootstrapMode
CFMetadataInstance.isCounter == StorageService.instance.isDecommissioning
CFMetadataInstance.isCounter == StorageService.instance.isRebuilding
CFMetadataInstance.isCounter == StorageService.instance.isShutdown
CFMetadataInstance.isCounter == StorageService.instance.isSurveyMode
CFMetadataInstance.isCounter == StorageService.instance.joined
CFMetadataInstance.isCounter == StorageService.instance.replacing
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.compactionLogger.enabled
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.currentBoundaries.isInvalid
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.diskBoundaryManager.diskBoundaries.isInvalid
CFMetadataInstance.isCounter == cfsInstance.keyspace.TEST_FAIL_WRITES
CFMetadataInstance.isCounter == cfsInstance.keyspace.viewManager.enableCoordinatorBatchlog
CFMetadataInstance.isCounter == cfsInstance.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.metadata.keyValidator.isByteOrderComparable
CFMetadataInstance.isCounter == cfsInstance.metric.aliasFactory.isIndex
CFMetadataInstance.isCounter == cfsInstance.metric.factory.isIndex
CFMetadataInstance.isCounter == cfsInstance.readOrdering.current.isBlocking
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isDense
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isView
CFMetadataInstance.partitioner.HEAP_SIZE == StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.HEAP_SIZE == StorageService.instance.valueFactory.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.HEAP_SIZE == cfsInstance.metadata.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.MAXIMUM == StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CFMetadataInstance.partitioner.MAXIMUM == StorageService.instance.valueFactory.partitioner.MAXIMUM
CFMetadataInstance.partitioner.MAXIMUM == cfsInstance.metadata.partitioner.MAXIMUM
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == CommitLog.instance.configuration.encryptionContext.chunkLength
CommitLog.instance.executor.markerIntervalNanos == CommitLog.instance.executor.syncIntervalNanos
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.managerThreadWaitQueue.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.segmentPrepared.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.keyspace.writeOrder.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.readOrdering.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)-1
CommitLog.instance.executor.syncComplete.NOT_SET == CommitLog.instance.segmentManager.bufferPool.usedBuffers
CommitLog.instance.executor.syncComplete.NOT_SET == CommitLog.instance.segmentManager.managerThreadWaitQueue.NOT_SET
CommitLog.instance.executor.syncComplete.NOT_SET == CommitLog.instance.segmentManager.segmentPrepared.NOT_SET
CommitLog.instance.executor.syncComplete.NOT_SET == QueryProcessor.instance.lastMinuteEvictionsCount
CommitLog.instance.executor.syncComplete.NOT_SET == QueryProcessor.instance.thriftLastMinuteEvictionsCount
CommitLog.instance.executor.syncComplete.NOT_SET == StorageService.instance.legacyProgressSupport.notificationSerialNumber
CommitLog.instance.executor.syncComplete.NOT_SET == StorageService.instance.nextRepairCommand
CommitLog.instance.executor.syncComplete.NOT_SET == StorageService.instance.progressSupport.notificationSerialNumber
CommitLog.instance.executor.syncComplete.NOT_SET == StorageService.instance.remainingCFs
CommitLog.instance.executor.syncComplete.NOT_SET == StorageService.instance.tokenMetadata.ringVersion
CommitLog.instance.executor.syncComplete.NOT_SET == StorageService.instance.totalCFs
CommitLog.instance.executor.syncComplete.NOT_SET == cfsInstance.compactionStrategyManager.compactionLogger.identifier
CommitLog.instance.executor.syncComplete.NOT_SET == cfsInstance.compactionStrategyManager.currentBoundaries.directoriesVersion
CommitLog.instance.executor.syncComplete.NOT_SET == cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.executor.syncComplete.NOT_SET == cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CommitLog.instance.executor.syncComplete.NOT_SET == cfsInstance.diskBoundaryManager.diskBoundaries.ringVersion
CommitLog.instance.executor.syncComplete.NOT_SET == cfsInstance.keyspace.TEST_FAIL_MV_LOCKS_COUNT
CommitLog.instance.executor.syncComplete.NOT_SET == cfsInstance.keyspace.replicationStrategy.lastInvalidatedVersion
CommitLog.instance.executor.syncComplete.NOT_SET == cfsInstance.readOrdering.current.running
CommitLog.instance.executor.syncComplete.NOT_SET == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == CommitLog.instance.segmentManager.availableSegment.ENTRY_OVERHEAD_SIZE
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == CommitLog.instance.segmentManager.availableSegment.SYNC_MARKER_SIZE
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.availableSegment.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.bufferPool.bufferSize
CommitLog.instance.segmentManager.allocatingFrom.idBase == CommitLog.instance.segmentManager.availableSegment.idBase
CommitLog.instance.segmentManager.allocatingFrom.nextId == CommitLog.instance.segmentManager.availableSegment.nextId
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == CommitLog.instance.segmentManager.availableSegment.replayLimitId
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == CommitLog.instance.segmentManager.availableSegment.lastSyncedOffset
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE == resultSetInstance.rows_FOR_ENCLOSING_USE
cfsInstance.compactionStrategyManager.isActive == cfsInstance.valid
CFMetadataInstance.allColumnFilter.isFetchAll == true
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK == 2
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == 4
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == 1
CFMetadataInstance.isCounter == false
CFMetadataInstance.partitionColumns.regulars.complexIdx == 0 || CFMetadataInstance.partitionColumns.regulars.complexIdx == 2
CFMetadataInstance.partitionColumns.statics.complexIdx == 0 || CFMetadataInstance.partitionColumns.statics.complexIdx == 1
CFMetadataInstance.partitioner.HEAP_SIZE == 24
CFMetadataInstance.partitioner.MAXIMUM == 9223372036854775807L
CFMetadataInstance.partitioner.MINIMUM.token == -9223372036854775808L
CFMetadataInstance.resource.hash == -1493090395 || CFMetadataInstance.resource.hash == -1493090394
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == 65536
CommitLog.instance.MAX_MUTATION_SIZE == 2621440
CommitLog.instance.archiver.restorePointInTime == 4510987932000L
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS == 100
CommitLog.instance.executor.markerIntervalNanos == 1000000
CommitLog.instance.executor.pending == 0 || CommitLog.instance.executor.pending == 1
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == 12
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == 8
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == 5242880
CommitLog.instance.segmentManager.allocatingFrom.fd == 177 || CommitLog.instance.segmentManager.allocatingFrom.fd == 183 || CommitLog.instance.segmentManager.allocatingFrom.fd == 190
CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224513L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224514L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224515L
CommitLog.instance.segmentManager.allocatingFrom.idBase == 1731353224472L
CommitLog.instance.segmentManager.allocatingFrom.nextId == 43 || CommitLog.instance.segmentManager.allocatingFrom.nextId == 44 || CommitLog.instance.segmentManager.allocatingFrom.nextId == 45
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == 1731353224475L
CommitLog.instance.segmentManager.availableSegment.allocatePosition == 28
CommitLog.instance.segmentManager.availableSegment.fd == 177 || CommitLog.instance.segmentManager.availableSegment.fd == 180 || CommitLog.instance.segmentManager.availableSegment.fd == 183
CommitLog.instance.segmentManager.availableSegment.id == 1731353224514L || CommitLog.instance.segmentManager.availableSegment.id == 1731353224515L || CommitLog.instance.segmentManager.availableSegment.id == 1731353224516L
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == 20
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize == 3
CommitLog.instance.segmentManager.size == 10485760 || CommitLog.instance.segmentManager.size == 15728640
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
("oneOf.java.jpp: SEQUENCE unimplemented" != null)
StorageService.instance.RING_DELAY == 30000
daikon.Quant.fuzzy.eq(StorageService.instance.traceProbability, 0.0)
cfsInstance.compactionStrategyManager.fanout == 10
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD == 32
cfsInstance.indexManager.DEFAULT_PAGE_SIZE == 10000
cfsInstance.metadata.resource.hash == -1493090395 || cfsInstance.metadata.resource.hash == -1493090394
cfsInstance.sampleLatencyNanos == 2500000000L
resultSetInstance.metadata.columnCount >= 1
daikon.Quant.eltsNotEqual(resultSetInstance.rows_FOR_ENCLOSING_USE, null)
daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) == 0 || daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) == 1 || daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) == 3
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK >= CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > CFMetadataInstance.partitionColumns.statics.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.size
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != resultSetInstance.metadata.columnCount
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > CFMetadataInstance.partitionColumns.statics.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.size
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > cfsInstance.fileIndexGenerator
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > cfsInstance.readOrdering.current.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK != CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK >= CFMetadataInstance.partitionColumns.statics.complexIdx
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK > CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK >= CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.size
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK > cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK <= resultSetInstance.metadata.columnCount
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.partitionColumns.regulars.complexIdx != CFMetadataInstance.partitionColumns.statics.complexIdx
CFMetadataInstance.partitionColumns.regulars.complexIdx < CFMetadataInstance.partitioner.HEAP_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CFMetadataInstance.partitioner.MAXIMUM
CFMetadataInstance.partitionColumns.regulars.complexIdx > CFMetadataInstance.partitioner.MINIMUM.token
CFMetadataInstance.partitionColumns.regulars.complexIdx > CFMetadataInstance.resource.hash
CFMetadataInstance.partitionColumns.regulars.complexIdx < CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.MAX_MUTATION_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.archiver.restorePointInTime
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.markerIntervalNanos
CFMetadataInstance.partitionColumns.regulars.complexIdx >= CommitLog.instance.executor.syncComplete.NOT_SET
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.written
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.idBase
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitionColumns.regulars.complexIdx < StorageService.instance.RING_DELAY
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.compactionStrategyManager.fanout
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx > cfsInstance.metadata.resource.hash
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.sampleLatencyNanos
CFMetadataInstance.partitionColumns.regulars.complexIdx != resultSetInstance.metadata.columnCount
CFMetadataInstance.partitionColumns.regulars.complexIdx >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.partitionColumns.statics.complexIdx < CFMetadataInstance.partitioner.HEAP_SIZE
CFMetadataInstance.partitionColumns.statics.complexIdx < CFMetadataInstance.partitioner.MAXIMUM
CFMetadataInstance.partitionColumns.statics.complexIdx > CFMetadataInstance.partitioner.MINIMUM.token
CFMetadataInstance.partitionColumns.statics.complexIdx > CFMetadataInstance.resource.hash
CFMetadataInstance.partitionColumns.statics.complexIdx < CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.MAX_MUTATION_SIZE
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.archiver.restorePointInTime
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.markerIntervalNanos
CFMetadataInstance.partitionColumns.statics.complexIdx >= CommitLog.instance.executor.syncComplete.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.written
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.idBase
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitionColumns.statics.complexIdx < StorageService.instance.RING_DELAY
CFMetadataInstance.partitionColumns.statics.complexIdx < cfsInstance.compactionStrategyManager.fanout
CFMetadataInstance.partitionColumns.statics.complexIdx < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CFMetadataInstance.partitionColumns.statics.complexIdx <= cfsInstance.fileIndexGenerator
CFMetadataInstance.partitionColumns.statics.complexIdx < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CFMetadataInstance.partitionColumns.statics.complexIdx > cfsInstance.metadata.resource.hash
CFMetadataInstance.partitionColumns.statics.complexIdx <= cfsInstance.readOrdering.current.id
CFMetadataInstance.partitionColumns.statics.complexIdx < cfsInstance.sampleLatencyNanos
CFMetadataInstance.partitionColumns.statics.complexIdx <= resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.HEAP_SIZE > CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.HEAP_SIZE > CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.executor.written
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.HEAP_SIZE > cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.HEAP_SIZE > cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.HEAP_SIZE > cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.HEAP_SIZE > resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.HEAP_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.MAXIMUM > CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.written
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.MAXIMUM > resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.MAXIMUM > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.MINIMUM.token < CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.written
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.MINIMUM.token < resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.MINIMUM.token < daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.resource.hash < CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE
CFMetadataInstance.resource.hash < CommitLog.instance.MAX_MUTATION_SIZE
CFMetadataInstance.resource.hash < CommitLog.instance.archiver.restorePointInTime
CFMetadataInstance.resource.hash < CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS
CFMetadataInstance.resource.hash < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.resource.hash < CommitLog.instance.executor.markerIntervalNanos
CFMetadataInstance.resource.hash < CommitLog.instance.executor.pending
CFMetadataInstance.resource.hash < CommitLog.instance.executor.syncComplete.CANCELLED
CFMetadataInstance.resource.hash < CommitLog.instance.executor.written
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.idBase
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.size
CFMetadataInstance.resource.hash < StorageService.instance.RING_DELAY
CFMetadataInstance.resource.hash < cfsInstance.compactionStrategyManager.fanout
CFMetadataInstance.resource.hash < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CFMetadataInstance.resource.hash < cfsInstance.fileIndexGenerator
CFMetadataInstance.resource.hash < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CFMetadataInstance.resource.hash >= cfsInstance.metadata.resource.hash
CFMetadataInstance.resource.hash < cfsInstance.readOrdering.current.id
CFMetadataInstance.resource.hash < cfsInstance.sampleLatencyNanos
CFMetadataInstance.resource.hash < resultSetInstance.metadata.columnCount
CFMetadataInstance.resource.hash < daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.executor.pending
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.executor.written
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.size
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > cfsInstance.fileIndexGenerator
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > cfsInstance.metadata.resource.hash
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > cfsInstance.readOrdering.current.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > resultSetInstance.metadata.columnCount
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.executor.pending
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.executor.written
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.size
CommitLog.instance.MAX_MUTATION_SIZE > cfsInstance.fileIndexGenerator
CommitLog.instance.MAX_MUTATION_SIZE > cfsInstance.metadata.resource.hash
CommitLog.instance.MAX_MUTATION_SIZE > cfsInstance.readOrdering.current.id
CommitLog.instance.MAX_MUTATION_SIZE > resultSetInstance.metadata.columnCount
CommitLog.instance.MAX_MUTATION_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.archiver.restorePointInTime < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.executor.pending
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.executor.written
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.size
CommitLog.instance.archiver.restorePointInTime > cfsInstance.fileIndexGenerator
CommitLog.instance.archiver.restorePointInTime > cfsInstance.metadata.resource.hash
CommitLog.instance.archiver.restorePointInTime > cfsInstance.readOrdering.current.id
CommitLog.instance.archiver.restorePointInTime % resultSetInstance.metadata.columnCount == 0
CommitLog.instance.archiver.restorePointInTime > resultSetInstance.metadata.columnCount
CommitLog.instance.archiver.restorePointInTime > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > CommitLog.instance.executor.pending
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.executor.written
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.markerIntervalNanos
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.pending
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.syncComplete.NOT_SET
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.written
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.size
CommitLog.instance.executor.lastSyncedAt > StorageService.instance.RING_DELAY
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.lastSyncedAt > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.lastSyncedAt > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.lastSyncedAt > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.lastSyncedAt > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.lastSyncedAt > cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.lastSyncedAt > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.lastSyncedAt > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.executor.pending
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.executor.written
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.markerIntervalNanos > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.markerIntervalNanos > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.markerIntervalNanos > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.markerIntervalNanos > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.markerIntervalNanos > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.pending >= CommitLog.instance.executor.syncComplete.NOT_SET
CommitLog.instance.executor.pending < CommitLog.instance.executor.written
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.pending < StorageService.instance.RING_DELAY
CommitLog.instance.executor.pending < cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.pending < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.pending <= cfsInstance.fileIndexGenerator
CommitLog.instance.executor.pending < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.pending > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.pending <= cfsInstance.readOrdering.current.id
CommitLog.instance.executor.pending < cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.pending <= resultSetInstance.metadata.columnCount
CommitLog.instance.executor.syncComplete.CANCELLED > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.syncComplete.CANCELLED <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.executor.written
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.syncComplete.NOT_SET <= cfsInstance.fileIndexGenerator
CommitLog.instance.executor.syncComplete.NOT_SET <= cfsInstance.readOrdering.current.id
CommitLog.instance.executor.syncComplete.NOT_SET < resultSetInstance.metadata.columnCount
CommitLog.instance.executor.syncComplete.NOT_SET <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.written != CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.written != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.written != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.written < StorageService.instance.RING_DELAY
CommitLog.instance.executor.written > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.written > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.written > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.written < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.written > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.written > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.written < cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.written > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.written > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE != resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 8 == 0
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.fd != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.fd != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.fd != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.fd < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.fd < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.fd < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.fd > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.fd > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.id < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.id > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.id > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.id > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.idBase < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.idBase > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.idBase > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset >= CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.nextId > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.nextId > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.nextId > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.nextId < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.nextId > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.nextId > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.allocatePosition > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.allocatePosition > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.allocatePosition > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.allocatePosition > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.allocatePosition > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.fd < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.availableSegment.fd > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.availableSegment.fd > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.availableSegment.fd < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.fd < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.fd < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.fd < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.availableSegment.fd > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.fd > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.id > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.availableSegment.id > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.id > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset >= resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize >= cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize >= cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.size > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.size > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.size > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.size > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.size > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.size > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.size > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.size < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.size > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.size > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
daikon.Quant.subsetOf(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE, resultSetInstance.rows_FOR_ENCLOSING_USE)
StorageService.instance.RING_DELAY > cfsInstance.fileIndexGenerator
StorageService.instance.RING_DELAY > cfsInstance.metadata.resource.hash
StorageService.instance.RING_DELAY > cfsInstance.readOrdering.current.id
StorageService.instance.RING_DELAY % resultSetInstance.metadata.columnCount == 0
StorageService.instance.RING_DELAY > resultSetInstance.metadata.columnCount
StorageService.instance.RING_DELAY > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.compactionStrategyManager.fanout > cfsInstance.fileIndexGenerator
cfsInstance.compactionStrategyManager.fanout > cfsInstance.metadata.resource.hash
cfsInstance.compactionStrategyManager.fanout > cfsInstance.readOrdering.current.id
cfsInstance.compactionStrategyManager.fanout != resultSetInstance.metadata.columnCount
cfsInstance.compactionStrategyManager.fanout > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > cfsInstance.fileIndexGenerator
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > cfsInstance.metadata.resource.hash
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > cfsInstance.readOrdering.current.id
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > resultSetInstance.metadata.columnCount
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.fileIndexGenerator < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
cfsInstance.fileIndexGenerator > cfsInstance.metadata.resource.hash
cfsInstance.fileIndexGenerator < cfsInstance.sampleLatencyNanos
cfsInstance.fileIndexGenerator != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > cfsInstance.metadata.resource.hash
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > cfsInstance.readOrdering.current.id
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > resultSetInstance.metadata.columnCount
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.metadata.resource.hash < cfsInstance.readOrdering.current.id
cfsInstance.metadata.resource.hash < cfsInstance.sampleLatencyNanos
cfsInstance.metadata.resource.hash < resultSetInstance.metadata.columnCount
cfsInstance.metadata.resource.hash < daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
cfsInstance.readOrdering.current.id < cfsInstance.sampleLatencyNanos
cfsInstance.readOrdering.current.id >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
cfsInstance.sampleLatencyNanos > resultSetInstance.metadata.columnCount
cfsInstance.sampleLatencyNanos > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
resultSetInstance.metadata.columnCount >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitionColumns.regulars.complexIdx - 2 * CommitLog.instance.executor.pending - 2 * CommitLog.instance.segmentManager.allocatingFrom.id + 3.462706449028E12 == 0
CFMetadataInstance.partitionColumns.regulars.complexIdx - 2 * CommitLog.instance.executor.pending - 2 * CommitLog.instance.segmentManager.availableSegment.id + 3.46270644903E12 == 0
CFMetadataInstance.partitionColumns.regulars.complexIdx - 2 * CommitLog.instance.segmentManager.allocatingFrom.nextId + 2 * cfsInstance.metadata.resource.hash + 2.986180876E9 == 0
CFMetadataInstance.partitionColumns.statics.complexIdx + CommitLog.instance.executor.pending + CommitLog.instance.segmentManager.allocatingFrom.id - 1.731353224515E12 == 0
CFMetadataInstance.partitionColumns.statics.complexIdx + CommitLog.instance.executor.pending + CommitLog.instance.segmentManager.availableSegment.id - 1.731353224516E12 == 0
CFMetadataInstance.partitionColumns.statics.complexIdx + CommitLog.instance.segmentManager.allocatingFrom.nextId - cfsInstance.metadata.resource.hash - 1493090439 == 0
7 * CFMetadataInstance.resource.hash - 7 * CommitLog.instance.executor.pending + CommitLog.instance.segmentManager.allocatingFrom.fd + 1.0451632582E10 == 0
CFMetadataInstance.resource.hash - CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.id + 1.732846314909E12 == 0
CFMetadataInstance.resource.hash - CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.nextId + 1493090439 == 0
6 * CFMetadataInstance.resource.hash - 6 * CommitLog.instance.executor.pending + CommitLog.instance.segmentManager.availableSegment.fd + 8.958542193E9 == 0
CFMetadataInstance.resource.hash - CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.availableSegment.id + 1.73284631491E12 == 0
CFMetadataInstance.resource.hash - CommitLog.instance.executor.pending - cfsInstance.readOrdering.current.id + 1493090397 == 0
CFMetadataInstance.resource.hash + CommitLog.instance.executor.pending + daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) + 1493090394 == 0
CFMetadataInstance.resource.hash - CommitLog.instance.segmentManager.allocatingFrom.nextId + cfsInstance.metadata.resource.hash + 2.986180833E9 == 0
31457280 * CFMetadataInstance.resource.hash + 5242880 * CommitLog.instance.segmentManager.availableSegment.fd - 3 * CommitLog.instance.segmentManager.size + 4.696856169283584E16 == 0
3 * CommitLog.instance.executor.lastSyncedAt - 64021072 * CommitLog.instance.executor.pending - 194242273 * CommitLog.instance.executor.written - 2.68289605728946E14 == 0
276 * CommitLog.instance.executor.lastSyncedAt + 1.1980350492E10 * CommitLog.instance.executor.pending - 194242273 * CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 2.4707243345484844E16 == 0
276 * CommitLog.instance.executor.lastSyncedAt + 1.1980350492E10 * CommitLog.instance.executor.pending - 194242273 * CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 2.4707244899423028E16 == 0
276 * CommitLog.instance.executor.lastSyncedAt - 3.1918403206E10 * CommitLog.instance.executor.pending - 194242273 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 2.4707244899423028E16 == 0
69 * CommitLog.instance.executor.lastSyncedAt - 2.995087623E9 * CommitLog.instance.executor.written - 16005268 * CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 6.17268790292635E15 == 0
69 * CommitLog.instance.executor.lastSyncedAt - 2.995087623E9 * CommitLog.instance.executor.written - 16005268 * CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 6.172688030968494E15 == 0
201 * CommitLog.instance.executor.lastSyncedAt - 1.5959201603E10 * CommitLog.instance.executor.written + 32010536 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 1.797134938543391E16 == 0
31188 * CommitLog.instance.executor.lastSyncedAt - 1.5959201603E10 * CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 5.990175246E9 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 2.7919185459611894E18 == 0
31188 * CommitLog.instance.executor.lastSyncedAt - 1.5959201603E10 * CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 5.990175246E9 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 2.7919186736348022E18 == 0
CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.id + cfsInstance.readOrdering.current.id + 1.731353224511E12 == 0
CommitLog.instance.executor.pending + CommitLog.instance.segmentManager.allocatingFrom.id + daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224514E12 == 0
CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.availableSegment.id + cfsInstance.readOrdering.current.id + 1.731353224512E12 == 0
CommitLog.instance.executor.pending + CommitLog.instance.segmentManager.availableSegment.id + daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224515E12 == 0
4 * CommitLog.instance.segmentManager.allocatingFrom.fd + 27 * CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.fileIndexGenerator - 4.674653706261E13 == 0
4 * CommitLog.instance.segmentManager.allocatingFrom.fd + 27 * CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.fileIndexGenerator - 4.6746537062637E13 == 0
15 * CommitLog.instance.segmentManager.allocatingFrom.id + 4 * CommitLog.instance.segmentManager.availableSegment.fd - 9 * cfsInstance.fileIndexGenerator - 2.5970298368418E13 == 0
CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.readOrdering.current.id - daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224511E12 == 0
4 * CommitLog.instance.segmentManager.availableSegment.fd + 15 * CommitLog.instance.segmentManager.availableSegment.id - 9 * cfsInstance.fileIndexGenerator - 2.5970298368433E13 == 0
5242880 * CommitLog.instance.segmentManager.availableSegment.fd - 3 * CommitLog.instance.segmentManager.size + 31457280 * cfsInstance.metadata.resource.hash + 4.696856169283584E16 == 0
CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.readOrdering.current.id - daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224512E12 == 0
===========================================================================
org.apache.cassandra.cql3.SimpleQueryTest@testStaticColumns-1159781553:::dump
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.keyValidator.isByteOrderComparable
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.partitioner.comparator.isByteOrderComparable
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.allocatingFrom.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.availableSegment.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.joinRing
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.useStrictConsistency
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionSpaceCheck
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.enabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_ENABLED
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.isEnabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.shouldDefragment
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.supportsEarlyOpen
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.data.loadsstables
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.directories.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.keyspace.initialized
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.allColumnFilter.isFetchAll
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.keyValidator.isByteOrderComparable
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.viewManager.baseTableMetadata.isCompound
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MIN_THRESHOLD
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CFMetadataInstance.partitioner.MINIMUM.serialVersionUID
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.executor.syncComplete.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.managerThreadWaitQueue.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.segmentPrepared.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == StorageService.instance.threadCounter
CFMetadataInstance.isCounter == CFMetadataInstance.isDense
CFMetadataInstance.isCounter == CFMetadataInstance.isSuper
CFMetadataInstance.isCounter == CFMetadataInstance.isView
CFMetadataInstance.isCounter == CFMetadataInstance.partitioner.partitionOrdering.isByteOrderComparable
CFMetadataInstance.isCounter == CommitLog.instance.executor.shutdown
CFMetadataInstance.isCounter == CommitLog.instance.segmentManager.shutdown
CFMetadataInstance.isCounter == StorageService.instance.allowSimultaneousMoves
CFMetadataInstance.isCounter == StorageService.instance.authSetupCalled
CFMetadataInstance.isCounter == StorageService.instance.authSetupComplete
CFMetadataInstance.isCounter == StorageService.instance.gossipActive
CFMetadataInstance.isCounter == StorageService.instance.initialized
CFMetadataInstance.isCounter == StorageService.instance.isBootstrapMode
CFMetadataInstance.isCounter == StorageService.instance.isDecommissioning
CFMetadataInstance.isCounter == StorageService.instance.isRebuilding
CFMetadataInstance.isCounter == StorageService.instance.isShutdown
CFMetadataInstance.isCounter == StorageService.instance.isSurveyMode
CFMetadataInstance.isCounter == StorageService.instance.joined
CFMetadataInstance.isCounter == StorageService.instance.replacing
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.compactionLogger.enabled
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.currentBoundaries.isInvalid
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.diskBoundaryManager.diskBoundaries.isInvalid
CFMetadataInstance.isCounter == cfsInstance.keyspace.TEST_FAIL_WRITES
CFMetadataInstance.isCounter == cfsInstance.keyspace.viewManager.enableCoordinatorBatchlog
CFMetadataInstance.isCounter == cfsInstance.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.readOrdering.current.isBlocking
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isDense
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isView
CFMetadataInstance.isIndex == CFMetadataInstance.partitioner.comparator.isByteOrderComparable
CFMetadataInstance.isIndex == CFMetadataInstance.partitioner.partitionOrdering.isByteOrderComparable
CFMetadataInstance.isIndex == cfsInstance.diskBoundaryManager.diskBoundaries.isInvalid
CFMetadataInstance.partitionColumns.regulars.complexIdx == CFMetadataInstance.partitionColumns.statics.complexIdx
CFMetadataInstance.partitionColumns.regulars.complexIdx == CFMetadataInstance.partitioner.MINIMUM.serialVersionUID
CFMetadataInstance.partitioner.EMPTY_SIZE == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CFMetadataInstance.partitioner.EMPTY_SIZE == cfsInstance.metadata.partitioner.EMPTY_SIZE
CFMetadataInstance.partitioner.HEAP_SIZE == StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.HEAP_SIZE == cfsInstance.metadata.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.MAXIMUM == StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CFMetadataInstance.partitioner.MAXIMUM == cfsInstance.metadata.partitioner.MAXIMUM
CFMetadataInstance.partitioner.comparator.isByteOrderComparable == cfsInstance.directories.metadata.isIndex
CFMetadataInstance.partitioner.partitionOrdering.isByteOrderComparable == CommitLog.instance.executor.syncRequested
CFMetadataInstance.partitioner.partitionOrdering.isByteOrderComparable == cfsInstance.diskBoundaryManager.diskBoundaries.isInvalid
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == CommitLog.instance.configuration.encryptionContext.chunkLength
CommitLog.instance.executor.markerIntervalNanos == CommitLog.instance.executor.syncIntervalNanos
CommitLog.instance.executor.pending == cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.managerThreadWaitQueue.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.segmentPrepared.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.keyspace.writeOrder.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.readOrdering.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)-1
CommitLog.instance.executor.syncComplete.NOT_SET == CommitLog.instance.segmentManager.bufferPool.usedBuffers
CommitLog.instance.executor.syncComplete.NOT_SET == CommitLog.instance.segmentManager.managerThreadWaitQueue.NOT_SET
CommitLog.instance.executor.syncComplete.NOT_SET == CommitLog.instance.segmentManager.segmentPrepared.NOT_SET
CommitLog.instance.executor.syncComplete.NOT_SET == QueryProcessor.instance.lastMinuteEvictionsCount
CommitLog.instance.executor.syncComplete.NOT_SET == QueryProcessor.instance.thriftLastMinuteEvictionsCount
CommitLog.instance.executor.syncComplete.NOT_SET == StorageService.instance.legacyProgressSupport.notificationSerialNumber
CommitLog.instance.executor.syncComplete.NOT_SET == StorageService.instance.nextRepairCommand
CommitLog.instance.executor.syncComplete.NOT_SET == StorageService.instance.progressSupport.notificationSerialNumber
CommitLog.instance.executor.syncComplete.NOT_SET == StorageService.instance.remainingCFs
CommitLog.instance.executor.syncComplete.NOT_SET == StorageService.instance.tokenMetadata.ringVersion
CommitLog.instance.executor.syncComplete.NOT_SET == StorageService.instance.totalCFs
CommitLog.instance.executor.syncComplete.NOT_SET == cfsInstance.compactionStrategyManager.compactionLogger.identifier
CommitLog.instance.executor.syncComplete.NOT_SET == cfsInstance.compactionStrategyManager.currentBoundaries.directoriesVersion
CommitLog.instance.executor.syncComplete.NOT_SET == cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CommitLog.instance.executor.syncComplete.NOT_SET == cfsInstance.keyspace.TEST_FAIL_MV_LOCKS_COUNT
CommitLog.instance.executor.syncComplete.NOT_SET == cfsInstance.keyspace.replicationStrategy.lastInvalidatedVersion
CommitLog.instance.executor.syncComplete.NOT_SET == cfsInstance.readOrdering.current.running
CommitLog.instance.executor.syncComplete.NOT_SET == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)
CommitLog.instance.executor.syncRequested == cfsInstance.diskBoundaryManager.diskBoundaries.isInvalid
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == CommitLog.instance.segmentManager.availableSegment.ENTRY_OVERHEAD_SIZE
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == CommitLog.instance.segmentManager.availableSegment.SYNC_MARKER_SIZE
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.availableSegment.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.bufferPool.bufferSize
CommitLog.instance.segmentManager.allocatingFrom.idBase == CommitLog.instance.segmentManager.availableSegment.idBase
CommitLog.instance.segmentManager.allocatingFrom.nextId == CommitLog.instance.segmentManager.availableSegment.nextId
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == CommitLog.instance.segmentManager.availableSegment.replayLimitId
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == CommitLog.instance.segmentManager.availableSegment.lastSyncedOffset
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE == resultSetInstance.rows_FOR_ENCLOSING_USE
StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE == StorageService.instance.valueFactory.partitioner.HEAP_SIZE
StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE == cfsInstance.metadata.partitioner.HEAP_SIZE
StorageService.instance.tokenMetadata.partitioner.MAXIMUM == StorageService.instance.valueFactory.partitioner.MAXIMUM
StorageService.instance.tokenMetadata.partitioner.MAXIMUM == cfsInstance.metadata.partitioner.MAXIMUM
cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion == cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
cfsInstance.compactionStrategyManager.isActive == cfsInstance.valid
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD == cfsInstance.metadata.partitioner.EMPTY_SIZE
cfsInstance.directories.metadata.isIndex == cfsInstance.diskBoundaryManager.diskBoundaries.isInvalid
cfsInstance.directories.metadata.isIndex == cfsInstance.metadata.isIndex
cfsInstance.directories.metadata.isIndex == cfsInstance.metric.aliasFactory.isIndex
cfsInstance.directories.metadata.isIndex == cfsInstance.metric.factory.isIndex
cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion == cfsInstance.diskBoundaryManager.diskBoundaries.ringVersion
CFMetadataInstance.allColumnFilter.isFetchAll == true
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK == 2
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == 4
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == 1
CFMetadataInstance.isCounter == false
CFMetadataInstance.partitionColumns.regulars.complexIdx == 0 || CFMetadataInstance.partitionColumns.regulars.complexIdx == 1
CFMetadataInstance.partitioner.EMPTY_SIZE == 32
CFMetadataInstance.partitioner.HEAP_SIZE == 24
CFMetadataInstance.partitioner.MAXIMUM == 9223372036854775807L
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID == 1
CFMetadataInstance.partitioner.MINIMUM.token == -9223372036854775808L
CFMetadataInstance.partitioner.comparator.isByteOrderComparable == true
CFMetadataInstance.partitioner.partitionOrdering.isByteOrderComparable == false
CFMetadataInstance.resource.hash == -1493090402 || CFMetadataInstance.resource.hash == 1292670864
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == 65536
CommitLog.instance.MAX_MUTATION_SIZE == 2621440
CommitLog.instance.archiver.restorePointInTime == 4510987932000L
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS == 100
CommitLog.instance.executor.markerIntervalNanos == 1000000
CommitLog.instance.executor.pending == 0 || CommitLog.instance.executor.pending == 1 || CommitLog.instance.executor.pending == 2
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == 12
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == 8
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == 5242880
CommitLog.instance.segmentManager.allocatingFrom.fd == 177 || CommitLog.instance.segmentManager.allocatingFrom.fd == 180 || CommitLog.instance.segmentManager.allocatingFrom.fd == 183
CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224497L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224498L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224499L
CommitLog.instance.segmentManager.allocatingFrom.idBase == 1731353224472L
CommitLog.instance.segmentManager.allocatingFrom.nextId == 27 || CommitLog.instance.segmentManager.allocatingFrom.nextId == 28 || CommitLog.instance.segmentManager.allocatingFrom.nextId == 29
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == 1731353224475L
CommitLog.instance.segmentManager.availableSegment.allocatePosition == 28
CommitLog.instance.segmentManager.availableSegment.fd == 177 || CommitLog.instance.segmentManager.availableSegment.fd == 180 || CommitLog.instance.segmentManager.availableSegment.fd == 254
CommitLog.instance.segmentManager.availableSegment.id == 1731353224498L || CommitLog.instance.segmentManager.availableSegment.id == 1731353224499L || CommitLog.instance.segmentManager.availableSegment.id == 1731353224500L
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == 20
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize == 3
CommitLog.instance.segmentManager.size == 10485760 || CommitLog.instance.segmentManager.size == 15728640
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
("oneOf.java.jpp: SEQUENCE unimplemented" != null)
StorageService.instance.RING_DELAY == 30000
StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE == 24
StorageService.instance.tokenMetadata.partitioner.MAXIMUM == 9223372036854775807L
daikon.Quant.fuzzy.eq(StorageService.instance.traceProbability, 0.0)
cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion == -1 || cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion == 0
cfsInstance.compactionStrategyManager.fanout == 10
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD == 32
cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion == 0
cfsInstance.diskBoundaryManager.diskBoundaries.isInvalid == false
cfsInstance.indexManager.DEFAULT_PAGE_SIZE == 10000
cfsInstance.metadata.partitioner.EMPTY_SIZE == 32
cfsInstance.metadata.partitioner.HEAP_SIZE == 24
cfsInstance.metadata.partitioner.MAXIMUM == 9223372036854775807L
cfsInstance.metadata.resource.hash == -1493090402 || cfsInstance.metadata.resource.hash == 1292670864
cfsInstance.readOrdering.current.id >= 0
cfsInstance.sampleLatencyNanos == 2500000000L
resultSetInstance.metadata.columnCount >= 1
daikon.Quant.eltsNotEqual(resultSetInstance.rows_FOR_ENCLOSING_USE, null)
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK >= CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.size
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != resultSetInstance.metadata.columnCount
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK != CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.size
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > cfsInstance.fileIndexGenerator
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK != cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > cfsInstance.readOrdering.current.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK >= CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK != CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.size
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK != cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK <= resultSetInstance.metadata.columnCount
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.partitionColumns.regulars.complexIdx < CFMetadataInstance.partitioner.EMPTY_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CFMetadataInstance.partitioner.HEAP_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CFMetadataInstance.partitioner.MAXIMUM
CFMetadataInstance.partitionColumns.regulars.complexIdx > CFMetadataInstance.partitioner.MINIMUM.token
CFMetadataInstance.partitionColumns.regulars.complexIdx != CFMetadataInstance.resource.hash
CFMetadataInstance.partitionColumns.regulars.complexIdx < CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.MAX_MUTATION_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.archiver.restorePointInTime
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.markerIntervalNanos
CFMetadataInstance.partitionColumns.regulars.complexIdx >= CommitLog.instance.executor.syncComplete.NOT_SET
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.written
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.idBase
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitionColumns.regulars.complexIdx < StorageService.instance.RING_DELAY
CFMetadataInstance.partitionColumns.regulars.complexIdx < StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CFMetadataInstance.partitionColumns.regulars.complexIdx > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.compactionStrategyManager.fanout
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CFMetadataInstance.partitionColumns.regulars.complexIdx > cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.metadata.partitioner.EMPTY_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.metadata.partitioner.HEAP_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.metadata.partitioner.MAXIMUM
CFMetadataInstance.partitionColumns.regulars.complexIdx != cfsInstance.metadata.resource.hash
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.sampleLatencyNanos
CFMetadataInstance.partitionColumns.regulars.complexIdx <= resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.EMPTY_SIZE < CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.EMPTY_SIZE > CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.executor.written
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.EMPTY_SIZE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.EMPTY_SIZE > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.partitioner.EMPTY_SIZE > cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.EMPTY_SIZE < cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.EMPTY_SIZE > cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.EMPTY_SIZE > resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.EMPTY_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.HEAP_SIZE > CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.HEAP_SIZE > CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.executor.written
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.HEAP_SIZE != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.HEAP_SIZE != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.HEAP_SIZE > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.partitioner.HEAP_SIZE > cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.HEAP_SIZE != cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.HEAP_SIZE > cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.HEAP_SIZE > resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.HEAP_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.MAXIMUM > CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.written
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.MAXIMUM > resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.MAXIMUM > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID > CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID >= CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID < CommitLog.instance.executor.written
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID != cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID <= resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.MINIMUM.serialVersionUID != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.partitioner.MINIMUM.token < CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.written
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.MINIMUM.token < resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.MINIMUM.token < daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.resource.hash != CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE
CFMetadataInstance.resource.hash != CommitLog.instance.MAX_MUTATION_SIZE
CFMetadataInstance.resource.hash < CommitLog.instance.archiver.restorePointInTime
CFMetadataInstance.resource.hash != CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS
CFMetadataInstance.resource.hash < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.resource.hash != CommitLog.instance.executor.markerIntervalNanos
CFMetadataInstance.resource.hash != CommitLog.instance.executor.pending
CFMetadataInstance.resource.hash != CommitLog.instance.executor.syncComplete.CANCELLED
CFMetadataInstance.resource.hash != CommitLog.instance.executor.syncComplete.NOT_SET
CFMetadataInstance.resource.hash != CommitLog.instance.executor.written
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.idBase
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.availableSegment.allocatePosition
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.size
CFMetadataInstance.resource.hash != StorageService.instance.RING_DELAY
CFMetadataInstance.resource.hash != StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CFMetadataInstance.resource.hash < StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CFMetadataInstance.resource.hash != cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.resource.hash != cfsInstance.compactionStrategyManager.fanout
CFMetadataInstance.resource.hash != cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CFMetadataInstance.resource.hash < cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CFMetadataInstance.resource.hash != cfsInstance.fileIndexGenerator
CFMetadataInstance.resource.hash != cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CFMetadataInstance.resource.hash != cfsInstance.metadata.partitioner.EMPTY_SIZE
CFMetadataInstance.resource.hash < cfsInstance.metadata.partitioner.HEAP_SIZE
CFMetadataInstance.resource.hash < cfsInstance.metadata.partitioner.MAXIMUM
CFMetadataInstance.resource.hash <= cfsInstance.metadata.resource.hash
CFMetadataInstance.resource.hash != cfsInstance.readOrdering.current.id
CFMetadataInstance.resource.hash < cfsInstance.sampleLatencyNanos
CFMetadataInstance.resource.hash != resultSetInstance.metadata.columnCount
CFMetadataInstance.resource.hash != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.resource.hash != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.executor.pending
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.executor.written
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.size
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > cfsInstance.fileIndexGenerator
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE != cfsInstance.metadata.resource.hash
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > cfsInstance.readOrdering.current.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > resultSetInstance.metadata.columnCount
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.executor.pending
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.executor.written
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.size
CommitLog.instance.MAX_MUTATION_SIZE > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.MAX_MUTATION_SIZE > cfsInstance.fileIndexGenerator
CommitLog.instance.MAX_MUTATION_SIZE != cfsInstance.metadata.resource.hash
CommitLog.instance.MAX_MUTATION_SIZE > cfsInstance.readOrdering.current.id
CommitLog.instance.MAX_MUTATION_SIZE > resultSetInstance.metadata.columnCount
CommitLog.instance.MAX_MUTATION_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.archiver.restorePointInTime < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.executor.pending
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.executor.written
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.size
CommitLog.instance.archiver.restorePointInTime > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.archiver.restorePointInTime > cfsInstance.fileIndexGenerator
CommitLog.instance.archiver.restorePointInTime > cfsInstance.metadata.resource.hash
CommitLog.instance.archiver.restorePointInTime > cfsInstance.readOrdering.current.id
CommitLog.instance.archiver.restorePointInTime % resultSetInstance.metadata.columnCount == 0
CommitLog.instance.archiver.restorePointInTime > resultSetInstance.metadata.columnCount
CommitLog.instance.archiver.restorePointInTime > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > CommitLog.instance.executor.pending
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.executor.written
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS != CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS != cfsInstance.metadata.resource.hash
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.markerIntervalNanos
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.pending
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.syncComplete.NOT_SET
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.written
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.size
CommitLog.instance.executor.lastSyncedAt > StorageService.instance.RING_DELAY
CommitLog.instance.executor.lastSyncedAt > StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CommitLog.instance.executor.lastSyncedAt < StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.lastSyncedAt > cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CommitLog.instance.executor.lastSyncedAt > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.lastSyncedAt > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.lastSyncedAt > cfsInstance.metadata.partitioner.EMPTY_SIZE
CommitLog.instance.executor.lastSyncedAt > cfsInstance.metadata.partitioner.HEAP_SIZE
CommitLog.instance.executor.lastSyncedAt < cfsInstance.metadata.partitioner.MAXIMUM
CommitLog.instance.executor.lastSyncedAt > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.lastSyncedAt > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.lastSyncedAt > cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.lastSyncedAt > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.lastSyncedAt > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.executor.pending
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.executor.written
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.markerIntervalNanos > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.executor.markerIntervalNanos > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.markerIntervalNanos != cfsInstance.metadata.resource.hash
CommitLog.instance.executor.markerIntervalNanos > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.markerIntervalNanos > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.markerIntervalNanos > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.pending >= CommitLog.instance.executor.syncComplete.NOT_SET
CommitLog.instance.executor.pending < CommitLog.instance.executor.written
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.pending < StorageService.instance.RING_DELAY
CommitLog.instance.executor.pending < StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CommitLog.instance.executor.pending < StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CommitLog.instance.executor.pending >= cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.executor.pending < cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.pending < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.pending <= cfsInstance.fileIndexGenerator
CommitLog.instance.executor.pending < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.pending < cfsInstance.metadata.partitioner.EMPTY_SIZE
CommitLog.instance.executor.pending < cfsInstance.metadata.partitioner.HEAP_SIZE
CommitLog.instance.executor.pending < cfsInstance.metadata.partitioner.MAXIMUM
CommitLog.instance.executor.pending != cfsInstance.metadata.resource.hash
CommitLog.instance.executor.pending < cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.syncComplete.CANCELLED <= cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.executor.syncComplete.CANCELLED != cfsInstance.metadata.resource.hash
CommitLog.instance.executor.syncComplete.CANCELLED <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.executor.written
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.syncComplete.NOT_SET >= cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.executor.syncComplete.NOT_SET <= cfsInstance.fileIndexGenerator
CommitLog.instance.executor.syncComplete.NOT_SET != cfsInstance.metadata.resource.hash
CommitLog.instance.executor.syncComplete.NOT_SET <= cfsInstance.readOrdering.current.id
CommitLog.instance.executor.syncComplete.NOT_SET < resultSetInstance.metadata.columnCount
CommitLog.instance.executor.syncComplete.NOT_SET <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.written != CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.written != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.written != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.written < StorageService.instance.RING_DELAY
CommitLog.instance.executor.written > StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CommitLog.instance.executor.written < StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CommitLog.instance.executor.written > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.executor.written > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.written > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.written > cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CommitLog.instance.executor.written > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.written < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.written > cfsInstance.metadata.partitioner.EMPTY_SIZE
CommitLog.instance.executor.written > cfsInstance.metadata.partitioner.HEAP_SIZE
CommitLog.instance.executor.written < cfsInstance.metadata.partitioner.MAXIMUM
CommitLog.instance.executor.written != cfsInstance.metadata.resource.hash
CommitLog.instance.executor.written > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.written < cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.written > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.written > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE != resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition >= CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.metadata.partitioner.EMPTY_SIZE
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.metadata.partitioner.HEAP_SIZE
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.metadata.partitioner.MAXIMUM
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.fd != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.fd != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.fd != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.fd < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.fd > StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CommitLog.instance.segmentManager.allocatingFrom.fd < StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.fd < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.metadata.partitioner.EMPTY_SIZE
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.metadata.partitioner.HEAP_SIZE
CommitLog.instance.segmentManager.allocatingFrom.fd < cfsInstance.metadata.partitioner.MAXIMUM
CommitLog.instance.segmentManager.allocatingFrom.fd != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.fd < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.fd > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.fd > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.id < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.id > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.id > StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CommitLog.instance.segmentManager.allocatingFrom.id < StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.metadata.partitioner.EMPTY_SIZE
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.metadata.partitioner.HEAP_SIZE
CommitLog.instance.segmentManager.allocatingFrom.id < cfsInstance.metadata.partitioner.MAXIMUM
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.id > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.id > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.idBase < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.idBase > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.idBase > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset >= CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset >= CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.metadata.partitioner.EMPTY_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != cfsInstance.metadata.partitioner.HEAP_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.metadata.partitioner.MAXIMUM
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset >= CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.metadata.partitioner.EMPTY_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != cfsInstance.metadata.partitioner.HEAP_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.metadata.partitioner.MAXIMUM
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.nextId > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.nextId > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.nextId < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.nextId > StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CommitLog.instance.segmentManager.allocatingFrom.nextId < StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.metadata.partitioner.EMPTY_SIZE
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.metadata.partitioner.HEAP_SIZE
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.metadata.partitioner.MAXIMUM
CommitLog.instance.segmentManager.allocatingFrom.nextId != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.nextId > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.nextId > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.allocatePosition > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.availableSegment.allocatePosition > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.allocatePosition != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.allocatePosition > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.allocatePosition > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.allocatePosition > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.fd < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.availableSegment.fd > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.availableSegment.fd > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.availableSegment.fd < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.fd < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.availableSegment.fd > StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CommitLog.instance.segmentManager.availableSegment.fd < StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.fd < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.metadata.partitioner.EMPTY_SIZE
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.metadata.partitioner.HEAP_SIZE
CommitLog.instance.segmentManager.availableSegment.fd < cfsInstance.metadata.partitioner.MAXIMUM
CommitLog.instance.segmentManager.availableSegment.fd != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.fd < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.availableSegment.fd > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.fd > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.id > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.availableSegment.id > StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CommitLog.instance.segmentManager.availableSegment.id < StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.metadata.partitioner.EMPTY_SIZE
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.metadata.partitioner.HEAP_SIZE
CommitLog.instance.segmentManager.availableSegment.id < cfsInstance.metadata.partitioner.MAXIMUM
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.availableSegment.id > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.id > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset >= resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize >= cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize >= cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.size > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.size > StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CommitLog.instance.segmentManager.size < StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CommitLog.instance.segmentManager.size > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.segmentManager.size > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.size > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.size > cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CommitLog.instance.segmentManager.size > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.size > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.size > cfsInstance.metadata.partitioner.EMPTY_SIZE
CommitLog.instance.segmentManager.size > cfsInstance.metadata.partitioner.HEAP_SIZE
CommitLog.instance.segmentManager.size < cfsInstance.metadata.partitioner.MAXIMUM
CommitLog.instance.segmentManager.size != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.size > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.size < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.size > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.size > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
daikon.Quant.subsetOf(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE, resultSetInstance.rows_FOR_ENCLOSING_USE)
StorageService.instance.RING_DELAY > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
StorageService.instance.RING_DELAY > cfsInstance.fileIndexGenerator
StorageService.instance.RING_DELAY != cfsInstance.metadata.resource.hash
StorageService.instance.RING_DELAY > cfsInstance.readOrdering.current.id
StorageService.instance.RING_DELAY % resultSetInstance.metadata.columnCount == 0
StorageService.instance.RING_DELAY > resultSetInstance.metadata.columnCount
StorageService.instance.RING_DELAY > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE > cfsInstance.fileIndexGenerator
StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE != cfsInstance.metadata.resource.hash
StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE > cfsInstance.readOrdering.current.id
StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE > resultSetInstance.metadata.columnCount
StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
StorageService.instance.tokenMetadata.partitioner.MAXIMUM > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
StorageService.instance.tokenMetadata.partitioner.MAXIMUM > cfsInstance.fileIndexGenerator
StorageService.instance.tokenMetadata.partitioner.MAXIMUM > cfsInstance.metadata.resource.hash
StorageService.instance.tokenMetadata.partitioner.MAXIMUM > cfsInstance.readOrdering.current.id
StorageService.instance.tokenMetadata.partitioner.MAXIMUM > resultSetInstance.metadata.columnCount
StorageService.instance.tokenMetadata.partitioner.MAXIMUM > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion < cfsInstance.compactionStrategyManager.fanout
cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion <= cfsInstance.fileIndexGenerator
cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion < cfsInstance.metadata.partitioner.EMPTY_SIZE
cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion < cfsInstance.metadata.partitioner.HEAP_SIZE
cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion < cfsInstance.metadata.partitioner.MAXIMUM
cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion != cfsInstance.metadata.resource.hash
cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion <= cfsInstance.readOrdering.current.id
cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion < cfsInstance.sampleLatencyNanos
cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion < resultSetInstance.metadata.columnCount
cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.compactionStrategyManager.fanout > cfsInstance.fileIndexGenerator
cfsInstance.compactionStrategyManager.fanout != cfsInstance.metadata.resource.hash
cfsInstance.compactionStrategyManager.fanout > cfsInstance.readOrdering.current.id
cfsInstance.compactionStrategyManager.fanout != resultSetInstance.metadata.columnCount
cfsInstance.compactionStrategyManager.fanout > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > cfsInstance.fileIndexGenerator
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD != cfsInstance.metadata.resource.hash
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > cfsInstance.readOrdering.current.id
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > resultSetInstance.metadata.columnCount
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion <= cfsInstance.fileIndexGenerator
cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion > cfsInstance.metadata.resource.hash
cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion <= cfsInstance.readOrdering.current.id
cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion < resultSetInstance.metadata.columnCount
cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.fileIndexGenerator < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
cfsInstance.fileIndexGenerator < cfsInstance.metadata.partitioner.EMPTY_SIZE
cfsInstance.fileIndexGenerator < cfsInstance.metadata.partitioner.HEAP_SIZE
cfsInstance.fileIndexGenerator < cfsInstance.metadata.partitioner.MAXIMUM
cfsInstance.fileIndexGenerator != cfsInstance.metadata.resource.hash
cfsInstance.fileIndexGenerator >= cfsInstance.readOrdering.current.id
cfsInstance.fileIndexGenerator < cfsInstance.sampleLatencyNanos
cfsInstance.fileIndexGenerator != resultSetInstance.metadata.columnCount
cfsInstance.fileIndexGenerator != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
cfsInstance.indexManager.DEFAULT_PAGE_SIZE != cfsInstance.metadata.resource.hash
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > cfsInstance.readOrdering.current.id
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > resultSetInstance.metadata.columnCount
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.metadata.partitioner.EMPTY_SIZE < cfsInstance.metadata.resource.hash
cfsInstance.metadata.partitioner.EMPTY_SIZE > cfsInstance.readOrdering.current.id
cfsInstance.metadata.partitioner.EMPTY_SIZE > resultSetInstance.metadata.columnCount
cfsInstance.metadata.partitioner.EMPTY_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.metadata.partitioner.HEAP_SIZE > cfsInstance.metadata.resource.hash
cfsInstance.metadata.partitioner.HEAP_SIZE > cfsInstance.readOrdering.current.id
cfsInstance.metadata.partitioner.HEAP_SIZE > resultSetInstance.metadata.columnCount
cfsInstance.metadata.partitioner.HEAP_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.metadata.partitioner.MAXIMUM > cfsInstance.metadata.resource.hash
cfsInstance.metadata.partitioner.MAXIMUM > cfsInstance.readOrdering.current.id
cfsInstance.metadata.partitioner.MAXIMUM > resultSetInstance.metadata.columnCount
cfsInstance.metadata.partitioner.MAXIMUM > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.metadata.resource.hash != cfsInstance.readOrdering.current.id
cfsInstance.metadata.resource.hash < cfsInstance.sampleLatencyNanos
cfsInstance.metadata.resource.hash != resultSetInstance.metadata.columnCount
cfsInstance.metadata.resource.hash != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.metadata.resource.hash != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
cfsInstance.readOrdering.current.id < cfsInstance.sampleLatencyNanos
cfsInstance.sampleLatencyNanos > resultSetInstance.metadata.columnCount
cfsInstance.sampleLatencyNanos > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
resultSetInstance.metadata.columnCount != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.partitionColumns.regulars.complexIdx - CommitLog.instance.segmentManager.allocatingFrom.id + cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion + 1.731353224498E12 == 0
CFMetadataInstance.partitionColumns.regulars.complexIdx - CommitLog.instance.segmentManager.allocatingFrom.id + cfsInstance.readOrdering.current.id + 1.731353224497E12 == 0
CFMetadataInstance.partitionColumns.regulars.complexIdx - CommitLog.instance.segmentManager.availableSegment.id + cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion + 1.731353224499E12 == 0
CFMetadataInstance.partitionColumns.regulars.complexIdx - CommitLog.instance.segmentManager.availableSegment.id + cfsInstance.readOrdering.current.id + 1.731353224498E12 == 0
CommitLog.instance.executor.lastSyncedAt - 42721225 * CommitLog.instance.executor.pending - 69881870 * CommitLog.instance.executor.written - 8.9383577617077E13 == 0
18 * CommitLog.instance.executor.lastSyncedAt - 488891610 * CommitLog.instance.executor.written - 8544245 * CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 1.609634947143376E15 == 0
18 * CommitLog.instance.executor.lastSyncedAt - 488891610 * CommitLog.instance.executor.written - 8544245 * CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 1.609635015497336E15 == 0
134 * CommitLog.instance.executor.lastSyncedAt - 1.320908083E10 * CommitLog.instance.executor.written + 42721225 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 1.1973746308738568E16 == 0
5 * CommitLog.instance.segmentManager.allocatingFrom.fd + 12 * CommitLog.instance.segmentManager.allocatingFrom.id - 9 * cfsInstance.fileIndexGenerator - 2.0776238694861E13 == 0
5 * CommitLog.instance.segmentManager.allocatingFrom.fd + 12 * CommitLog.instance.segmentManager.availableSegment.id - 9 * cfsInstance.fileIndexGenerator - 2.0776238694873E13 == 0
157 * CommitLog.instance.segmentManager.allocatingFrom.id - 5 * CommitLog.instance.segmentManager.availableSegment.fd + 71 * cfsInstance.fileIndexGenerator - 2.71822456245286E14 == 0
CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion - cfsInstance.readOrdering.current.id - 1.731353224498E12 == 0
2 * CommitLog.instance.segmentManager.allocatingFrom.id + cfsInstance.fileIndexGenerator - 2 * cfsInstance.readOrdering.current.id - 3.462706448996E12 == 0
CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.readOrdering.current.id - daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224496E12 == 0
5 * CommitLog.instance.segmentManager.availableSegment.fd - 157 * CommitLog.instance.segmentManager.availableSegment.id - 71 * cfsInstance.fileIndexGenerator + 2.71822456245443E14 == 0
CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion - cfsInstance.readOrdering.current.id - 1.731353224499E12 == 0
2 * CommitLog.instance.segmentManager.availableSegment.id + cfsInstance.fileIndexGenerator - 2 * cfsInstance.readOrdering.current.id - 3.462706448998E12 == 0
CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.readOrdering.current.id - daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224497E12 == 0
===========================================================================
org.apache.cassandra.cql3.SimpleQueryTest@testStaticCompactTables-1221656276:::dump
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.compactValueColumn.type.isByteOrderComparable
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.allocatingFrom.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.availableSegment.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.joinRing
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.useStrictConsistency
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionSpaceCheck
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.enabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.isActive
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.partitionSSTablesByTokenRange
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_ENABLED
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.isEnabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.shouldDefragment
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.supportsEarlyOpen
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.data.loadsstables
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.keyspace.initialized
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.allColumnFilter.isFetchAll
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.keyValidator.isByteOrderComparable
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.valid
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MIN_THRESHOLD
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CFMetadataInstance.partitioner.MINIMUM.serialVersionUID
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.executor.syncComplete.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.managerThreadWaitQueue.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.segmentPrepared.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == StorageService.instance.threadCounter
CFMetadataInstance.compactValueColumn.NO_POSITION == CFMetadataInstance.compactValueColumn.position
CFMetadataInstance.compactValueColumn.NO_POSITION == CommitLog.instance.executor.syncComplete.CANCELLED
CFMetadataInstance.compactValueColumn.NO_POSITION == cfsInstance.metadata.compactValueColumn.NO_POSITION
CFMetadataInstance.compactValueColumn.comparisonOrder == cfsInstance.metadata.compactValueColumn.comparisonOrder
CFMetadataInstance.compactValueColumn.hash == cfsInstance.metadata.compactValueColumn.hash
CFMetadataInstance.compactValueColumn.type.isByteOrderComparable == CFMetadataInstance.keyValidator.isByteOrderComparable
CFMetadataInstance.isCounter == CFMetadataInstance.isDense
CFMetadataInstance.isCounter == CFMetadataInstance.isIndex
CFMetadataInstance.isCounter == CFMetadataInstance.isSuper
CFMetadataInstance.isCounter == CFMetadataInstance.isView
CFMetadataInstance.isCounter == CFMetadataInstance.partitioner.partitionOrdering.isByteOrderComparable
CFMetadataInstance.isCounter == CommitLog.instance.executor.shutdown
CFMetadataInstance.isCounter == CommitLog.instance.segmentManager.shutdown
CFMetadataInstance.isCounter == StorageService.instance.allowSimultaneousMoves
CFMetadataInstance.isCounter == StorageService.instance.authSetupCalled
CFMetadataInstance.isCounter == StorageService.instance.authSetupComplete
CFMetadataInstance.isCounter == StorageService.instance.gossipActive
CFMetadataInstance.isCounter == StorageService.instance.initialized
CFMetadataInstance.isCounter == StorageService.instance.isBootstrapMode
CFMetadataInstance.isCounter == StorageService.instance.isDecommissioning
CFMetadataInstance.isCounter == StorageService.instance.isRebuilding
CFMetadataInstance.isCounter == StorageService.instance.isShutdown
CFMetadataInstance.isCounter == StorageService.instance.isSurveyMode
CFMetadataInstance.isCounter == StorageService.instance.joined
CFMetadataInstance.isCounter == StorageService.instance.replacing
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.compactionLogger.enabled
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.currentBoundaries.isInvalid
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.diskBoundaryManager.diskBoundaries.isInvalid
CFMetadataInstance.isCounter == cfsInstance.keyspace.TEST_FAIL_WRITES
CFMetadataInstance.isCounter == cfsInstance.keyspace.viewManager.enableCoordinatorBatchlog
CFMetadataInstance.isCounter == cfsInstance.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.metric.aliasFactory.isIndex
CFMetadataInstance.isCounter == cfsInstance.metric.factory.isIndex
CFMetadataInstance.isCounter == cfsInstance.readOrdering.current.isBlocking
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isDense
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isView
CFMetadataInstance.partitioner.HEAP_SIZE == StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.HEAP_SIZE == StorageService.instance.valueFactory.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.HEAP_SIZE == cfsInstance.metadata.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.MAXIMUM == StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CFMetadataInstance.partitioner.MAXIMUM == StorageService.instance.valueFactory.partitioner.MAXIMUM
CFMetadataInstance.partitioner.MAXIMUM == cfsInstance.metadata.partitioner.MAXIMUM
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == CommitLog.instance.configuration.encryptionContext.chunkLength
CommitLog.instance.executor.markerIntervalNanos == CommitLog.instance.executor.syncIntervalNanos
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.managerThreadWaitQueue.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.segmentPrepared.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.keyspace.writeOrder.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.metadata.compactValueColumn.NO_POSITION
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.readOrdering.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)-1
CommitLog.instance.executor.syncComplete.NOT_SET == CommitLog.instance.segmentManager.bufferPool.usedBuffers
CommitLog.instance.executor.syncComplete.NOT_SET == CommitLog.instance.segmentManager.managerThreadWaitQueue.NOT_SET
CommitLog.instance.executor.syncComplete.NOT_SET == CommitLog.instance.segmentManager.segmentPrepared.NOT_SET
CommitLog.instance.executor.syncComplete.NOT_SET == QueryProcessor.instance.lastMinuteEvictionsCount
CommitLog.instance.executor.syncComplete.NOT_SET == QueryProcessor.instance.thriftLastMinuteEvictionsCount
CommitLog.instance.executor.syncComplete.NOT_SET == StorageService.instance.legacyProgressSupport.notificationSerialNumber
CommitLog.instance.executor.syncComplete.NOT_SET == StorageService.instance.nextRepairCommand
CommitLog.instance.executor.syncComplete.NOT_SET == StorageService.instance.progressSupport.notificationSerialNumber
CommitLog.instance.executor.syncComplete.NOT_SET == StorageService.instance.remainingCFs
CommitLog.instance.executor.syncComplete.NOT_SET == StorageService.instance.tokenMetadata.ringVersion
CommitLog.instance.executor.syncComplete.NOT_SET == StorageService.instance.totalCFs
CommitLog.instance.executor.syncComplete.NOT_SET == cfsInstance.compactionStrategyManager.compactionLogger.identifier
CommitLog.instance.executor.syncComplete.NOT_SET == cfsInstance.compactionStrategyManager.currentBoundaries.directoriesVersion
CommitLog.instance.executor.syncComplete.NOT_SET == cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.executor.syncComplete.NOT_SET == cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CommitLog.instance.executor.syncComplete.NOT_SET == cfsInstance.diskBoundaryManager.diskBoundaries.ringVersion
CommitLog.instance.executor.syncComplete.NOT_SET == cfsInstance.keyspace.TEST_FAIL_MV_LOCKS_COUNT
CommitLog.instance.executor.syncComplete.NOT_SET == cfsInstance.keyspace.replicationStrategy.lastInvalidatedVersion
CommitLog.instance.executor.syncComplete.NOT_SET == cfsInstance.readOrdering.current.running
CommitLog.instance.executor.syncComplete.NOT_SET == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == CommitLog.instance.segmentManager.availableSegment.ENTRY_OVERHEAD_SIZE
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == CommitLog.instance.segmentManager.availableSegment.SYNC_MARKER_SIZE
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.availableSegment.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.bufferPool.bufferSize
CommitLog.instance.segmentManager.allocatingFrom.idBase == CommitLog.instance.segmentManager.availableSegment.idBase
CommitLog.instance.segmentManager.allocatingFrom.nextId == CommitLog.instance.segmentManager.availableSegment.nextId
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == CommitLog.instance.segmentManager.availableSegment.replayLimitId
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == CommitLog.instance.segmentManager.availableSegment.lastSyncedOffset
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE == resultSetInstance.rows_FOR_ENCLOSING_USE
cfsInstance.directories.metadata.isCompound == cfsInstance.metadata.isCompound
cfsInstance.directories.metadata.isCompound == cfsInstance.viewManager.baseTableMetadata.isCompound
cfsInstance.metadata.compactValueColumn.NO_POSITION == cfsInstance.metadata.compactValueColumn.position
CFMetadataInstance.allColumnFilter.isFetchAll == true
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK == 2
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == 4
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == 1
CFMetadataInstance.compactValueColumn.NO_POSITION == -1
CFMetadataInstance.compactValueColumn.comparisonOrder == 4611956916719281408L
CFMetadataInstance.compactValueColumn.hash == -40591990 || CFMetadataInstance.compactValueColumn.hash == 0
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE == 48
CFMetadataInstance.compactValueColumn.name.prefixComparison == -693153616176873472L
CFMetadataInstance.compactValueColumn.type.isByteOrderComparable == true
CFMetadataInstance.isCounter == false
CFMetadataInstance.partitionColumns.statics.complexIdx == 1 || CFMetadataInstance.partitionColumns.statics.complexIdx == 2
CFMetadataInstance.partitioner.HEAP_SIZE == 24
CFMetadataInstance.partitioner.MAXIMUM == 9223372036854775807L
CFMetadataInstance.partitioner.MINIMUM.token == -9223372036854775808L
CFMetadataInstance.resource.hash == 2144393068 || CFMetadataInstance.resource.hash == 2144393069
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == 65536
CommitLog.instance.MAX_MUTATION_SIZE == 2621440
CommitLog.instance.archiver.restorePointInTime == 4510987932000L
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS == 100
CommitLog.instance.executor.markerIntervalNanos == 1000000
CommitLog.instance.executor.pending == 0 || CommitLog.instance.executor.pending == 1 || CommitLog.instance.executor.pending == 2
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == 12
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == 8
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == 5242880
CommitLog.instance.segmentManager.allocatingFrom.fd == 178 || CommitLog.instance.segmentManager.allocatingFrom.fd == 180 || CommitLog.instance.segmentManager.allocatingFrom.fd == 211
CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224477L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224478L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224479L
CommitLog.instance.segmentManager.allocatingFrom.idBase == 1731353224472L
CommitLog.instance.segmentManager.allocatingFrom.nextId == 7 || CommitLog.instance.segmentManager.allocatingFrom.nextId == 8 || CommitLog.instance.segmentManager.allocatingFrom.nextId == 9
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == 1731353224475L
CommitLog.instance.segmentManager.availableSegment.allocatePosition == 28
CommitLog.instance.segmentManager.availableSegment.fd == 177 || CommitLog.instance.segmentManager.availableSegment.fd == 180 || CommitLog.instance.segmentManager.availableSegment.fd == 211
CommitLog.instance.segmentManager.availableSegment.id == 1731353224478L || CommitLog.instance.segmentManager.availableSegment.id == 1731353224479L || CommitLog.instance.segmentManager.availableSegment.id == 1731353224480L
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == 20
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize == 3
CommitLog.instance.segmentManager.size == 10485760 || CommitLog.instance.segmentManager.size == 15728640
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
("oneOf.java.jpp: SEQUENCE unimplemented" != null)
StorageService.instance.RING_DELAY == 30000
daikon.Quant.fuzzy.eq(StorageService.instance.traceProbability, 0.0)
cfsInstance.compactionStrategyManager.fanout == 10
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD == 32
cfsInstance.fileIndexGenerator == 0 || cfsInstance.fileIndexGenerator == 1
cfsInstance.indexManager.DEFAULT_PAGE_SIZE == 10000
cfsInstance.metadata.compactValueColumn.NO_POSITION == -1
cfsInstance.metadata.compactValueColumn.comparisonOrder == 4611956916719281408L
cfsInstance.metadata.compactValueColumn.hash == -40591990
cfsInstance.metadata.resource.hash == -1614813437 || cfsInstance.metadata.resource.hash == 2144393069
cfsInstance.readOrdering.current.id == 0 || cfsInstance.readOrdering.current.id == 1
cfsInstance.sampleLatencyNanos == 2500000000L
resultSetInstance.metadata.columnCount >= 1
daikon.Quant.eltsNotEqual(resultSetInstance.rows_FOR_ENCLOSING_USE, null)
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > CFMetadataInstance.compactValueColumn.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK >= CFMetadataInstance.partitionColumns.statics.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK >= CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.size
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > cfsInstance.fileIndexGenerator
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > cfsInstance.readOrdering.current.id
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != resultSetInstance.metadata.columnCount
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > CFMetadataInstance.compactValueColumn.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > CFMetadataInstance.partitionColumns.statics.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.size
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > cfsInstance.fileIndexGenerator
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK != cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > cfsInstance.readOrdering.current.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK > CFMetadataInstance.compactValueColumn.hash
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK <= CFMetadataInstance.partitionColumns.statics.complexIdx
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.size
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK >= cfsInstance.fileIndexGenerator
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK != cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK >= cfsInstance.readOrdering.current.id
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK <= resultSetInstance.metadata.columnCount
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.compactValueColumn.NO_POSITION != CFMetadataInstance.compactValueColumn.hash
CFMetadataInstance.compactValueColumn.NO_POSITION < CFMetadataInstance.partitionColumns.statics.complexIdx
CFMetadataInstance.compactValueColumn.NO_POSITION < CFMetadataInstance.resource.hash
CFMetadataInstance.compactValueColumn.NO_POSITION < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.compactValueColumn.NO_POSITION < CommitLog.instance.executor.pending
CFMetadataInstance.compactValueColumn.NO_POSITION < CommitLog.instance.executor.written
CFMetadataInstance.compactValueColumn.NO_POSITION < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.compactValueColumn.NO_POSITION < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.compactValueColumn.NO_POSITION < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.compactValueColumn.NO_POSITION < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.compactValueColumn.NO_POSITION < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.compactValueColumn.NO_POSITION < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.compactValueColumn.NO_POSITION < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.compactValueColumn.NO_POSITION < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.compactValueColumn.NO_POSITION < CommitLog.instance.segmentManager.size
CFMetadataInstance.compactValueColumn.NO_POSITION < cfsInstance.fileIndexGenerator
CFMetadataInstance.compactValueColumn.NO_POSITION != cfsInstance.metadata.resource.hash
CFMetadataInstance.compactValueColumn.NO_POSITION < cfsInstance.readOrdering.current.id
CFMetadataInstance.compactValueColumn.NO_POSITION < resultSetInstance.metadata.columnCount
CFMetadataInstance.compactValueColumn.NO_POSITION <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.compactValueColumn.comparisonOrder > CFMetadataInstance.compactValueColumn.hash
CFMetadataInstance.compactValueColumn.comparisonOrder > CFMetadataInstance.partitionColumns.statics.complexIdx
CFMetadataInstance.compactValueColumn.comparisonOrder > CFMetadataInstance.resource.hash
CFMetadataInstance.compactValueColumn.comparisonOrder > CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.compactValueColumn.comparisonOrder > CommitLog.instance.executor.pending
CFMetadataInstance.compactValueColumn.comparisonOrder > CommitLog.instance.executor.written
CFMetadataInstance.compactValueColumn.comparisonOrder > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.compactValueColumn.comparisonOrder > CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.compactValueColumn.comparisonOrder > CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.compactValueColumn.comparisonOrder > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.compactValueColumn.comparisonOrder > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.compactValueColumn.comparisonOrder > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.compactValueColumn.comparisonOrder > CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.compactValueColumn.comparisonOrder > CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.compactValueColumn.comparisonOrder > CommitLog.instance.segmentManager.size
CFMetadataInstance.compactValueColumn.comparisonOrder > cfsInstance.fileIndexGenerator
CFMetadataInstance.compactValueColumn.comparisonOrder > cfsInstance.metadata.resource.hash
CFMetadataInstance.compactValueColumn.comparisonOrder > cfsInstance.readOrdering.current.id
CFMetadataInstance.compactValueColumn.comparisonOrder > resultSetInstance.metadata.columnCount
CFMetadataInstance.compactValueColumn.comparisonOrder > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.compactValueColumn.hash < CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE
CFMetadataInstance.compactValueColumn.hash > CFMetadataInstance.compactValueColumn.name.prefixComparison
CFMetadataInstance.compactValueColumn.hash < CFMetadataInstance.partitionColumns.statics.complexIdx
CFMetadataInstance.compactValueColumn.hash < CFMetadataInstance.partitioner.HEAP_SIZE
CFMetadataInstance.compactValueColumn.hash < CFMetadataInstance.partitioner.MAXIMUM
CFMetadataInstance.compactValueColumn.hash > CFMetadataInstance.partitioner.MINIMUM.token
CFMetadataInstance.compactValueColumn.hash < CFMetadataInstance.resource.hash
CFMetadataInstance.compactValueColumn.hash < CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE
CFMetadataInstance.compactValueColumn.hash < CommitLog.instance.MAX_MUTATION_SIZE
CFMetadataInstance.compactValueColumn.hash < CommitLog.instance.archiver.restorePointInTime
CFMetadataInstance.compactValueColumn.hash < CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS
CFMetadataInstance.compactValueColumn.hash < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.compactValueColumn.hash < CommitLog.instance.executor.markerIntervalNanos
CFMetadataInstance.compactValueColumn.hash <= CommitLog.instance.executor.pending
CFMetadataInstance.compactValueColumn.hash != CommitLog.instance.executor.syncComplete.CANCELLED
CFMetadataInstance.compactValueColumn.hash <= CommitLog.instance.executor.syncComplete.NOT_SET
CFMetadataInstance.compactValueColumn.hash < CommitLog.instance.executor.written
CFMetadataInstance.compactValueColumn.hash < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CFMetadataInstance.compactValueColumn.hash < CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CFMetadataInstance.compactValueColumn.hash < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.compactValueColumn.hash < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CFMetadataInstance.compactValueColumn.hash < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.compactValueColumn.hash < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.compactValueColumn.hash < CommitLog.instance.segmentManager.allocatingFrom.idBase
CFMetadataInstance.compactValueColumn.hash < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.compactValueColumn.hash < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.compactValueColumn.hash < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.compactValueColumn.hash < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CFMetadataInstance.compactValueColumn.hash < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CFMetadataInstance.compactValueColumn.hash < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.compactValueColumn.hash < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.compactValueColumn.hash < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CFMetadataInstance.compactValueColumn.hash < CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CFMetadataInstance.compactValueColumn.hash < CommitLog.instance.segmentManager.size
CFMetadataInstance.compactValueColumn.hash < StorageService.instance.RING_DELAY
CFMetadataInstance.compactValueColumn.hash < cfsInstance.compactionStrategyManager.fanout
CFMetadataInstance.compactValueColumn.hash < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CFMetadataInstance.compactValueColumn.hash <= cfsInstance.fileIndexGenerator
CFMetadataInstance.compactValueColumn.hash < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CFMetadataInstance.compactValueColumn.hash < cfsInstance.metadata.compactValueColumn.NO_POSITION
CFMetadataInstance.compactValueColumn.hash < cfsInstance.metadata.compactValueColumn.comparisonOrder
CFMetadataInstance.compactValueColumn.hash != cfsInstance.metadata.resource.hash
CFMetadataInstance.compactValueColumn.hash <= cfsInstance.readOrdering.current.id
CFMetadataInstance.compactValueColumn.hash < cfsInstance.sampleLatencyNanos
CFMetadataInstance.compactValueColumn.hash < resultSetInstance.metadata.columnCount
CFMetadataInstance.compactValueColumn.hash <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.compactValueColumn.hash != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE > CFMetadataInstance.partitionColumns.statics.complexIdx
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE < CFMetadataInstance.resource.hash
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE > CommitLog.instance.executor.pending
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE > CommitLog.instance.executor.written
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE != CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE < CommitLog.instance.segmentManager.size
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE > cfsInstance.fileIndexGenerator
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE != cfsInstance.metadata.resource.hash
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE > cfsInstance.readOrdering.current.id
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE > resultSetInstance.metadata.columnCount
CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.compactValueColumn.name.prefixComparison < CFMetadataInstance.partitionColumns.statics.complexIdx
CFMetadataInstance.compactValueColumn.name.prefixComparison < CFMetadataInstance.resource.hash
CFMetadataInstance.compactValueColumn.name.prefixComparison < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.compactValueColumn.name.prefixComparison < CommitLog.instance.executor.pending
CFMetadataInstance.compactValueColumn.name.prefixComparison < CommitLog.instance.executor.written
CFMetadataInstance.compactValueColumn.name.prefixComparison < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.compactValueColumn.name.prefixComparison < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.compactValueColumn.name.prefixComparison < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.compactValueColumn.name.prefixComparison < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.compactValueColumn.name.prefixComparison < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.compactValueColumn.name.prefixComparison < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.compactValueColumn.name.prefixComparison < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.compactValueColumn.name.prefixComparison < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.compactValueColumn.name.prefixComparison < CommitLog.instance.segmentManager.size
CFMetadataInstance.compactValueColumn.name.prefixComparison < cfsInstance.fileIndexGenerator
CFMetadataInstance.compactValueColumn.name.prefixComparison < cfsInstance.metadata.resource.hash
CFMetadataInstance.compactValueColumn.name.prefixComparison < cfsInstance.readOrdering.current.id
CFMetadataInstance.compactValueColumn.name.prefixComparison < resultSetInstance.metadata.columnCount
CFMetadataInstance.compactValueColumn.name.prefixComparison < daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.partitionColumns.statics.complexIdx < CFMetadataInstance.partitioner.HEAP_SIZE
CFMetadataInstance.partitionColumns.statics.complexIdx < CFMetadataInstance.partitioner.MAXIMUM
CFMetadataInstance.partitionColumns.statics.complexIdx > CFMetadataInstance.partitioner.MINIMUM.token
CFMetadataInstance.partitionColumns.statics.complexIdx < CFMetadataInstance.resource.hash
CFMetadataInstance.partitionColumns.statics.complexIdx < CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.MAX_MUTATION_SIZE
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.archiver.restorePointInTime
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.markerIntervalNanos
CFMetadataInstance.partitionColumns.statics.complexIdx >= CommitLog.instance.executor.pending
CFMetadataInstance.partitionColumns.statics.complexIdx > CommitLog.instance.executor.syncComplete.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.written
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.idBase
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitionColumns.statics.complexIdx < StorageService.instance.RING_DELAY
CFMetadataInstance.partitionColumns.statics.complexIdx < cfsInstance.compactionStrategyManager.fanout
CFMetadataInstance.partitionColumns.statics.complexIdx < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CFMetadataInstance.partitionColumns.statics.complexIdx > cfsInstance.fileIndexGenerator
CFMetadataInstance.partitionColumns.statics.complexIdx < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CFMetadataInstance.partitionColumns.statics.complexIdx > cfsInstance.metadata.compactValueColumn.NO_POSITION
CFMetadataInstance.partitionColumns.statics.complexIdx < cfsInstance.metadata.compactValueColumn.comparisonOrder
CFMetadataInstance.partitionColumns.statics.complexIdx > cfsInstance.metadata.compactValueColumn.hash
CFMetadataInstance.partitionColumns.statics.complexIdx != cfsInstance.metadata.resource.hash
CFMetadataInstance.partitionColumns.statics.complexIdx > cfsInstance.readOrdering.current.id
CFMetadataInstance.partitionColumns.statics.complexIdx < cfsInstance.sampleLatencyNanos
CFMetadataInstance.partitioner.HEAP_SIZE < CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.HEAP_SIZE > CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.HEAP_SIZE != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.HEAP_SIZE != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.HEAP_SIZE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.HEAP_SIZE > cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.HEAP_SIZE != cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.HEAP_SIZE > cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.HEAP_SIZE > resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.HEAP_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.MAXIMUM > CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.written
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.MAXIMUM > resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.MAXIMUM > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.MINIMUM.token < CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.written
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.MINIMUM.token < resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.MINIMUM.token < daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.resource.hash > CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE
CFMetadataInstance.resource.hash > CommitLog.instance.MAX_MUTATION_SIZE
CFMetadataInstance.resource.hash < CommitLog.instance.archiver.restorePointInTime
CFMetadataInstance.resource.hash > CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS
CFMetadataInstance.resource.hash < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.resource.hash > CommitLog.instance.executor.markerIntervalNanos
CFMetadataInstance.resource.hash > CommitLog.instance.executor.pending
CFMetadataInstance.resource.hash > CommitLog.instance.executor.syncComplete.NOT_SET
CFMetadataInstance.resource.hash > CommitLog.instance.executor.written
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.idBase
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.size
CFMetadataInstance.resource.hash > StorageService.instance.RING_DELAY
CFMetadataInstance.resource.hash > cfsInstance.compactionStrategyManager.fanout
CFMetadataInstance.resource.hash > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CFMetadataInstance.resource.hash > cfsInstance.fileIndexGenerator
CFMetadataInstance.resource.hash > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CFMetadataInstance.resource.hash > cfsInstance.metadata.compactValueColumn.NO_POSITION
CFMetadataInstance.resource.hash < cfsInstance.metadata.compactValueColumn.comparisonOrder
CFMetadataInstance.resource.hash > cfsInstance.metadata.compactValueColumn.hash
CFMetadataInstance.resource.hash >= cfsInstance.metadata.resource.hash
CFMetadataInstance.resource.hash > cfsInstance.readOrdering.current.id
CFMetadataInstance.resource.hash < cfsInstance.sampleLatencyNanos
CFMetadataInstance.resource.hash > resultSetInstance.metadata.columnCount
CFMetadataInstance.resource.hash > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.executor.pending
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.executor.written
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.size
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > cfsInstance.fileIndexGenerator
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE != cfsInstance.metadata.resource.hash
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > cfsInstance.readOrdering.current.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > resultSetInstance.metadata.columnCount
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.executor.pending
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.executor.written
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.size
CommitLog.instance.MAX_MUTATION_SIZE > cfsInstance.fileIndexGenerator
CommitLog.instance.MAX_MUTATION_SIZE != cfsInstance.metadata.resource.hash
CommitLog.instance.MAX_MUTATION_SIZE > cfsInstance.readOrdering.current.id
CommitLog.instance.MAX_MUTATION_SIZE > resultSetInstance.metadata.columnCount
CommitLog.instance.MAX_MUTATION_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.archiver.restorePointInTime < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.executor.pending
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.executor.written
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.size
CommitLog.instance.archiver.restorePointInTime > cfsInstance.fileIndexGenerator
CommitLog.instance.archiver.restorePointInTime > cfsInstance.metadata.resource.hash
CommitLog.instance.archiver.restorePointInTime > cfsInstance.readOrdering.current.id
CommitLog.instance.archiver.restorePointInTime % resultSetInstance.metadata.columnCount == 0
CommitLog.instance.archiver.restorePointInTime > resultSetInstance.metadata.columnCount
CommitLog.instance.archiver.restorePointInTime > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > CommitLog.instance.executor.pending
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > CommitLog.instance.executor.written
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS != CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS != cfsInstance.metadata.resource.hash
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.markerIntervalNanos
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.pending
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.syncComplete.NOT_SET
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.written
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.size
CommitLog.instance.executor.lastSyncedAt > StorageService.instance.RING_DELAY
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.lastSyncedAt > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.lastSyncedAt > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.lastSyncedAt > cfsInstance.metadata.compactValueColumn.NO_POSITION
CommitLog.instance.executor.lastSyncedAt < cfsInstance.metadata.compactValueColumn.comparisonOrder
CommitLog.instance.executor.lastSyncedAt > cfsInstance.metadata.compactValueColumn.hash
CommitLog.instance.executor.lastSyncedAt > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.lastSyncedAt > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.lastSyncedAt > cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.lastSyncedAt > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.lastSyncedAt > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.executor.pending
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.executor.written
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.markerIntervalNanos > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.markerIntervalNanos != cfsInstance.metadata.resource.hash
CommitLog.instance.executor.markerIntervalNanos > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.markerIntervalNanos > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.markerIntervalNanos > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.pending >= CommitLog.instance.executor.syncComplete.NOT_SET
CommitLog.instance.executor.pending < CommitLog.instance.executor.written
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.pending < StorageService.instance.RING_DELAY
CommitLog.instance.executor.pending < cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.pending < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.pending < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.pending > cfsInstance.metadata.compactValueColumn.NO_POSITION
CommitLog.instance.executor.pending < cfsInstance.metadata.compactValueColumn.comparisonOrder
CommitLog.instance.executor.pending > cfsInstance.metadata.compactValueColumn.hash
CommitLog.instance.executor.pending != cfsInstance.metadata.resource.hash
CommitLog.instance.executor.pending < cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.pending < resultSetInstance.metadata.columnCount
CommitLog.instance.executor.syncComplete.CANCELLED != cfsInstance.metadata.resource.hash
CommitLog.instance.executor.syncComplete.CANCELLED <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.executor.written
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.syncComplete.NOT_SET < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.syncComplete.NOT_SET <= cfsInstance.fileIndexGenerator
CommitLog.instance.executor.syncComplete.NOT_SET != cfsInstance.metadata.resource.hash
CommitLog.instance.executor.syncComplete.NOT_SET <= cfsInstance.readOrdering.current.id
CommitLog.instance.executor.syncComplete.NOT_SET < resultSetInstance.metadata.columnCount
CommitLog.instance.executor.syncComplete.NOT_SET <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.written != CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.written != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.written != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.written < StorageService.instance.RING_DELAY
CommitLog.instance.executor.written > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.written > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.written < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.written > cfsInstance.metadata.compactValueColumn.NO_POSITION
CommitLog.instance.executor.written < cfsInstance.metadata.compactValueColumn.comparisonOrder
CommitLog.instance.executor.written > cfsInstance.metadata.compactValueColumn.hash
CommitLog.instance.executor.written != cfsInstance.metadata.resource.hash
CommitLog.instance.executor.written > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.written < cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.written > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.written > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE != resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition >= CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.metadata.compactValueColumn.NO_POSITION
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.metadata.compactValueColumn.comparisonOrder
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.metadata.compactValueColumn.hash
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.fd != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.fd != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.fd != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.fd < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.fd < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.metadata.compactValueColumn.NO_POSITION
CommitLog.instance.segmentManager.allocatingFrom.fd < cfsInstance.metadata.compactValueColumn.comparisonOrder
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.metadata.compactValueColumn.hash
CommitLog.instance.segmentManager.allocatingFrom.fd != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.fd < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.fd > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.fd > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.id < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.id > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.metadata.compactValueColumn.NO_POSITION
CommitLog.instance.segmentManager.allocatingFrom.id < cfsInstance.metadata.compactValueColumn.comparisonOrder
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.metadata.compactValueColumn.hash
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.id > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.id > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.idBase < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.idBase > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.idBase > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset >= CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset >= CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.metadata.compactValueColumn.NO_POSITION
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.metadata.compactValueColumn.comparisonOrder
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.metadata.compactValueColumn.hash
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset >= CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.metadata.compactValueColumn.NO_POSITION
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.metadata.compactValueColumn.comparisonOrder
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.metadata.compactValueColumn.hash
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.nextId > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.nextId < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.metadata.compactValueColumn.NO_POSITION
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.metadata.compactValueColumn.comparisonOrder
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.metadata.compactValueColumn.hash
CommitLog.instance.segmentManager.allocatingFrom.nextId != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.nextId > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.allocatePosition > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.allocatePosition != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.allocatePosition > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.allocatePosition > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.allocatePosition > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.fd < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.availableSegment.fd > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.availableSegment.fd > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.availableSegment.fd < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.fd < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.fd < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.metadata.compactValueColumn.NO_POSITION
CommitLog.instance.segmentManager.availableSegment.fd < cfsInstance.metadata.compactValueColumn.comparisonOrder
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.metadata.compactValueColumn.hash
CommitLog.instance.segmentManager.availableSegment.fd != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.fd < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.availableSegment.fd > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.fd > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.id > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.metadata.compactValueColumn.NO_POSITION
CommitLog.instance.segmentManager.availableSegment.id < cfsInstance.metadata.compactValueColumn.comparisonOrder
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.metadata.compactValueColumn.hash
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.availableSegment.id > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.id > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset >= resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CommitLog.instance.segmentManager.size > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.size > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.size > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.size > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.size > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.size > cfsInstance.metadata.compactValueColumn.NO_POSITION
CommitLog.instance.segmentManager.size < cfsInstance.metadata.compactValueColumn.comparisonOrder
CommitLog.instance.segmentManager.size > cfsInstance.metadata.compactValueColumn.hash
CommitLog.instance.segmentManager.size != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.size > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.size < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.size > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.size > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
daikon.Quant.subsetOf(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE, resultSetInstance.rows_FOR_ENCLOSING_USE)
StorageService.instance.RING_DELAY > cfsInstance.fileIndexGenerator
StorageService.instance.RING_DELAY != cfsInstance.metadata.resource.hash
StorageService.instance.RING_DELAY > cfsInstance.readOrdering.current.id
StorageService.instance.RING_DELAY % resultSetInstance.metadata.columnCount == 0
StorageService.instance.RING_DELAY > resultSetInstance.metadata.columnCount
StorageService.instance.RING_DELAY > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.compactionStrategyManager.fanout > cfsInstance.fileIndexGenerator
cfsInstance.compactionStrategyManager.fanout != cfsInstance.metadata.resource.hash
cfsInstance.compactionStrategyManager.fanout > cfsInstance.readOrdering.current.id
cfsInstance.compactionStrategyManager.fanout != resultSetInstance.metadata.columnCount
cfsInstance.compactionStrategyManager.fanout > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > cfsInstance.fileIndexGenerator
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD != cfsInstance.metadata.resource.hash
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > cfsInstance.readOrdering.current.id
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > resultSetInstance.metadata.columnCount
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.fileIndexGenerator < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
cfsInstance.fileIndexGenerator > cfsInstance.metadata.compactValueColumn.NO_POSITION
cfsInstance.fileIndexGenerator < cfsInstance.metadata.compactValueColumn.comparisonOrder
cfsInstance.fileIndexGenerator > cfsInstance.metadata.compactValueColumn.hash
cfsInstance.fileIndexGenerator != cfsInstance.metadata.resource.hash
cfsInstance.fileIndexGenerator >= cfsInstance.readOrdering.current.id
cfsInstance.fileIndexGenerator < cfsInstance.sampleLatencyNanos
cfsInstance.fileIndexGenerator < resultSetInstance.metadata.columnCount
cfsInstance.indexManager.DEFAULT_PAGE_SIZE != cfsInstance.metadata.resource.hash
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > cfsInstance.readOrdering.current.id
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > resultSetInstance.metadata.columnCount
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.metadata.compactValueColumn.NO_POSITION < cfsInstance.metadata.resource.hash
cfsInstance.metadata.compactValueColumn.NO_POSITION < cfsInstance.readOrdering.current.id
cfsInstance.metadata.compactValueColumn.NO_POSITION < resultSetInstance.metadata.columnCount
cfsInstance.metadata.compactValueColumn.NO_POSITION <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
cfsInstance.metadata.compactValueColumn.comparisonOrder > cfsInstance.metadata.resource.hash
cfsInstance.metadata.compactValueColumn.comparisonOrder > cfsInstance.readOrdering.current.id
cfsInstance.metadata.compactValueColumn.comparisonOrder > resultSetInstance.metadata.columnCount
cfsInstance.metadata.compactValueColumn.comparisonOrder > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.metadata.compactValueColumn.hash < cfsInstance.metadata.resource.hash
cfsInstance.metadata.compactValueColumn.hash < cfsInstance.readOrdering.current.id
cfsInstance.metadata.compactValueColumn.hash < resultSetInstance.metadata.columnCount
cfsInstance.metadata.compactValueColumn.hash < daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
cfsInstance.metadata.resource.hash != cfsInstance.readOrdering.current.id
cfsInstance.metadata.resource.hash < cfsInstance.sampleLatencyNanos
cfsInstance.metadata.resource.hash != resultSetInstance.metadata.columnCount
cfsInstance.metadata.resource.hash != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.metadata.resource.hash != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
cfsInstance.readOrdering.current.id < cfsInstance.sampleLatencyNanos
cfsInstance.readOrdering.current.id < resultSetInstance.metadata.columnCount
cfsInstance.sampleLatencyNanos > resultSetInstance.metadata.columnCount
cfsInstance.sampleLatencyNanos > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
resultSetInstance.metadata.columnCount >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.resource.hash - CommitLog.instance.executor.pending - daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 2144393068 == 0
CFMetadataInstance.resource.hash - CommitLog.instance.executor.pending - daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1 - 2144393069 == 0
239 * CFMetadataInstance.resource.hash - CommitLog.instance.segmentManager.allocatingFrom.allocatePosition + CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 5.12509943244E11 == 0
173015040 * CFMetadataInstance.resource.hash - 5242880 * CommitLog.instance.segmentManager.allocatingFrom.fd - 31 * CommitLog.instance.segmentManager.size - 3.7101225117745152E17 == 0
239 * CFMetadataInstance.resource.hash - CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset + CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 5.12509943252E11 == 0
CommitLog.instance.executor.lastSyncedAt - 28143378 * resultSetInstance.metadata.columnCount + 231729187 * daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 8.9338498980838E13 == 0
CommitLog.instance.executor.lastSyncedAt - 28143378 * resultSetInstance.metadata.columnCount + 231729187 * daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1 - 8.9338267251651E13 == 0
7 * CommitLog.instance.executor.pending + 17 * CommitLog.instance.segmentManager.allocatingFrom.id + CommitLog.instance.segmentManager.availableSegment.fd - 2.943300481632E13 == 0
7 * CommitLog.instance.executor.pending + CommitLog.instance.segmentManager.availableSegment.fd + 17 * CommitLog.instance.segmentManager.availableSegment.id - 2.9433004816337E13 == 0
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 233 * CommitLog.instance.segmentManager.allocatingFrom.id - CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset + 4.03405301303133E14 == 0
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 239 * CommitLog.instance.segmentManager.allocatingFrom.id - CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset + 4.13793420649995E14 == 0
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 233 * CommitLog.instance.segmentManager.availableSegment.id + 4.03405301303366E14 == 0
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 239 * CommitLog.instance.segmentManager.availableSegment.id + 4.13793420650234E14 == 0
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 239 * CommitLog.instance.segmentManager.availableSegment.id + 4.13793420650242E14 == 0
===========================================================================
org.apache.cassandra.cql3.SimpleQueryTest@testTableWithLargePartition-54916894:::dump
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.keyValidator.isByteOrderComparable
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.allocatingFrom.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.availableSegment.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.joinRing
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.useStrictConsistency
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionSpaceCheck
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.enabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.partitionSSTablesByTokenRange
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_ENABLED
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.isEnabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.shouldDefragment
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.supportsEarlyOpen
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.data.loadsstables
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.directories.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.keyspace.initialized
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.allColumnFilter.isFetchAll
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.keyValidator.isByteOrderComparable
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.viewManager.baseTableMetadata.isCompound
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MIN_THRESHOLD
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CFMetadataInstance.partitioner.MINIMUM.serialVersionUID
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.executor.syncComplete.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.managerThreadWaitQueue.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.segmentPrepared.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == StorageService.instance.threadCounter
CFMetadataInstance.isCounter == CFMetadataInstance.isDense
CFMetadataInstance.isCounter == CFMetadataInstance.isIndex
CFMetadataInstance.isCounter == CFMetadataInstance.isSuper
CFMetadataInstance.isCounter == CFMetadataInstance.isView
CFMetadataInstance.isCounter == CFMetadataInstance.partitioner.partitionOrdering.isByteOrderComparable
CFMetadataInstance.isCounter == CommitLog.instance.executor.shutdown
CFMetadataInstance.isCounter == CommitLog.instance.segmentManager.shutdown
CFMetadataInstance.isCounter == StorageService.instance.allowSimultaneousMoves
CFMetadataInstance.isCounter == StorageService.instance.authSetupCalled
CFMetadataInstance.isCounter == StorageService.instance.authSetupComplete
CFMetadataInstance.isCounter == StorageService.instance.gossipActive
CFMetadataInstance.isCounter == StorageService.instance.initialized
CFMetadataInstance.isCounter == StorageService.instance.isBootstrapMode
CFMetadataInstance.isCounter == StorageService.instance.isDecommissioning
CFMetadataInstance.isCounter == StorageService.instance.isRebuilding
CFMetadataInstance.isCounter == StorageService.instance.isShutdown
CFMetadataInstance.isCounter == StorageService.instance.isSurveyMode
CFMetadataInstance.isCounter == StorageService.instance.joined
CFMetadataInstance.isCounter == StorageService.instance.replacing
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.compactionLogger.enabled
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.currentBoundaries.isInvalid
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.diskBoundaryManager.diskBoundaries.isInvalid
CFMetadataInstance.isCounter == cfsInstance.keyspace.TEST_FAIL_WRITES
CFMetadataInstance.isCounter == cfsInstance.keyspace.viewManager.enableCoordinatorBatchlog
CFMetadataInstance.isCounter == cfsInstance.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.metric.aliasFactory.isIndex
CFMetadataInstance.isCounter == cfsInstance.metric.factory.isIndex
CFMetadataInstance.isCounter == cfsInstance.readOrdering.current.isBlocking
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isDense
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isView
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.executor.syncComplete.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.bufferPool.usedBuffers
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.managerThreadWaitQueue.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.segmentPrepared.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == QueryProcessor.instance.lastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.statics.complexIdx == QueryProcessor.instance.thriftLastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.legacyProgressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.nextRepairCommand
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.progressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.remainingCFs
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.tokenMetadata.ringVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.totalCFs
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.compactionLogger.identifier
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.currentBoundaries.directoriesVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.diskBoundaryManager.diskBoundaries.ringVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.keyspace.TEST_FAIL_MV_LOCKS_COUNT
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.keyspace.replicationStrategy.lastInvalidatedVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.readOrdering.current.running
CFMetadataInstance.partitionColumns.statics.complexIdx == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.HEAP_SIZE == StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.HEAP_SIZE == StorageService.instance.valueFactory.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.HEAP_SIZE == cfsInstance.metadata.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.MAXIMUM == StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CFMetadataInstance.partitioner.MAXIMUM == StorageService.instance.valueFactory.partitioner.MAXIMUM
CFMetadataInstance.partitioner.MAXIMUM == cfsInstance.metadata.partitioner.MAXIMUM
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == CommitLog.instance.configuration.encryptionContext.chunkLength
CommitLog.instance.executor.markerIntervalNanos == CommitLog.instance.executor.syncIntervalNanos
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.managerThreadWaitQueue.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.segmentPrepared.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.keyspace.writeOrder.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.readOrdering.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)-1
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == CommitLog.instance.segmentManager.availableSegment.ENTRY_OVERHEAD_SIZE
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == CommitLog.instance.segmentManager.availableSegment.SYNC_MARKER_SIZE
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.availableSegment.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.bufferPool.bufferSize
CommitLog.instance.segmentManager.allocatingFrom.idBase == CommitLog.instance.segmentManager.availableSegment.idBase
CommitLog.instance.segmentManager.allocatingFrom.nextId == CommitLog.instance.segmentManager.availableSegment.nextId
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == CommitLog.instance.segmentManager.availableSegment.replayLimitId
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == CommitLog.instance.segmentManager.availableSegment.lastSyncedOffset
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE == resultSetInstance.rows_FOR_ENCLOSING_USE
cfsInstance.compactionStrategyManager.isActive == cfsInstance.valid
CFMetadataInstance.allColumnFilter.isFetchAll == true
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK == 2
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == 4
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == 1
CFMetadataInstance.isCounter == false
CFMetadataInstance.partitioner.HEAP_SIZE == 24
CFMetadataInstance.partitioner.MAXIMUM == 9223372036854775807L
CFMetadataInstance.partitioner.MINIMUM.token == -9223372036854775808L
CFMetadataInstance.resource.hash == 2144393074 || CFMetadataInstance.resource.hash == 2144393075
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == 65536
CommitLog.instance.MAX_MUTATION_SIZE == 2621440
CommitLog.instance.archiver.restorePointInTime == 4510987932000L
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS == 100
CommitLog.instance.executor.markerIntervalNanos == 1000000
CommitLog.instance.executor.pending == 0 || CommitLog.instance.executor.pending == 1
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == 12
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == 8
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == 5242880
CommitLog.instance.segmentManager.allocatingFrom.fd == 177 || CommitLog.instance.segmentManager.allocatingFrom.fd == 180 || CommitLog.instance.segmentManager.allocatingFrom.fd == 214
CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224489L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224490L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224491L
CommitLog.instance.segmentManager.allocatingFrom.idBase == 1731353224472L
CommitLog.instance.segmentManager.allocatingFrom.nextId == 19 || CommitLog.instance.segmentManager.allocatingFrom.nextId == 20 || CommitLog.instance.segmentManager.allocatingFrom.nextId == 21
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == 1731353224475L
CommitLog.instance.segmentManager.availableSegment.allocatePosition == 28
CommitLog.instance.segmentManager.availableSegment.fd == 177 || CommitLog.instance.segmentManager.availableSegment.fd == 180 || CommitLog.instance.segmentManager.availableSegment.fd == 214
CommitLog.instance.segmentManager.availableSegment.id == 1731353224490L || CommitLog.instance.segmentManager.availableSegment.id == 1731353224491L || CommitLog.instance.segmentManager.availableSegment.id == 1731353224492L
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == 20
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize == 3
CommitLog.instance.segmentManager.size == 10485760 || CommitLog.instance.segmentManager.size == 15728640
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
("oneOf.java.jpp: SEQUENCE unimplemented" != null)
StorageService.instance.RING_DELAY == 30000
daikon.Quant.fuzzy.eq(StorageService.instance.traceProbability, 0.0)
cfsInstance.compactionStrategyManager.fanout == 10
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD == 32
cfsInstance.fileIndexGenerator == 0 || cfsInstance.fileIndexGenerator == 1
cfsInstance.indexManager.DEFAULT_PAGE_SIZE == 10000
cfsInstance.metadata.resource.hash == 2144393074 || cfsInstance.metadata.resource.hash == 2144393075
cfsInstance.readOrdering.current.id == 0 || cfsInstance.readOrdering.current.id == 1 || cfsInstance.readOrdering.current.id == 2
cfsInstance.sampleLatencyNanos == 0 || cfsInstance.sampleLatencyNanos == 2500000000L
daikon.Quant.eltsNotEqual(resultSetInstance.rows_FOR_ENCLOSING_USE, null)
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.size
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > cfsInstance.fileIndexGenerator
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK >= cfsInstance.readOrdering.current.id
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != cfsInstance.sampleLatencyNanos
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != resultSetInstance.metadata.columnCount
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.size
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > cfsInstance.fileIndexGenerator
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > cfsInstance.readOrdering.current.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK != cfsInstance.sampleLatencyNanos
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK >= CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.size
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK >= cfsInstance.fileIndexGenerator
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK != cfsInstance.sampleLatencyNanos
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK <= resultSetInstance.metadata.columnCount
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.partitionColumns.statics.complexIdx < CFMetadataInstance.resource.hash
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitionColumns.statics.complexIdx <= CommitLog.instance.executor.pending
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.written
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitionColumns.statics.complexIdx <= cfsInstance.fileIndexGenerator
CFMetadataInstance.partitionColumns.statics.complexIdx < cfsInstance.metadata.resource.hash
CFMetadataInstance.partitionColumns.statics.complexIdx <= cfsInstance.readOrdering.current.id
CFMetadataInstance.partitionColumns.statics.complexIdx <= cfsInstance.sampleLatencyNanos
CFMetadataInstance.partitionColumns.statics.complexIdx < resultSetInstance.metadata.columnCount
CFMetadataInstance.partitionColumns.statics.complexIdx <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.HEAP_SIZE < CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.HEAP_SIZE > CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.executor.written
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.HEAP_SIZE != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.HEAP_SIZE != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.HEAP_SIZE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.HEAP_SIZE > cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.HEAP_SIZE < cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.HEAP_SIZE > cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.HEAP_SIZE != cfsInstance.sampleLatencyNanos
CFMetadataInstance.partitioner.HEAP_SIZE > resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.HEAP_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.MAXIMUM > CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.written
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.sampleLatencyNanos
CFMetadataInstance.partitioner.MAXIMUM > resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.MAXIMUM > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.MINIMUM.token < CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.written
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.sampleLatencyNanos
CFMetadataInstance.partitioner.MINIMUM.token < resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.MINIMUM.token < daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.resource.hash > CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE
CFMetadataInstance.resource.hash > CommitLog.instance.MAX_MUTATION_SIZE
CFMetadataInstance.resource.hash < CommitLog.instance.archiver.restorePointInTime
CFMetadataInstance.resource.hash > CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS
CFMetadataInstance.resource.hash < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.resource.hash > CommitLog.instance.executor.markerIntervalNanos
CFMetadataInstance.resource.hash > CommitLog.instance.executor.pending
CFMetadataInstance.resource.hash > CommitLog.instance.executor.written
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.idBase
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.size
CFMetadataInstance.resource.hash > StorageService.instance.RING_DELAY
CFMetadataInstance.resource.hash > cfsInstance.compactionStrategyManager.fanout
CFMetadataInstance.resource.hash > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CFMetadataInstance.resource.hash > cfsInstance.fileIndexGenerator
CFMetadataInstance.resource.hash > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CFMetadataInstance.resource.hash >= cfsInstance.metadata.resource.hash
CFMetadataInstance.resource.hash > cfsInstance.readOrdering.current.id
CFMetadataInstance.resource.hash != cfsInstance.sampleLatencyNanos
CFMetadataInstance.resource.hash > resultSetInstance.metadata.columnCount
CFMetadataInstance.resource.hash > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.executor.pending
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.executor.written
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.size
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > cfsInstance.fileIndexGenerator
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < cfsInstance.metadata.resource.hash
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > cfsInstance.readOrdering.current.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE != cfsInstance.sampleLatencyNanos
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > resultSetInstance.metadata.columnCount
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.executor.pending
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.executor.written
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.size
CommitLog.instance.MAX_MUTATION_SIZE > cfsInstance.fileIndexGenerator
CommitLog.instance.MAX_MUTATION_SIZE < cfsInstance.metadata.resource.hash
CommitLog.instance.MAX_MUTATION_SIZE > cfsInstance.readOrdering.current.id
CommitLog.instance.MAX_MUTATION_SIZE != cfsInstance.sampleLatencyNanos
CommitLog.instance.MAX_MUTATION_SIZE > resultSetInstance.metadata.columnCount
CommitLog.instance.MAX_MUTATION_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.archiver.restorePointInTime < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.executor.pending
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.executor.written
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.size
CommitLog.instance.archiver.restorePointInTime > cfsInstance.fileIndexGenerator
CommitLog.instance.archiver.restorePointInTime > cfsInstance.metadata.resource.hash
CommitLog.instance.archiver.restorePointInTime > cfsInstance.readOrdering.current.id
CommitLog.instance.archiver.restorePointInTime > cfsInstance.sampleLatencyNanos
CommitLog.instance.archiver.restorePointInTime % resultSetInstance.metadata.columnCount == 0
CommitLog.instance.archiver.restorePointInTime > resultSetInstance.metadata.columnCount
CommitLog.instance.archiver.restorePointInTime > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > CommitLog.instance.executor.pending
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.executor.written
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS != CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < cfsInstance.metadata.resource.hash
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS != cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.markerIntervalNanos
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.pending
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.written
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.size
CommitLog.instance.executor.lastSyncedAt > StorageService.instance.RING_DELAY
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.lastSyncedAt > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.lastSyncedAt > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.lastSyncedAt > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.lastSyncedAt > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.lastSyncedAt > cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.lastSyncedAt > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.lastSyncedAt > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.executor.pending
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.executor.written
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.markerIntervalNanos > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.markerIntervalNanos < cfsInstance.metadata.resource.hash
CommitLog.instance.executor.markerIntervalNanos > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.markerIntervalNanos != cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.markerIntervalNanos > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.markerIntervalNanos > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.pending < CommitLog.instance.executor.written
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.pending < StorageService.instance.RING_DELAY
CommitLog.instance.executor.pending < cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.pending < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.pending <= cfsInstance.fileIndexGenerator
CommitLog.instance.executor.pending < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.pending < cfsInstance.metadata.resource.hash
CommitLog.instance.executor.pending <= cfsInstance.readOrdering.current.id
CommitLog.instance.executor.pending <= cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.pending <= resultSetInstance.metadata.columnCount
CommitLog.instance.executor.syncComplete.CANCELLED <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.written != CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.written != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.written != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.written < StorageService.instance.RING_DELAY
CommitLog.instance.executor.written > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.written > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.written > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.written < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.written < cfsInstance.metadata.resource.hash
CommitLog.instance.executor.written > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.written != cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.written > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.written > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE != resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 8 == 0
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition >= CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.fd != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.fd != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.fd != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.fd < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.fd < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.fd < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.fd != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.fd > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.fd > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.id < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.id > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.id > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.id > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.idBase < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.idBase > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.idBase > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset >= CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset >= CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset >= CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.nextId > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.nextId < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.nextId != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.nextId >= resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.nextId > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.allocatePosition > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.allocatePosition < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.allocatePosition > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.allocatePosition != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.availableSegment.allocatePosition > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.allocatePosition > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.fd < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.availableSegment.fd > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.availableSegment.fd > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.availableSegment.fd < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.fd < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.fd < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.availableSegment.fd < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.fd != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.availableSegment.fd > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.fd > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.id > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.availableSegment.id > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.id > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset >= resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.size > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.size > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.size > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.size > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.size > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.size < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.size > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.size != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.size > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.size > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
daikon.Quant.subsetOf(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE, resultSetInstance.rows_FOR_ENCLOSING_USE)
StorageService.instance.RING_DELAY > cfsInstance.fileIndexGenerator
StorageService.instance.RING_DELAY < cfsInstance.metadata.resource.hash
StorageService.instance.RING_DELAY > cfsInstance.readOrdering.current.id
StorageService.instance.RING_DELAY != cfsInstance.sampleLatencyNanos
StorageService.instance.RING_DELAY % resultSetInstance.metadata.columnCount == 0
StorageService.instance.RING_DELAY > resultSetInstance.metadata.columnCount
StorageService.instance.RING_DELAY > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.compactionStrategyManager.fanout > cfsInstance.fileIndexGenerator
cfsInstance.compactionStrategyManager.fanout < cfsInstance.metadata.resource.hash
cfsInstance.compactionStrategyManager.fanout > cfsInstance.readOrdering.current.id
cfsInstance.compactionStrategyManager.fanout != cfsInstance.sampleLatencyNanos
cfsInstance.compactionStrategyManager.fanout != resultSetInstance.metadata.columnCount
cfsInstance.compactionStrategyManager.fanout >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > cfsInstance.fileIndexGenerator
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD < cfsInstance.metadata.resource.hash
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > cfsInstance.readOrdering.current.id
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD != cfsInstance.sampleLatencyNanos
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > resultSetInstance.metadata.columnCount
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.fileIndexGenerator < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
cfsInstance.fileIndexGenerator < cfsInstance.metadata.resource.hash
cfsInstance.fileIndexGenerator <= resultSetInstance.metadata.columnCount
cfsInstance.fileIndexGenerator != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
cfsInstance.indexManager.DEFAULT_PAGE_SIZE < cfsInstance.metadata.resource.hash
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > cfsInstance.readOrdering.current.id
cfsInstance.indexManager.DEFAULT_PAGE_SIZE != cfsInstance.sampleLatencyNanos
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > resultSetInstance.metadata.columnCount
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.metadata.resource.hash > cfsInstance.readOrdering.current.id
cfsInstance.metadata.resource.hash != cfsInstance.sampleLatencyNanos
cfsInstance.metadata.resource.hash > resultSetInstance.metadata.columnCount
cfsInstance.metadata.resource.hash > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.readOrdering.current.id != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
cfsInstance.sampleLatencyNanos != resultSetInstance.metadata.columnCount
cfsInstance.sampleLatencyNanos != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
resultSetInstance.metadata.columnCount != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.resource.hash + CommitLog.instance.executor.pending + daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 2144393075 == 0
37 * CFMetadataInstance.resource.hash + CommitLog.instance.segmentManager.allocatingFrom.fd + 37 * cfsInstance.fileIndexGenerator - 7.9342543989E10 == 0
10485760 * CFMetadataInstance.resource.hash - 5242880 * CommitLog.instance.segmentManager.allocatingFrom.id + CommitLog.instance.segmentManager.size + 9.0547916024787763E18 == 0
2 * CFMetadataInstance.resource.hash - CommitLog.instance.segmentManager.allocatingFrom.id + cfsInstance.fileIndexGenerator + 1.72706443834E12 == 0
10485760 * CFMetadataInstance.resource.hash - 5242880 * CommitLog.instance.segmentManager.allocatingFrom.nextId + CommitLog.instance.segmentManager.size - 2.248559103049728E16 == 0
2 * CFMetadataInstance.resource.hash - CommitLog.instance.segmentManager.allocatingFrom.nextId + cfsInstance.fileIndexGenerator - 4.28878613E9 == 0
CFMetadataInstance.resource.hash - CommitLog.instance.segmentManager.allocatingFrom.nextId + cfsInstance.metadata.resource.hash - 4.288786129E9 == 0
193986560 * CFMetadataInstance.resource.hash + 5242880 * CommitLog.instance.segmentManager.availableSegment.fd + 37 * CommitLog.instance.segmentManager.size - 4.1598343722303488E17 == 0
10485760 * CFMetadataInstance.resource.hash - 5242880 * CommitLog.instance.segmentManager.availableSegment.id + CommitLog.instance.segmentManager.size + 9.0547916024840192E18 == 0
2 * CFMetadataInstance.resource.hash - CommitLog.instance.segmentManager.availableSegment.id + cfsInstance.fileIndexGenerator + 1.727064438341E12 == 0
3 * CommitLog.instance.executor.lastSyncedAt - 235990082 * CommitLog.instance.executor.pending - 323383571 * CommitLog.instance.executor.written - 2.68068783577765E14 == 0
CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.id + cfsInstance.readOrdering.current.id + 1.731353224487E12 == 0
CommitLog.instance.executor.pending + CommitLog.instance.segmentManager.allocatingFrom.id + daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.73135322449E12 == 0
CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.availableSegment.id + cfsInstance.readOrdering.current.id + 1.731353224488E12 == 0
CommitLog.instance.executor.pending + CommitLog.instance.segmentManager.availableSegment.id + daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224491E12 == 0
CommitLog.instance.segmentManager.allocatingFrom.fd + 37 * cfsInstance.fileIndexGenerator + 37 * cfsInstance.metadata.resource.hash - 7.9342543989E10 == 0
5242880 * CommitLog.instance.segmentManager.allocatingFrom.id - CommitLog.instance.segmentManager.size - 10485760 * cfsInstance.metadata.resource.hash - 9.0547916024787763E18 == 0
CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.fileIndexGenerator - 2 * cfsInstance.metadata.resource.hash - 1.72706443834E12 == 0
CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.readOrdering.current.id - daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224487E12 == 0
5242880 * CommitLog.instance.segmentManager.allocatingFrom.nextId - CommitLog.instance.segmentManager.size - 10485760 * cfsInstance.metadata.resource.hash + 2.248559103049728E16 == 0
CommitLog.instance.segmentManager.allocatingFrom.nextId - cfsInstance.fileIndexGenerator - 2 * cfsInstance.metadata.resource.hash + 4.28878613E9 == 0
5242880 * CommitLog.instance.segmentManager.availableSegment.fd + 37 * CommitLog.instance.segmentManager.size + 193986560 * cfsInstance.metadata.resource.hash - 4.1598343722303488E17 == 0
5242880 * CommitLog.instance.segmentManager.availableSegment.id - CommitLog.instance.segmentManager.size - 10485760 * cfsInstance.metadata.resource.hash - 9.0547916024840192E18 == 0
CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.fileIndexGenerator - 2 * cfsInstance.metadata.resource.hash - 1.727064438341E12 == 0
CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.readOrdering.current.id - daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224488E12 == 0
===========================================================================
org.apache.cassandra.cql3.SimpleQueryTest@testTableWithOneClustering-54916894:::dump
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.keyValidator.isByteOrderComparable
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.allocatingFrom.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.availableSegment.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.joinRing
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.useStrictConsistency
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionSpaceCheck
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.enabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.partitionSSTablesByTokenRange
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_ENABLED
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.isEnabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.shouldDefragment
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.supportsEarlyOpen
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.data.loadsstables
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.directories.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.keyspace.initialized
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.allColumnFilter.isFetchAll
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.keyValidator.isByteOrderComparable
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.viewManager.baseTableMetadata.isCompound
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK == CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MIN_THRESHOLD
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CFMetadataInstance.partitioner.MINIMUM.serialVersionUID
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.executor.syncComplete.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.managerThreadWaitQueue.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.segmentPrepared.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == StorageService.instance.threadCounter
CFMetadataInstance.isCounter == CFMetadataInstance.isDense
CFMetadataInstance.isCounter == CFMetadataInstance.isIndex
CFMetadataInstance.isCounter == CFMetadataInstance.isSuper
CFMetadataInstance.isCounter == CFMetadataInstance.isView
CFMetadataInstance.isCounter == CFMetadataInstance.partitioner.partitionOrdering.isByteOrderComparable
CFMetadataInstance.isCounter == CommitLog.instance.executor.shutdown
CFMetadataInstance.isCounter == CommitLog.instance.executor.syncRequested
CFMetadataInstance.isCounter == CommitLog.instance.segmentManager.shutdown
CFMetadataInstance.isCounter == StorageService.instance.allowSimultaneousMoves
CFMetadataInstance.isCounter == StorageService.instance.authSetupCalled
CFMetadataInstance.isCounter == StorageService.instance.authSetupComplete
CFMetadataInstance.isCounter == StorageService.instance.gossipActive
CFMetadataInstance.isCounter == StorageService.instance.initialized
CFMetadataInstance.isCounter == StorageService.instance.isBootstrapMode
CFMetadataInstance.isCounter == StorageService.instance.isDecommissioning
CFMetadataInstance.isCounter == StorageService.instance.isRebuilding
CFMetadataInstance.isCounter == StorageService.instance.isShutdown
CFMetadataInstance.isCounter == StorageService.instance.isSurveyMode
CFMetadataInstance.isCounter == StorageService.instance.joined
CFMetadataInstance.isCounter == StorageService.instance.replacing
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.compactionLogger.enabled
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.currentBoundaries.isInvalid
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.diskBoundaryManager.diskBoundaries.isInvalid
CFMetadataInstance.isCounter == cfsInstance.keyspace.TEST_FAIL_WRITES
CFMetadataInstance.isCounter == cfsInstance.keyspace.viewManager.enableCoordinatorBatchlog
CFMetadataInstance.isCounter == cfsInstance.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.metric.aliasFactory.isIndex
CFMetadataInstance.isCounter == cfsInstance.metric.factory.isIndex
CFMetadataInstance.isCounter == cfsInstance.readOrdering.current.isBlocking
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isDense
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isView
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.executor.syncComplete.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.bufferPool.usedBuffers
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.managerThreadWaitQueue.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.segmentPrepared.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == QueryProcessor.instance.lastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.statics.complexIdx == QueryProcessor.instance.thriftLastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.legacyProgressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.nextRepairCommand
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.progressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.remainingCFs
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.tokenMetadata.ringVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.totalCFs
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.compactionLogger.identifier
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.currentBoundaries.directoriesVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.diskBoundaryManager.diskBoundaries.ringVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.keyspace.TEST_FAIL_MV_LOCKS_COUNT
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.keyspace.replicationStrategy.lastInvalidatedVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.readOrdering.current.running
CFMetadataInstance.partitionColumns.statics.complexIdx == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.HEAP_SIZE == StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.HEAP_SIZE == StorageService.instance.valueFactory.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.HEAP_SIZE == cfsInstance.metadata.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.MAXIMUM == StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CFMetadataInstance.partitioner.MAXIMUM == StorageService.instance.valueFactory.partitioner.MAXIMUM
CFMetadataInstance.partitioner.MAXIMUM == cfsInstance.metadata.partitioner.MAXIMUM
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == CommitLog.instance.configuration.encryptionContext.chunkLength
CommitLog.instance.executor.markerIntervalNanos == CommitLog.instance.executor.syncIntervalNanos
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.managerThreadWaitQueue.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.segmentPrepared.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.keyspace.writeOrder.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.readOrdering.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)-1
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == CommitLog.instance.segmentManager.availableSegment.ENTRY_OVERHEAD_SIZE
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == CommitLog.instance.segmentManager.availableSegment.SYNC_MARKER_SIZE
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.availableSegment.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.bufferPool.bufferSize
CommitLog.instance.segmentManager.allocatingFrom.idBase == CommitLog.instance.segmentManager.availableSegment.idBase
CommitLog.instance.segmentManager.allocatingFrom.nextId == CommitLog.instance.segmentManager.availableSegment.nextId
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == CommitLog.instance.segmentManager.availableSegment.replayLimitId
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == CommitLog.instance.segmentManager.availableSegment.lastSyncedOffset
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE == resultSetInstance.rows_FOR_ENCLOSING_USE
cfsInstance.compactionStrategyManager.isActive == cfsInstance.valid
CFMetadataInstance.allColumnFilter.isFetchAll == true
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK == 2
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == 4
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == 1
CFMetadataInstance.isCounter == false
CFMetadataInstance.partitioner.HEAP_SIZE == 24
CFMetadataInstance.partitioner.MAXIMUM == 9223372036854775807L
CFMetadataInstance.partitioner.MINIMUM.token == -9223372036854775808L
CFMetadataInstance.resource.hash == 2144393071 || CFMetadataInstance.resource.hash == 2144393072
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == 65536
CommitLog.instance.MAX_MUTATION_SIZE == 2621440
CommitLog.instance.archiver.restorePointInTime == 4510987932000L
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS == 100
CommitLog.instance.executor.markerIntervalNanos == 1000000
CommitLog.instance.executor.pending == 0 || CommitLog.instance.executor.pending == 1
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == 12
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == 8
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == 5242880
CommitLog.instance.segmentManager.allocatingFrom.fd == 179 || CommitLog.instance.segmentManager.allocatingFrom.fd == 180 || CommitLog.instance.segmentManager.allocatingFrom.fd == 202
CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224483L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224484L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224485L
CommitLog.instance.segmentManager.allocatingFrom.idBase == 1731353224472L
CommitLog.instance.segmentManager.allocatingFrom.nextId == 13 || CommitLog.instance.segmentManager.allocatingFrom.nextId == 14 || CommitLog.instance.segmentManager.allocatingFrom.nextId == 15
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == 1731353224475L
CommitLog.instance.segmentManager.availableSegment.allocatePosition == 28
CommitLog.instance.segmentManager.availableSegment.fd == 177 || CommitLog.instance.segmentManager.availableSegment.fd == 180 || CommitLog.instance.segmentManager.availableSegment.fd == 202
CommitLog.instance.segmentManager.availableSegment.id == 1731353224484L || CommitLog.instance.segmentManager.availableSegment.id == 1731353224485L || CommitLog.instance.segmentManager.availableSegment.id == 1731353224486L
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == 20
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize == 3
CommitLog.instance.segmentManager.size == 10485760 || CommitLog.instance.segmentManager.size == 15728640
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
("oneOf.java.jpp: SEQUENCE unimplemented" != null)
StorageService.instance.RING_DELAY == 30000
daikon.Quant.fuzzy.eq(StorageService.instance.traceProbability, 0.0)
cfsInstance.compactionStrategyManager.fanout == 10
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD == 32
cfsInstance.fileIndexGenerator == 0 || cfsInstance.fileIndexGenerator == 1 || cfsInstance.fileIndexGenerator == 2
cfsInstance.indexManager.DEFAULT_PAGE_SIZE == 10000
cfsInstance.metadata.resource.hash == 2144393071 || cfsInstance.metadata.resource.hash == 2144393072
cfsInstance.readOrdering.current.id == 0 || cfsInstance.readOrdering.current.id == 1 || cfsInstance.readOrdering.current.id == 2
cfsInstance.sampleLatencyNanos == 2500000000L
resultSetInstance.metadata.columnCount >= 1
daikon.Quant.eltsNotEqual(resultSetInstance.rows_FOR_ENCLOSING_USE, null)
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.size
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK >= cfsInstance.fileIndexGenerator
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK >= cfsInstance.readOrdering.current.id
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != resultSetInstance.metadata.columnCount
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.size
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > cfsInstance.fileIndexGenerator
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > cfsInstance.readOrdering.current.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK >= CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.size
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK <= resultSetInstance.metadata.columnCount
CFMetadataInstance.partitionColumns.statics.complexIdx < CFMetadataInstance.resource.hash
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitionColumns.statics.complexIdx <= CommitLog.instance.executor.pending
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.written
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitionColumns.statics.complexIdx <= cfsInstance.fileIndexGenerator
CFMetadataInstance.partitionColumns.statics.complexIdx < cfsInstance.metadata.resource.hash
CFMetadataInstance.partitionColumns.statics.complexIdx <= cfsInstance.readOrdering.current.id
CFMetadataInstance.partitionColumns.statics.complexIdx < resultSetInstance.metadata.columnCount
CFMetadataInstance.partitionColumns.statics.complexIdx <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.HEAP_SIZE < CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.HEAP_SIZE > CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.executor.written
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.HEAP_SIZE != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.HEAP_SIZE != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.HEAP_SIZE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.HEAP_SIZE > cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.HEAP_SIZE < cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.HEAP_SIZE > cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.HEAP_SIZE > resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.HEAP_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.MAXIMUM > CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.written
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.MAXIMUM > resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.MAXIMUM > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.MINIMUM.token < CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.written
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.MINIMUM.token < resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.MINIMUM.token < daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.resource.hash > CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE
CFMetadataInstance.resource.hash > CommitLog.instance.MAX_MUTATION_SIZE
CFMetadataInstance.resource.hash < CommitLog.instance.archiver.restorePointInTime
CFMetadataInstance.resource.hash > CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS
CFMetadataInstance.resource.hash < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.resource.hash > CommitLog.instance.executor.markerIntervalNanos
CFMetadataInstance.resource.hash > CommitLog.instance.executor.pending
CFMetadataInstance.resource.hash > CommitLog.instance.executor.written
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.idBase
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.size
CFMetadataInstance.resource.hash > StorageService.instance.RING_DELAY
CFMetadataInstance.resource.hash > cfsInstance.compactionStrategyManager.fanout
CFMetadataInstance.resource.hash > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CFMetadataInstance.resource.hash > cfsInstance.fileIndexGenerator
CFMetadataInstance.resource.hash > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CFMetadataInstance.resource.hash >= cfsInstance.metadata.resource.hash
CFMetadataInstance.resource.hash > cfsInstance.readOrdering.current.id
CFMetadataInstance.resource.hash < cfsInstance.sampleLatencyNanos
CFMetadataInstance.resource.hash > resultSetInstance.metadata.columnCount
CFMetadataInstance.resource.hash > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.executor.pending
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.executor.written
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.size
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > cfsInstance.fileIndexGenerator
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < cfsInstance.metadata.resource.hash
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > cfsInstance.readOrdering.current.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > resultSetInstance.metadata.columnCount
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.executor.pending
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.executor.written
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.size
CommitLog.instance.MAX_MUTATION_SIZE > cfsInstance.fileIndexGenerator
CommitLog.instance.MAX_MUTATION_SIZE < cfsInstance.metadata.resource.hash
CommitLog.instance.MAX_MUTATION_SIZE > cfsInstance.readOrdering.current.id
CommitLog.instance.MAX_MUTATION_SIZE > resultSetInstance.metadata.columnCount
CommitLog.instance.MAX_MUTATION_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.archiver.restorePointInTime < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.executor.pending
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.executor.written
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.size
CommitLog.instance.archiver.restorePointInTime > cfsInstance.fileIndexGenerator
CommitLog.instance.archiver.restorePointInTime > cfsInstance.metadata.resource.hash
CommitLog.instance.archiver.restorePointInTime > cfsInstance.readOrdering.current.id
CommitLog.instance.archiver.restorePointInTime % resultSetInstance.metadata.columnCount == 0
CommitLog.instance.archiver.restorePointInTime > resultSetInstance.metadata.columnCount
CommitLog.instance.archiver.restorePointInTime > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > CommitLog.instance.executor.pending
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.executor.written
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS != CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < cfsInstance.metadata.resource.hash
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.markerIntervalNanos
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.pending
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.written
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.size
CommitLog.instance.executor.lastSyncedAt > StorageService.instance.RING_DELAY
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.lastSyncedAt > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.lastSyncedAt > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.lastSyncedAt > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.lastSyncedAt > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.lastSyncedAt > cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.lastSyncedAt > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.lastSyncedAt > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.executor.pending
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.executor.written
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.markerIntervalNanos > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.markerIntervalNanos < cfsInstance.metadata.resource.hash
CommitLog.instance.executor.markerIntervalNanos > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.markerIntervalNanos > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.markerIntervalNanos > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.pending < CommitLog.instance.executor.written
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.pending < StorageService.instance.RING_DELAY
CommitLog.instance.executor.pending < cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.pending < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.pending <= cfsInstance.fileIndexGenerator
CommitLog.instance.executor.pending < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.pending < cfsInstance.metadata.resource.hash
CommitLog.instance.executor.pending <= cfsInstance.readOrdering.current.id
CommitLog.instance.executor.pending < cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.pending <= resultSetInstance.metadata.columnCount
CommitLog.instance.executor.syncComplete.CANCELLED <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.written != CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.written != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.written != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.written != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.written < StorageService.instance.RING_DELAY
CommitLog.instance.executor.written > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.written > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.written > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.written < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.written < cfsInstance.metadata.resource.hash
CommitLog.instance.executor.written > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.written < cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.written > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.written > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE != resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 8 == 0
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition >= CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.fd != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.fd != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.fd != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.fd < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.fd < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.fd < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.fd < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.fd > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.fd > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.id < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.id > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.id > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.id > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.idBase < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.idBase > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.idBase > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset >= CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset >= CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset >= CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.nextId > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.nextId < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.nextId != resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.nextId > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.allocatePosition > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.allocatePosition < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.allocatePosition > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.allocatePosition > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.allocatePosition > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.fd < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.availableSegment.fd > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.availableSegment.fd > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.availableSegment.fd < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.fd < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.fd < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.availableSegment.fd < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.fd < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.availableSegment.fd > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.fd > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.id > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.availableSegment.id > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.id > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset >= resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.size > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.size > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.size > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.size > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.size > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.size < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.size > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.size < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.size > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.size > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
daikon.Quant.subsetOf(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE, resultSetInstance.rows_FOR_ENCLOSING_USE)
StorageService.instance.RING_DELAY > cfsInstance.fileIndexGenerator
StorageService.instance.RING_DELAY < cfsInstance.metadata.resource.hash
StorageService.instance.RING_DELAY > cfsInstance.readOrdering.current.id
StorageService.instance.RING_DELAY % resultSetInstance.metadata.columnCount == 0
StorageService.instance.RING_DELAY > resultSetInstance.metadata.columnCount
StorageService.instance.RING_DELAY > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.compactionStrategyManager.fanout > cfsInstance.fileIndexGenerator
cfsInstance.compactionStrategyManager.fanout < cfsInstance.metadata.resource.hash
cfsInstance.compactionStrategyManager.fanout > cfsInstance.readOrdering.current.id
cfsInstance.compactionStrategyManager.fanout != resultSetInstance.metadata.columnCount
cfsInstance.compactionStrategyManager.fanout > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > cfsInstance.fileIndexGenerator
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD < cfsInstance.metadata.resource.hash
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > cfsInstance.readOrdering.current.id
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > resultSetInstance.metadata.columnCount
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.fileIndexGenerator < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
cfsInstance.fileIndexGenerator < cfsInstance.metadata.resource.hash
cfsInstance.fileIndexGenerator < cfsInstance.sampleLatencyNanos
cfsInstance.fileIndexGenerator <= resultSetInstance.metadata.columnCount
cfsInstance.indexManager.DEFAULT_PAGE_SIZE < cfsInstance.metadata.resource.hash
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > cfsInstance.readOrdering.current.id
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > resultSetInstance.metadata.columnCount
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.metadata.resource.hash > cfsInstance.readOrdering.current.id
cfsInstance.metadata.resource.hash < cfsInstance.sampleLatencyNanos
cfsInstance.metadata.resource.hash > resultSetInstance.metadata.columnCount
cfsInstance.metadata.resource.hash > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.readOrdering.current.id < cfsInstance.sampleLatencyNanos
cfsInstance.sampleLatencyNanos > resultSetInstance.metadata.columnCount
cfsInstance.sampleLatencyNanos > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
resultSetInstance.metadata.columnCount >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.resource.hash + CommitLog.instance.executor.pending - cfsInstance.readOrdering.current.id - 2144393070 == 0
CFMetadataInstance.resource.hash + CommitLog.instance.executor.pending + daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 2144393072 == 0
120586240 * CFMetadataInstance.resource.hash - 5242880 * CommitLog.instance.segmentManager.allocatingFrom.fd + 23 * CommitLog.instance.segmentManager.size - 2.5858429681664E17 == 0
5242880 * CFMetadataInstance.resource.hash - 5242880 * CommitLog.instance.segmentManager.allocatingFrom.id + CommitLog.instance.segmentManager.size + 9.0660343980228608E18 == 0
3 * CFMetadataInstance.resource.hash - 2 * CommitLog.instance.segmentManager.allocatingFrom.id + cfsInstance.fileIndexGenerator + 3.456273269752E12 == 0
5242880 * CFMetadataInstance.resource.hash - 5242880 * CommitLog.instance.segmentManager.allocatingFrom.nextId + CommitLog.instance.segmentManager.size - 1.12427954864128E16 == 0
3 * CFMetadataInstance.resource.hash - 2 * CommitLog.instance.segmentManager.allocatingFrom.nextId + cfsInstance.fileIndexGenerator - 6.433179188E9 == 0
CFMetadataInstance.resource.hash - CommitLog.instance.segmentManager.allocatingFrom.nextId + cfsInstance.metadata.resource.hash - 4.288786129E9 == 0
115343360 * CFMetadataInstance.resource.hash + 5242880 * CommitLog.instance.segmentManager.availableSegment.fd + 3 * CommitLog.instance.segmentManager.size - 2.473415030603776E17 == 0
47 * CFMetadataInstance.resource.hash + 2 * CommitLog.instance.segmentManager.availableSegment.fd + 3 * cfsInstance.fileIndexGenerator - 1.00786474744E11 == 0
5242880 * CFMetadataInstance.resource.hash - 5242880 * CommitLog.instance.segmentManager.availableSegment.id + CommitLog.instance.segmentManager.size + 9.0660343980281037E18 == 0
3 * CFMetadataInstance.resource.hash - 2 * CommitLog.instance.segmentManager.availableSegment.id + cfsInstance.fileIndexGenerator + 3.456273269754E12 == 0
2621440 * CFMetadataInstance.resource.hash - CommitLog.instance.segmentManager.size + 2621440 * cfsInstance.fileIndexGenerator - 5.62139776417792E15 == 0
CommitLog.instance.executor.lastSyncedAt - 101712267 * CommitLog.instance.executor.written - 547379969 * daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 8.9347679234646E13 == 0
CommitLog.instance.executor.lastSyncedAt - 101712267 * CommitLog.instance.executor.written - 547379969 * daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1 - 8.9348226614615E13 == 0
45 * CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.fd + 23 * CommitLog.instance.segmentManager.allocatingFrom.id - 3.9821124162975E13 == 0
45 * CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.fd + 23 * CommitLog.instance.segmentManager.availableSegment.id - 3.9821124162998E13 == 0
CommitLog.instance.executor.pending + CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.readOrdering.current.id - 1.731353224482E12 == 0
CommitLog.instance.executor.pending + CommitLog.instance.segmentManager.allocatingFrom.id + daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224484E12 == 0
CommitLog.instance.executor.pending + CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.readOrdering.current.id - 1.731353224483E12 == 0
CommitLog.instance.executor.pending + CommitLog.instance.segmentManager.availableSegment.id + daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224485E12 == 0
5242880 * CommitLog.instance.segmentManager.allocatingFrom.fd - 23 * CommitLog.instance.segmentManager.size - 120586240 * cfsInstance.metadata.resource.hash + 2.5858429681664E17 == 0
5242880 * CommitLog.instance.segmentManager.allocatingFrom.id - 3 * CommitLog.instance.segmentManager.size + 5242880 * cfsInstance.fileIndexGenerator - 9.0772771935512166E18 == 0
5242880 * CommitLog.instance.segmentManager.allocatingFrom.id - CommitLog.instance.segmentManager.size - 5242880 * cfsInstance.metadata.resource.hash - 9.0660343980228608E18 == 0
2 * CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.fileIndexGenerator - 3 * cfsInstance.metadata.resource.hash - 3.456273269752E12 == 0
CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.readOrdering.current.id - daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224481E12 == 0
5242880 * CommitLog.instance.segmentManager.allocatingFrom.nextId - CommitLog.instance.segmentManager.size - 5242880 * cfsInstance.metadata.resource.hash + 1.12427954864128E16 == 0
2 * CommitLog.instance.segmentManager.allocatingFrom.nextId - cfsInstance.fileIndexGenerator - 3 * cfsInstance.metadata.resource.hash + 6.433179188E9 == 0
5242880 * CommitLog.instance.segmentManager.availableSegment.fd + 3 * CommitLog.instance.segmentManager.size + 115343360 * cfsInstance.metadata.resource.hash - 2.473415030603776E17 == 0
2 * CommitLog.instance.segmentManager.availableSegment.fd + 3 * cfsInstance.fileIndexGenerator + 47 * cfsInstance.metadata.resource.hash - 1.00786474744E11 == 0
5242880 * CommitLog.instance.segmentManager.availableSegment.id - 3 * CommitLog.instance.segmentManager.size + 5242880 * cfsInstance.fileIndexGenerator - 9.0772771935564595E18 == 0
5242880 * CommitLog.instance.segmentManager.availableSegment.id - CommitLog.instance.segmentManager.size - 5242880 * cfsInstance.metadata.resource.hash - 9.0660343980281037E18 == 0
2 * CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.fileIndexGenerator - 3 * cfsInstance.metadata.resource.hash - 3.456273269754E12 == 0
CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.readOrdering.current.id - daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224482E12 == 0
CommitLog.instance.segmentManager.size - 2621440 * cfsInstance.fileIndexGenerator - 2621440 * cfsInstance.metadata.resource.hash + 5.62139776417792E15 == 0
===========================================================================
org.apache.cassandra.cql3.SimpleQueryTest@testTableWithReverseClusteringOrder-54916894:::dump
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.keyValidator.isByteOrderComparable
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.allocatingFrom.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.availableSegment.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.joinRing
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.useStrictConsistency
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionSpaceCheck
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.enabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.partitionSSTablesByTokenRange
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_ENABLED
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.isEnabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.shouldDefragment
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.supportsEarlyOpen
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.data.loadsstables
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.directories.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.keyspace.initialized
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.allColumnFilter.isFetchAll
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.keyValidator.isByteOrderComparable
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.viewManager.baseTableMetadata.isCompound
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK == CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MIN_THRESHOLD
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CFMetadataInstance.partitioner.MINIMUM.serialVersionUID
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.executor.syncComplete.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.managerThreadWaitQueue.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.segmentPrepared.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == StorageService.instance.threadCounter
CFMetadataInstance.isCounter == CFMetadataInstance.isDense
CFMetadataInstance.isCounter == CFMetadataInstance.isIndex
CFMetadataInstance.isCounter == CFMetadataInstance.isSuper
CFMetadataInstance.isCounter == CFMetadataInstance.isView
CFMetadataInstance.isCounter == CFMetadataInstance.partitioner.partitionOrdering.isByteOrderComparable
CFMetadataInstance.isCounter == CommitLog.instance.executor.shutdown
CFMetadataInstance.isCounter == CommitLog.instance.executor.syncRequested
CFMetadataInstance.isCounter == CommitLog.instance.segmentManager.shutdown
CFMetadataInstance.isCounter == StorageService.instance.allowSimultaneousMoves
CFMetadataInstance.isCounter == StorageService.instance.authSetupCalled
CFMetadataInstance.isCounter == StorageService.instance.authSetupComplete
CFMetadataInstance.isCounter == StorageService.instance.gossipActive
CFMetadataInstance.isCounter == StorageService.instance.initialized
CFMetadataInstance.isCounter == StorageService.instance.isBootstrapMode
CFMetadataInstance.isCounter == StorageService.instance.isDecommissioning
CFMetadataInstance.isCounter == StorageService.instance.isRebuilding
CFMetadataInstance.isCounter == StorageService.instance.isShutdown
CFMetadataInstance.isCounter == StorageService.instance.isSurveyMode
CFMetadataInstance.isCounter == StorageService.instance.joined
CFMetadataInstance.isCounter == StorageService.instance.replacing
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.compactionLogger.enabled
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.currentBoundaries.isInvalid
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.diskBoundaryManager.diskBoundaries.isInvalid
CFMetadataInstance.isCounter == cfsInstance.keyspace.TEST_FAIL_WRITES
CFMetadataInstance.isCounter == cfsInstance.keyspace.viewManager.enableCoordinatorBatchlog
CFMetadataInstance.isCounter == cfsInstance.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.metric.aliasFactory.isIndex
CFMetadataInstance.isCounter == cfsInstance.metric.factory.isIndex
CFMetadataInstance.isCounter == cfsInstance.readOrdering.current.isBlocking
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isDense
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isView
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.executor.syncComplete.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.bufferPool.usedBuffers
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.managerThreadWaitQueue.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.segmentPrepared.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == QueryProcessor.instance.lastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.statics.complexIdx == QueryProcessor.instance.thriftLastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.legacyProgressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.nextRepairCommand
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.progressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.remainingCFs
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.tokenMetadata.ringVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.totalCFs
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.compactionLogger.identifier
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.currentBoundaries.directoriesVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.diskBoundaryManager.diskBoundaries.ringVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.keyspace.TEST_FAIL_MV_LOCKS_COUNT
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.keyspace.replicationStrategy.lastInvalidatedVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.readOrdering.current.running
CFMetadataInstance.partitionColumns.statics.complexIdx == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.HEAP_SIZE == StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.HEAP_SIZE == StorageService.instance.valueFactory.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.HEAP_SIZE == cfsInstance.metadata.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.MAXIMUM == StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CFMetadataInstance.partitioner.MAXIMUM == StorageService.instance.valueFactory.partitioner.MAXIMUM
CFMetadataInstance.partitioner.MAXIMUM == cfsInstance.metadata.partitioner.MAXIMUM
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == CommitLog.instance.configuration.encryptionContext.chunkLength
CommitLog.instance.executor.markerIntervalNanos == CommitLog.instance.executor.syncIntervalNanos
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.managerThreadWaitQueue.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.segmentPrepared.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.keyspace.writeOrder.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.readOrdering.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)-1
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == CommitLog.instance.segmentManager.availableSegment.ENTRY_OVERHEAD_SIZE
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == CommitLog.instance.segmentManager.availableSegment.SYNC_MARKER_SIZE
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.availableSegment.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.bufferPool.bufferSize
CommitLog.instance.segmentManager.allocatingFrom.idBase == CommitLog.instance.segmentManager.availableSegment.idBase
CommitLog.instance.segmentManager.allocatingFrom.nextId == CommitLog.instance.segmentManager.availableSegment.nextId
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == CommitLog.instance.segmentManager.availableSegment.replayLimitId
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == CommitLog.instance.segmentManager.availableSegment.lastSyncedOffset
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE == resultSetInstance.rows_FOR_ENCLOSING_USE
cfsInstance.compactionStrategyManager.isActive == cfsInstance.valid
CFMetadataInstance.allColumnFilter.isFetchAll == true
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK == 2
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == 4
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == 1
CFMetadataInstance.isCounter == false
CFMetadataInstance.partitioner.HEAP_SIZE == 24
CFMetadataInstance.partitioner.MAXIMUM == 9223372036854775807L
CFMetadataInstance.partitioner.MINIMUM.token == -9223372036854775808L
CFMetadataInstance.resource.hash == 2144393072 || CFMetadataInstance.resource.hash == 2144393073
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == 65536
CommitLog.instance.MAX_MUTATION_SIZE == 2621440
CommitLog.instance.archiver.restorePointInTime == 4510987932000L
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS == 100
CommitLog.instance.executor.markerIntervalNanos == 1000000
CommitLog.instance.executor.pending == 0 || CommitLog.instance.executor.pending == 1
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == 12
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == 8
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == 5242880
CommitLog.instance.segmentManager.allocatingFrom.fd == 177 || CommitLog.instance.segmentManager.allocatingFrom.fd == 178 || CommitLog.instance.segmentManager.allocatingFrom.fd == 180
CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224485L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224486L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224487L
CommitLog.instance.segmentManager.allocatingFrom.idBase == 1731353224472L
CommitLog.instance.segmentManager.allocatingFrom.nextId == 15 || CommitLog.instance.segmentManager.allocatingFrom.nextId == 16 || CommitLog.instance.segmentManager.allocatingFrom.nextId == 17
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == 1731353224475L
CommitLog.instance.segmentManager.availableSegment.allocatePosition == 28
CommitLog.instance.segmentManager.availableSegment.fd == 177 || CommitLog.instance.segmentManager.availableSegment.fd == 178 || CommitLog.instance.segmentManager.availableSegment.fd == 182
CommitLog.instance.segmentManager.availableSegment.id == 1731353224486L || CommitLog.instance.segmentManager.availableSegment.id == 1731353224487L || CommitLog.instance.segmentManager.availableSegment.id == 1731353224488L
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == 20
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize == 3
CommitLog.instance.segmentManager.size == 10485760 || CommitLog.instance.segmentManager.size == 15728640
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
("oneOf.java.jpp: SEQUENCE unimplemented" != null)
StorageService.instance.RING_DELAY == 30000
daikon.Quant.fuzzy.eq(StorageService.instance.traceProbability, 0.0)
cfsInstance.compactionStrategyManager.fanout == 10
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD == 32
cfsInstance.fileIndexGenerator == 0 || cfsInstance.fileIndexGenerator == 1 || cfsInstance.fileIndexGenerator == 2
cfsInstance.indexManager.DEFAULT_PAGE_SIZE == 10000
cfsInstance.metadata.resource.hash == 2144393072 || cfsInstance.metadata.resource.hash == 2144393073
cfsInstance.readOrdering.current.id >= 0
cfsInstance.sampleLatencyNanos == 2500000000L
resultSetInstance.metadata.columnCount >= 1
daikon.Quant.eltsNotEqual(resultSetInstance.rows_FOR_ENCLOSING_USE, null)
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.size
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK >= cfsInstance.fileIndexGenerator
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != resultSetInstance.metadata.columnCount
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.size
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > cfsInstance.fileIndexGenerator
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > cfsInstance.readOrdering.current.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK >= CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.size
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK <= resultSetInstance.metadata.columnCount
CFMetadataInstance.partitionColumns.statics.complexIdx < CFMetadataInstance.resource.hash
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitionColumns.statics.complexIdx <= CommitLog.instance.executor.pending
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.written
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitionColumns.statics.complexIdx <= cfsInstance.fileIndexGenerator
CFMetadataInstance.partitionColumns.statics.complexIdx < cfsInstance.metadata.resource.hash
CFMetadataInstance.partitionColumns.statics.complexIdx <= cfsInstance.readOrdering.current.id
CFMetadataInstance.partitionColumns.statics.complexIdx < resultSetInstance.metadata.columnCount
CFMetadataInstance.partitionColumns.statics.complexIdx <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.HEAP_SIZE < CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.HEAP_SIZE > CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.executor.written
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.HEAP_SIZE != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.HEAP_SIZE != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.HEAP_SIZE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.HEAP_SIZE > cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.HEAP_SIZE < cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.HEAP_SIZE > cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.HEAP_SIZE > resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.HEAP_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.MAXIMUM > CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.written
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.MAXIMUM > resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.MAXIMUM > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.MINIMUM.token < CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.written
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.MINIMUM.token < resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.MINIMUM.token < daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.resource.hash > CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE
CFMetadataInstance.resource.hash > CommitLog.instance.MAX_MUTATION_SIZE
CFMetadataInstance.resource.hash < CommitLog.instance.archiver.restorePointInTime
CFMetadataInstance.resource.hash > CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS
CFMetadataInstance.resource.hash < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.resource.hash > CommitLog.instance.executor.markerIntervalNanos
CFMetadataInstance.resource.hash > CommitLog.instance.executor.pending
CFMetadataInstance.resource.hash > CommitLog.instance.executor.written
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.idBase
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.size
CFMetadataInstance.resource.hash > StorageService.instance.RING_DELAY
CFMetadataInstance.resource.hash > cfsInstance.compactionStrategyManager.fanout
CFMetadataInstance.resource.hash > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CFMetadataInstance.resource.hash > cfsInstance.fileIndexGenerator
CFMetadataInstance.resource.hash > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CFMetadataInstance.resource.hash >= cfsInstance.metadata.resource.hash
CFMetadataInstance.resource.hash > cfsInstance.readOrdering.current.id
CFMetadataInstance.resource.hash < cfsInstance.sampleLatencyNanos
CFMetadataInstance.resource.hash > resultSetInstance.metadata.columnCount
CFMetadataInstance.resource.hash > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.executor.pending
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.executor.written
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.size
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > cfsInstance.fileIndexGenerator
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < cfsInstance.metadata.resource.hash
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > cfsInstance.readOrdering.current.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > resultSetInstance.metadata.columnCount
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.executor.pending
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.executor.written
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.size
CommitLog.instance.MAX_MUTATION_SIZE > cfsInstance.fileIndexGenerator
CommitLog.instance.MAX_MUTATION_SIZE < cfsInstance.metadata.resource.hash
CommitLog.instance.MAX_MUTATION_SIZE > cfsInstance.readOrdering.current.id
CommitLog.instance.MAX_MUTATION_SIZE > resultSetInstance.metadata.columnCount
CommitLog.instance.MAX_MUTATION_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.archiver.restorePointInTime < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.executor.pending
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.executor.written
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.size
CommitLog.instance.archiver.restorePointInTime > cfsInstance.fileIndexGenerator
CommitLog.instance.archiver.restorePointInTime > cfsInstance.metadata.resource.hash
CommitLog.instance.archiver.restorePointInTime > cfsInstance.readOrdering.current.id
CommitLog.instance.archiver.restorePointInTime % resultSetInstance.metadata.columnCount == 0
CommitLog.instance.archiver.restorePointInTime > resultSetInstance.metadata.columnCount
CommitLog.instance.archiver.restorePointInTime > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > CommitLog.instance.executor.pending
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.executor.written
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS != CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < cfsInstance.metadata.resource.hash
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.markerIntervalNanos
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.pending
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.written
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.size
CommitLog.instance.executor.lastSyncedAt > StorageService.instance.RING_DELAY
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.lastSyncedAt > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.lastSyncedAt > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.lastSyncedAt > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.lastSyncedAt > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.lastSyncedAt > cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.lastSyncedAt > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.lastSyncedAt > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.executor.pending
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.executor.written
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.markerIntervalNanos > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.markerIntervalNanos < cfsInstance.metadata.resource.hash
CommitLog.instance.executor.markerIntervalNanos > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.markerIntervalNanos > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.markerIntervalNanos > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.pending < CommitLog.instance.executor.written
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.pending < StorageService.instance.RING_DELAY
CommitLog.instance.executor.pending < cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.pending < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.pending <= cfsInstance.fileIndexGenerator
CommitLog.instance.executor.pending < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.pending < cfsInstance.metadata.resource.hash
CommitLog.instance.executor.pending <= cfsInstance.readOrdering.current.id
CommitLog.instance.executor.pending < cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.pending < resultSetInstance.metadata.columnCount
CommitLog.instance.executor.syncComplete.CANCELLED <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.written != CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.written != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.written != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.written < StorageService.instance.RING_DELAY
CommitLog.instance.executor.written > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.written > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.written > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.written < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.written < cfsInstance.metadata.resource.hash
CommitLog.instance.executor.written > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.written < cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.written > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.written > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE != resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 8 == 0
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition >= CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.fd != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.fd != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.fd != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.fd < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.fd < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.fd < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.fd < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.fd > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.fd > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.id < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.id > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.id > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.id > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.idBase < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.idBase > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.idBase > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset >= CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset >= CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset >= CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.nextId > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.nextId < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.nextId != resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.nextId > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.allocatePosition > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.allocatePosition < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.allocatePosition > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.allocatePosition > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.allocatePosition > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.fd < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.availableSegment.fd > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.availableSegment.fd > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.availableSegment.fd < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.fd < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.fd < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.availableSegment.fd < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.fd < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.availableSegment.fd > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.fd > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.id > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.availableSegment.id > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.id > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset >= resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize >= cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.size > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.size > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.size > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.size > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.size > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.size < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.size > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.size < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.size > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.size > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
daikon.Quant.subsetOf(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE, resultSetInstance.rows_FOR_ENCLOSING_USE)
StorageService.instance.RING_DELAY > cfsInstance.fileIndexGenerator
StorageService.instance.RING_DELAY < cfsInstance.metadata.resource.hash
StorageService.instance.RING_DELAY > cfsInstance.readOrdering.current.id
StorageService.instance.RING_DELAY % resultSetInstance.metadata.columnCount == 0
StorageService.instance.RING_DELAY > resultSetInstance.metadata.columnCount
StorageService.instance.RING_DELAY > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.compactionStrategyManager.fanout > cfsInstance.fileIndexGenerator
cfsInstance.compactionStrategyManager.fanout < cfsInstance.metadata.resource.hash
cfsInstance.compactionStrategyManager.fanout > cfsInstance.readOrdering.current.id
cfsInstance.compactionStrategyManager.fanout != resultSetInstance.metadata.columnCount
cfsInstance.compactionStrategyManager.fanout > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > cfsInstance.fileIndexGenerator
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD < cfsInstance.metadata.resource.hash
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > cfsInstance.readOrdering.current.id
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > resultSetInstance.metadata.columnCount
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.fileIndexGenerator < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
cfsInstance.fileIndexGenerator < cfsInstance.metadata.resource.hash
cfsInstance.fileIndexGenerator < cfsInstance.sampleLatencyNanos
cfsInstance.indexManager.DEFAULT_PAGE_SIZE < cfsInstance.metadata.resource.hash
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > cfsInstance.readOrdering.current.id
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > resultSetInstance.metadata.columnCount
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.metadata.resource.hash > cfsInstance.readOrdering.current.id
cfsInstance.metadata.resource.hash < cfsInstance.sampleLatencyNanos
cfsInstance.metadata.resource.hash > resultSetInstance.metadata.columnCount
cfsInstance.metadata.resource.hash > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.readOrdering.current.id < cfsInstance.sampleLatencyNanos
cfsInstance.sampleLatencyNanos > resultSetInstance.metadata.columnCount
cfsInstance.sampleLatencyNanos > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
resultSetInstance.metadata.columnCount >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
2 * CFMetadataInstance.resource.hash - CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.id + 1.727064438341E12 == 0
2 * CFMetadataInstance.resource.hash - CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.nextId - 4.288786129E9 == 0
5 * CFMetadataInstance.resource.hash - 4 * CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.availableSegment.fd - 1.0721965183E10 == 0
2 * CFMetadataInstance.resource.hash - CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.availableSegment.id + 1.727064438342E12 == 0
2 * CFMetadataInstance.resource.hash - 2 * CommitLog.instance.executor.pending + cfsInstance.fileIndexGenerator - 4.288786146E9 == 0
3 * CFMetadataInstance.resource.hash - 3 * CommitLog.instance.executor.pending + cfsInstance.readOrdering.current.id - 6.433179219E9 == 0
CFMetadataInstance.resource.hash - CommitLog.instance.executor.pending - daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 2144393072 == 0
15728640 * CFMetadataInstance.resource.hash + 5242880 * CommitLog.instance.segmentManager.allocatingFrom.fd - CommitLog.instance.segmentManager.size - 3.372838758121472E16 == 0
CFMetadataInstance.resource.hash - CommitLog.instance.segmentManager.allocatingFrom.nextId + cfsInstance.metadata.resource.hash - 4.288786129E9 == 0
3 * CommitLog.instance.executor.pending + CommitLog.instance.segmentManager.allocatingFrom.fd + 3 * cfsInstance.metadata.resource.hash - 6.433179396E9 == 0
2 * CommitLog.instance.executor.pending - 2 * CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.fileIndexGenerator + 3.462706448972E12 == 0
CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.id + 2 * cfsInstance.metadata.resource.hash + 1.727064438341E12 == 0
3 * CommitLog.instance.executor.pending - 3 * CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.readOrdering.current.id + 5.194059673458E12 == 0
CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.nextId + 2 * cfsInstance.metadata.resource.hash - 4.288786129E9 == 0
CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.availableSegment.fd + 5 * cfsInstance.metadata.resource.hash - 1.0721965183E10 == 0
2 * CommitLog.instance.executor.pending - 2 * CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.fileIndexGenerator + 3.462706448974E12 == 0
CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.availableSegment.id + 2 * cfsInstance.metadata.resource.hash + 1.727064438342E12 == 0
3 * CommitLog.instance.executor.pending - 3 * CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.readOrdering.current.id + 5.194059673461E12 == 0
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 239 * CommitLog.instance.segmentManager.allocatingFrom.id - CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset + 4.13793420651907E14 == 0
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 239 * CommitLog.instance.segmentManager.availableSegment.id + 4.13793420652146E14 == 0
CommitLog.instance.segmentManager.allocatingFrom.fd + CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.fileIndexGenerator - 1.731353224663E12 == 0
CommitLog.instance.segmentManager.allocatingFrom.fd + CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.fileIndexGenerator - 1.731353224664E12 == 0
5242880 * CommitLog.instance.segmentManager.allocatingFrom.fd - CommitLog.instance.segmentManager.size + 15728640 * cfsInstance.metadata.resource.hash - 3.372838758121472E16 == 0
10 * CommitLog.instance.segmentManager.allocatingFrom.id - 4 * CommitLog.instance.segmentManager.availableSegment.fd + 3 * cfsInstance.fileIndexGenerator - 1.7313532244148E13 == 0
2 * CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.fileIndexGenerator - 4 * cfsInstance.metadata.resource.hash - 3.45412887668E12 == 0
CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.readOrdering.current.id - daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224482E12 == 0
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 239 * CommitLog.instance.segmentManager.availableSegment.id + 4.13793420652154E14 == 0
2 * CommitLog.instance.segmentManager.allocatingFrom.nextId - cfsInstance.fileIndexGenerator - 4 * cfsInstance.metadata.resource.hash + 8.57757226E9 == 0
4 * CommitLog.instance.segmentManager.availableSegment.fd - 10 * CommitLog.instance.segmentManager.availableSegment.id - 3 * cfsInstance.fileIndexGenerator + 1.7313532244158E13 == 0
CommitLog.instance.segmentManager.availableSegment.fd - 2 * cfsInstance.fileIndexGenerator - 5 * cfsInstance.metadata.resource.hash + 1.0721965187E10 == 0
2 * CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.fileIndexGenerator - 4 * cfsInstance.metadata.resource.hash - 3.454128876682E12 == 0
CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.readOrdering.current.id - daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224483E12 == 0
CommitLog.instance.segmentManager.size - 2621440 * cfsInstance.fileIndexGenerator - 5242880 * cfsInstance.metadata.resource.hash + 1.124279554408448E16 == 0
===========================================================================
org.apache.cassandra.cql3.SimpleQueryTest@testTableWithTwoClustering-54916894:::dump
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.keyValidator.isByteOrderComparable
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.allocatingFrom.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.availableSegment.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.joinRing
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.useStrictConsistency
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionSpaceCheck
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.enabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.partitionSSTablesByTokenRange
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_ENABLED
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.isEnabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.shouldDefragment
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.supportsEarlyOpen
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.data.loadsstables
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.directories.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.keyspace.initialized
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.allColumnFilter.isFetchAll
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.keyValidator.isByteOrderComparable
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.viewManager.baseTableMetadata.isCompound
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MIN_THRESHOLD
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CFMetadataInstance.partitioner.MINIMUM.serialVersionUID
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.executor.syncComplete.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.managerThreadWaitQueue.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.segmentPrepared.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == StorageService.instance.threadCounter
CFMetadataInstance.isCounter == CFMetadataInstance.isDense
CFMetadataInstance.isCounter == CFMetadataInstance.isIndex
CFMetadataInstance.isCounter == CFMetadataInstance.isSuper
CFMetadataInstance.isCounter == CFMetadataInstance.isView
CFMetadataInstance.isCounter == CFMetadataInstance.partitioner.partitionOrdering.isByteOrderComparable
CFMetadataInstance.isCounter == CommitLog.instance.executor.shutdown
CFMetadataInstance.isCounter == CommitLog.instance.segmentManager.shutdown
CFMetadataInstance.isCounter == StorageService.instance.allowSimultaneousMoves
CFMetadataInstance.isCounter == StorageService.instance.authSetupCalled
CFMetadataInstance.isCounter == StorageService.instance.authSetupComplete
CFMetadataInstance.isCounter == StorageService.instance.gossipActive
CFMetadataInstance.isCounter == StorageService.instance.initialized
CFMetadataInstance.isCounter == StorageService.instance.isBootstrapMode
CFMetadataInstance.isCounter == StorageService.instance.isDecommissioning
CFMetadataInstance.isCounter == StorageService.instance.isRebuilding
CFMetadataInstance.isCounter == StorageService.instance.isShutdown
CFMetadataInstance.isCounter == StorageService.instance.isSurveyMode
CFMetadataInstance.isCounter == StorageService.instance.joined
CFMetadataInstance.isCounter == StorageService.instance.replacing
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.compactionLogger.enabled
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.currentBoundaries.isInvalid
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.diskBoundaryManager.diskBoundaries.isInvalid
CFMetadataInstance.isCounter == cfsInstance.keyspace.TEST_FAIL_WRITES
CFMetadataInstance.isCounter == cfsInstance.keyspace.viewManager.enableCoordinatorBatchlog
CFMetadataInstance.isCounter == cfsInstance.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.metric.aliasFactory.isIndex
CFMetadataInstance.isCounter == cfsInstance.metric.factory.isIndex
CFMetadataInstance.isCounter == cfsInstance.readOrdering.current.isBlocking
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isDense
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isView
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.executor.syncComplete.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.bufferPool.usedBuffers
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.managerThreadWaitQueue.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.segmentPrepared.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == QueryProcessor.instance.lastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.statics.complexIdx == QueryProcessor.instance.thriftLastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.legacyProgressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.nextRepairCommand
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.progressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.remainingCFs
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.tokenMetadata.ringVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.totalCFs
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.compactionLogger.identifier
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.currentBoundaries.directoriesVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.diskBoundaryManager.diskBoundaries.ringVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.keyspace.TEST_FAIL_MV_LOCKS_COUNT
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.keyspace.replicationStrategy.lastInvalidatedVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.readOrdering.current.running
CFMetadataInstance.partitionColumns.statics.complexIdx == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.HEAP_SIZE == StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.HEAP_SIZE == StorageService.instance.valueFactory.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.HEAP_SIZE == cfsInstance.metadata.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.MAXIMUM == StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CFMetadataInstance.partitioner.MAXIMUM == StorageService.instance.valueFactory.partitioner.MAXIMUM
CFMetadataInstance.partitioner.MAXIMUM == cfsInstance.metadata.partitioner.MAXIMUM
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == CommitLog.instance.configuration.encryptionContext.chunkLength
CommitLog.instance.executor.markerIntervalNanos == CommitLog.instance.executor.syncIntervalNanos
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.managerThreadWaitQueue.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.segmentPrepared.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.keyspace.writeOrder.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.readOrdering.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)-1
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == CommitLog.instance.segmentManager.availableSegment.ENTRY_OVERHEAD_SIZE
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == CommitLog.instance.segmentManager.availableSegment.SYNC_MARKER_SIZE
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.availableSegment.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.bufferPool.bufferSize
CommitLog.instance.segmentManager.allocatingFrom.idBase == CommitLog.instance.segmentManager.availableSegment.idBase
CommitLog.instance.segmentManager.allocatingFrom.nextId == CommitLog.instance.segmentManager.availableSegment.nextId
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == CommitLog.instance.segmentManager.availableSegment.replayLimitId
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == CommitLog.instance.segmentManager.availableSegment.lastSyncedOffset
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE == resultSetInstance.rows_FOR_ENCLOSING_USE
cfsInstance.compactionStrategyManager.isActive == cfsInstance.valid
CFMetadataInstance.allColumnFilter.isFetchAll == true
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK == 2
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == 4
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == 1
CFMetadataInstance.isCounter == false
CFMetadataInstance.partitionColumns.regulars.complexIdx == 1 || CFMetadataInstance.partitionColumns.regulars.complexIdx == 2
CFMetadataInstance.partitioner.HEAP_SIZE == 24
CFMetadataInstance.partitioner.MAXIMUM == 9223372036854775807L
CFMetadataInstance.partitioner.MINIMUM.token == -9223372036854775808L
CFMetadataInstance.resource.hash == 2144393073 || CFMetadataInstance.resource.hash == 2144393074
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == 65536
CommitLog.instance.MAX_MUTATION_SIZE == 2621440
CommitLog.instance.archiver.restorePointInTime == 4510987932000L
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS == 100
CommitLog.instance.executor.markerIntervalNanos == 1000000
CommitLog.instance.executor.pending == 0 || CommitLog.instance.executor.pending == 1
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == 12
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == 8
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == 5242880
CommitLog.instance.segmentManager.allocatingFrom.fd == 178 || CommitLog.instance.segmentManager.allocatingFrom.fd == 180 || CommitLog.instance.segmentManager.allocatingFrom.fd == 182
CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224487L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224488L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224489L
CommitLog.instance.segmentManager.allocatingFrom.idBase == 1731353224472L
CommitLog.instance.segmentManager.allocatingFrom.nextId == 17 || CommitLog.instance.segmentManager.allocatingFrom.nextId == 18 || CommitLog.instance.segmentManager.allocatingFrom.nextId == 19
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == 1731353224475L
CommitLog.instance.segmentManager.availableSegment.allocatePosition == 28
CommitLog.instance.segmentManager.availableSegment.fd == 180 || CommitLog.instance.segmentManager.availableSegment.fd == 182 || CommitLog.instance.segmentManager.availableSegment.fd == 214
CommitLog.instance.segmentManager.availableSegment.id == 1731353224488L || CommitLog.instance.segmentManager.availableSegment.id == 1731353224489L || CommitLog.instance.segmentManager.availableSegment.id == 1731353224490L
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == 20
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize == 3
CommitLog.instance.segmentManager.size == 10485760 || CommitLog.instance.segmentManager.size == 15728640
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
("oneOf.java.jpp: SEQUENCE unimplemented" != null)
StorageService.instance.RING_DELAY == 30000
daikon.Quant.fuzzy.eq(StorageService.instance.traceProbability, 0.0)
cfsInstance.compactionStrategyManager.fanout == 10
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD == 32
cfsInstance.fileIndexGenerator == 0 || cfsInstance.fileIndexGenerator == 1 || cfsInstance.fileIndexGenerator == 2
cfsInstance.indexManager.DEFAULT_PAGE_SIZE == 10000
cfsInstance.metadata.resource.hash == 2144393073 || cfsInstance.metadata.resource.hash == 2144393074
cfsInstance.readOrdering.current.id >= 0
cfsInstance.sampleLatencyNanos == 2500000000L
resultSetInstance.metadata.columnCount >= 1
daikon.Quant.eltsNotEqual(resultSetInstance.rows_FOR_ENCLOSING_USE, null)
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK >= CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.size
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK >= cfsInstance.fileIndexGenerator
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != resultSetInstance.metadata.columnCount
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.size
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > cfsInstance.fileIndexGenerator
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > cfsInstance.readOrdering.current.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK <= CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK >= CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.size
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK <= resultSetInstance.metadata.columnCount
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.partitionColumns.regulars.complexIdx > CFMetadataInstance.partitionColumns.statics.complexIdx
CFMetadataInstance.partitionColumns.regulars.complexIdx < CFMetadataInstance.partitioner.HEAP_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CFMetadataInstance.partitioner.MAXIMUM
CFMetadataInstance.partitionColumns.regulars.complexIdx > CFMetadataInstance.partitioner.MINIMUM.token
CFMetadataInstance.partitionColumns.regulars.complexIdx < CFMetadataInstance.resource.hash
CFMetadataInstance.partitionColumns.regulars.complexIdx < CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.MAX_MUTATION_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.archiver.restorePointInTime
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.markerIntervalNanos
CFMetadataInstance.partitionColumns.regulars.complexIdx >= CommitLog.instance.executor.pending
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.written
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.fd % CFMetadataInstance.partitionColumns.regulars.complexIdx == 0
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.idBase
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.availableSegment.fd % CFMetadataInstance.partitionColumns.regulars.complexIdx == 0
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitionColumns.regulars.complexIdx < StorageService.instance.RING_DELAY
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.compactionStrategyManager.fanout
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
cfsInstance.fileIndexGenerator % CFMetadataInstance.partitionColumns.regulars.complexIdx == 0
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.metadata.resource.hash
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.sampleLatencyNanos
CFMetadataInstance.partitionColumns.regulars.complexIdx != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.partitionColumns.statics.complexIdx < CFMetadataInstance.resource.hash
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitionColumns.statics.complexIdx <= CommitLog.instance.executor.pending
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.written
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitionColumns.statics.complexIdx <= cfsInstance.fileIndexGenerator
CFMetadataInstance.partitionColumns.statics.complexIdx < cfsInstance.metadata.resource.hash
CFMetadataInstance.partitionColumns.statics.complexIdx <= cfsInstance.readOrdering.current.id
CFMetadataInstance.partitionColumns.statics.complexIdx < resultSetInstance.metadata.columnCount
CFMetadataInstance.partitionColumns.statics.complexIdx <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.HEAP_SIZE < CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.HEAP_SIZE > CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.executor.written
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.HEAP_SIZE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.HEAP_SIZE > cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.HEAP_SIZE < cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.HEAP_SIZE > cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.HEAP_SIZE > resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.HEAP_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.MAXIMUM > CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.written
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.MAXIMUM > resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.MAXIMUM > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.MINIMUM.token < CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.written
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.MINIMUM.token < resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.MINIMUM.token < daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.resource.hash > CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE
CFMetadataInstance.resource.hash > CommitLog.instance.MAX_MUTATION_SIZE
CFMetadataInstance.resource.hash < CommitLog.instance.archiver.restorePointInTime
CFMetadataInstance.resource.hash > CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS
CFMetadataInstance.resource.hash < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.resource.hash > CommitLog.instance.executor.markerIntervalNanos
CFMetadataInstance.resource.hash > CommitLog.instance.executor.pending
CFMetadataInstance.resource.hash > CommitLog.instance.executor.written
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.idBase
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.size
CFMetadataInstance.resource.hash > StorageService.instance.RING_DELAY
CFMetadataInstance.resource.hash > cfsInstance.compactionStrategyManager.fanout
CFMetadataInstance.resource.hash > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CFMetadataInstance.resource.hash > cfsInstance.fileIndexGenerator
CFMetadataInstance.resource.hash > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CFMetadataInstance.resource.hash >= cfsInstance.metadata.resource.hash
CFMetadataInstance.resource.hash > cfsInstance.readOrdering.current.id
CFMetadataInstance.resource.hash < cfsInstance.sampleLatencyNanos
CFMetadataInstance.resource.hash > resultSetInstance.metadata.columnCount
CFMetadataInstance.resource.hash > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.executor.pending
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.executor.written
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.size
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > cfsInstance.fileIndexGenerator
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < cfsInstance.metadata.resource.hash
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > cfsInstance.readOrdering.current.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > resultSetInstance.metadata.columnCount
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.executor.pending
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.executor.written
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.size
CommitLog.instance.MAX_MUTATION_SIZE > cfsInstance.fileIndexGenerator
CommitLog.instance.MAX_MUTATION_SIZE < cfsInstance.metadata.resource.hash
CommitLog.instance.MAX_MUTATION_SIZE > cfsInstance.readOrdering.current.id
CommitLog.instance.MAX_MUTATION_SIZE > resultSetInstance.metadata.columnCount
CommitLog.instance.MAX_MUTATION_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.archiver.restorePointInTime < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.executor.pending
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.executor.written
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.size
CommitLog.instance.archiver.restorePointInTime > cfsInstance.fileIndexGenerator
CommitLog.instance.archiver.restorePointInTime > cfsInstance.metadata.resource.hash
CommitLog.instance.archiver.restorePointInTime > cfsInstance.readOrdering.current.id
CommitLog.instance.archiver.restorePointInTime % resultSetInstance.metadata.columnCount == 0
CommitLog.instance.archiver.restorePointInTime > resultSetInstance.metadata.columnCount
CommitLog.instance.archiver.restorePointInTime > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > CommitLog.instance.executor.pending
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.executor.written
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < cfsInstance.metadata.resource.hash
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.markerIntervalNanos
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.pending
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.written
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.size
CommitLog.instance.executor.lastSyncedAt > StorageService.instance.RING_DELAY
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.lastSyncedAt > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.lastSyncedAt > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.lastSyncedAt > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.lastSyncedAt > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.lastSyncedAt > cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.lastSyncedAt > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.lastSyncedAt > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.executor.pending
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.executor.written
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.markerIntervalNanos > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.markerIntervalNanos < cfsInstance.metadata.resource.hash
CommitLog.instance.executor.markerIntervalNanos > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.markerIntervalNanos > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.markerIntervalNanos > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.pending < CommitLog.instance.executor.written
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.pending < StorageService.instance.RING_DELAY
CommitLog.instance.executor.pending < cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.pending < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.pending <= cfsInstance.fileIndexGenerator
CommitLog.instance.executor.pending < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.pending < cfsInstance.metadata.resource.hash
CommitLog.instance.executor.pending <= cfsInstance.readOrdering.current.id
CommitLog.instance.executor.pending < cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.pending <= resultSetInstance.metadata.columnCount
CommitLog.instance.executor.syncComplete.CANCELLED <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.written != CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.written != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.written != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.written < StorageService.instance.RING_DELAY
CommitLog.instance.executor.written > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.written > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.written > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.written < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.written < cfsInstance.metadata.resource.hash
CommitLog.instance.executor.written > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.written < cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.written > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.written > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE != resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 8 == 0
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.fd != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.fd < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.fd < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.fd < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.fd < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.fd > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.fd > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.id < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.id > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.id > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.id > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.idBase < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.idBase > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.idBase > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset >= CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.nextId > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.nextId < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.nextId != resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.nextId > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.allocatePosition > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.allocatePosition < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.allocatePosition > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.allocatePosition > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.allocatePosition > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.fd < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.availableSegment.fd > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.availableSegment.fd > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.availableSegment.fd < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.fd < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.fd < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.availableSegment.fd < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.fd < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.availableSegment.fd > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.fd > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.id > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.availableSegment.id > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.id > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset >= resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize >= cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.size > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.size > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.size > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.size > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.size > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.size < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.size > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.size < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.size > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.size > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
daikon.Quant.subsetOf(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE, resultSetInstance.rows_FOR_ENCLOSING_USE)
StorageService.instance.RING_DELAY > cfsInstance.fileIndexGenerator
StorageService.instance.RING_DELAY < cfsInstance.metadata.resource.hash
StorageService.instance.RING_DELAY > cfsInstance.readOrdering.current.id
StorageService.instance.RING_DELAY % resultSetInstance.metadata.columnCount == 0
StorageService.instance.RING_DELAY > resultSetInstance.metadata.columnCount
StorageService.instance.RING_DELAY > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.compactionStrategyManager.fanout > cfsInstance.fileIndexGenerator
cfsInstance.compactionStrategyManager.fanout < cfsInstance.metadata.resource.hash
cfsInstance.compactionStrategyManager.fanout > cfsInstance.readOrdering.current.id
cfsInstance.compactionStrategyManager.fanout != resultSetInstance.metadata.columnCount
cfsInstance.compactionStrategyManager.fanout > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > cfsInstance.fileIndexGenerator
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD < cfsInstance.metadata.resource.hash
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > cfsInstance.readOrdering.current.id
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > resultSetInstance.metadata.columnCount
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.fileIndexGenerator < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
cfsInstance.fileIndexGenerator < cfsInstance.metadata.resource.hash
cfsInstance.fileIndexGenerator < cfsInstance.sampleLatencyNanos
cfsInstance.fileIndexGenerator != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
cfsInstance.indexManager.DEFAULT_PAGE_SIZE < cfsInstance.metadata.resource.hash
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > cfsInstance.readOrdering.current.id
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > resultSetInstance.metadata.columnCount
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.metadata.resource.hash > cfsInstance.readOrdering.current.id
cfsInstance.metadata.resource.hash < cfsInstance.sampleLatencyNanos
cfsInstance.metadata.resource.hash > resultSetInstance.metadata.columnCount
cfsInstance.metadata.resource.hash > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.readOrdering.current.id < cfsInstance.sampleLatencyNanos
cfsInstance.sampleLatencyNanos > resultSetInstance.metadata.columnCount
cfsInstance.sampleLatencyNanos > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
resultSetInstance.metadata.columnCount >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.partitionColumns.regulars.complexIdx + CommitLog.instance.executor.pending + CommitLog.instance.segmentManager.allocatingFrom.id - 1.73135322449E12 == 0
CFMetadataInstance.partitionColumns.regulars.complexIdx + CommitLog.instance.executor.pending + CommitLog.instance.segmentManager.availableSegment.id - 1.731353224491E12 == 0
CFMetadataInstance.partitionColumns.regulars.complexIdx + CommitLog.instance.segmentManager.allocatingFrom.nextId - cfsInstance.metadata.resource.hash + 2144393054 == 0
4 * CFMetadataInstance.resource.hash - 4 * CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.fd - 8.57757211E9 == 0
CFMetadataInstance.resource.hash - CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.id + 1.729208831415E12 == 0
CFMetadataInstance.resource.hash - CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.nextId - 2144393055 == 0
2 * CFMetadataInstance.resource.hash - 2 * CommitLog.instance.executor.pending + CommitLog.instance.segmentManager.availableSegment.fd - 4.288786326E9 == 0
CFMetadataInstance.resource.hash - CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.availableSegment.id + 1.729208831416E12 == 0
CFMetadataInstance.resource.hash - CommitLog.instance.executor.pending - cfsInstance.readOrdering.current.id - 2144393070 == 0
CFMetadataInstance.resource.hash + CommitLog.instance.executor.pending + daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 2144393074 == 0
10485760 * CFMetadataInstance.resource.hash - 2621440 * CommitLog.instance.segmentManager.allocatingFrom.fd - CommitLog.instance.segmentManager.size - 2.24855906320384E16 == 0
CFMetadataInstance.resource.hash - CommitLog.instance.segmentManager.allocatingFrom.nextId + cfsInstance.metadata.resource.hash - 4.288786129E9 == 0
2 * CommitLog.instance.executor.lastSyncedAt - 56318797 * resultSetInstance.metadata.columnCount + 454675910 * daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.78757592078153E14 == 0
2 * CommitLog.instance.executor.lastSyncedAt - 56318797 * resultSetInstance.metadata.columnCount + 454675910 * daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1 - 1.78757137402243E14 == 0
6 * CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.fd + 4 * CommitLog.instance.segmentManager.allocatingFrom.id - 6.925412897776E12 == 0
6 * CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.fd + 4 * CommitLog.instance.segmentManager.availableSegment.id - 6.92541289778E12 == 0
CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.id + cfsInstance.readOrdering.current.id + 1.731353224484E12 == 0
CommitLog.instance.executor.pending + CommitLog.instance.segmentManager.allocatingFrom.id + daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224488E12 == 0
CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.availableSegment.id + cfsInstance.readOrdering.current.id + 1.731353224485E12 == 0
CommitLog.instance.executor.pending + CommitLog.instance.segmentManager.availableSegment.id + daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224489E12 == 0
2621440 * CommitLog.instance.segmentManager.allocatingFrom.fd + CommitLog.instance.segmentManager.size - 10485760 * cfsInstance.metadata.resource.hash + 2.24855906320384E16 == 0
CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.fileIndexGenerator - 3 * cfsInstance.metadata.resource.hash - 1.724920045266E12 == 0
CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.readOrdering.current.id - daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224484E12 == 0
CommitLog.instance.segmentManager.allocatingFrom.nextId - cfsInstance.fileIndexGenerator - 3 * cfsInstance.metadata.resource.hash + 6.433179204E9 == 0
CommitLog.instance.segmentManager.availableSegment.fd - 34 * cfsInstance.fileIndexGenerator - 68 * cfsInstance.metadata.resource.hash + 1.45818728852E11 == 0
CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.fileIndexGenerator - 3 * cfsInstance.metadata.resource.hash - 1.724920045267E12 == 0
CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.readOrdering.current.id - daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224485E12 == 0
===========================================================================
org.apache.cassandra.cql3.SimpleQueryTest@testTableWithoutClustering-54916894:::dump
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.keyValidator.isByteOrderComparable
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.allocatingFrom.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.availableSegment.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.joinRing
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.useStrictConsistency
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionSpaceCheck
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.enabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.partitionSSTablesByTokenRange
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_ENABLED
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.isEnabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.shouldDefragment
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.supportsEarlyOpen
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.data.loadsstables
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.directories.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.keyspace.initialized
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.allColumnFilter.isFetchAll
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.keyValidator.isByteOrderComparable
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.viewManager.baseTableMetadata.isCompound
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MIN_THRESHOLD
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CFMetadataInstance.partitioner.MINIMUM.serialVersionUID
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.executor.syncComplete.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.managerThreadWaitQueue.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.segmentPrepared.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == StorageService.instance.threadCounter
CFMetadataInstance.isCounter == CFMetadataInstance.isDense
CFMetadataInstance.isCounter == CFMetadataInstance.isIndex
CFMetadataInstance.isCounter == CFMetadataInstance.isSuper
CFMetadataInstance.isCounter == CFMetadataInstance.isView
CFMetadataInstance.isCounter == CFMetadataInstance.partitioner.partitionOrdering.isByteOrderComparable
CFMetadataInstance.isCounter == CommitLog.instance.executor.shutdown
CFMetadataInstance.isCounter == CommitLog.instance.segmentManager.shutdown
CFMetadataInstance.isCounter == StorageService.instance.allowSimultaneousMoves
CFMetadataInstance.isCounter == StorageService.instance.authSetupCalled
CFMetadataInstance.isCounter == StorageService.instance.authSetupComplete
CFMetadataInstance.isCounter == StorageService.instance.gossipActive
CFMetadataInstance.isCounter == StorageService.instance.initialized
CFMetadataInstance.isCounter == StorageService.instance.isBootstrapMode
CFMetadataInstance.isCounter == StorageService.instance.isDecommissioning
CFMetadataInstance.isCounter == StorageService.instance.isRebuilding
CFMetadataInstance.isCounter == StorageService.instance.isShutdown
CFMetadataInstance.isCounter == StorageService.instance.isSurveyMode
CFMetadataInstance.isCounter == StorageService.instance.joined
CFMetadataInstance.isCounter == StorageService.instance.replacing
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.compactionLogger.enabled
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.currentBoundaries.isInvalid
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.diskBoundaryManager.diskBoundaries.isInvalid
CFMetadataInstance.isCounter == cfsInstance.keyspace.TEST_FAIL_WRITES
CFMetadataInstance.isCounter == cfsInstance.keyspace.viewManager.enableCoordinatorBatchlog
CFMetadataInstance.isCounter == cfsInstance.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.metric.aliasFactory.isIndex
CFMetadataInstance.isCounter == cfsInstance.metric.factory.isIndex
CFMetadataInstance.isCounter == cfsInstance.readOrdering.current.isBlocking
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isDense
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isView
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.executor.syncComplete.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.bufferPool.usedBuffers
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.managerThreadWaitQueue.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.segmentPrepared.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == QueryProcessor.instance.lastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.statics.complexIdx == QueryProcessor.instance.thriftLastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.legacyProgressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.nextRepairCommand
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.progressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.remainingCFs
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.tokenMetadata.ringVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.totalCFs
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.compactionLogger.identifier
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.currentBoundaries.directoriesVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.diskBoundaryManager.diskBoundaries.ringVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.keyspace.TEST_FAIL_MV_LOCKS_COUNT
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.keyspace.replicationStrategy.lastInvalidatedVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.readOrdering.current.running
CFMetadataInstance.partitionColumns.statics.complexIdx == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.HEAP_SIZE == StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.HEAP_SIZE == StorageService.instance.valueFactory.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.HEAP_SIZE == cfsInstance.metadata.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.MAXIMUM == StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CFMetadataInstance.partitioner.MAXIMUM == StorageService.instance.valueFactory.partitioner.MAXIMUM
CFMetadataInstance.partitioner.MAXIMUM == cfsInstance.metadata.partitioner.MAXIMUM
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == CommitLog.instance.configuration.encryptionContext.chunkLength
CommitLog.instance.executor.markerIntervalNanos == CommitLog.instance.executor.syncIntervalNanos
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.managerThreadWaitQueue.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.segmentPrepared.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.keyspace.writeOrder.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.readOrdering.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)-1
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == CommitLog.instance.segmentManager.availableSegment.ENTRY_OVERHEAD_SIZE
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == CommitLog.instance.segmentManager.availableSegment.SYNC_MARKER_SIZE
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.availableSegment.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.bufferPool.bufferSize
CommitLog.instance.segmentManager.allocatingFrom.idBase == CommitLog.instance.segmentManager.availableSegment.idBase
CommitLog.instance.segmentManager.allocatingFrom.nextId == CommitLog.instance.segmentManager.availableSegment.nextId
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == CommitLog.instance.segmentManager.availableSegment.replayLimitId
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == CommitLog.instance.segmentManager.availableSegment.lastSyncedOffset
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE == resultSetInstance.rows_FOR_ENCLOSING_USE
cfsInstance.compactionStrategyManager.isActive == cfsInstance.valid
CFMetadataInstance.allColumnFilter.isFetchAll == true
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK == 2
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == 4
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == 1
CFMetadataInstance.isCounter == false
CFMetadataInstance.partitionColumns.regulars.complexIdx == 1 || CFMetadataInstance.partitionColumns.regulars.complexIdx == 2
CFMetadataInstance.partitioner.HEAP_SIZE == 24
CFMetadataInstance.partitioner.MAXIMUM == 9223372036854775807L
CFMetadataInstance.partitioner.MINIMUM.token == -9223372036854775808L
CFMetadataInstance.resource.hash == 2144393070 || CFMetadataInstance.resource.hash == 2144393071
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == 65536
CommitLog.instance.MAX_MUTATION_SIZE == 2621440
CommitLog.instance.archiver.restorePointInTime == 4510987932000L
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS == 100
CommitLog.instance.executor.markerIntervalNanos == 1000000
CommitLog.instance.executor.pending == 0 || CommitLog.instance.executor.pending == 1
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == 12
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == 8
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == 5242880
CommitLog.instance.segmentManager.allocatingFrom.fd == 178 || CommitLog.instance.segmentManager.allocatingFrom.fd == 179 || CommitLog.instance.segmentManager.allocatingFrom.fd == 229
CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224481L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224482L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224483L
CommitLog.instance.segmentManager.allocatingFrom.idBase == 1731353224472L
CommitLog.instance.segmentManager.allocatingFrom.nextId == 11 || CommitLog.instance.segmentManager.allocatingFrom.nextId == 12 || CommitLog.instance.segmentManager.allocatingFrom.nextId == 13
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == 1731353224475L
CommitLog.instance.segmentManager.availableSegment.allocatePosition == 28
CommitLog.instance.segmentManager.availableSegment.fd == 178 || CommitLog.instance.segmentManager.availableSegment.fd == 179 || CommitLog.instance.segmentManager.availableSegment.fd == 202
CommitLog.instance.segmentManager.availableSegment.id == 1731353224482L || CommitLog.instance.segmentManager.availableSegment.id == 1731353224483L || CommitLog.instance.segmentManager.availableSegment.id == 1731353224484L
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == 20
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize == 3
CommitLog.instance.segmentManager.size == 10485760 || CommitLog.instance.segmentManager.size == 15728640
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
("oneOf.java.jpp: SEQUENCE unimplemented" != null)
StorageService.instance.RING_DELAY == 30000
daikon.Quant.fuzzy.eq(StorageService.instance.traceProbability, 0.0)
cfsInstance.compactionStrategyManager.fanout == 10
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD == 32
cfsInstance.fileIndexGenerator == 0 || cfsInstance.fileIndexGenerator == 1 || cfsInstance.fileIndexGenerator == 2
cfsInstance.indexManager.DEFAULT_PAGE_SIZE == 10000
cfsInstance.metadata.resource.hash == 2144393070 || cfsInstance.metadata.resource.hash == 2144393071
cfsInstance.readOrdering.current.id >= 0
cfsInstance.sampleLatencyNanos == 2500000000L
resultSetInstance.metadata.columnCount >= 1
daikon.Quant.eltsNotEqual(resultSetInstance.rows_FOR_ENCLOSING_USE, null)
daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) == 0 || daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) == 1 || daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) == 3
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK >= CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.size
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK >= cfsInstance.fileIndexGenerator
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != resultSetInstance.metadata.columnCount
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.size
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > cfsInstance.fileIndexGenerator
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > cfsInstance.readOrdering.current.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK <= CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK >= CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.size
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK <= resultSetInstance.metadata.columnCount
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.partitionColumns.regulars.complexIdx > CFMetadataInstance.partitionColumns.statics.complexIdx
CFMetadataInstance.partitionColumns.regulars.complexIdx < CFMetadataInstance.partitioner.HEAP_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CFMetadataInstance.partitioner.MAXIMUM
CFMetadataInstance.partitionColumns.regulars.complexIdx > CFMetadataInstance.partitioner.MINIMUM.token
CFMetadataInstance.partitionColumns.regulars.complexIdx < CFMetadataInstance.resource.hash
CFMetadataInstance.partitionColumns.regulars.complexIdx < CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.MAX_MUTATION_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.archiver.restorePointInTime
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.markerIntervalNanos
CFMetadataInstance.partitionColumns.regulars.complexIdx >= CommitLog.instance.executor.pending
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.written
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.idBase
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitionColumns.regulars.complexIdx < StorageService.instance.RING_DELAY
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.compactionStrategyManager.fanout
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.metadata.resource.hash
CFMetadataInstance.partitionColumns.regulars.complexIdx != cfsInstance.readOrdering.current.id
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.sampleLatencyNanos
CFMetadataInstance.partitionColumns.regulars.complexIdx >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.partitionColumns.statics.complexIdx < CFMetadataInstance.resource.hash
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitionColumns.statics.complexIdx <= CommitLog.instance.executor.pending
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.written
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitionColumns.statics.complexIdx <= cfsInstance.fileIndexGenerator
CFMetadataInstance.partitionColumns.statics.complexIdx < cfsInstance.metadata.resource.hash
CFMetadataInstance.partitionColumns.statics.complexIdx <= cfsInstance.readOrdering.current.id
CFMetadataInstance.partitionColumns.statics.complexIdx < resultSetInstance.metadata.columnCount
CFMetadataInstance.partitionColumns.statics.complexIdx <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.HEAP_SIZE < CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.HEAP_SIZE > CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.executor.written
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.HEAP_SIZE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.HEAP_SIZE > cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.HEAP_SIZE < cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.HEAP_SIZE > cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.HEAP_SIZE > resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.HEAP_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.MAXIMUM > CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.written
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.MAXIMUM > resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.MAXIMUM > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.MINIMUM.token < CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.written
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.MINIMUM.token < resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.MINIMUM.token < daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.resource.hash > CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE
CFMetadataInstance.resource.hash > CommitLog.instance.MAX_MUTATION_SIZE
CFMetadataInstance.resource.hash < CommitLog.instance.archiver.restorePointInTime
CFMetadataInstance.resource.hash > CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS
CFMetadataInstance.resource.hash < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.resource.hash > CommitLog.instance.executor.markerIntervalNanos
CFMetadataInstance.resource.hash > CommitLog.instance.executor.pending
CFMetadataInstance.resource.hash > CommitLog.instance.executor.written
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.idBase
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.size
CFMetadataInstance.resource.hash > StorageService.instance.RING_DELAY
CFMetadataInstance.resource.hash > cfsInstance.compactionStrategyManager.fanout
CFMetadataInstance.resource.hash > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CFMetadataInstance.resource.hash > cfsInstance.fileIndexGenerator
CFMetadataInstance.resource.hash > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CFMetadataInstance.resource.hash >= cfsInstance.metadata.resource.hash
CFMetadataInstance.resource.hash > cfsInstance.readOrdering.current.id
CFMetadataInstance.resource.hash < cfsInstance.sampleLatencyNanos
CFMetadataInstance.resource.hash > resultSetInstance.metadata.columnCount
CFMetadataInstance.resource.hash > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.executor.pending
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.executor.written
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.size
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > cfsInstance.fileIndexGenerator
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < cfsInstance.metadata.resource.hash
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > cfsInstance.readOrdering.current.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > resultSetInstance.metadata.columnCount
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.executor.pending
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.executor.written
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.size
CommitLog.instance.MAX_MUTATION_SIZE > cfsInstance.fileIndexGenerator
CommitLog.instance.MAX_MUTATION_SIZE < cfsInstance.metadata.resource.hash
CommitLog.instance.MAX_MUTATION_SIZE > cfsInstance.readOrdering.current.id
CommitLog.instance.MAX_MUTATION_SIZE > resultSetInstance.metadata.columnCount
CommitLog.instance.MAX_MUTATION_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.archiver.restorePointInTime < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.executor.pending
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.executor.written
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.size
CommitLog.instance.archiver.restorePointInTime > cfsInstance.fileIndexGenerator
CommitLog.instance.archiver.restorePointInTime > cfsInstance.metadata.resource.hash
CommitLog.instance.archiver.restorePointInTime > cfsInstance.readOrdering.current.id
CommitLog.instance.archiver.restorePointInTime % resultSetInstance.metadata.columnCount == 0
CommitLog.instance.archiver.restorePointInTime > resultSetInstance.metadata.columnCount
CommitLog.instance.archiver.restorePointInTime > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > CommitLog.instance.executor.pending
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < cfsInstance.metadata.resource.hash
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.markerIntervalNanos
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.pending
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.written
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.size
CommitLog.instance.executor.lastSyncedAt > StorageService.instance.RING_DELAY
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.lastSyncedAt > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.lastSyncedAt > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.lastSyncedAt > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.lastSyncedAt > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.lastSyncedAt > cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.lastSyncedAt > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.lastSyncedAt > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.executor.pending
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.executor.written
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.markerIntervalNanos > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.markerIntervalNanos < cfsInstance.metadata.resource.hash
CommitLog.instance.executor.markerIntervalNanos > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.markerIntervalNanos > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.markerIntervalNanos > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.pending < CommitLog.instance.executor.written
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.pending < StorageService.instance.RING_DELAY
CommitLog.instance.executor.pending < cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.pending < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.pending <= cfsInstance.fileIndexGenerator
CommitLog.instance.executor.pending < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.pending < cfsInstance.metadata.resource.hash
CommitLog.instance.executor.pending <= cfsInstance.readOrdering.current.id
CommitLog.instance.executor.pending < cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.pending <= resultSetInstance.metadata.columnCount
CommitLog.instance.executor.syncComplete.CANCELLED <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.written < StorageService.instance.RING_DELAY
CommitLog.instance.executor.written > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.written > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.written > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.written < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.written < cfsInstance.metadata.resource.hash
CommitLog.instance.executor.written > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.written < cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.written > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.written > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE != resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 8 == 0
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.fd != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.fd < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.fd < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.fd < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.fd < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.fd > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.fd > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.id < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.id > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.id > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.id > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.idBase < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.idBase > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.idBase > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset >= CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.nextId > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.nextId < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.nextId != resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.nextId > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.allocatePosition > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.allocatePosition < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.allocatePosition > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.allocatePosition > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.allocatePosition > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.fd < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.availableSegment.fd > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.availableSegment.fd > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.availableSegment.fd < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.fd < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.fd < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.availableSegment.fd < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.fd < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.availableSegment.fd > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.fd > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.id > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.availableSegment.id > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.id > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset >= resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize >= cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.size > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.size > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.size > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.size > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.size > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.size < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.size > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.size < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.size > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.size > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
daikon.Quant.subsetOf(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE, resultSetInstance.rows_FOR_ENCLOSING_USE)
StorageService.instance.RING_DELAY > cfsInstance.fileIndexGenerator
StorageService.instance.RING_DELAY < cfsInstance.metadata.resource.hash
StorageService.instance.RING_DELAY > cfsInstance.readOrdering.current.id
StorageService.instance.RING_DELAY % resultSetInstance.metadata.columnCount == 0
StorageService.instance.RING_DELAY > resultSetInstance.metadata.columnCount
StorageService.instance.RING_DELAY > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.compactionStrategyManager.fanout > cfsInstance.fileIndexGenerator
cfsInstance.compactionStrategyManager.fanout < cfsInstance.metadata.resource.hash
cfsInstance.compactionStrategyManager.fanout > cfsInstance.readOrdering.current.id
cfsInstance.compactionStrategyManager.fanout != resultSetInstance.metadata.columnCount
cfsInstance.compactionStrategyManager.fanout > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > cfsInstance.fileIndexGenerator
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD < cfsInstance.metadata.resource.hash
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > cfsInstance.readOrdering.current.id
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > resultSetInstance.metadata.columnCount
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.fileIndexGenerator < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
cfsInstance.fileIndexGenerator < cfsInstance.metadata.resource.hash
cfsInstance.fileIndexGenerator < cfsInstance.sampleLatencyNanos
cfsInstance.indexManager.DEFAULT_PAGE_SIZE < cfsInstance.metadata.resource.hash
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > cfsInstance.readOrdering.current.id
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > resultSetInstance.metadata.columnCount
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.metadata.resource.hash > cfsInstance.readOrdering.current.id
cfsInstance.metadata.resource.hash < cfsInstance.sampleLatencyNanos
cfsInstance.metadata.resource.hash > resultSetInstance.metadata.columnCount
cfsInstance.metadata.resource.hash > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.readOrdering.current.id < cfsInstance.sampleLatencyNanos
cfsInstance.readOrdering.current.id != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
cfsInstance.sampleLatencyNanos > resultSetInstance.metadata.columnCount
cfsInstance.sampleLatencyNanos > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
resultSetInstance.metadata.columnCount >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitionColumns.regulars.complexIdx + CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.id + 1.73135322448E12 == 0
CFMetadataInstance.partitionColumns.regulars.complexIdx + CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.availableSegment.id + 1.731353224481E12 == 0
CFMetadataInstance.partitionColumns.regulars.complexIdx - CommitLog.instance.segmentManager.allocatingFrom.nextId + cfsInstance.metadata.resource.hash - 2144393060 == 0
51 * CFMetadataInstance.resource.hash + 51 * CommitLog.instance.executor.pending + CommitLog.instance.segmentManager.allocatingFrom.fd - 1.09364046799E11 == 0
CFMetadataInstance.resource.hash + CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.id + 1.729208831411E12 == 0
CFMetadataInstance.resource.hash + CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.nextId - 2144393059 == 0
CFMetadataInstance.resource.hash + CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.availableSegment.fd - 2144392892 == 0
CFMetadataInstance.resource.hash + CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.availableSegment.id + 1.729208831412E12 == 0
CFMetadataInstance.resource.hash + CommitLog.instance.executor.pending - cfsInstance.readOrdering.current.id - 2144393068 == 0
CFMetadataInstance.resource.hash + CommitLog.instance.executor.pending + daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 2144393071 == 0
267386880 * CFMetadataInstance.resource.hash + 5242880 * CommitLog.instance.segmentManager.allocatingFrom.fd - CommitLog.instance.segmentManager.size - 5.7338257367105536E17 == 0
CFMetadataInstance.resource.hash - CommitLog.instance.segmentManager.allocatingFrom.nextId + cfsInstance.metadata.resource.hash - 4.288786129E9 == 0
2 * CommitLog.instance.executor.lastSyncedAt - 59506425 * resultSetInstance.metadata.columnCount + 481006666 * daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.78707059219029E14 == 0
2 * CommitLog.instance.executor.lastSyncedAt - 59506425 * resultSetInstance.metadata.columnCount + 481006666 * daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1 - 1.78706578212363E14 == 0
51 * CommitLog.instance.executor.pending + CommitLog.instance.segmentManager.allocatingFrom.fd + 51 * cfsInstance.metadata.resource.hash - 1.09364046799E11 == 0
2 * CommitLog.instance.executor.pending - 2 * CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.fileIndexGenerator + 3.462706448964E12 == 0
3 * CommitLog.instance.executor.pending - 3 * CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.readOrdering.current.id + 5.194059673446E12 == 0
CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.nextId + cfsInstance.metadata.resource.hash - 2144393059 == 0
CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.availableSegment.fd + cfsInstance.metadata.resource.hash - 2144392892 == 0
2 * CommitLog.instance.executor.pending - 2 * CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.fileIndexGenerator + 3.462706448966E12 == 0
3 * CommitLog.instance.executor.pending - 3 * CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.readOrdering.current.id + 5.194059673449E12 == 0
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 94 * CommitLog.instance.segmentManager.allocatingFrom.id - CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset + 1.62747203101206E14 == 0
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 94 * CommitLog.instance.segmentManager.availableSegment.id + 1.627472031013E14 == 0
5242880 * CommitLog.instance.segmentManager.allocatingFrom.fd - CommitLog.instance.segmentManager.size + 267386880 * cfsInstance.metadata.resource.hash - 5.7338257367105536E17 == 0
47 * CommitLog.instance.segmentManager.allocatingFrom.id - 3 * CommitLog.instance.segmentManager.availableSegment.fd + 22 * cfsInstance.fileIndexGenerator - 8.1373601550117E13 == 0
CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.fileIndexGenerator - 3 * cfsInstance.metadata.resource.hash - 1.724920045269E12 == 0
CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.readOrdering.current.id - daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224478E12 == 0
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 94 * CommitLog.instance.segmentManager.availableSegment.id + 1.62747203101308E14 == 0
CommitLog.instance.segmentManager.allocatingFrom.nextId - cfsInstance.fileIndexGenerator - 3 * cfsInstance.metadata.resource.hash + 6.433179201E9 == 0
3 * CommitLog.instance.segmentManager.availableSegment.fd - 47 * CommitLog.instance.segmentManager.availableSegment.id - 22 * cfsInstance.fileIndexGenerator + 8.1373601550164E13 == 0
CommitLog.instance.segmentManager.availableSegment.fd - 23 * cfsInstance.fileIndexGenerator - 47 * cfsInstance.metadata.resource.hash + 1.00786474158E11 == 0
CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.fileIndexGenerator - 3 * cfsInstance.metadata.resource.hash - 1.72492004527E12 == 0
CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.readOrdering.current.id - daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224479E12 == 0
===========================================================================
org.apache.cassandra.cql3.validation.entities.UFSecurityTest@testAmokUDF-54916894:::dump
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.allocatingFrom.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.availableSegment.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.joinRing
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.useStrictConsistency
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionSpaceCheck
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.enabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.isActive
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.partitionSSTablesByTokenRange
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_ENABLED
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.isEnabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.shouldDefragment
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.supportsEarlyOpen
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.data.loadsstables
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.directories.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.keyspace.initialized
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.allColumnFilter.isFetchAll
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.valid
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.viewManager.baseTableMetadata.isCompound
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MIN_THRESHOLD
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CFMetadataInstance.partitioner.MINIMUM.serialVersionUID
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.executor.syncComplete.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.managerThreadWaitQueue.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.segmentPrepared.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == StorageService.instance.threadCounter
CFMetadataInstance.isCounter == CFMetadataInstance.isDense
CFMetadataInstance.isCounter == CFMetadataInstance.isIndex
CFMetadataInstance.isCounter == CFMetadataInstance.isSuper
CFMetadataInstance.isCounter == CFMetadataInstance.isView
CFMetadataInstance.isCounter == CFMetadataInstance.keyValidator.isByteOrderComparable
CFMetadataInstance.isCounter == CFMetadataInstance.partitioner.partitionOrdering.isByteOrderComparable
CFMetadataInstance.isCounter == CommitLog.instance.executor.shutdown
CFMetadataInstance.isCounter == CommitLog.instance.executor.syncRequested
CFMetadataInstance.isCounter == CommitLog.instance.segmentManager.shutdown
CFMetadataInstance.isCounter == StorageService.instance.allowSimultaneousMoves
CFMetadataInstance.isCounter == StorageService.instance.authSetupCalled
CFMetadataInstance.isCounter == StorageService.instance.authSetupComplete
CFMetadataInstance.isCounter == StorageService.instance.gossipActive
CFMetadataInstance.isCounter == StorageService.instance.initialized
CFMetadataInstance.isCounter == StorageService.instance.isBootstrapMode
CFMetadataInstance.isCounter == StorageService.instance.isDecommissioning
CFMetadataInstance.isCounter == StorageService.instance.isRebuilding
CFMetadataInstance.isCounter == StorageService.instance.isShutdown
CFMetadataInstance.isCounter == StorageService.instance.isSurveyMode
CFMetadataInstance.isCounter == StorageService.instance.joined
CFMetadataInstance.isCounter == StorageService.instance.replacing
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.compactionLogger.enabled
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.currentBoundaries.isInvalid
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.diskBoundaryManager.diskBoundaries.isInvalid
CFMetadataInstance.isCounter == cfsInstance.keyspace.TEST_FAIL_WRITES
CFMetadataInstance.isCounter == cfsInstance.keyspace.viewManager.enableCoordinatorBatchlog
CFMetadataInstance.isCounter == cfsInstance.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.metric.aliasFactory.isIndex
CFMetadataInstance.isCounter == cfsInstance.metric.factory.isIndex
CFMetadataInstance.isCounter == cfsInstance.readOrdering.current.isBlocking
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isDense
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isView
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.executor.syncComplete.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.bufferPool.usedBuffers
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.managerThreadWaitQueue.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.segmentPrepared.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == QueryProcessor.instance.lastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.statics.complexIdx == QueryProcessor.instance.thriftLastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.legacyProgressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.nextRepairCommand
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.progressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.remainingCFs
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.tokenMetadata.ringVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.totalCFs
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.compactionLogger.identifier
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.currentBoundaries.directoriesVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.diskBoundaryManager.diskBoundaries.ringVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.keyspace.TEST_FAIL_MV_LOCKS_COUNT
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.keyspace.replicationStrategy.lastInvalidatedVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.HEAP_SIZE == StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.HEAP_SIZE == StorageService.instance.valueFactory.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.HEAP_SIZE == cfsInstance.metadata.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.MAXIMUM == StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CFMetadataInstance.partitioner.MAXIMUM == StorageService.instance.valueFactory.partitioner.MAXIMUM
CFMetadataInstance.partitioner.MAXIMUM == cfsInstance.metadata.partitioner.MAXIMUM
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == CommitLog.instance.configuration.encryptionContext.chunkLength
CommitLog.instance.executor.markerIntervalNanos == CommitLog.instance.executor.syncIntervalNanos
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.managerThreadWaitQueue.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.segmentPrepared.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.keyspace.writeOrder.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.readOrdering.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)-1
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == CommitLog.instance.segmentManager.availableSegment.ENTRY_OVERHEAD_SIZE
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == CommitLog.instance.segmentManager.availableSegment.SYNC_MARKER_SIZE
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.availableSegment.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.bufferPool.bufferSize
CommitLog.instance.segmentManager.allocatingFrom.idBase == CommitLog.instance.segmentManager.availableSegment.idBase
CommitLog.instance.segmentManager.allocatingFrom.nextId == CommitLog.instance.segmentManager.availableSegment.nextId
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == CommitLog.instance.segmentManager.availableSegment.replayLimitId
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == CommitLog.instance.segmentManager.availableSegment.lastSyncedOffset
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE == resultSetInstance.rows_FOR_ENCLOSING_USE
CFMetadataInstance.allColumnFilter.isFetchAll == true
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK == 2
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == 4
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == 1
CFMetadataInstance.isCounter == false
CFMetadataInstance.partitioner.HEAP_SIZE == 24
CFMetadataInstance.partitioner.MAXIMUM == 9223372036854775807L
CFMetadataInstance.partitioner.MINIMUM.token == -9223372036854775808L
CFMetadataInstance.resource.hash == -1436612841 || CFMetadataInstance.resource.hash == -779129010
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == 65536
CommitLog.instance.MAX_MUTATION_SIZE == 2621440
CommitLog.instance.archiver.restorePointInTime == 4510987932000L
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS == 100
CommitLog.instance.executor.markerIntervalNanos == 1000000
CommitLog.instance.executor.pending == 0 || CommitLog.instance.executor.pending == 1
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == 12
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == 8
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == 5242880
CommitLog.instance.segmentManager.allocatingFrom.fd == 178 || CommitLog.instance.segmentManager.allocatingFrom.fd == 183 || CommitLog.instance.segmentManager.allocatingFrom.fd == 211
CommitLog.instance.segmentManager.allocatingFrom.id == 1731353002759L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353002760L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353002761L
CommitLog.instance.segmentManager.allocatingFrom.idBase == 1731353002754L
CommitLog.instance.segmentManager.allocatingFrom.nextId == 7 || CommitLog.instance.segmentManager.allocatingFrom.nextId == 8 || CommitLog.instance.segmentManager.allocatingFrom.nextId == 9
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == 1731353002757L
CommitLog.instance.segmentManager.availableSegment.allocatePosition == 28
CommitLog.instance.segmentManager.availableSegment.fd == 180 || CommitLog.instance.segmentManager.availableSegment.fd == 183 || CommitLog.instance.segmentManager.availableSegment.fd == 211
CommitLog.instance.segmentManager.availableSegment.id == 1731353002760L || CommitLog.instance.segmentManager.availableSegment.id == 1731353002761L || CommitLog.instance.segmentManager.availableSegment.id == 1731353002762L
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == 20
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize == 3
CommitLog.instance.segmentManager.size == 10485760 || CommitLog.instance.segmentManager.size == 15728640
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
("oneOf.java.jpp: SEQUENCE unimplemented" != null)
StorageService.instance.RING_DELAY == 30000
daikon.Quant.fuzzy.eq(StorageService.instance.traceProbability, 0.0)
cfsInstance.compactionStrategyManager.fanout == 10
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD == 32
cfsInstance.fileIndexGenerator == 0 || cfsInstance.fileIndexGenerator == 1
cfsInstance.indexManager.DEFAULT_PAGE_SIZE == 10000
cfsInstance.metadata.resource.hash == -900852050 || cfsInstance.metadata.resource.hash == -779129010
cfsInstance.readOrdering.current.id == 0 || cfsInstance.readOrdering.current.id == 1
cfsInstance.readOrdering.current.running == 0 || cfsInstance.readOrdering.current.running == 1
cfsInstance.sampleLatencyNanos == 0 || cfsInstance.sampleLatencyNanos == 2500000000L
resultSetInstance.metadata.columnCount >= 1
daikon.Quant.eltsNotEqual(resultSetInstance.rows_FOR_ENCLOSING_USE, null)
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.size
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > cfsInstance.fileIndexGenerator
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > cfsInstance.readOrdering.current.id
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > cfsInstance.readOrdering.current.running
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != cfsInstance.sampleLatencyNanos
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != resultSetInstance.metadata.columnCount
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.size
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > cfsInstance.fileIndexGenerator
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > cfsInstance.readOrdering.current.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > cfsInstance.readOrdering.current.running
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK != cfsInstance.sampleLatencyNanos
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK > CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK >= CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.size
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK >= cfsInstance.fileIndexGenerator
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK > cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK >= cfsInstance.readOrdering.current.id
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK >= cfsInstance.readOrdering.current.running
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK != cfsInstance.sampleLatencyNanos
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK <= resultSetInstance.metadata.columnCount
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitionColumns.statics.complexIdx <= CommitLog.instance.executor.pending
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.written
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitionColumns.statics.complexIdx <= cfsInstance.fileIndexGenerator
CFMetadataInstance.partitionColumns.statics.complexIdx <= cfsInstance.readOrdering.current.id
CFMetadataInstance.partitionColumns.statics.complexIdx <= cfsInstance.readOrdering.current.running
CFMetadataInstance.partitionColumns.statics.complexIdx <= cfsInstance.sampleLatencyNanos
CFMetadataInstance.partitionColumns.statics.complexIdx < resultSetInstance.metadata.columnCount
CFMetadataInstance.partitionColumns.statics.complexIdx <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.HEAP_SIZE > CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.HEAP_SIZE > CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.executor.written
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.HEAP_SIZE != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.HEAP_SIZE != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.HEAP_SIZE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.HEAP_SIZE > cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.HEAP_SIZE > cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.HEAP_SIZE > cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.HEAP_SIZE > cfsInstance.readOrdering.current.running
CFMetadataInstance.partitioner.HEAP_SIZE != cfsInstance.sampleLatencyNanos
CFMetadataInstance.partitioner.HEAP_SIZE > resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.HEAP_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.MAXIMUM > CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.written
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.readOrdering.current.running
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.sampleLatencyNanos
CFMetadataInstance.partitioner.MAXIMUM > resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.MAXIMUM > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.MINIMUM.token < CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.written
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.readOrdering.current.running
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.sampleLatencyNanos
CFMetadataInstance.partitioner.MINIMUM.token < resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.MINIMUM.token < daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.resource.hash < CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE
CFMetadataInstance.resource.hash < CommitLog.instance.MAX_MUTATION_SIZE
CFMetadataInstance.resource.hash < CommitLog.instance.archiver.restorePointInTime
CFMetadataInstance.resource.hash < CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS
CFMetadataInstance.resource.hash < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.resource.hash < CommitLog.instance.executor.markerIntervalNanos
CFMetadataInstance.resource.hash < CommitLog.instance.executor.pending
CFMetadataInstance.resource.hash < CommitLog.instance.executor.syncComplete.CANCELLED
CFMetadataInstance.resource.hash < CommitLog.instance.executor.written
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.idBase
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.size
CFMetadataInstance.resource.hash < StorageService.instance.RING_DELAY
CFMetadataInstance.resource.hash < cfsInstance.compactionStrategyManager.fanout
CFMetadataInstance.resource.hash < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CFMetadataInstance.resource.hash < cfsInstance.fileIndexGenerator
CFMetadataInstance.resource.hash < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CFMetadataInstance.resource.hash < cfsInstance.readOrdering.current.id
CFMetadataInstance.resource.hash < cfsInstance.readOrdering.current.running
CFMetadataInstance.resource.hash < cfsInstance.sampleLatencyNanos
CFMetadataInstance.resource.hash < resultSetInstance.metadata.columnCount
CFMetadataInstance.resource.hash < daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.executor.pending
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.executor.written
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.size
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > cfsInstance.fileIndexGenerator
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > cfsInstance.metadata.resource.hash
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > cfsInstance.readOrdering.current.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > cfsInstance.readOrdering.current.running
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE != cfsInstance.sampleLatencyNanos
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > resultSetInstance.metadata.columnCount
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.executor.pending
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.executor.written
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.size
CommitLog.instance.MAX_MUTATION_SIZE > cfsInstance.fileIndexGenerator
CommitLog.instance.MAX_MUTATION_SIZE > cfsInstance.metadata.resource.hash
CommitLog.instance.MAX_MUTATION_SIZE > cfsInstance.readOrdering.current.id
CommitLog.instance.MAX_MUTATION_SIZE > cfsInstance.readOrdering.current.running
CommitLog.instance.MAX_MUTATION_SIZE != cfsInstance.sampleLatencyNanos
CommitLog.instance.MAX_MUTATION_SIZE > resultSetInstance.metadata.columnCount
CommitLog.instance.MAX_MUTATION_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.archiver.restorePointInTime < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.executor.pending
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.executor.written
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.size
CommitLog.instance.archiver.restorePointInTime > cfsInstance.fileIndexGenerator
CommitLog.instance.archiver.restorePointInTime > cfsInstance.metadata.resource.hash
CommitLog.instance.archiver.restorePointInTime > cfsInstance.readOrdering.current.id
CommitLog.instance.archiver.restorePointInTime > cfsInstance.readOrdering.current.running
CommitLog.instance.archiver.restorePointInTime > cfsInstance.sampleLatencyNanos
CommitLog.instance.archiver.restorePointInTime % resultSetInstance.metadata.columnCount == 0
CommitLog.instance.archiver.restorePointInTime > resultSetInstance.metadata.columnCount
CommitLog.instance.archiver.restorePointInTime > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > CommitLog.instance.executor.pending
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS != CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > cfsInstance.readOrdering.current.running
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS != cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.markerIntervalNanos
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.pending
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.written
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.size
CommitLog.instance.executor.lastSyncedAt > StorageService.instance.RING_DELAY
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.lastSyncedAt > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.lastSyncedAt > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.lastSyncedAt > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.lastSyncedAt > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.lastSyncedAt > cfsInstance.readOrdering.current.running
CommitLog.instance.executor.lastSyncedAt > cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.lastSyncedAt > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.lastSyncedAt > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.executor.pending
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.executor.written
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.markerIntervalNanos > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.markerIntervalNanos > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.markerIntervalNanos > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.markerIntervalNanos > cfsInstance.readOrdering.current.running
CommitLog.instance.executor.markerIntervalNanos != cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.markerIntervalNanos > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.markerIntervalNanos > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.pending < CommitLog.instance.executor.written
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.pending < StorageService.instance.RING_DELAY
CommitLog.instance.executor.pending < cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.pending < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.pending < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.pending > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.pending <= resultSetInstance.metadata.columnCount
CommitLog.instance.executor.syncComplete.CANCELLED > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.syncComplete.CANCELLED <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.written != CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.written != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.written != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.written < StorageService.instance.RING_DELAY
CommitLog.instance.executor.written > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.written > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.written > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.written < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.written > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.written > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.written > cfsInstance.readOrdering.current.running
CommitLog.instance.executor.written != cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.written > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.written > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > cfsInstance.readOrdering.current.running
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE != resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > cfsInstance.readOrdering.current.running
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 8 == 0
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition >= CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.readOrdering.current.running
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > cfsInstance.readOrdering.current.running
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.fd != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.fd != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.fd != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.fd < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.fd < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.readOrdering.current.running
CommitLog.instance.segmentManager.allocatingFrom.fd != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.fd > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.fd > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.id < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.id > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.readOrdering.current.running
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.id > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.id > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.idBase < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.readOrdering.current.running
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.idBase > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.idBase > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset >= CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset >= CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.readOrdering.current.running
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset >= CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.readOrdering.current.running
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.nextId > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.nextId < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.readOrdering.current.running
CommitLog.instance.segmentManager.allocatingFrom.nextId != cfsInstance.sampleLatencyNanos
cfsInstance.sampleLatencyNanos % CommitLog.instance.segmentManager.allocatingFrom.nextId == 0
CommitLog.instance.segmentManager.allocatingFrom.nextId > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.readOrdering.current.running
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.allocatePosition > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.allocatePosition > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.allocatePosition > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.allocatePosition > cfsInstance.readOrdering.current.running
CommitLog.instance.segmentManager.availableSegment.allocatePosition != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.availableSegment.allocatePosition > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.allocatePosition > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.fd < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.availableSegment.fd > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.availableSegment.fd > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.availableSegment.fd < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.fd < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.fd < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.readOrdering.current.running
CommitLog.instance.segmentManager.availableSegment.fd != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.availableSegment.fd > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.fd > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.id > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.readOrdering.current.running
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.availableSegment.id > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.id > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > cfsInstance.readOrdering.current.running
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset >= resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize > cfsInstance.readOrdering.current.running
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.size > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.size > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.size > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.size > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.size > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.size > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.size > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.size > cfsInstance.readOrdering.current.running
CommitLog.instance.segmentManager.size != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.size > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.size > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
daikon.Quant.subsetOf(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE, resultSetInstance.rows_FOR_ENCLOSING_USE)
StorageService.instance.RING_DELAY > cfsInstance.fileIndexGenerator
StorageService.instance.RING_DELAY > cfsInstance.metadata.resource.hash
StorageService.instance.RING_DELAY > cfsInstance.readOrdering.current.id
StorageService.instance.RING_DELAY > cfsInstance.readOrdering.current.running
StorageService.instance.RING_DELAY != cfsInstance.sampleLatencyNanos
StorageService.instance.RING_DELAY % resultSetInstance.metadata.columnCount == 0
StorageService.instance.RING_DELAY > resultSetInstance.metadata.columnCount
StorageService.instance.RING_DELAY > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.compactionStrategyManager.fanout > cfsInstance.fileIndexGenerator
cfsInstance.compactionStrategyManager.fanout > cfsInstance.metadata.resource.hash
cfsInstance.compactionStrategyManager.fanout > cfsInstance.readOrdering.current.id
cfsInstance.compactionStrategyManager.fanout > cfsInstance.readOrdering.current.running
cfsInstance.compactionStrategyManager.fanout != cfsInstance.sampleLatencyNanos
cfsInstance.compactionStrategyManager.fanout != resultSetInstance.metadata.columnCount
cfsInstance.compactionStrategyManager.fanout > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > cfsInstance.fileIndexGenerator
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > cfsInstance.metadata.resource.hash
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > cfsInstance.readOrdering.current.id
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > cfsInstance.readOrdering.current.running
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD != cfsInstance.sampleLatencyNanos
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > resultSetInstance.metadata.columnCount
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.fileIndexGenerator < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
cfsInstance.fileIndexGenerator > cfsInstance.metadata.resource.hash
cfsInstance.fileIndexGenerator >= cfsInstance.readOrdering.current.id
cfsInstance.fileIndexGenerator < resultSetInstance.metadata.columnCount
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > cfsInstance.metadata.resource.hash
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > cfsInstance.readOrdering.current.id
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > cfsInstance.readOrdering.current.running
cfsInstance.indexManager.DEFAULT_PAGE_SIZE != cfsInstance.sampleLatencyNanos
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > resultSetInstance.metadata.columnCount
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.metadata.resource.hash < cfsInstance.readOrdering.current.id
cfsInstance.metadata.resource.hash < cfsInstance.readOrdering.current.running
cfsInstance.metadata.resource.hash < cfsInstance.sampleLatencyNanos
cfsInstance.metadata.resource.hash < resultSetInstance.metadata.columnCount
cfsInstance.metadata.resource.hash < daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
cfsInstance.readOrdering.current.id < resultSetInstance.metadata.columnCount
cfsInstance.readOrdering.current.running <= cfsInstance.sampleLatencyNanos
cfsInstance.readOrdering.current.running % resultSetInstance.metadata.columnCount == 0
cfsInstance.readOrdering.current.running <= resultSetInstance.metadata.columnCount
cfsInstance.sampleLatencyNanos != resultSetInstance.metadata.columnCount
resultSetInstance.metadata.columnCount >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 90 * CommitLog.instance.segmentManager.allocatingFrom.id - CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset + 1.55821770248302E14 == 0
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 90 * CommitLog.instance.segmentManager.availableSegment.id + 1.55821770248392E14 == 0
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 90 * CommitLog.instance.segmentManager.availableSegment.id + 1.558217702484E14 == 0
===========================================================================
org.apache.cassandra.cql3.validation.entities.UFSecurityTest@testSecurityPermissions-54916894:::dump
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.allocatingFrom.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.availableSegment.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.joinRing
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.useStrictConsistency
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionSpaceCheck
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.enabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.isActive
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.partitionSSTablesByTokenRange
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_ENABLED
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.isEnabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.shouldDefragment
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.supportsEarlyOpen
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.data.loadsstables
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.directories.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.keyspace.initialized
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.allColumnFilter.isFetchAll
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.valid
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.viewManager.baseTableMetadata.isCompound
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MIN_THRESHOLD
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CFMetadataInstance.partitioner.MINIMUM.serialVersionUID
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.executor.syncComplete.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.managerThreadWaitQueue.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.segmentPrepared.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == StorageService.instance.threadCounter
CFMetadataInstance.isCounter == CFMetadataInstance.isDense
CFMetadataInstance.isCounter == CFMetadataInstance.isIndex
CFMetadataInstance.isCounter == CFMetadataInstance.isSuper
CFMetadataInstance.isCounter == CFMetadataInstance.isView
CFMetadataInstance.isCounter == CFMetadataInstance.partitioner.partitionOrdering.isByteOrderComparable
CFMetadataInstance.isCounter == CommitLog.instance.executor.shutdown
CFMetadataInstance.isCounter == CommitLog.instance.segmentManager.shutdown
CFMetadataInstance.isCounter == StorageService.instance.allowSimultaneousMoves
CFMetadataInstance.isCounter == StorageService.instance.authSetupCalled
CFMetadataInstance.isCounter == StorageService.instance.authSetupComplete
CFMetadataInstance.isCounter == StorageService.instance.gossipActive
CFMetadataInstance.isCounter == StorageService.instance.initialized
CFMetadataInstance.isCounter == StorageService.instance.isBootstrapMode
CFMetadataInstance.isCounter == StorageService.instance.isDecommissioning
CFMetadataInstance.isCounter == StorageService.instance.isRebuilding
CFMetadataInstance.isCounter == StorageService.instance.isShutdown
CFMetadataInstance.isCounter == StorageService.instance.isSurveyMode
CFMetadataInstance.isCounter == StorageService.instance.joined
CFMetadataInstance.isCounter == StorageService.instance.replacing
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.compactionLogger.enabled
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.currentBoundaries.isInvalid
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.diskBoundaryManager.diskBoundaries.isInvalid
CFMetadataInstance.isCounter == cfsInstance.keyspace.TEST_FAIL_WRITES
CFMetadataInstance.isCounter == cfsInstance.keyspace.viewManager.enableCoordinatorBatchlog
CFMetadataInstance.isCounter == cfsInstance.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.metric.aliasFactory.isIndex
CFMetadataInstance.isCounter == cfsInstance.metric.factory.isIndex
CFMetadataInstance.isCounter == cfsInstance.readOrdering.current.isBlocking
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isDense
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isView
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.executor.syncComplete.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.bufferPool.usedBuffers
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.managerThreadWaitQueue.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.segmentPrepared.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == QueryProcessor.instance.lastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.statics.complexIdx == QueryProcessor.instance.thriftLastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.legacyProgressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.nextRepairCommand
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.progressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.remainingCFs
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.tokenMetadata.ringVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.totalCFs
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.compactionLogger.identifier
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.currentBoundaries.directoriesVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.diskBoundaryManager.diskBoundaries.ringVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.fileIndexGenerator
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.keyspace.TEST_FAIL_MV_LOCKS_COUNT
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.keyspace.replicationStrategy.lastInvalidatedVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.readOrdering.current.id
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.readOrdering.current.running
CFMetadataInstance.partitionColumns.statics.complexIdx == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.HEAP_SIZE == StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.HEAP_SIZE == StorageService.instance.valueFactory.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.HEAP_SIZE == cfsInstance.metadata.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.MAXIMUM == StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CFMetadataInstance.partitioner.MAXIMUM == StorageService.instance.valueFactory.partitioner.MAXIMUM
CFMetadataInstance.partitioner.MAXIMUM == cfsInstance.metadata.partitioner.MAXIMUM
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == CommitLog.instance.configuration.encryptionContext.chunkLength
CommitLog.instance.executor.markerIntervalNanos == CommitLog.instance.executor.syncIntervalNanos
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.managerThreadWaitQueue.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.segmentPrepared.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.keyspace.writeOrder.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.readOrdering.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)-1
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == CommitLog.instance.segmentManager.availableSegment.ENTRY_OVERHEAD_SIZE
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == CommitLog.instance.segmentManager.availableSegment.SYNC_MARKER_SIZE
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.availableSegment.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.bufferPool.bufferSize
CommitLog.instance.segmentManager.allocatingFrom.idBase == CommitLog.instance.segmentManager.availableSegment.idBase
CommitLog.instance.segmentManager.allocatingFrom.nextId == CommitLog.instance.segmentManager.availableSegment.nextId
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == CommitLog.instance.segmentManager.availableSegment.replayLimitId
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == CommitLog.instance.segmentManager.availableSegment.lastSyncedOffset
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE == resultSetInstance.rows_FOR_ENCLOSING_USE
CFMetadataInstance.allColumnFilter.isFetchAll == true
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK == 2
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == 4
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == 1
CFMetadataInstance.isCounter == false
CFMetadataInstance.partitionColumns.regulars.complexIdx == 0 || CFMetadataInstance.partitionColumns.regulars.complexIdx == 1
CFMetadataInstance.partitioner.HEAP_SIZE == 24
CFMetadataInstance.partitioner.MAXIMUM == 9223372036854775807L
CFMetadataInstance.partitioner.MINIMUM.token == -9223372036854775808L
CFMetadataInstance.resource.hash == -1436612841 || CFMetadataInstance.resource.hash == -431813198
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == 65536
CommitLog.instance.MAX_MUTATION_SIZE == 2621440
CommitLog.instance.archiver.restorePointInTime == 4510987932000L
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS == 100
CommitLog.instance.executor.markerIntervalNanos == 1000000
CommitLog.instance.executor.pending == 0 || CommitLog.instance.executor.pending == 1 || CommitLog.instance.executor.pending == 2
CommitLog.instance.executor.written >= 1
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == 12
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == 8
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == 5242880
CommitLog.instance.segmentManager.allocatingFrom.fd == 177 || CommitLog.instance.segmentManager.allocatingFrom.fd == 178
CommitLog.instance.segmentManager.allocatingFrom.id == 1731353002758L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353002759L
CommitLog.instance.segmentManager.allocatingFrom.idBase == 1731353002754L
CommitLog.instance.segmentManager.allocatingFrom.nextId == 6 || CommitLog.instance.segmentManager.allocatingFrom.nextId == 7
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == 1731353002757L
CommitLog.instance.segmentManager.availableSegment.allocatePosition == 28
CommitLog.instance.segmentManager.availableSegment.fd == 178 || CommitLog.instance.segmentManager.availableSegment.fd == 211
CommitLog.instance.segmentManager.availableSegment.id == 1731353002759L || CommitLog.instance.segmentManager.availableSegment.id == 1731353002760L
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == 20
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize == 3
CommitLog.instance.segmentManager.size == 10485760 || CommitLog.instance.segmentManager.size == 15728640
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
("oneOf.java.jpp: SEQUENCE unimplemented" != null)
StorageService.instance.RING_DELAY == 30000
daikon.Quant.fuzzy.eq(StorageService.instance.traceProbability, 0.0)
cfsInstance.compactionStrategyManager.fanout == 10
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD == 32
cfsInstance.indexManager.DEFAULT_PAGE_SIZE == 10000
cfsInstance.sampleLatencyNanos == 0 || cfsInstance.sampleLatencyNanos == 2500000000L
resultSetInstance.metadata.columnCount >= 1
daikon.Quant.eltsNotEqual(resultSetInstance.rows_FOR_ENCLOSING_USE, null)
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK >= CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.size
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != cfsInstance.sampleLatencyNanos
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != resultSetInstance.metadata.columnCount
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.size
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK != cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK != cfsInstance.sampleLatencyNanos
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK >= CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK > CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK <= CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.size
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK != cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK != cfsInstance.sampleLatencyNanos
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK <= resultSetInstance.metadata.columnCount
CFMetadataInstance.partitionColumns.regulars.complexIdx >= CFMetadataInstance.partitionColumns.statics.complexIdx
CFMetadataInstance.partitionColumns.regulars.complexIdx < CFMetadataInstance.partitioner.HEAP_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CFMetadataInstance.partitioner.MAXIMUM
CFMetadataInstance.partitionColumns.regulars.complexIdx > CFMetadataInstance.partitioner.MINIMUM.token
CFMetadataInstance.partitionColumns.regulars.complexIdx > CFMetadataInstance.resource.hash
CFMetadataInstance.partitionColumns.regulars.complexIdx < CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.MAX_MUTATION_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.archiver.restorePointInTime
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.markerIntervalNanos
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.written
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.idBase
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitionColumns.regulars.complexIdx < StorageService.instance.RING_DELAY
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.compactionStrategyManager.fanout
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx != cfsInstance.metadata.resource.hash
CFMetadataInstance.partitionColumns.regulars.complexIdx != cfsInstance.sampleLatencyNanos
CFMetadataInstance.partitionColumns.regulars.complexIdx <= resultSetInstance.metadata.columnCount
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitionColumns.statics.complexIdx <= CommitLog.instance.executor.pending
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.written
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitionColumns.statics.complexIdx != cfsInstance.metadata.resource.hash
CFMetadataInstance.partitionColumns.statics.complexIdx <= cfsInstance.sampleLatencyNanos
CFMetadataInstance.partitionColumns.statics.complexIdx < resultSetInstance.metadata.columnCount
CFMetadataInstance.partitionColumns.statics.complexIdx <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.HEAP_SIZE > CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.HEAP_SIZE > CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.HEAP_SIZE != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.HEAP_SIZE != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.HEAP_SIZE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.HEAP_SIZE != cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.HEAP_SIZE != cfsInstance.sampleLatencyNanos
CFMetadataInstance.partitioner.HEAP_SIZE > resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.HEAP_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.MAXIMUM > CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.written
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.sampleLatencyNanos
CFMetadataInstance.partitioner.MAXIMUM > resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.MAXIMUM > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.MINIMUM.token < CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.written
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.sampleLatencyNanos
CFMetadataInstance.partitioner.MINIMUM.token < resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.MINIMUM.token < daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.resource.hash < CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE
CFMetadataInstance.resource.hash < CommitLog.instance.MAX_MUTATION_SIZE
CFMetadataInstance.resource.hash < CommitLog.instance.archiver.restorePointInTime
CFMetadataInstance.resource.hash < CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS
CFMetadataInstance.resource.hash < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.resource.hash < CommitLog.instance.executor.markerIntervalNanos
CFMetadataInstance.resource.hash < CommitLog.instance.executor.pending
CFMetadataInstance.resource.hash < CommitLog.instance.executor.syncComplete.CANCELLED
CFMetadataInstance.resource.hash < CommitLog.instance.executor.written
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.idBase
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.size
CFMetadataInstance.resource.hash < StorageService.instance.RING_DELAY
CFMetadataInstance.resource.hash < cfsInstance.compactionStrategyManager.fanout
CFMetadataInstance.resource.hash < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CFMetadataInstance.resource.hash < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CFMetadataInstance.resource.hash <= cfsInstance.metadata.resource.hash
CFMetadataInstance.resource.hash < cfsInstance.sampleLatencyNanos
CFMetadataInstance.resource.hash < resultSetInstance.metadata.columnCount
CFMetadataInstance.resource.hash < daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.executor.pending
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.executor.written
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.size
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE != cfsInstance.metadata.resource.hash
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE != cfsInstance.sampleLatencyNanos
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > resultSetInstance.metadata.columnCount
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.executor.pending
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.executor.written
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.size
CommitLog.instance.MAX_MUTATION_SIZE != cfsInstance.metadata.resource.hash
CommitLog.instance.MAX_MUTATION_SIZE != cfsInstance.sampleLatencyNanos
CommitLog.instance.MAX_MUTATION_SIZE > resultSetInstance.metadata.columnCount
CommitLog.instance.MAX_MUTATION_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.archiver.restorePointInTime < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.executor.pending
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.executor.written
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.size
CommitLog.instance.archiver.restorePointInTime > cfsInstance.metadata.resource.hash
CommitLog.instance.archiver.restorePointInTime > cfsInstance.sampleLatencyNanos
CommitLog.instance.archiver.restorePointInTime % resultSetInstance.metadata.columnCount == 0
CommitLog.instance.archiver.restorePointInTime > resultSetInstance.metadata.columnCount
CommitLog.instance.archiver.restorePointInTime > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > CommitLog.instance.executor.pending
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > CommitLog.instance.executor.written
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS != CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS != cfsInstance.metadata.resource.hash
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS != cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.markerIntervalNanos
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.pending
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.written
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.size
CommitLog.instance.executor.lastSyncedAt > StorageService.instance.RING_DELAY
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.lastSyncedAt > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.lastSyncedAt > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.lastSyncedAt > cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.lastSyncedAt > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.lastSyncedAt > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.executor.pending
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.executor.written
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.markerIntervalNanos != cfsInstance.metadata.resource.hash
CommitLog.instance.executor.markerIntervalNanos != cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.markerIntervalNanos > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.markerIntervalNanos > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.pending < CommitLog.instance.executor.written
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.pending < StorageService.instance.RING_DELAY
CommitLog.instance.executor.pending < cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.pending < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.pending < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.pending != cfsInstance.metadata.resource.hash
CommitLog.instance.executor.syncComplete.CANCELLED != cfsInstance.metadata.resource.hash
CommitLog.instance.executor.syncComplete.CANCELLED <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CommitLog.instance.executor.written != CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.written != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.written != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.written != CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.written < StorageService.instance.RING_DELAY
CommitLog.instance.executor.written < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.written != cfsInstance.metadata.resource.hash
CommitLog.instance.executor.written != cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.written >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE != resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition >= CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.fd != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.fd != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.fd < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.fd < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.fd != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.fd != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.fd > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.fd > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.id < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.id > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.id > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.id > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.idBase < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.idBase > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.idBase > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset >= CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset >= CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset >= CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.nextId > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.nextId < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.nextId != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.nextId != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.allocatePosition != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.allocatePosition != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.availableSegment.allocatePosition > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.allocatePosition > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.fd < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.availableSegment.fd > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.availableSegment.fd > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.availableSegment.fd < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.fd < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.availableSegment.fd < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.availableSegment.fd != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.fd != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.availableSegment.fd > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.fd > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.id > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.availableSegment.id > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.id > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset >= resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.size > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.size > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.size > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.size > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.size != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.size != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.size > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.size > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
daikon.Quant.subsetOf(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE, resultSetInstance.rows_FOR_ENCLOSING_USE)
StorageService.instance.RING_DELAY != cfsInstance.metadata.resource.hash
StorageService.instance.RING_DELAY != cfsInstance.sampleLatencyNanos
StorageService.instance.RING_DELAY % resultSetInstance.metadata.columnCount == 0
StorageService.instance.RING_DELAY > resultSetInstance.metadata.columnCount
StorageService.instance.RING_DELAY > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.compactionStrategyManager.fanout != cfsInstance.metadata.resource.hash
cfsInstance.compactionStrategyManager.fanout != cfsInstance.sampleLatencyNanos
cfsInstance.compactionStrategyManager.fanout != resultSetInstance.metadata.columnCount
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD != cfsInstance.metadata.resource.hash
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD != cfsInstance.sampleLatencyNanos
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > resultSetInstance.metadata.columnCount
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.indexManager.DEFAULT_PAGE_SIZE != cfsInstance.metadata.resource.hash
cfsInstance.indexManager.DEFAULT_PAGE_SIZE != cfsInstance.sampleLatencyNanos
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > resultSetInstance.metadata.columnCount
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.metadata.resource.hash < cfsInstance.sampleLatencyNanos
cfsInstance.metadata.resource.hash != resultSetInstance.metadata.columnCount
cfsInstance.metadata.resource.hash != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.metadata.resource.hash != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
cfsInstance.sampleLatencyNanos != resultSetInstance.metadata.columnCount
===========================================================================
org.apache.cassandra.db.MultiKeyspaceTest@testSameTableNames-54916894:::dump
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.allocatingFrom.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.availableSegment.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.joinRing
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.useStrictConsistency
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionSpaceCheck
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.enabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.isActive
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.partitionSSTablesByTokenRange
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_ENABLED
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.isEnabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.supportsEarlyOpen
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.data.loadsstables
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.directories.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.keyspace.initialized
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.allColumnFilter.isFetchAll
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.valid
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.viewManager.baseTableMetadata.isCompound
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MIN_THRESHOLD
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CFMetadataInstance.partitioner.MINIMUM.serialVersionUID
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.executor.syncComplete.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.managerThreadWaitQueue.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.segmentPrepared.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == StorageService.instance.threadCounter
CFMetadataInstance.isCounter == CFMetadataInstance.isDense
CFMetadataInstance.isCounter == CFMetadataInstance.isIndex
CFMetadataInstance.isCounter == CFMetadataInstance.isSuper
CFMetadataInstance.isCounter == CFMetadataInstance.isView
CFMetadataInstance.isCounter == CFMetadataInstance.partitioner.partitionOrdering.isByteOrderComparable
CFMetadataInstance.isCounter == CommitLog.instance.executor.shutdown
CFMetadataInstance.isCounter == CommitLog.instance.executor.syncRequested
CFMetadataInstance.isCounter == CommitLog.instance.segmentManager.shutdown
CFMetadataInstance.isCounter == StorageService.instance.allowSimultaneousMoves
CFMetadataInstance.isCounter == StorageService.instance.authSetupCalled
CFMetadataInstance.isCounter == StorageService.instance.authSetupComplete
CFMetadataInstance.isCounter == StorageService.instance.gossipActive
CFMetadataInstance.isCounter == StorageService.instance.initialized
CFMetadataInstance.isCounter == StorageService.instance.isBootstrapMode
CFMetadataInstance.isCounter == StorageService.instance.isDecommissioning
CFMetadataInstance.isCounter == StorageService.instance.isRebuilding
CFMetadataInstance.isCounter == StorageService.instance.isShutdown
CFMetadataInstance.isCounter == StorageService.instance.isSurveyMode
CFMetadataInstance.isCounter == StorageService.instance.joined
CFMetadataInstance.isCounter == StorageService.instance.replacing
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.compactionLogger.enabled
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.currentBoundaries.isInvalid
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.diskBoundaryManager.diskBoundaries.isInvalid
CFMetadataInstance.isCounter == cfsInstance.keyspace.TEST_FAIL_WRITES
CFMetadataInstance.isCounter == cfsInstance.keyspace.viewManager.enableCoordinatorBatchlog
CFMetadataInstance.isCounter == cfsInstance.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.metric.aliasFactory.isIndex
CFMetadataInstance.isCounter == cfsInstance.metric.factory.isIndex
CFMetadataInstance.isCounter == cfsInstance.readOrdering.current.isBlocking
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isDense
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isView
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.executor.syncComplete.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.bufferPool.usedBuffers
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.managerThreadWaitQueue.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.segmentPrepared.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == QueryProcessor.instance.lastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.statics.complexIdx == QueryProcessor.instance.thriftLastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.legacyProgressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.nextRepairCommand
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.progressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.remainingCFs
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.tokenMetadata.ringVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.totalCFs
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.compactionLogger.identifier
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.currentBoundaries.directoriesVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.diskBoundaryManager.diskBoundaries.ringVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.keyspace.TEST_FAIL_MV_LOCKS_COUNT
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.keyspace.replicationStrategy.lastInvalidatedVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.readOrdering.current.running
CFMetadataInstance.partitionColumns.statics.complexIdx == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.HEAP_SIZE == StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.HEAP_SIZE == StorageService.instance.valueFactory.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.HEAP_SIZE == cfsInstance.metadata.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.MAXIMUM == StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CFMetadataInstance.partitioner.MAXIMUM == StorageService.instance.valueFactory.partitioner.MAXIMUM
CFMetadataInstance.partitioner.MAXIMUM == cfsInstance.metadata.partitioner.MAXIMUM
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == CommitLog.instance.configuration.encryptionContext.chunkLength
CommitLog.instance.executor.markerIntervalNanos == CommitLog.instance.executor.syncIntervalNanos
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.managerThreadWaitQueue.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.segmentPrepared.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.keyspace.writeOrder.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.readOrdering.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)-1
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == CommitLog.instance.segmentManager.availableSegment.ENTRY_OVERHEAD_SIZE
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == CommitLog.instance.segmentManager.availableSegment.SYNC_MARKER_SIZE
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.availableSegment.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.bufferPool.bufferSize
CommitLog.instance.segmentManager.allocatingFrom.idBase == CommitLog.instance.segmentManager.availableSegment.idBase
CommitLog.instance.segmentManager.allocatingFrom.nextId == CommitLog.instance.segmentManager.availableSegment.nextId
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == CommitLog.instance.segmentManager.availableSegment.replayLimitId
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == CommitLog.instance.segmentManager.availableSegment.lastSyncedOffset
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE == resultSetInstance.rows_FOR_ENCLOSING_USE
CFMetadataInstance.allColumnFilter.isFetchAll == true
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK == 2
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == 4
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == 1
CFMetadataInstance.isCounter == false
CFMetadataInstance.partitionColumns.regulars.complexIdx == 0 || CFMetadataInstance.partitionColumns.regulars.complexIdx == 1
CFMetadataInstance.partitioner.HEAP_SIZE == 24
CFMetadataInstance.partitioner.MAXIMUM == 9223372036854775807L
CFMetadataInstance.partitioner.MINIMUM.token == -9223372036854775808L
CFMetadataInstance.resource.hash == -352258403 || CFMetadataInstance.resource.hash == -66092372 || CFMetadataInstance.resource.hash == -66092341
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == 65536
CommitLog.instance.MAX_MUTATION_SIZE == 2621440
CommitLog.instance.archiver.restorePointInTime == 4510987932000L
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS == 100
CommitLog.instance.executor.markerIntervalNanos == 1000000
CommitLog.instance.executor.pending == 0 || CommitLog.instance.executor.pending == 1
CommitLog.instance.executor.written >= 1
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == 12
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == 8
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == 5242880
CommitLog.instance.segmentManager.allocatingFrom.fd == 177 || CommitLog.instance.segmentManager.allocatingFrom.fd == 178
CommitLog.instance.segmentManager.allocatingFrom.id == 1731353131540L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353131541L
CommitLog.instance.segmentManager.allocatingFrom.idBase == 1731353131536L
CommitLog.instance.segmentManager.allocatingFrom.nextId == 6 || CommitLog.instance.segmentManager.allocatingFrom.nextId == 7
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == 1731353131539L
CommitLog.instance.segmentManager.availableSegment.allocatePosition == 28
CommitLog.instance.segmentManager.availableSegment.fd == 178 || CommitLog.instance.segmentManager.availableSegment.fd == 221
CommitLog.instance.segmentManager.availableSegment.id == 1731353131541L || CommitLog.instance.segmentManager.availableSegment.id == 1731353131542L
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == 20
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize == 3
CommitLog.instance.segmentManager.size == 10485760
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
("oneOf.java.jpp: SEQUENCE unimplemented" != null)
StorageService.instance.RING_DELAY == 30000
daikon.Quant.fuzzy.eq(StorageService.instance.traceProbability, 0.0)
cfsInstance.compactionStrategyManager.fanout == 10
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD == 32
cfsInstance.fileIndexGenerator == 0 || cfsInstance.fileIndexGenerator == 1
cfsInstance.indexManager.DEFAULT_PAGE_SIZE == 10000
cfsInstance.readOrdering.current.id == 0 || cfsInstance.readOrdering.current.id == 1
cfsInstance.sampleLatencyNanos == 2500000000L
resultSetInstance.metadata.columnCount >= 1
daikon.Quant.eltsNotEqual(resultSetInstance.rows_FOR_ENCLOSING_USE, null)
daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) == 0 || daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) == 1 || daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) == 2
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > cfsInstance.fileIndexGenerator
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > cfsInstance.readOrdering.current.id
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > cfsInstance.fileIndexGenerator
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK != cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > cfsInstance.readOrdering.current.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK >= CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK > CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK >= CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK <= CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK >= cfsInstance.fileIndexGenerator
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK != cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK >= cfsInstance.readOrdering.current.id
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK <= resultSetInstance.metadata.columnCount
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.partitionColumns.regulars.complexIdx >= CFMetadataInstance.partitionColumns.statics.complexIdx
CFMetadataInstance.partitionColumns.regulars.complexIdx < CFMetadataInstance.partitioner.HEAP_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CFMetadataInstance.partitioner.MAXIMUM
CFMetadataInstance.partitionColumns.regulars.complexIdx > CFMetadataInstance.partitioner.MINIMUM.token
CFMetadataInstance.partitionColumns.regulars.complexIdx > CFMetadataInstance.resource.hash
CFMetadataInstance.partitionColumns.regulars.complexIdx < CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.MAX_MUTATION_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.archiver.restorePointInTime
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.markerIntervalNanos
CFMetadataInstance.partitionColumns.regulars.complexIdx >= CommitLog.instance.executor.pending
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.written
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.idBase
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitionColumns.regulars.complexIdx < StorageService.instance.RING_DELAY
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.compactionStrategyManager.fanout
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CFMetadataInstance.partitionColumns.regulars.complexIdx >= cfsInstance.fileIndexGenerator
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx != cfsInstance.metadata.resource.hash
CFMetadataInstance.partitionColumns.regulars.complexIdx >= cfsInstance.readOrdering.current.id
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.sampleLatencyNanos
CFMetadataInstance.partitionColumns.regulars.complexIdx <= resultSetInstance.metadata.columnCount
CFMetadataInstance.partitionColumns.regulars.complexIdx >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitionColumns.statics.complexIdx <= CommitLog.instance.executor.pending
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.written
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitionColumns.statics.complexIdx <= cfsInstance.fileIndexGenerator
CFMetadataInstance.partitionColumns.statics.complexIdx != cfsInstance.metadata.resource.hash
CFMetadataInstance.partitionColumns.statics.complexIdx <= cfsInstance.readOrdering.current.id
CFMetadataInstance.partitionColumns.statics.complexIdx < resultSetInstance.metadata.columnCount
CFMetadataInstance.partitionColumns.statics.complexIdx <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.HEAP_SIZE > CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.HEAP_SIZE > CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.HEAP_SIZE > CommitLog.instance.executor.written
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.HEAP_SIZE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.HEAP_SIZE > cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.HEAP_SIZE != cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.HEAP_SIZE > cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.HEAP_SIZE > resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.HEAP_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.MAXIMUM > CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.written
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.MAXIMUM > resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.MAXIMUM > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.MINIMUM.token < CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.written
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.fileIndexGenerator
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.readOrdering.current.id
CFMetadataInstance.partitioner.MINIMUM.token < resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.MINIMUM.token < daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.resource.hash < CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE
CFMetadataInstance.resource.hash < CommitLog.instance.MAX_MUTATION_SIZE
CFMetadataInstance.resource.hash < CommitLog.instance.archiver.restorePointInTime
CFMetadataInstance.resource.hash < CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS
CFMetadataInstance.resource.hash < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.resource.hash < CommitLog.instance.executor.markerIntervalNanos
CFMetadataInstance.resource.hash < CommitLog.instance.executor.pending
CFMetadataInstance.resource.hash < CommitLog.instance.executor.syncComplete.CANCELLED
CFMetadataInstance.resource.hash < CommitLog.instance.executor.written
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.idBase
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.size
CFMetadataInstance.resource.hash < StorageService.instance.RING_DELAY
CFMetadataInstance.resource.hash < cfsInstance.compactionStrategyManager.fanout
CFMetadataInstance.resource.hash < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CFMetadataInstance.resource.hash < cfsInstance.fileIndexGenerator
CFMetadataInstance.resource.hash < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CFMetadataInstance.resource.hash < cfsInstance.readOrdering.current.id
CFMetadataInstance.resource.hash < cfsInstance.sampleLatencyNanos
CFMetadataInstance.resource.hash < resultSetInstance.metadata.columnCount
CFMetadataInstance.resource.hash < daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.executor.pending
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.executor.written
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > cfsInstance.fileIndexGenerator
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE != cfsInstance.metadata.resource.hash
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > cfsInstance.readOrdering.current.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > resultSetInstance.metadata.columnCount
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.executor.pending
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.executor.written
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.MAX_MUTATION_SIZE > cfsInstance.fileIndexGenerator
CommitLog.instance.MAX_MUTATION_SIZE != cfsInstance.metadata.resource.hash
CommitLog.instance.MAX_MUTATION_SIZE > cfsInstance.readOrdering.current.id
CommitLog.instance.MAX_MUTATION_SIZE > resultSetInstance.metadata.columnCount
CommitLog.instance.MAX_MUTATION_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.archiver.restorePointInTime < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.executor.pending
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.executor.written
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.archiver.restorePointInTime > cfsInstance.fileIndexGenerator
CommitLog.instance.archiver.restorePointInTime > cfsInstance.metadata.resource.hash
CommitLog.instance.archiver.restorePointInTime > cfsInstance.readOrdering.current.id
CommitLog.instance.archiver.restorePointInTime % resultSetInstance.metadata.columnCount == 0
CommitLog.instance.archiver.restorePointInTime > resultSetInstance.metadata.columnCount
CommitLog.instance.archiver.restorePointInTime > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > CommitLog.instance.executor.pending
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > CommitLog.instance.executor.written
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS != cfsInstance.metadata.resource.hash
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.markerIntervalNanos
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.pending
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.written
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.size
CommitLog.instance.executor.lastSyncedAt > StorageService.instance.RING_DELAY
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.lastSyncedAt > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.lastSyncedAt > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.lastSyncedAt > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.lastSyncedAt > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.lastSyncedAt > cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.lastSyncedAt > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.lastSyncedAt > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.executor.pending
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.executor.written
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.markerIntervalNanos > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.markerIntervalNanos != cfsInstance.metadata.resource.hash
CommitLog.instance.executor.markerIntervalNanos > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.markerIntervalNanos > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.markerIntervalNanos > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.pending < CommitLog.instance.executor.written
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.pending < StorageService.instance.RING_DELAY
CommitLog.instance.executor.pending < cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.pending < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.pending < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.pending != cfsInstance.metadata.resource.hash
CommitLog.instance.executor.pending < cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.pending < resultSetInstance.metadata.columnCount
CommitLog.instance.executor.syncComplete.CANCELLED != cfsInstance.metadata.resource.hash
CommitLog.instance.executor.syncComplete.CANCELLED <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.written < StorageService.instance.RING_DELAY
CommitLog.instance.executor.written < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.written > cfsInstance.fileIndexGenerator
CommitLog.instance.executor.written < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.written != cfsInstance.metadata.resource.hash
CommitLog.instance.executor.written > cfsInstance.readOrdering.current.id
CommitLog.instance.executor.written < cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.written >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE != resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 8 == 0
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.fd < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.fd < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.fd != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.fd < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.fd > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.fd > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.id < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.id > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.id > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.id > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.idBase < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.idBase > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.idBase > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset >= CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.nextId > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.nextId < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.nextId != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.nextId > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.availableSegment.allocatePosition > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.allocatePosition != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.allocatePosition > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.allocatePosition > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.allocatePosition > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.fd < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.availableSegment.fd > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.availableSegment.fd > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.availableSegment.fd < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.fd < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.fd < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.availableSegment.fd != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.fd < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.availableSegment.fd > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.fd > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.id > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.availableSegment.id > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.id > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset >= resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.size > cfsInstance.fileIndexGenerator
CommitLog.instance.segmentManager.size != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.size > cfsInstance.readOrdering.current.id
CommitLog.instance.segmentManager.size > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.size > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
daikon.Quant.subsetOf(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE, resultSetInstance.rows_FOR_ENCLOSING_USE)
StorageService.instance.RING_DELAY > cfsInstance.fileIndexGenerator
StorageService.instance.RING_DELAY != cfsInstance.metadata.resource.hash
StorageService.instance.RING_DELAY > cfsInstance.readOrdering.current.id
StorageService.instance.RING_DELAY % resultSetInstance.metadata.columnCount == 0
StorageService.instance.RING_DELAY > resultSetInstance.metadata.columnCount
StorageService.instance.RING_DELAY > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.compactionStrategyManager.fanout > cfsInstance.fileIndexGenerator
cfsInstance.compactionStrategyManager.fanout != cfsInstance.metadata.resource.hash
cfsInstance.compactionStrategyManager.fanout > cfsInstance.readOrdering.current.id
cfsInstance.compactionStrategyManager.fanout != resultSetInstance.metadata.columnCount
cfsInstance.compactionStrategyManager.fanout > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > cfsInstance.fileIndexGenerator
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD != cfsInstance.metadata.resource.hash
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > cfsInstance.readOrdering.current.id
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > resultSetInstance.metadata.columnCount
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.fileIndexGenerator < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
cfsInstance.fileIndexGenerator != cfsInstance.metadata.resource.hash
cfsInstance.fileIndexGenerator >= cfsInstance.readOrdering.current.id
cfsInstance.fileIndexGenerator < cfsInstance.sampleLatencyNanos
cfsInstance.fileIndexGenerator <= resultSetInstance.metadata.columnCount
cfsInstance.indexManager.DEFAULT_PAGE_SIZE != cfsInstance.metadata.resource.hash
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > cfsInstance.readOrdering.current.id
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > resultSetInstance.metadata.columnCount
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.metadata.resource.hash != cfsInstance.readOrdering.current.id
cfsInstance.metadata.resource.hash < cfsInstance.sampleLatencyNanos
cfsInstance.metadata.resource.hash != resultSetInstance.metadata.columnCount
cfsInstance.metadata.resource.hash != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.metadata.resource.hash != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
cfsInstance.readOrdering.current.id < cfsInstance.sampleLatencyNanos
cfsInstance.readOrdering.current.id % resultSetInstance.metadata.columnCount == 0
cfsInstance.readOrdering.current.id <= resultSetInstance.metadata.columnCount
cfsInstance.sampleLatencyNanos > resultSetInstance.metadata.columnCount
cfsInstance.sampleLatencyNanos > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
resultSetInstance.metadata.columnCount >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.lastSyncedAt - 32423626 * resultSetInstance.metadata.columnCount + 241326977 * daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 8.9239153222928E13 == 0
CommitLog.instance.executor.lastSyncedAt - 32423626 * resultSetInstance.metadata.columnCount + 241326977 * daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1 - 8.9238911895951E13 == 0
241 * CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.allocatePosition + CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset + 8 == 0
241 * CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset + CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset == 0
===========================================================================
org.apache.cassandra.db.RangeTombstoneTest@overlappingRangeTest768746989:::dump
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.keyValidator.isByteOrderComparable
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.allocatingFrom.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.availableSegment.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.joinRing
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.useStrictConsistency
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionSpaceCheck
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.enabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.isActive
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_ENABLED
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.isEnabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.shouldDefragment
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.supportsEarlyOpen
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.data.loadsstables
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.directories.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.keyspace.initialized
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.allColumnFilter.isFetchAll
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.keyValidator.isByteOrderComparable
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.valid
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.viewManager.baseTableMetadata.isCompound
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK == CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MIN_THRESHOLD
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CFMetadataInstance.partitioner.MINIMUM.serialVersionUID
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.executor.syncComplete.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.managerThreadWaitQueue.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.segmentPrepared.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == StorageService.instance.threadCounter
CFMetadataInstance.isCounter == CFMetadataInstance.isDense
CFMetadataInstance.isCounter == CFMetadataInstance.isIndex
CFMetadataInstance.isCounter == CFMetadataInstance.isSuper
CFMetadataInstance.isCounter == CFMetadataInstance.isView
CFMetadataInstance.isCounter == CommitLog.instance.executor.shutdown
CFMetadataInstance.isCounter == CommitLog.instance.executor.syncRequested
CFMetadataInstance.isCounter == CommitLog.instance.segmentManager.shutdown
CFMetadataInstance.isCounter == StorageService.instance.allowSimultaneousMoves
CFMetadataInstance.isCounter == StorageService.instance.authSetupCalled
CFMetadataInstance.isCounter == StorageService.instance.authSetupComplete
CFMetadataInstance.isCounter == StorageService.instance.gossipActive
CFMetadataInstance.isCounter == StorageService.instance.initialized
CFMetadataInstance.isCounter == StorageService.instance.isBootstrapMode
CFMetadataInstance.isCounter == StorageService.instance.isDecommissioning
CFMetadataInstance.isCounter == StorageService.instance.isRebuilding
CFMetadataInstance.isCounter == StorageService.instance.isShutdown
CFMetadataInstance.isCounter == StorageService.instance.isSurveyMode
CFMetadataInstance.isCounter == StorageService.instance.joined
CFMetadataInstance.isCounter == StorageService.instance.replacing
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.compactionLogger.enabled
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.currentBoundaries.isInvalid
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.partitionSSTablesByTokenRange
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.keyspace.TEST_FAIL_WRITES
CFMetadataInstance.isCounter == cfsInstance.keyspace.viewManager.enableCoordinatorBatchlog
CFMetadataInstance.isCounter == cfsInstance.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.metric.aliasFactory.isIndex
CFMetadataInstance.isCounter == cfsInstance.metric.factory.isIndex
CFMetadataInstance.isCounter == cfsInstance.readOrdering.current.isBlocking
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isDense
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isView
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.executor.pending
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.executor.syncComplete.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.bufferPool.usedBuffers
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.managerThreadWaitQueue.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.segmentPrepared.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == QueryProcessor.instance.lastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.statics.complexIdx == QueryProcessor.instance.thriftLastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.legacyProgressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.nextRepairCommand
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.progressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.remainingCFs
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.tokenMetadata.ringVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.totalCFs
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.compactionLogger.identifier
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.currentBoundaries.directoriesVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.fileIndexGenerator
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.keyspace.TEST_FAIL_MV_LOCKS_COUNT
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.keyspace.replicationStrategy.lastInvalidatedVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.readOrdering.current.id
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.readOrdering.current.running
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.sampleLatencyNanos
CFMetadataInstance.partitionColumns.statics.complexIdx == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)
CFMetadataInstance.partitionColumns.statics.complexIdx == daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.EMPTY_SIZE == StorageService.instance.tokenMetadata.partitioner.EMPTY_SIZE
CFMetadataInstance.partitioner.EMPTY_SIZE == StorageService.instance.valueFactory.partitioner.EMPTY_SIZE
CFMetadataInstance.partitioner.EMPTY_SIZE == cfsInstance.metadata.partitioner.EMPTY_SIZE
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == CommitLog.instance.configuration.encryptionContext.chunkLength
CommitLog.instance.executor.markerIntervalNanos == CommitLog.instance.executor.syncIntervalNanos
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.managerThreadWaitQueue.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.segmentPrepared.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.keyspace.writeOrder.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.readOrdering.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)-1
CommitLog.instance.executor.syncComplete.CANCELLED == daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == CommitLog.instance.segmentManager.availableSegment.ENTRY_OVERHEAD_SIZE
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == CommitLog.instance.segmentManager.availableSegment.SYNC_MARKER_SIZE
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.availableSegment.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.bufferPool.bufferSize
CommitLog.instance.segmentManager.allocatingFrom.idBase == CommitLog.instance.segmentManager.availableSegment.idBase
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset == CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.nextId == CommitLog.instance.segmentManager.availableSegment.nextId
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == CommitLog.instance.segmentManager.availableSegment.replayLimitId
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == CommitLog.instance.segmentManager.availableSegment.lastSyncedOffset
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE == resultSetInstance.rows_FOR_ENCLOSING_USE
daikon.Quant.pairwiseEqual(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE, resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.allColumnFilter.isFetchAll == true
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK == 2
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == 4
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == 1
CFMetadataInstance.isCounter == false
CFMetadataInstance.partitioner.EMPTY_SIZE == 24
CFMetadataInstance.resource.hash == 493049612
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == 65536
CommitLog.instance.MAX_MUTATION_SIZE == 2621440
CommitLog.instance.archiver.restorePointInTime == 4510987932000L
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS == 100
CommitLog.instance.executor.markerIntervalNanos == 1000000
CommitLog.instance.executor.written == 46 || CommitLog.instance.executor.written == 48
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == 12
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == 8
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition == 6971 || CommitLog.instance.segmentManager.allocatingFrom.allocatePosition == 7320
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == 5242880
CommitLog.instance.segmentManager.allocatingFrom.fd == 177
CommitLog.instance.segmentManager.allocatingFrom.id == 1731353097680L
CommitLog.instance.segmentManager.allocatingFrom.idBase == 1731353097676L
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset == 6963 || CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset == 7312
CommitLog.instance.segmentManager.allocatingFrom.nextId == 6
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == 1731353097679L
CommitLog.instance.segmentManager.availableSegment.allocatePosition == 28
CommitLog.instance.segmentManager.availableSegment.fd == 178
CommitLog.instance.segmentManager.availableSegment.id == 1731353097681L
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == 20
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize == 3
CommitLog.instance.segmentManager.size == 10485760
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
("oneOf.java.jpp: SEQUENCE unimplemented" != null)
StorageService.instance.RING_DELAY == 30000
daikon.Quant.fuzzy.eq(StorageService.instance.traceProbability, 0.0)
cfsInstance.compactionStrategyManager.fanout == 10
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD == 32
cfsInstance.indexManager.DEFAULT_PAGE_SIZE == 10000
cfsInstance.metadata.resource.hash == 752961001
resultSetInstance.metadata.columnCount == 5
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.written
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.executor.written
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.resource.hash < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.resource.hash > CommitLog.instance.executor.written
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.executor.written
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.executor.written
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.archiver.restorePointInTime < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.executor.written
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > CommitLog.instance.executor.written
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.markerIntervalNanos
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.written
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.size
CommitLog.instance.executor.lastSyncedAt > StorageService.instance.RING_DELAY
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.lastSyncedAt > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.lastSyncedAt > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.lastSyncedAt > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.executor.written
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.written < StorageService.instance.RING_DELAY
CommitLog.instance.executor.written > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.written > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.written < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.written < cfsInstance.metadata.resource.hash
CommitLog.instance.executor.written > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > resultSetInstance.metadata.columnCount
===========================================================================
org.apache.cassandra.db.RangeTombstoneTest@reverseQueryTest768746989:::dump
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.keyValidator.isByteOrderComparable
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.allocatingFrom.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.availableSegment.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.joinRing
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.useStrictConsistency
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionSpaceCheck
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.enabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.isActive
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_ENABLED
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.isEnabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.shouldDefragment
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.supportsEarlyOpen
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.data.loadsstables
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.directories.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.keyspace.initialized
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.allColumnFilter.isFetchAll
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.keyValidator.isByteOrderComparable
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.valid
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.viewManager.baseTableMetadata.isCompound
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK == CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MIN_THRESHOLD
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CFMetadataInstance.partitioner.MINIMUM.serialVersionUID
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.executor.syncComplete.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.managerThreadWaitQueue.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.segmentPrepared.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == StorageService.instance.threadCounter
CFMetadataInstance.isCounter == CFMetadataInstance.isDense
CFMetadataInstance.isCounter == CFMetadataInstance.isIndex
CFMetadataInstance.isCounter == CFMetadataInstance.isSuper
CFMetadataInstance.isCounter == CFMetadataInstance.isView
CFMetadataInstance.isCounter == CommitLog.instance.executor.shutdown
CFMetadataInstance.isCounter == CommitLog.instance.executor.syncRequested
CFMetadataInstance.isCounter == CommitLog.instance.segmentManager.shutdown
CFMetadataInstance.isCounter == StorageService.instance.allowSimultaneousMoves
CFMetadataInstance.isCounter == StorageService.instance.authSetupCalled
CFMetadataInstance.isCounter == StorageService.instance.authSetupComplete
CFMetadataInstance.isCounter == StorageService.instance.gossipActive
CFMetadataInstance.isCounter == StorageService.instance.initialized
CFMetadataInstance.isCounter == StorageService.instance.isBootstrapMode
CFMetadataInstance.isCounter == StorageService.instance.isDecommissioning
CFMetadataInstance.isCounter == StorageService.instance.isRebuilding
CFMetadataInstance.isCounter == StorageService.instance.isShutdown
CFMetadataInstance.isCounter == StorageService.instance.isSurveyMode
CFMetadataInstance.isCounter == StorageService.instance.joined
CFMetadataInstance.isCounter == StorageService.instance.replacing
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.compactionLogger.enabled
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.currentBoundaries.isInvalid
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.partitionSSTablesByTokenRange
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.keyspace.TEST_FAIL_WRITES
CFMetadataInstance.isCounter == cfsInstance.keyspace.viewManager.enableCoordinatorBatchlog
CFMetadataInstance.isCounter == cfsInstance.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.metric.aliasFactory.isIndex
CFMetadataInstance.isCounter == cfsInstance.metric.factory.isIndex
CFMetadataInstance.isCounter == cfsInstance.readOrdering.current.isBlocking
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isDense
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isView
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.executor.pending
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.executor.syncComplete.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.bufferPool.usedBuffers
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.managerThreadWaitQueue.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.segmentPrepared.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == QueryProcessor.instance.lastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.statics.complexIdx == QueryProcessor.instance.thriftLastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.legacyProgressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.nextRepairCommand
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.progressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.remainingCFs
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.tokenMetadata.ringVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.totalCFs
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.compactionLogger.identifier
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.currentBoundaries.directoriesVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.fileIndexGenerator
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.keyspace.TEST_FAIL_MV_LOCKS_COUNT
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.keyspace.replicationStrategy.lastInvalidatedVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.readOrdering.current.id
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.readOrdering.current.running
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.sampleLatencyNanos
CFMetadataInstance.partitionColumns.statics.complexIdx == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)
CFMetadataInstance.partitionColumns.statics.complexIdx == daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.EMPTY_SIZE == StorageService.instance.tokenMetadata.partitioner.EMPTY_SIZE
CFMetadataInstance.partitioner.EMPTY_SIZE == StorageService.instance.valueFactory.partitioner.EMPTY_SIZE
CFMetadataInstance.partitioner.EMPTY_SIZE == cfsInstance.metadata.partitioner.EMPTY_SIZE
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == CommitLog.instance.configuration.encryptionContext.chunkLength
CommitLog.instance.executor.markerIntervalNanos == CommitLog.instance.executor.syncIntervalNanos
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.managerThreadWaitQueue.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.segmentPrepared.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.keyspace.writeOrder.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.readOrdering.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)-1
CommitLog.instance.executor.syncComplete.CANCELLED == daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == CommitLog.instance.segmentManager.availableSegment.ENTRY_OVERHEAD_SIZE
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == CommitLog.instance.segmentManager.availableSegment.SYNC_MARKER_SIZE
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.availableSegment.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.bufferPool.bufferSize
CommitLog.instance.segmentManager.allocatingFrom.idBase == CommitLog.instance.segmentManager.availableSegment.idBase
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset == CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.nextId == CommitLog.instance.segmentManager.availableSegment.nextId
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == CommitLog.instance.segmentManager.availableSegment.replayLimitId
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == CommitLog.instance.segmentManager.availableSegment.lastSyncedOffset
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE == resultSetInstance.rows_FOR_ENCLOSING_USE
daikon.Quant.pairwiseEqual(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE, resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.allColumnFilter.isFetchAll == true
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK == 2
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == 4
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == 1
CFMetadataInstance.isCounter == false
CFMetadataInstance.partitioner.EMPTY_SIZE == 24
CFMetadataInstance.resource.hash == 493049612
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == 65536
CommitLog.instance.MAX_MUTATION_SIZE == 2621440
CommitLog.instance.archiver.restorePointInTime == 4510987932000L
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS == 100
CommitLog.instance.executor.markerIntervalNanos == 1000000
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == 12
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == 8
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == 5242880
CommitLog.instance.segmentManager.allocatingFrom.fd == 177
CommitLog.instance.segmentManager.allocatingFrom.id == 1731353097680L
CommitLog.instance.segmentManager.allocatingFrom.idBase == 1731353097676L
CommitLog.instance.segmentManager.allocatingFrom.nextId == 6
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == 1731353097679L
CommitLog.instance.segmentManager.availableSegment.allocatePosition == 28
CommitLog.instance.segmentManager.availableSegment.fd == 178
CommitLog.instance.segmentManager.availableSegment.id == 1731353097681L
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == 20
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize == 3
CommitLog.instance.segmentManager.size == 10485760
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
("oneOf.java.jpp: SEQUENCE unimplemented" != null)
StorageService.instance.RING_DELAY == 30000
daikon.Quant.fuzzy.eq(StorageService.instance.traceProbability, 0.0)
cfsInstance.compactionStrategyManager.fanout == 10
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD == 32
cfsInstance.indexManager.DEFAULT_PAGE_SIZE == 10000
cfsInstance.metadata.resource.hash == 752961001
resultSetInstance.metadata.columnCount == 5
104 * CommitLog.instance.executor.written - CommitLog.instance.segmentManager.allocatingFrom.allocatePosition + 2328 == 0
104 * CommitLog.instance.executor.written - CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset + 2320 == 0
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 8 == 0
===========================================================================
org.apache.cassandra.db.RangeTombstoneTest@simpleQueryWithRangeTombstoneTest768746989:::dump
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.keyValidator.isByteOrderComparable
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.allocatingFrom.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.availableSegment.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.joinRing
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.useStrictConsistency
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionSpaceCheck
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.enabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.isActive
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_ENABLED
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.isEnabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.shouldDefragment
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.supportsEarlyOpen
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.data.loadsstables
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.directories.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.keyspace.initialized
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.allColumnFilter.isFetchAll
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.keyValidator.isByteOrderComparable
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.valid
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.viewManager.baseTableMetadata.isCompound
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK == CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MIN_THRESHOLD
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CFMetadataInstance.partitioner.MINIMUM.serialVersionUID
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.executor.syncComplete.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.managerThreadWaitQueue.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.segmentPrepared.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == StorageService.instance.threadCounter
CFMetadataInstance.isCounter == CFMetadataInstance.isDense
CFMetadataInstance.isCounter == CFMetadataInstance.isIndex
CFMetadataInstance.isCounter == CFMetadataInstance.isSuper
CFMetadataInstance.isCounter == CFMetadataInstance.isView
CFMetadataInstance.isCounter == CommitLog.instance.executor.shutdown
CFMetadataInstance.isCounter == CommitLog.instance.executor.syncRequested
CFMetadataInstance.isCounter == CommitLog.instance.segmentManager.shutdown
CFMetadataInstance.isCounter == StorageService.instance.allowSimultaneousMoves
CFMetadataInstance.isCounter == StorageService.instance.authSetupCalled
CFMetadataInstance.isCounter == StorageService.instance.authSetupComplete
CFMetadataInstance.isCounter == StorageService.instance.gossipActive
CFMetadataInstance.isCounter == StorageService.instance.initialized
CFMetadataInstance.isCounter == StorageService.instance.isBootstrapMode
CFMetadataInstance.isCounter == StorageService.instance.isDecommissioning
CFMetadataInstance.isCounter == StorageService.instance.isRebuilding
CFMetadataInstance.isCounter == StorageService.instance.isShutdown
CFMetadataInstance.isCounter == StorageService.instance.isSurveyMode
CFMetadataInstance.isCounter == StorageService.instance.joined
CFMetadataInstance.isCounter == StorageService.instance.replacing
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.compactionLogger.enabled
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.currentBoundaries.isInvalid
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.partitionSSTablesByTokenRange
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.keyspace.TEST_FAIL_WRITES
CFMetadataInstance.isCounter == cfsInstance.keyspace.viewManager.enableCoordinatorBatchlog
CFMetadataInstance.isCounter == cfsInstance.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.metric.aliasFactory.isIndex
CFMetadataInstance.isCounter == cfsInstance.metric.factory.isIndex
CFMetadataInstance.isCounter == cfsInstance.readOrdering.current.isBlocking
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isDense
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isView
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.executor.syncComplete.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.bufferPool.usedBuffers
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.managerThreadWaitQueue.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.segmentPrepared.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == QueryProcessor.instance.lastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.statics.complexIdx == QueryProcessor.instance.thriftLastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.legacyProgressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.nextRepairCommand
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.progressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.remainingCFs
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.tokenMetadata.ringVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.totalCFs
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.compactionLogger.identifier
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.currentBoundaries.directoriesVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.fileIndexGenerator
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.keyspace.TEST_FAIL_MV_LOCKS_COUNT
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.keyspace.replicationStrategy.lastInvalidatedVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.readOrdering.current.id
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.readOrdering.current.running
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.sampleLatencyNanos
CFMetadataInstance.partitionColumns.statics.complexIdx == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)
CFMetadataInstance.partitionColumns.statics.complexIdx == daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.EMPTY_SIZE == StorageService.instance.tokenMetadata.partitioner.EMPTY_SIZE
CFMetadataInstance.partitioner.EMPTY_SIZE == StorageService.instance.valueFactory.partitioner.EMPTY_SIZE
CFMetadataInstance.partitioner.EMPTY_SIZE == cfsInstance.metadata.partitioner.EMPTY_SIZE
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == CommitLog.instance.configuration.encryptionContext.chunkLength
CommitLog.instance.executor.markerIntervalNanos == CommitLog.instance.executor.syncIntervalNanos
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.managerThreadWaitQueue.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.segmentPrepared.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.keyspace.writeOrder.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.readOrdering.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)-1
CommitLog.instance.executor.syncComplete.CANCELLED == daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == CommitLog.instance.segmentManager.availableSegment.ENTRY_OVERHEAD_SIZE
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == CommitLog.instance.segmentManager.availableSegment.SYNC_MARKER_SIZE
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.availableSegment.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.bufferPool.bufferSize
CommitLog.instance.segmentManager.allocatingFrom.idBase == CommitLog.instance.segmentManager.availableSegment.idBase
CommitLog.instance.segmentManager.allocatingFrom.nextId == CommitLog.instance.segmentManager.availableSegment.nextId
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == CommitLog.instance.segmentManager.availableSegment.replayLimitId
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == CommitLog.instance.segmentManager.availableSegment.lastSyncedOffset
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE == resultSetInstance.rows_FOR_ENCLOSING_USE
daikon.Quant.pairwiseEqual(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE, resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.allColumnFilter.isFetchAll == true
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK == 2
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == 4
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == 1
CFMetadataInstance.isCounter == false
CFMetadataInstance.partitioner.EMPTY_SIZE == 24
CFMetadataInstance.resource.hash == 493049612
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == 65536
CommitLog.instance.MAX_MUTATION_SIZE == 2621440
CommitLog.instance.archiver.restorePointInTime == 4510987932000L
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS == 100
CommitLog.instance.executor.markerIntervalNanos == 1000000
CommitLog.instance.executor.pending == 0 || CommitLog.instance.executor.pending == 1
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == 12
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == 8
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == 5242880
CommitLog.instance.segmentManager.allocatingFrom.fd == 177
CommitLog.instance.segmentManager.allocatingFrom.id == 1731353097680L
CommitLog.instance.segmentManager.allocatingFrom.idBase == 1731353097676L
CommitLog.instance.segmentManager.allocatingFrom.nextId == 6
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == 1731353097679L
CommitLog.instance.segmentManager.availableSegment.allocatePosition == 28
CommitLog.instance.segmentManager.availableSegment.fd == 178
CommitLog.instance.segmentManager.availableSegment.id == 1731353097681L
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == 20
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize == 3
CommitLog.instance.segmentManager.size == 10485760
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
("oneOf.java.jpp: SEQUENCE unimplemented" != null)
StorageService.instance.RING_DELAY == 30000
daikon.Quant.fuzzy.eq(StorageService.instance.traceProbability, 0.0)
cfsInstance.compactionStrategyManager.fanout == 10
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD == 32
cfsInstance.indexManager.DEFAULT_PAGE_SIZE == 10000
cfsInstance.metadata.resource.hash == 752961001
resultSetInstance.metadata.columnCount == 5
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 8 == 0
3 * CommitLog.instance.executor.lastSyncedAt - 97264940 * CommitLog.instance.executor.pending - 206712755 * CommitLog.instance.executor.written - 2.67645422000265E14 == 0
243 * CommitLog.instance.executor.lastSyncedAt + 8.865273015E9 * CommitLog.instance.executor.pending - 206712755 * CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 2.1678398172259656E16 == 0
243 * CommitLog.instance.executor.lastSyncedAt + 8.865273015E9 * CommitLog.instance.executor.pending - 206712755 * CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 2.1678399825961696E16 == 0
377 * CommitLog.instance.executor.lastSyncedAt - 3.068930024E10 * CommitLog.instance.executor.pending - 206712755 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 3.3633865764017776E16 == 0
243 * CommitLog.instance.executor.lastSyncedAt - 8.865273015E9 * CommitLog.instance.executor.written - 97264940 * CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 2.1678864638847184E16 == 0
243 * CommitLog.instance.executor.lastSyncedAt - 8.865273015E9 * CommitLog.instance.executor.written - 97264940 * CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 2.1678865416966704E16 == 0
67 * CommitLog.instance.executor.lastSyncedAt - 7.67232506E9 * CommitLog.instance.executor.written + 24316235 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 5.977442923300005E15 == 0
10449 * CommitLog.instance.executor.lastSyncedAt - 6.137860048E9 * CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 1773054603 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 9.3218076724740365E17 == 0
10449 * CommitLog.instance.executor.lastSyncedAt - 6.137860048E9 * CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 1773054603 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 9.3218081635028416E17 == 0
81 * CommitLog.instance.executor.pending + 81 * CommitLog.instance.executor.written - CommitLog.instance.segmentManager.allocatingFrom.allocatePosition + 4262 == 0
81 * CommitLog.instance.executor.pending + 81 * CommitLog.instance.executor.written - CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset + 4254 == 0
===========================================================================
org.apache.cassandra.db.RangeTombstoneTest@test7808_1768746989:::dump
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.keyValidator.isByteOrderComparable
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.allocatingFrom.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.availableSegment.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.joinRing
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.useStrictConsistency
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionSpaceCheck
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.enabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.isActive
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_ENABLED
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.isEnabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.shouldDefragment
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.supportsEarlyOpen
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.data.loadsstables
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.directories.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.keyspace.initialized
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.allColumnFilter.isFetchAll
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.keyValidator.isByteOrderComparable
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.valid
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.viewManager.baseTableMetadata.isCompound
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK == CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MIN_THRESHOLD
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CFMetadataInstance.partitioner.MINIMUM.serialVersionUID
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.executor.syncComplete.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.managerThreadWaitQueue.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.segmentPrepared.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == StorageService.instance.threadCounter
CFMetadataInstance.isCounter == CFMetadataInstance.isDense
CFMetadataInstance.isCounter == CFMetadataInstance.isIndex
CFMetadataInstance.isCounter == CFMetadataInstance.isSuper
CFMetadataInstance.isCounter == CFMetadataInstance.isView
CFMetadataInstance.isCounter == CommitLog.instance.executor.shutdown
CFMetadataInstance.isCounter == CommitLog.instance.executor.syncRequested
CFMetadataInstance.isCounter == CommitLog.instance.segmentManager.shutdown
CFMetadataInstance.isCounter == StorageService.instance.allowSimultaneousMoves
CFMetadataInstance.isCounter == StorageService.instance.authSetupCalled
CFMetadataInstance.isCounter == StorageService.instance.authSetupComplete
CFMetadataInstance.isCounter == StorageService.instance.gossipActive
CFMetadataInstance.isCounter == StorageService.instance.initialized
CFMetadataInstance.isCounter == StorageService.instance.isBootstrapMode
CFMetadataInstance.isCounter == StorageService.instance.isDecommissioning
CFMetadataInstance.isCounter == StorageService.instance.isRebuilding
CFMetadataInstance.isCounter == StorageService.instance.isShutdown
CFMetadataInstance.isCounter == StorageService.instance.isSurveyMode
CFMetadataInstance.isCounter == StorageService.instance.joined
CFMetadataInstance.isCounter == StorageService.instance.replacing
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.compactionLogger.enabled
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.currentBoundaries.isInvalid
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.partitionSSTablesByTokenRange
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.keyspace.TEST_FAIL_WRITES
CFMetadataInstance.isCounter == cfsInstance.keyspace.viewManager.enableCoordinatorBatchlog
CFMetadataInstance.isCounter == cfsInstance.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.metric.aliasFactory.isIndex
CFMetadataInstance.isCounter == cfsInstance.metric.factory.isIndex
CFMetadataInstance.isCounter == cfsInstance.readOrdering.current.isBlocking
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isDense
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isView
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.executor.syncComplete.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.bufferPool.usedBuffers
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.managerThreadWaitQueue.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.segmentPrepared.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == QueryProcessor.instance.lastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.statics.complexIdx == QueryProcessor.instance.thriftLastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.legacyProgressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.nextRepairCommand
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.progressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.remainingCFs
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.tokenMetadata.ringVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.totalCFs
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.compactionLogger.identifier
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.currentBoundaries.directoriesVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.fileIndexGenerator
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.keyspace.TEST_FAIL_MV_LOCKS_COUNT
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.keyspace.replicationStrategy.lastInvalidatedVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.readOrdering.current.id
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.readOrdering.current.running
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.sampleLatencyNanos
CFMetadataInstance.partitionColumns.statics.complexIdx == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)
CFMetadataInstance.partitionColumns.statics.complexIdx == daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.EMPTY_SIZE == StorageService.instance.tokenMetadata.partitioner.EMPTY_SIZE
CFMetadataInstance.partitioner.EMPTY_SIZE == StorageService.instance.valueFactory.partitioner.EMPTY_SIZE
CFMetadataInstance.partitioner.EMPTY_SIZE == cfsInstance.metadata.partitioner.EMPTY_SIZE
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == CommitLog.instance.configuration.encryptionContext.chunkLength
CommitLog.instance.executor.markerIntervalNanos == CommitLog.instance.executor.syncIntervalNanos
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.managerThreadWaitQueue.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.segmentPrepared.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.keyspace.writeOrder.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.readOrdering.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)-1
CommitLog.instance.executor.syncComplete.CANCELLED == daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == CommitLog.instance.segmentManager.availableSegment.ENTRY_OVERHEAD_SIZE
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == CommitLog.instance.segmentManager.availableSegment.SYNC_MARKER_SIZE
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.availableSegment.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.bufferPool.bufferSize
CommitLog.instance.segmentManager.allocatingFrom.idBase == CommitLog.instance.segmentManager.availableSegment.idBase
CommitLog.instance.segmentManager.allocatingFrom.nextId == CommitLog.instance.segmentManager.availableSegment.nextId
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == CommitLog.instance.segmentManager.availableSegment.replayLimitId
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == CommitLog.instance.segmentManager.availableSegment.lastSyncedOffset
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE == resultSetInstance.rows_FOR_ENCLOSING_USE
daikon.Quant.pairwiseEqual(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE, resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.allColumnFilter.isFetchAll == true
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK == 2
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == 4
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == 1
CFMetadataInstance.isCounter == false
CFMetadataInstance.partitioner.EMPTY_SIZE == 24
CFMetadataInstance.resource.hash == 493049612
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == 65536
CommitLog.instance.MAX_MUTATION_SIZE == 2621440
CommitLog.instance.archiver.restorePointInTime == 4510987932000L
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS == 100
CommitLog.instance.executor.markerIntervalNanos == 1000000
CommitLog.instance.executor.pending == 0 || CommitLog.instance.executor.pending == 1
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == 12
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == 8
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == 5242880
CommitLog.instance.segmentManager.allocatingFrom.fd == 177
CommitLog.instance.segmentManager.allocatingFrom.id == 1731353097680L
CommitLog.instance.segmentManager.allocatingFrom.idBase == 1731353097676L
CommitLog.instance.segmentManager.allocatingFrom.nextId == 6
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == 1731353097679L
CommitLog.instance.segmentManager.availableSegment.allocatePosition == 28
CommitLog.instance.segmentManager.availableSegment.fd == 178
CommitLog.instance.segmentManager.availableSegment.id == 1731353097681L
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == 20
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize == 3
CommitLog.instance.segmentManager.size == 10485760
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
("oneOf.java.jpp: SEQUENCE unimplemented" != null)
StorageService.instance.RING_DELAY == 30000
daikon.Quant.fuzzy.eq(StorageService.instance.traceProbability, 0.0)
cfsInstance.compactionStrategyManager.fanout == 10
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD == 32
cfsInstance.indexManager.DEFAULT_PAGE_SIZE == 10000
cfsInstance.metadata.resource.hash == 752961001
resultSetInstance.metadata.columnCount == 5
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK >= CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitionColumns.statics.complexIdx <= CommitLog.instance.executor.pending
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.written
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.EMPTY_SIZE > CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.executor.written
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.resource.hash < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.resource.hash > CommitLog.instance.executor.pending
CFMetadataInstance.resource.hash > CommitLog.instance.executor.written
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.executor.pending
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.executor.written
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.executor.pending
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.executor.written
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.archiver.restorePointInTime < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.executor.pending
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.executor.written
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > CommitLog.instance.executor.pending
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > CommitLog.instance.executor.written
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.markerIntervalNanos
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.pending
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.written
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.size
CommitLog.instance.executor.lastSyncedAt > StorageService.instance.RING_DELAY
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.lastSyncedAt > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.lastSyncedAt > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.lastSyncedAt > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.executor.pending
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.executor.written
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.pending < CommitLog.instance.executor.written
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.pending < StorageService.instance.RING_DELAY
CommitLog.instance.executor.pending < cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.pending < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.pending < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.pending < cfsInstance.metadata.resource.hash
CommitLog.instance.executor.pending < resultSetInstance.metadata.columnCount
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.written < StorageService.instance.RING_DELAY
CommitLog.instance.executor.written > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.written > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.written < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.written < cfsInstance.metadata.resource.hash
CommitLog.instance.executor.written > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 8 == 0
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset >= CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > resultSetInstance.metadata.columnCount
35 * CommitLog.instance.executor.lastSyncedAt - 6.1125445733E10 * CommitLog.instance.executor.written + 564102292 * CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 3.123418570579843E15 == 0
35 * CommitLog.instance.executor.lastSyncedAt - 6.1125445733E10 * CommitLog.instance.executor.written + 564102292 * CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 3.123414057761507E15 == 0
35 * CommitLog.instance.executor.lastSyncedAt - 6.1125445733E10 * CommitLog.instance.executor.written + 564102292 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 3.123414057761507E15 == 0
253 * CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.allocatePosition + CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset + 8 == 0
253 * CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset + CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset == 0
===========================================================================
org.apache.cassandra.db.RangeTombstoneTest@test7808_2768746989:::dump
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.keyValidator.isByteOrderComparable
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.allocatingFrom.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.availableSegment.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.joinRing
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.useStrictConsistency
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionSpaceCheck
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.enabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.isActive
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_ENABLED
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.isEnabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.shouldDefragment
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.supportsEarlyOpen
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.data.loadsstables
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.directories.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.keyspace.initialized
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.allColumnFilter.isFetchAll
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.keyValidator.isByteOrderComparable
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.valid
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.viewManager.baseTableMetadata.isCompound
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK == CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MIN_THRESHOLD
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CFMetadataInstance.partitioner.MINIMUM.serialVersionUID
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.executor.syncComplete.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.managerThreadWaitQueue.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.segmentPrepared.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == StorageService.instance.threadCounter
CFMetadataInstance.isCounter == CFMetadataInstance.isDense
CFMetadataInstance.isCounter == CFMetadataInstance.isIndex
CFMetadataInstance.isCounter == CFMetadataInstance.isSuper
CFMetadataInstance.isCounter == CFMetadataInstance.isView
CFMetadataInstance.isCounter == CommitLog.instance.executor.shutdown
CFMetadataInstance.isCounter == CommitLog.instance.executor.syncRequested
CFMetadataInstance.isCounter == CommitLog.instance.segmentManager.shutdown
CFMetadataInstance.isCounter == StorageService.instance.allowSimultaneousMoves
CFMetadataInstance.isCounter == StorageService.instance.authSetupCalled
CFMetadataInstance.isCounter == StorageService.instance.authSetupComplete
CFMetadataInstance.isCounter == StorageService.instance.gossipActive
CFMetadataInstance.isCounter == StorageService.instance.initialized
CFMetadataInstance.isCounter == StorageService.instance.isBootstrapMode
CFMetadataInstance.isCounter == StorageService.instance.isDecommissioning
CFMetadataInstance.isCounter == StorageService.instance.isRebuilding
CFMetadataInstance.isCounter == StorageService.instance.isShutdown
CFMetadataInstance.isCounter == StorageService.instance.isSurveyMode
CFMetadataInstance.isCounter == StorageService.instance.joined
CFMetadataInstance.isCounter == StorageService.instance.replacing
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.compactionLogger.enabled
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.currentBoundaries.isInvalid
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.partitionSSTablesByTokenRange
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.keyspace.TEST_FAIL_WRITES
CFMetadataInstance.isCounter == cfsInstance.keyspace.viewManager.enableCoordinatorBatchlog
CFMetadataInstance.isCounter == cfsInstance.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.metric.aliasFactory.isIndex
CFMetadataInstance.isCounter == cfsInstance.metric.factory.isIndex
CFMetadataInstance.isCounter == cfsInstance.readOrdering.current.isBlocking
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isDense
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isView
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.executor.syncComplete.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.bufferPool.usedBuffers
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.managerThreadWaitQueue.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.segmentPrepared.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == QueryProcessor.instance.lastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.statics.complexIdx == QueryProcessor.instance.thriftLastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.legacyProgressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.nextRepairCommand
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.progressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.remainingCFs
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.tokenMetadata.ringVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.totalCFs
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.compactionLogger.identifier
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.currentBoundaries.directoriesVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.fileIndexGenerator
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.keyspace.TEST_FAIL_MV_LOCKS_COUNT
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.keyspace.replicationStrategy.lastInvalidatedVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.readOrdering.current.id
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.readOrdering.current.running
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.sampleLatencyNanos
CFMetadataInstance.partitionColumns.statics.complexIdx == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)
CFMetadataInstance.partitionColumns.statics.complexIdx == daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.EMPTY_SIZE == StorageService.instance.tokenMetadata.partitioner.EMPTY_SIZE
CFMetadataInstance.partitioner.EMPTY_SIZE == StorageService.instance.valueFactory.partitioner.EMPTY_SIZE
CFMetadataInstance.partitioner.EMPTY_SIZE == cfsInstance.metadata.partitioner.EMPTY_SIZE
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == CommitLog.instance.configuration.encryptionContext.chunkLength
CommitLog.instance.executor.markerIntervalNanos == CommitLog.instance.executor.syncIntervalNanos
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.managerThreadWaitQueue.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.segmentPrepared.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.keyspace.writeOrder.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.readOrdering.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)-1
CommitLog.instance.executor.syncComplete.CANCELLED == daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == CommitLog.instance.segmentManager.availableSegment.ENTRY_OVERHEAD_SIZE
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == CommitLog.instance.segmentManager.availableSegment.SYNC_MARKER_SIZE
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.availableSegment.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.bufferPool.bufferSize
CommitLog.instance.segmentManager.allocatingFrom.idBase == CommitLog.instance.segmentManager.availableSegment.idBase
CommitLog.instance.segmentManager.allocatingFrom.nextId == CommitLog.instance.segmentManager.availableSegment.nextId
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == CommitLog.instance.segmentManager.availableSegment.replayLimitId
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == CommitLog.instance.segmentManager.availableSegment.lastSyncedOffset
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE == resultSetInstance.rows_FOR_ENCLOSING_USE
daikon.Quant.pairwiseEqual(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE, resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.allColumnFilter.isFetchAll == true
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK == 2
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == 4
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == 1
CFMetadataInstance.isCounter == false
CFMetadataInstance.partitioner.EMPTY_SIZE == 24
CFMetadataInstance.resource.hash == 493049612
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == 65536
CommitLog.instance.MAX_MUTATION_SIZE == 2621440
CommitLog.instance.archiver.restorePointInTime == 4510987932000L
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS == 100
CommitLog.instance.executor.markerIntervalNanos == 1000000
CommitLog.instance.executor.pending == 0 || CommitLog.instance.executor.pending == 1
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == 12
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == 8
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == 5242880
CommitLog.instance.segmentManager.allocatingFrom.fd == 177
CommitLog.instance.segmentManager.allocatingFrom.id == 1731353097680L
CommitLog.instance.segmentManager.allocatingFrom.idBase == 1731353097676L
CommitLog.instance.segmentManager.allocatingFrom.nextId == 6
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == 1731353097679L
CommitLog.instance.segmentManager.availableSegment.allocatePosition == 28
CommitLog.instance.segmentManager.availableSegment.fd == 178
CommitLog.instance.segmentManager.availableSegment.id == 1731353097681L
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == 20
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize == 3
CommitLog.instance.segmentManager.size == 10485760
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
("oneOf.java.jpp: SEQUENCE unimplemented" != null)
StorageService.instance.RING_DELAY == 30000
daikon.Quant.fuzzy.eq(StorageService.instance.traceProbability, 0.0)
cfsInstance.compactionStrategyManager.fanout == 10
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD == 32
cfsInstance.indexManager.DEFAULT_PAGE_SIZE == 10000
cfsInstance.metadata.resource.hash == 752961001
resultSetInstance.metadata.columnCount == 5
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK >= CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitionColumns.statics.complexIdx <= CommitLog.instance.executor.pending
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.written
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.EMPTY_SIZE > CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.executor.written
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.resource.hash < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.resource.hash > CommitLog.instance.executor.pending
CFMetadataInstance.resource.hash > CommitLog.instance.executor.written
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.executor.pending
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.executor.written
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.executor.pending
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.executor.written
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.archiver.restorePointInTime < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.executor.pending
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.executor.written
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > CommitLog.instance.executor.pending
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > CommitLog.instance.executor.written
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.markerIntervalNanos
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.pending
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.written
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.size
CommitLog.instance.executor.lastSyncedAt > StorageService.instance.RING_DELAY
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.lastSyncedAt > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.lastSyncedAt > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.lastSyncedAt > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.executor.pending
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.executor.written
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.pending < CommitLog.instance.executor.written
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.pending < StorageService.instance.RING_DELAY
CommitLog.instance.executor.pending < cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.pending < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.pending < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.pending < cfsInstance.metadata.resource.hash
CommitLog.instance.executor.pending < resultSetInstance.metadata.columnCount
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.written < StorageService.instance.RING_DELAY
CommitLog.instance.executor.written > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.written > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.written < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.written < cfsInstance.metadata.resource.hash
CommitLog.instance.executor.written > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 8 == 0
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset >= CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > resultSetInstance.metadata.columnCount
95 * CommitLog.instance.executor.lastSyncedAt - 3.9180313029E10 * CommitLog.instance.executor.written + 53673502 * CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 8.474015504782629E15 == 0
95 * CommitLog.instance.executor.lastSyncedAt - 3.9180313029E10 * CommitLog.instance.executor.written + 53673502 * CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 8.474015075394613E15 == 0
552 * CommitLog.instance.executor.lastSyncedAt + 711797936 * CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 3.561846639E9 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 4.9227824972284544E16 == 0
552 * CommitLog.instance.executor.lastSyncedAt + 711797936 * CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 3.561846639E9 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 4.9227819277901064E16 == 0
253 * CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.allocatePosition + CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset + 8 == 0
253 * CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset + CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset == 0
===========================================================================
org.apache.cassandra.db.RangeTombstoneTest@test7810768746989:::dump
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.keyValidator.isByteOrderComparable
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.allocatingFrom.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.availableSegment.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.joinRing
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.useStrictConsistency
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionSpaceCheck
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.enabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.isActive
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_ENABLED
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.isEnabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.shouldDefragment
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.supportsEarlyOpen
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.data.loadsstables
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.directories.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.keyspace.initialized
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.allColumnFilter.isFetchAll
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.keyValidator.isByteOrderComparable
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.valid
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.viewManager.baseTableMetadata.isCompound
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK == CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MIN_THRESHOLD
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CFMetadataInstance.partitioner.MINIMUM.serialVersionUID
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.executor.syncComplete.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.managerThreadWaitQueue.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.segmentPrepared.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == StorageService.instance.threadCounter
CFMetadataInstance.isCounter == CFMetadataInstance.isDense
CFMetadataInstance.isCounter == CFMetadataInstance.isIndex
CFMetadataInstance.isCounter == CFMetadataInstance.isSuper
CFMetadataInstance.isCounter == CFMetadataInstance.isView
CFMetadataInstance.isCounter == CommitLog.instance.executor.shutdown
CFMetadataInstance.isCounter == CommitLog.instance.executor.syncRequested
CFMetadataInstance.isCounter == CommitLog.instance.segmentManager.shutdown
CFMetadataInstance.isCounter == StorageService.instance.allowSimultaneousMoves
CFMetadataInstance.isCounter == StorageService.instance.authSetupCalled
CFMetadataInstance.isCounter == StorageService.instance.authSetupComplete
CFMetadataInstance.isCounter == StorageService.instance.gossipActive
CFMetadataInstance.isCounter == StorageService.instance.initialized
CFMetadataInstance.isCounter == StorageService.instance.isBootstrapMode
CFMetadataInstance.isCounter == StorageService.instance.isDecommissioning
CFMetadataInstance.isCounter == StorageService.instance.isRebuilding
CFMetadataInstance.isCounter == StorageService.instance.isShutdown
CFMetadataInstance.isCounter == StorageService.instance.isSurveyMode
CFMetadataInstance.isCounter == StorageService.instance.joined
CFMetadataInstance.isCounter == StorageService.instance.replacing
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.compactionLogger.enabled
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.currentBoundaries.isInvalid
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.partitionSSTablesByTokenRange
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.keyspace.TEST_FAIL_WRITES
CFMetadataInstance.isCounter == cfsInstance.keyspace.viewManager.enableCoordinatorBatchlog
CFMetadataInstance.isCounter == cfsInstance.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.metric.aliasFactory.isIndex
CFMetadataInstance.isCounter == cfsInstance.metric.factory.isIndex
CFMetadataInstance.isCounter == cfsInstance.readOrdering.current.isBlocking
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isDense
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isView
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.executor.syncComplete.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.bufferPool.usedBuffers
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.managerThreadWaitQueue.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.segmentPrepared.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == QueryProcessor.instance.lastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.statics.complexIdx == QueryProcessor.instance.thriftLastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.legacyProgressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.nextRepairCommand
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.progressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.remainingCFs
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.tokenMetadata.ringVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.totalCFs
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.compactionLogger.identifier
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.currentBoundaries.directoriesVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.fileIndexGenerator
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.keyspace.TEST_FAIL_MV_LOCKS_COUNT
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.keyspace.replicationStrategy.lastInvalidatedVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.readOrdering.current.id
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.readOrdering.current.running
CFMetadataInstance.partitionColumns.statics.complexIdx == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)
CFMetadataInstance.partitionColumns.statics.complexIdx == daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.EMPTY_SIZE == StorageService.instance.tokenMetadata.partitioner.EMPTY_SIZE
CFMetadataInstance.partitioner.EMPTY_SIZE == StorageService.instance.valueFactory.partitioner.EMPTY_SIZE
CFMetadataInstance.partitioner.EMPTY_SIZE == cfsInstance.metadata.partitioner.EMPTY_SIZE
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == CommitLog.instance.configuration.encryptionContext.chunkLength
CommitLog.instance.executor.markerIntervalNanos == CommitLog.instance.executor.syncIntervalNanos
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.managerThreadWaitQueue.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.segmentPrepared.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.keyspace.writeOrder.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.readOrdering.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)-1
CommitLog.instance.executor.syncComplete.CANCELLED == daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == CommitLog.instance.segmentManager.availableSegment.ENTRY_OVERHEAD_SIZE
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == CommitLog.instance.segmentManager.availableSegment.SYNC_MARKER_SIZE
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.availableSegment.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.bufferPool.bufferSize
CommitLog.instance.segmentManager.allocatingFrom.idBase == CommitLog.instance.segmentManager.availableSegment.idBase
CommitLog.instance.segmentManager.allocatingFrom.nextId == CommitLog.instance.segmentManager.availableSegment.nextId
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == CommitLog.instance.segmentManager.availableSegment.replayLimitId
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == CommitLog.instance.segmentManager.availableSegment.lastSyncedOffset
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE == resultSetInstance.rows_FOR_ENCLOSING_USE
daikon.Quant.pairwiseEqual(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE, resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.allColumnFilter.isFetchAll == true
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK == 2
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == 4
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == 1
CFMetadataInstance.isCounter == false
CFMetadataInstance.partitioner.EMPTY_SIZE == 24
CFMetadataInstance.resource.hash == 493049612
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == 65536
CommitLog.instance.MAX_MUTATION_SIZE == 2621440
CommitLog.instance.archiver.restorePointInTime == 4510987932000L
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS == 100
CommitLog.instance.executor.markerIntervalNanos == 1000000
CommitLog.instance.executor.pending == 0 || CommitLog.instance.executor.pending == 1
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == 12
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == 8
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition == 4494 || CommitLog.instance.segmentManager.allocatingFrom.allocatePosition == 4577 || CommitLog.instance.segmentManager.allocatingFrom.allocatePosition == 4934
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == 5242880
CommitLog.instance.segmentManager.allocatingFrom.fd == 177
CommitLog.instance.segmentManager.allocatingFrom.id == 1731353097680L
CommitLog.instance.segmentManager.allocatingFrom.idBase == 1731353097676L
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset == 4486 || CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset == 4569 || CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset == 4926
CommitLog.instance.segmentManager.allocatingFrom.nextId == 6
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == 1731353097679L
CommitLog.instance.segmentManager.availableSegment.allocatePosition == 28
CommitLog.instance.segmentManager.availableSegment.fd == 178
CommitLog.instance.segmentManager.availableSegment.id == 1731353097681L
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == 20
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize == 3
CommitLog.instance.segmentManager.size == 10485760
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
("oneOf.java.jpp: SEQUENCE unimplemented" != null)
StorageService.instance.RING_DELAY == 30000
daikon.Quant.fuzzy.eq(StorageService.instance.traceProbability, 0.0)
cfsInstance.compactionStrategyManager.fanout == 10
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD == 32
cfsInstance.indexManager.DEFAULT_PAGE_SIZE == 10000
cfsInstance.metadata.resource.hash == 752961001
cfsInstance.sampleLatencyNanos == 0 || cfsInstance.sampleLatencyNanos == 2500000000L
resultSetInstance.metadata.columnCount == 5
137 * CommitLog.instance.executor.lastSyncedAt - 1.06782666533E11 * CommitLog.instance.executor.written + 190769681 * CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 1.2219779267542508E16 == 0
137 * CommitLog.instance.executor.lastSyncedAt - 1.06782666533E11 * CommitLog.instance.executor.written + 190769681 * CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 1.221977774138506E16 == 0
85 * CommitLog.instance.executor.lastSyncedAt - 7.2261960573E10 * CommitLog.instance.executor.written + 190769681 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 7.581770475243407E15 == 0
52 * CommitLog.instance.executor.lastSyncedAt + 870626031 * CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 1286538151 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 4.63711502914646E15 == 0
52 * CommitLog.instance.executor.lastSyncedAt + 870626031 * CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 1286538151 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 4.637108064138212E15 == 0
===========================================================================
org.apache.cassandra.db.RangeTombstoneTest@testOverwritesToDeletedColumns768746989:::dump
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.keyValidator.isByteOrderComparable
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.allocatingFrom.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.availableSegment.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.joinRing
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.useStrictConsistency
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionSpaceCheck
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.enabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.isActive
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_ENABLED
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.isEnabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.shouldDefragment
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.supportsEarlyOpen
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.data.loadsstables
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.directories.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.keyspace.initialized
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.allColumnFilter.isFetchAll
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.keyValidator.isByteOrderComparable
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.valid
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.viewManager.baseTableMetadata.isCompound
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK == CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MIN_THRESHOLD
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CFMetadataInstance.partitioner.MINIMUM.serialVersionUID
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.executor.syncComplete.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.managerThreadWaitQueue.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.segmentPrepared.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == StorageService.instance.threadCounter
CFMetadataInstance.isCounter == CFMetadataInstance.isDense
CFMetadataInstance.isCounter == CFMetadataInstance.isIndex
CFMetadataInstance.isCounter == CFMetadataInstance.isSuper
CFMetadataInstance.isCounter == CFMetadataInstance.isView
CFMetadataInstance.isCounter == CommitLog.instance.executor.shutdown
CFMetadataInstance.isCounter == CommitLog.instance.executor.syncRequested
CFMetadataInstance.isCounter == CommitLog.instance.segmentManager.shutdown
CFMetadataInstance.isCounter == StorageService.instance.allowSimultaneousMoves
CFMetadataInstance.isCounter == StorageService.instance.authSetupCalled
CFMetadataInstance.isCounter == StorageService.instance.authSetupComplete
CFMetadataInstance.isCounter == StorageService.instance.gossipActive
CFMetadataInstance.isCounter == StorageService.instance.initialized
CFMetadataInstance.isCounter == StorageService.instance.isBootstrapMode
CFMetadataInstance.isCounter == StorageService.instance.isDecommissioning
CFMetadataInstance.isCounter == StorageService.instance.isRebuilding
CFMetadataInstance.isCounter == StorageService.instance.isShutdown
CFMetadataInstance.isCounter == StorageService.instance.isSurveyMode
CFMetadataInstance.isCounter == StorageService.instance.joined
CFMetadataInstance.isCounter == StorageService.instance.replacing
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.compactionLogger.enabled
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.currentBoundaries.isInvalid
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.partitionSSTablesByTokenRange
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.keyspace.TEST_FAIL_WRITES
CFMetadataInstance.isCounter == cfsInstance.keyspace.viewManager.enableCoordinatorBatchlog
CFMetadataInstance.isCounter == cfsInstance.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.metric.aliasFactory.isIndex
CFMetadataInstance.isCounter == cfsInstance.metric.factory.isIndex
CFMetadataInstance.isCounter == cfsInstance.readOrdering.current.isBlocking
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isDense
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isView
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.executor.pending
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.executor.syncComplete.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.bufferPool.usedBuffers
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.managerThreadWaitQueue.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.segmentPrepared.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == QueryProcessor.instance.lastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.statics.complexIdx == QueryProcessor.instance.thriftLastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.legacyProgressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.nextRepairCommand
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.progressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.remainingCFs
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.tokenMetadata.ringVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.totalCFs
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.compactionLogger.identifier
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.currentBoundaries.directoriesVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.fileIndexGenerator
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.keyspace.TEST_FAIL_MV_LOCKS_COUNT
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.keyspace.replicationStrategy.lastInvalidatedVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.readOrdering.current.id
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.readOrdering.current.running
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.sampleLatencyNanos
CFMetadataInstance.partitionColumns.statics.complexIdx == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)
CFMetadataInstance.partitionColumns.statics.complexIdx == daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.EMPTY_SIZE == StorageService.instance.tokenMetadata.partitioner.EMPTY_SIZE
CFMetadataInstance.partitioner.EMPTY_SIZE == StorageService.instance.valueFactory.partitioner.EMPTY_SIZE
CFMetadataInstance.partitioner.EMPTY_SIZE == cfsInstance.metadata.partitioner.EMPTY_SIZE
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == CommitLog.instance.configuration.encryptionContext.chunkLength
CommitLog.instance.executor.markerIntervalNanos == CommitLog.instance.executor.syncIntervalNanos
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.managerThreadWaitQueue.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.segmentPrepared.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.keyspace.writeOrder.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.readOrdering.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)-1
CommitLog.instance.executor.syncComplete.CANCELLED == daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == CommitLog.instance.segmentManager.availableSegment.ENTRY_OVERHEAD_SIZE
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == CommitLog.instance.segmentManager.availableSegment.SYNC_MARKER_SIZE
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.availableSegment.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.bufferPool.bufferSize
CommitLog.instance.segmentManager.allocatingFrom.idBase == CommitLog.instance.segmentManager.availableSegment.idBase
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset == CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.nextId == CommitLog.instance.segmentManager.availableSegment.nextId
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == CommitLog.instance.segmentManager.availableSegment.replayLimitId
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == CommitLog.instance.segmentManager.availableSegment.lastSyncedOffset
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE == resultSetInstance.rows_FOR_ENCLOSING_USE
daikon.Quant.pairwiseEqual(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE, resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.allColumnFilter.isFetchAll == true
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK == 2
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == 4
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == 1
CFMetadataInstance.isCounter == false
CFMetadataInstance.partitioner.EMPTY_SIZE == 24
CFMetadataInstance.resource.hash == 493049612
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == 65536
CommitLog.instance.MAX_MUTATION_SIZE == 2621440
CommitLog.instance.archiver.restorePointInTime == 4510987932000L
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS == 100
CommitLog.instance.executor.markerIntervalNanos == 1000000
CommitLog.instance.executor.written == 65 || CommitLog.instance.executor.written == 66 || CommitLog.instance.executor.written == 67
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == 12
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == 8
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition == 9340 || CommitLog.instance.segmentManager.allocatingFrom.allocatePosition == 9451 || CommitLog.instance.segmentManager.allocatingFrom.allocatePosition == 9555
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == 5242880
CommitLog.instance.segmentManager.allocatingFrom.fd == 177
CommitLog.instance.segmentManager.allocatingFrom.id == 1731353097680L
CommitLog.instance.segmentManager.allocatingFrom.idBase == 1731353097676L
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset == 9332 || CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset == 9443 || CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset == 9547
CommitLog.instance.segmentManager.allocatingFrom.nextId == 6
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == 1731353097679L
CommitLog.instance.segmentManager.availableSegment.allocatePosition == 28
CommitLog.instance.segmentManager.availableSegment.fd == 178
CommitLog.instance.segmentManager.availableSegment.id == 1731353097681L
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == 20
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize == 3
CommitLog.instance.segmentManager.size == 10485760
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
("oneOf.java.jpp: SEQUENCE unimplemented" != null)
StorageService.instance.RING_DELAY == 30000
daikon.Quant.fuzzy.eq(StorageService.instance.traceProbability, 0.0)
cfsInstance.compactionStrategyManager.fanout == 10
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD == 32
cfsInstance.indexManager.DEFAULT_PAGE_SIZE == 10000
cfsInstance.metadata.resource.hash == 752961001
resultSetInstance.metadata.columnCount == 5
===========================================================================
org.apache.cassandra.db.RangeTombstoneTest@testRangeTombstoneCompaction768746989:::dump
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.keyValidator.isByteOrderComparable
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.allocatingFrom.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.availableSegment.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.joinRing
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.useStrictConsistency
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionSpaceCheck
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.enabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.isActive
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_ENABLED
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.isEnabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.shouldDefragment
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.supportsEarlyOpen
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.data.loadsstables
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.directories.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.keyspace.initialized
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.allColumnFilter.isFetchAll
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.keyValidator.isByteOrderComparable
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.valid
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.viewManager.baseTableMetadata.isCompound
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK == CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MIN_THRESHOLD
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CFMetadataInstance.partitioner.MINIMUM.serialVersionUID
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.executor.syncComplete.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.managerThreadWaitQueue.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.segmentPrepared.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == StorageService.instance.threadCounter
CFMetadataInstance.isCounter == CFMetadataInstance.isDense
CFMetadataInstance.isCounter == CFMetadataInstance.isIndex
CFMetadataInstance.isCounter == CFMetadataInstance.isSuper
CFMetadataInstance.isCounter == CFMetadataInstance.isView
CFMetadataInstance.isCounter == CommitLog.instance.executor.shutdown
CFMetadataInstance.isCounter == CommitLog.instance.executor.syncRequested
CFMetadataInstance.isCounter == CommitLog.instance.segmentManager.shutdown
CFMetadataInstance.isCounter == StorageService.instance.allowSimultaneousMoves
CFMetadataInstance.isCounter == StorageService.instance.authSetupCalled
CFMetadataInstance.isCounter == StorageService.instance.authSetupComplete
CFMetadataInstance.isCounter == StorageService.instance.gossipActive
CFMetadataInstance.isCounter == StorageService.instance.initialized
CFMetadataInstance.isCounter == StorageService.instance.isBootstrapMode
CFMetadataInstance.isCounter == StorageService.instance.isDecommissioning
CFMetadataInstance.isCounter == StorageService.instance.isRebuilding
CFMetadataInstance.isCounter == StorageService.instance.isShutdown
CFMetadataInstance.isCounter == StorageService.instance.isSurveyMode
CFMetadataInstance.isCounter == StorageService.instance.joined
CFMetadataInstance.isCounter == StorageService.instance.replacing
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.compactionLogger.enabled
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.currentBoundaries.isInvalid
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.partitionSSTablesByTokenRange
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.keyspace.TEST_FAIL_WRITES
CFMetadataInstance.isCounter == cfsInstance.keyspace.viewManager.enableCoordinatorBatchlog
CFMetadataInstance.isCounter == cfsInstance.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.metric.aliasFactory.isIndex
CFMetadataInstance.isCounter == cfsInstance.metric.factory.isIndex
CFMetadataInstance.isCounter == cfsInstance.readOrdering.current.isBlocking
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isDense
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isView
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.executor.syncComplete.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.bufferPool.usedBuffers
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.managerThreadWaitQueue.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.segmentPrepared.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == QueryProcessor.instance.lastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.statics.complexIdx == QueryProcessor.instance.thriftLastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.legacyProgressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.nextRepairCommand
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.progressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.remainingCFs
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.tokenMetadata.ringVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.totalCFs
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.compactionLogger.identifier
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.currentBoundaries.directoriesVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.fileIndexGenerator
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.keyspace.TEST_FAIL_MV_LOCKS_COUNT
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.keyspace.replicationStrategy.lastInvalidatedVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.readOrdering.current.id
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.readOrdering.current.running
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.sampleLatencyNanos
CFMetadataInstance.partitionColumns.statics.complexIdx == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)
CFMetadataInstance.partitionColumns.statics.complexIdx == daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.EMPTY_SIZE == StorageService.instance.tokenMetadata.partitioner.EMPTY_SIZE
CFMetadataInstance.partitioner.EMPTY_SIZE == StorageService.instance.valueFactory.partitioner.EMPTY_SIZE
CFMetadataInstance.partitioner.EMPTY_SIZE == cfsInstance.metadata.partitioner.EMPTY_SIZE
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == CommitLog.instance.configuration.encryptionContext.chunkLength
CommitLog.instance.executor.markerIntervalNanos == CommitLog.instance.executor.syncIntervalNanos
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.managerThreadWaitQueue.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.segmentPrepared.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.keyspace.writeOrder.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.readOrdering.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)-1
CommitLog.instance.executor.syncComplete.CANCELLED == daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == CommitLog.instance.segmentManager.availableSegment.ENTRY_OVERHEAD_SIZE
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == CommitLog.instance.segmentManager.availableSegment.SYNC_MARKER_SIZE
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.availableSegment.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.bufferPool.bufferSize
CommitLog.instance.segmentManager.allocatingFrom.idBase == CommitLog.instance.segmentManager.availableSegment.idBase
CommitLog.instance.segmentManager.allocatingFrom.nextId == CommitLog.instance.segmentManager.availableSegment.nextId
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == CommitLog.instance.segmentManager.availableSegment.replayLimitId
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == CommitLog.instance.segmentManager.availableSegment.lastSyncedOffset
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE == resultSetInstance.rows_FOR_ENCLOSING_USE
daikon.Quant.pairwiseEqual(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE, resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.allColumnFilter.isFetchAll == true
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK == 2
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == 4
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == 1
CFMetadataInstance.isCounter == false
CFMetadataInstance.partitioner.EMPTY_SIZE == 24
CFMetadataInstance.resource.hash == 493049612
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == 65536
CommitLog.instance.MAX_MUTATION_SIZE == 2621440
CommitLog.instance.archiver.restorePointInTime == 4510987932000L
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS == 100
CommitLog.instance.executor.markerIntervalNanos == 1000000
CommitLog.instance.executor.pending == 0 || CommitLog.instance.executor.pending == 1
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == 12
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == 8
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == 5242880
CommitLog.instance.segmentManager.allocatingFrom.fd == 177
CommitLog.instance.segmentManager.allocatingFrom.id == 1731353097680L
CommitLog.instance.segmentManager.allocatingFrom.idBase == 1731353097676L
CommitLog.instance.segmentManager.allocatingFrom.nextId == 6
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == 1731353097679L
CommitLog.instance.segmentManager.availableSegment.allocatePosition == 28
CommitLog.instance.segmentManager.availableSegment.fd == 178
CommitLog.instance.segmentManager.availableSegment.id == 1731353097681L
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == 20
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize == 3
CommitLog.instance.segmentManager.size == 10485760
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
("oneOf.java.jpp: SEQUENCE unimplemented" != null)
StorageService.instance.RING_DELAY == 30000
daikon.Quant.fuzzy.eq(StorageService.instance.traceProbability, 0.0)
cfsInstance.compactionStrategyManager.fanout == 10
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD == 32
cfsInstance.indexManager.DEFAULT_PAGE_SIZE == 10000
cfsInstance.metadata.resource.hash == 752961001
resultSetInstance.metadata.columnCount == 5
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK >= CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitionColumns.statics.complexIdx <= CommitLog.instance.executor.pending
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.written
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.EMPTY_SIZE > CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.executor.written
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.resource.hash < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.resource.hash > CommitLog.instance.executor.pending
CFMetadataInstance.resource.hash > CommitLog.instance.executor.written
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.executor.pending
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.executor.written
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.executor.pending
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.executor.written
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.archiver.restorePointInTime < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.executor.pending
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.executor.written
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > CommitLog.instance.executor.pending
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > CommitLog.instance.executor.written
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.markerIntervalNanos
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.pending
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.written
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.size
CommitLog.instance.executor.lastSyncedAt > StorageService.instance.RING_DELAY
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.lastSyncedAt > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.lastSyncedAt > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.lastSyncedAt > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.executor.pending
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.executor.written
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.pending < CommitLog.instance.executor.written
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.pending < StorageService.instance.RING_DELAY
CommitLog.instance.executor.pending < cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.pending < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.pending < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.pending < cfsInstance.metadata.resource.hash
CommitLog.instance.executor.pending < resultSetInstance.metadata.columnCount
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.written < StorageService.instance.RING_DELAY
CommitLog.instance.executor.written > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.written > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.written < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.written < cfsInstance.metadata.resource.hash
CommitLog.instance.executor.written > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 8 == 0
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset >= CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > resultSetInstance.metadata.columnCount
104 * CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.allocatePosition + CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset + 8 == 0
104 * CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset + CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset == 0
===========================================================================
org.apache.cassandra.db.RangeTombstoneTest@testRowWithRangeTombstonesUpdatesSecondaryIndex768746989:::dump
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.keyValidator.isByteOrderComparable
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.allocatingFrom.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.availableSegment.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.joinRing
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.useStrictConsistency
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionSpaceCheck
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.enabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.isActive
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_ENABLED
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.isEnabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.shouldDefragment
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.supportsEarlyOpen
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.data.loadsstables
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.directories.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.keyspace.initialized
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.allColumnFilter.isFetchAll
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.keyValidator.isByteOrderComparable
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.valid
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.viewManager.baseTableMetadata.isCompound
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK == CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MIN_THRESHOLD
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CFMetadataInstance.partitioner.MINIMUM.serialVersionUID
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.executor.syncComplete.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.managerThreadWaitQueue.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.segmentPrepared.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == StorageService.instance.threadCounter
CFMetadataInstance.isCounter == CFMetadataInstance.isDense
CFMetadataInstance.isCounter == CFMetadataInstance.isIndex
CFMetadataInstance.isCounter == CFMetadataInstance.isSuper
CFMetadataInstance.isCounter == CFMetadataInstance.isView
CFMetadataInstance.isCounter == CommitLog.instance.executor.shutdown
CFMetadataInstance.isCounter == CommitLog.instance.executor.syncRequested
CFMetadataInstance.isCounter == CommitLog.instance.segmentManager.shutdown
CFMetadataInstance.isCounter == StorageService.instance.allowSimultaneousMoves
CFMetadataInstance.isCounter == StorageService.instance.authSetupCalled
CFMetadataInstance.isCounter == StorageService.instance.authSetupComplete
CFMetadataInstance.isCounter == StorageService.instance.gossipActive
CFMetadataInstance.isCounter == StorageService.instance.initialized
CFMetadataInstance.isCounter == StorageService.instance.isBootstrapMode
CFMetadataInstance.isCounter == StorageService.instance.isDecommissioning
CFMetadataInstance.isCounter == StorageService.instance.isRebuilding
CFMetadataInstance.isCounter == StorageService.instance.isShutdown
CFMetadataInstance.isCounter == StorageService.instance.isSurveyMode
CFMetadataInstance.isCounter == StorageService.instance.joined
CFMetadataInstance.isCounter == StorageService.instance.replacing
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.compactionLogger.enabled
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.currentBoundaries.isInvalid
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.partitionSSTablesByTokenRange
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.keyspace.TEST_FAIL_WRITES
CFMetadataInstance.isCounter == cfsInstance.keyspace.viewManager.enableCoordinatorBatchlog
CFMetadataInstance.isCounter == cfsInstance.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.metric.aliasFactory.isIndex
CFMetadataInstance.isCounter == cfsInstance.metric.factory.isIndex
CFMetadataInstance.isCounter == cfsInstance.readOrdering.current.isBlocking
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isDense
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isView
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.executor.pending
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.executor.syncComplete.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.bufferPool.usedBuffers
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.managerThreadWaitQueue.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.segmentPrepared.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == QueryProcessor.instance.lastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.statics.complexIdx == QueryProcessor.instance.thriftLastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.legacyProgressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.nextRepairCommand
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.progressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.remainingCFs
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.tokenMetadata.ringVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.totalCFs
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.compactionLogger.identifier
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.currentBoundaries.directoriesVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.fileIndexGenerator
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.keyspace.TEST_FAIL_MV_LOCKS_COUNT
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.keyspace.replicationStrategy.lastInvalidatedVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.readOrdering.current.id
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.readOrdering.current.running
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.sampleLatencyNanos
CFMetadataInstance.partitionColumns.statics.complexIdx == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)
CFMetadataInstance.partitionColumns.statics.complexIdx == daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.EMPTY_SIZE == StorageService.instance.tokenMetadata.partitioner.EMPTY_SIZE
CFMetadataInstance.partitioner.EMPTY_SIZE == StorageService.instance.valueFactory.partitioner.EMPTY_SIZE
CFMetadataInstance.partitioner.EMPTY_SIZE == cfsInstance.metadata.partitioner.EMPTY_SIZE
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == CommitLog.instance.configuration.encryptionContext.chunkLength
CommitLog.instance.executor.markerIntervalNanos == CommitLog.instance.executor.syncIntervalNanos
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.managerThreadWaitQueue.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.segmentPrepared.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.keyspace.writeOrder.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.readOrdering.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)-1
CommitLog.instance.executor.syncComplete.CANCELLED == daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == CommitLog.instance.segmentManager.availableSegment.ENTRY_OVERHEAD_SIZE
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == CommitLog.instance.segmentManager.availableSegment.SYNC_MARKER_SIZE
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.availableSegment.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.bufferPool.bufferSize
CommitLog.instance.segmentManager.allocatingFrom.idBase == CommitLog.instance.segmentManager.availableSegment.idBase
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset == CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.nextId == CommitLog.instance.segmentManager.availableSegment.nextId
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == CommitLog.instance.segmentManager.availableSegment.replayLimitId
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == CommitLog.instance.segmentManager.availableSegment.lastSyncedOffset
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE == resultSetInstance.rows_FOR_ENCLOSING_USE
daikon.Quant.pairwiseEqual(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE, resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.allColumnFilter.isFetchAll == true
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK == 2
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == 4
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == 1
CFMetadataInstance.isCounter == false
CFMetadataInstance.partitioner.EMPTY_SIZE == 24
CFMetadataInstance.resource.hash == 493049612
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == 65536
CommitLog.instance.MAX_MUTATION_SIZE == 2621440
CommitLog.instance.archiver.restorePointInTime == 4510987932000L
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS == 100
CommitLog.instance.executor.markerIntervalNanos == 1000000
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == 12
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == 8
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == 5242880
CommitLog.instance.segmentManager.allocatingFrom.fd == 177
CommitLog.instance.segmentManager.allocatingFrom.id == 1731353097680L
CommitLog.instance.segmentManager.allocatingFrom.idBase == 1731353097676L
CommitLog.instance.segmentManager.allocatingFrom.nextId == 6
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == 1731353097679L
CommitLog.instance.segmentManager.availableSegment.allocatePosition == 28
CommitLog.instance.segmentManager.availableSegment.fd == 178
CommitLog.instance.segmentManager.availableSegment.id == 1731353097681L
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == 20
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize == 3
CommitLog.instance.segmentManager.size == 10485760
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
("oneOf.java.jpp: SEQUENCE unimplemented" != null)
StorageService.instance.RING_DELAY == 30000
daikon.Quant.fuzzy.eq(StorageService.instance.traceProbability, 0.0)
cfsInstance.compactionStrategyManager.fanout == 10
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD == 32
cfsInstance.indexManager.DEFAULT_PAGE_SIZE == 10000
cfsInstance.metadata.resource.hash == 752961001
resultSetInstance.metadata.columnCount == 5
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.written
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.executor.written
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.resource.hash < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.resource.hash > CommitLog.instance.executor.written
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.executor.written
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.executor.written
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.archiver.restorePointInTime < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.executor.written
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > CommitLog.instance.executor.written
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.markerIntervalNanos
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.written
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.size
CommitLog.instance.executor.lastSyncedAt > StorageService.instance.RING_DELAY
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.lastSyncedAt > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.lastSyncedAt > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.lastSyncedAt > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.executor.written
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.written < StorageService.instance.RING_DELAY
CommitLog.instance.executor.written > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.written > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.written < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.written < cfsInstance.metadata.resource.hash
CommitLog.instance.executor.written > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 8 == 0
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > resultSetInstance.metadata.columnCount
28 * CommitLog.instance.executor.lastSyncedAt - 3.5872812582E10 * CommitLog.instance.executor.written + 326559207 * CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 2.498718516631973E15 == 0
28 * CommitLog.instance.executor.lastSyncedAt - 3.5872812582E10 * CommitLog.instance.executor.written + 326559207 * CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 2.498715904158317E15 == 0
===========================================================================
org.apache.cassandra.db.RangeTombstoneTest@testTrackTimesPartitionTombstone768746989:::dump
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.keyValidator.isByteOrderComparable
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.allocatingFrom.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.availableSegment.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.joinRing
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.useStrictConsistency
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionSpaceCheck
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.enabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.isActive
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_ENABLED
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.isEnabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.shouldDefragment
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.supportsEarlyOpen
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.data.loadsstables
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.directories.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.keyspace.initialized
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.allColumnFilter.isFetchAll
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.keyValidator.isByteOrderComparable
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.valid
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.viewManager.baseTableMetadata.isCompound
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK == CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MIN_THRESHOLD
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CFMetadataInstance.partitioner.MINIMUM.serialVersionUID
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.executor.syncComplete.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.managerThreadWaitQueue.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.segmentPrepared.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == StorageService.instance.threadCounter
CFMetadataInstance.isCounter == CFMetadataInstance.isDense
CFMetadataInstance.isCounter == CFMetadataInstance.isIndex
CFMetadataInstance.isCounter == CFMetadataInstance.isSuper
CFMetadataInstance.isCounter == CFMetadataInstance.isView
CFMetadataInstance.isCounter == CommitLog.instance.executor.shutdown
CFMetadataInstance.isCounter == CommitLog.instance.executor.syncRequested
CFMetadataInstance.isCounter == CommitLog.instance.segmentManager.shutdown
CFMetadataInstance.isCounter == StorageService.instance.allowSimultaneousMoves
CFMetadataInstance.isCounter == StorageService.instance.authSetupCalled
CFMetadataInstance.isCounter == StorageService.instance.authSetupComplete
CFMetadataInstance.isCounter == StorageService.instance.gossipActive
CFMetadataInstance.isCounter == StorageService.instance.initialized
CFMetadataInstance.isCounter == StorageService.instance.isBootstrapMode
CFMetadataInstance.isCounter == StorageService.instance.isDecommissioning
CFMetadataInstance.isCounter == StorageService.instance.isRebuilding
CFMetadataInstance.isCounter == StorageService.instance.isShutdown
CFMetadataInstance.isCounter == StorageService.instance.isSurveyMode
CFMetadataInstance.isCounter == StorageService.instance.joined
CFMetadataInstance.isCounter == StorageService.instance.replacing
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.compactionLogger.enabled
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.currentBoundaries.isInvalid
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.partitionSSTablesByTokenRange
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.keyspace.TEST_FAIL_WRITES
CFMetadataInstance.isCounter == cfsInstance.keyspace.viewManager.enableCoordinatorBatchlog
CFMetadataInstance.isCounter == cfsInstance.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.metric.aliasFactory.isIndex
CFMetadataInstance.isCounter == cfsInstance.metric.factory.isIndex
CFMetadataInstance.isCounter == cfsInstance.readOrdering.current.isBlocking
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isDense
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isView
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.executor.syncComplete.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.bufferPool.usedBuffers
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.managerThreadWaitQueue.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.segmentPrepared.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == QueryProcessor.instance.lastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.statics.complexIdx == QueryProcessor.instance.thriftLastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.legacyProgressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.nextRepairCommand
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.progressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.remainingCFs
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.tokenMetadata.ringVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.totalCFs
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.compactionLogger.identifier
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.currentBoundaries.directoriesVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.fileIndexGenerator
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.keyspace.TEST_FAIL_MV_LOCKS_COUNT
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.keyspace.replicationStrategy.lastInvalidatedVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.readOrdering.current.id
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.readOrdering.current.running
CFMetadataInstance.partitionColumns.statics.complexIdx == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)
CFMetadataInstance.partitionColumns.statics.complexIdx == daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.EMPTY_SIZE == StorageService.instance.tokenMetadata.partitioner.EMPTY_SIZE
CFMetadataInstance.partitioner.EMPTY_SIZE == StorageService.instance.valueFactory.partitioner.EMPTY_SIZE
CFMetadataInstance.partitioner.EMPTY_SIZE == cfsInstance.metadata.partitioner.EMPTY_SIZE
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == CommitLog.instance.configuration.encryptionContext.chunkLength
CommitLog.instance.executor.markerIntervalNanos == CommitLog.instance.executor.syncIntervalNanos
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.managerThreadWaitQueue.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.segmentPrepared.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.keyspace.writeOrder.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.readOrdering.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)-1
CommitLog.instance.executor.syncComplete.CANCELLED == daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == CommitLog.instance.segmentManager.availableSegment.ENTRY_OVERHEAD_SIZE
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == CommitLog.instance.segmentManager.availableSegment.SYNC_MARKER_SIZE
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.availableSegment.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.bufferPool.bufferSize
CommitLog.instance.segmentManager.allocatingFrom.idBase == CommitLog.instance.segmentManager.availableSegment.idBase
CommitLog.instance.segmentManager.allocatingFrom.nextId == CommitLog.instance.segmentManager.availableSegment.nextId
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == CommitLog.instance.segmentManager.availableSegment.replayLimitId
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == CommitLog.instance.segmentManager.availableSegment.lastSyncedOffset
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE == resultSetInstance.rows_FOR_ENCLOSING_USE
daikon.Quant.pairwiseEqual(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE, resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.allColumnFilter.isFetchAll == true
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK == 2
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == 4
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == 1
CFMetadataInstance.isCounter == false
CFMetadataInstance.partitioner.EMPTY_SIZE == 24
CFMetadataInstance.resource.hash == 493049612
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == 65536
CommitLog.instance.MAX_MUTATION_SIZE == 2621440
CommitLog.instance.archiver.restorePointInTime == 4510987932000L
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS == 100
CommitLog.instance.executor.markerIntervalNanos == 1000000
CommitLog.instance.executor.pending == 0 || CommitLog.instance.executor.pending == 1
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == 12
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == 8
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition == 1317 || CommitLog.instance.segmentManager.allocatingFrom.allocatePosition == 1384 || CommitLog.instance.segmentManager.allocatingFrom.allocatePosition == 1726
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == 5242880
CommitLog.instance.segmentManager.allocatingFrom.fd == 177
CommitLog.instance.segmentManager.allocatingFrom.id == 1731353097680L
CommitLog.instance.segmentManager.allocatingFrom.idBase == 1731353097676L
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset == 1309 || CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset == 1376 || CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset == 1718
CommitLog.instance.segmentManager.allocatingFrom.nextId == 6
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == 1731353097679L
CommitLog.instance.segmentManager.availableSegment.allocatePosition == 28
CommitLog.instance.segmentManager.availableSegment.fd == 178
CommitLog.instance.segmentManager.availableSegment.id == 1731353097681L
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == 20
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize == 3
CommitLog.instance.segmentManager.size == 10485760
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
("oneOf.java.jpp: SEQUENCE unimplemented" != null)
StorageService.instance.RING_DELAY == 30000
daikon.Quant.fuzzy.eq(StorageService.instance.traceProbability, 0.0)
cfsInstance.compactionStrategyManager.fanout == 10
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD == 32
cfsInstance.indexManager.DEFAULT_PAGE_SIZE == 10000
cfsInstance.metadata.resource.hash == 752961001
cfsInstance.sampleLatencyNanos == 2500000000L
resultSetInstance.metadata.columnCount == 5 || resultSetInstance.metadata.columnCount == 8
409 * CommitLog.instance.executor.lastSyncedAt - 2.15430649451E11 * CommitLog.instance.executor.pending - 959639658 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 3.6484296124014304E16 == 0
208 * CommitLog.instance.executor.lastSyncedAt - 2.35661701999E11 * CommitLog.instance.executor.written + 1240538037 * CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 1.8556162163977868E16 == 0
208 * CommitLog.instance.executor.lastSyncedAt - 2.35661701999E11 * CommitLog.instance.executor.written + 1240538037 * CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 1.8556152239673572E16 == 0
5 * CommitLog.instance.executor.lastSyncedAt - 3.531649991E9 * CommitLog.instance.executor.written + 14172987 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 4.46045135745461E14 == 0
2 * CommitLog.instance.executor.lastSyncedAt - 503788985 * CommitLog.instance.executor.written + 135970787 * resultSetInstance.metadata.columnCount - 1.7841353883051E14 == 0
97342 * CommitLog.instance.executor.lastSyncedAt - 2.15430649451E11 * CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 1.2963589153E10 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 8.6832607540702095E18 == 0
1026 * CommitLog.instance.executor.lastSyncedAt - 678741279 * CommitLog.instance.segmentManager.allocatingFrom.allocatePosition + 2.35661701999E11 * resultSetInstance.metadata.columnCount - 9.1527095674791936E16 == 0
97342 * CommitLog.instance.executor.lastSyncedAt - 2.15430649451E11 * CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 1.2963589153E10 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 8.6832624775154053E18 == 0
1026 * CommitLog.instance.executor.lastSyncedAt - 678741279 * CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset + 2.35661701999E11 * resultSetInstance.metadata.columnCount - 9.1527101104722176E16 == 0
714 * CommitLog.instance.executor.lastSyncedAt - 95087451 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset + 2.15430649451E11 * resultSetInstance.metadata.columnCount - 6.3695203710981936E16 == 0
===========================================================================
org.apache.cassandra.db.RangeTombstoneTest@testTrackTimesPartitionTombstoneWithData768746989:::dump
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.keyValidator.isByteOrderComparable
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.allocatingFrom.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.availableSegment.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.joinRing
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.useStrictConsistency
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionSpaceCheck
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.enabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.isActive
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_ENABLED
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.isEnabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.shouldDefragment
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.supportsEarlyOpen
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.data.loadsstables
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.directories.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.keyspace.initialized
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.allColumnFilter.isFetchAll
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.keyValidator.isByteOrderComparable
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.valid
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.viewManager.baseTableMetadata.isCompound
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK == CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MIN_THRESHOLD
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CFMetadataInstance.partitioner.MINIMUM.serialVersionUID
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.executor.syncComplete.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.managerThreadWaitQueue.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.segmentPrepared.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == StorageService.instance.threadCounter
CFMetadataInstance.isCounter == CFMetadataInstance.isDense
CFMetadataInstance.isCounter == CFMetadataInstance.isIndex
CFMetadataInstance.isCounter == CFMetadataInstance.isSuper
CFMetadataInstance.isCounter == CFMetadataInstance.isView
CFMetadataInstance.isCounter == CommitLog.instance.executor.shutdown
CFMetadataInstance.isCounter == CommitLog.instance.executor.syncRequested
CFMetadataInstance.isCounter == CommitLog.instance.segmentManager.shutdown
CFMetadataInstance.isCounter == StorageService.instance.allowSimultaneousMoves
CFMetadataInstance.isCounter == StorageService.instance.authSetupCalled
CFMetadataInstance.isCounter == StorageService.instance.authSetupComplete
CFMetadataInstance.isCounter == StorageService.instance.gossipActive
CFMetadataInstance.isCounter == StorageService.instance.initialized
CFMetadataInstance.isCounter == StorageService.instance.isBootstrapMode
CFMetadataInstance.isCounter == StorageService.instance.isDecommissioning
CFMetadataInstance.isCounter == StorageService.instance.isRebuilding
CFMetadataInstance.isCounter == StorageService.instance.isShutdown
CFMetadataInstance.isCounter == StorageService.instance.isSurveyMode
CFMetadataInstance.isCounter == StorageService.instance.joined
CFMetadataInstance.isCounter == StorageService.instance.replacing
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.compactionLogger.enabled
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.currentBoundaries.isInvalid
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.partitionSSTablesByTokenRange
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.keyspace.TEST_FAIL_WRITES
CFMetadataInstance.isCounter == cfsInstance.keyspace.viewManager.enableCoordinatorBatchlog
CFMetadataInstance.isCounter == cfsInstance.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.metric.aliasFactory.isIndex
CFMetadataInstance.isCounter == cfsInstance.metric.factory.isIndex
CFMetadataInstance.isCounter == cfsInstance.readOrdering.current.isBlocking
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isDense
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isView
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.executor.syncComplete.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.bufferPool.usedBuffers
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.managerThreadWaitQueue.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.segmentPrepared.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == QueryProcessor.instance.lastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.statics.complexIdx == QueryProcessor.instance.thriftLastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.legacyProgressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.nextRepairCommand
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.progressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.remainingCFs
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.tokenMetadata.ringVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.totalCFs
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.compactionLogger.identifier
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.currentBoundaries.directoriesVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.fileIndexGenerator
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.keyspace.TEST_FAIL_MV_LOCKS_COUNT
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.keyspace.replicationStrategy.lastInvalidatedVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.readOrdering.current.id
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.readOrdering.current.running
CFMetadataInstance.partitionColumns.statics.complexIdx == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)
CFMetadataInstance.partitionColumns.statics.complexIdx == daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.EMPTY_SIZE == StorageService.instance.tokenMetadata.partitioner.EMPTY_SIZE
CFMetadataInstance.partitioner.EMPTY_SIZE == StorageService.instance.valueFactory.partitioner.EMPTY_SIZE
CFMetadataInstance.partitioner.EMPTY_SIZE == cfsInstance.metadata.partitioner.EMPTY_SIZE
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == CommitLog.instance.configuration.encryptionContext.chunkLength
CommitLog.instance.executor.markerIntervalNanos == CommitLog.instance.executor.syncIntervalNanos
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.managerThreadWaitQueue.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.segmentPrepared.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.keyspace.writeOrder.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.readOrdering.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)-1
CommitLog.instance.executor.syncComplete.CANCELLED == daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == CommitLog.instance.segmentManager.availableSegment.ENTRY_OVERHEAD_SIZE
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == CommitLog.instance.segmentManager.availableSegment.SYNC_MARKER_SIZE
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.availableSegment.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.bufferPool.bufferSize
CommitLog.instance.segmentManager.allocatingFrom.idBase == CommitLog.instance.segmentManager.availableSegment.idBase
CommitLog.instance.segmentManager.allocatingFrom.nextId == CommitLog.instance.segmentManager.availableSegment.nextId
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == CommitLog.instance.segmentManager.availableSegment.replayLimitId
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == CommitLog.instance.segmentManager.availableSegment.lastSyncedOffset
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE == resultSetInstance.rows_FOR_ENCLOSING_USE
daikon.Quant.pairwiseEqual(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE, resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.allColumnFilter.isFetchAll == true
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK == 2
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == 4
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == 1
CFMetadataInstance.isCounter == false
CFMetadataInstance.partitioner.EMPTY_SIZE == 24
CFMetadataInstance.resource.hash == 493049612
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == 65536
CommitLog.instance.MAX_MUTATION_SIZE == 2621440
CommitLog.instance.archiver.restorePointInTime == 4510987932000L
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS == 100
CommitLog.instance.executor.markerIntervalNanos == 1000000
CommitLog.instance.executor.pending == 0 || CommitLog.instance.executor.pending == 1
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == 12
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == 8
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition == 1941 || CommitLog.instance.segmentManager.allocatingFrom.allocatePosition == 2086 || CommitLog.instance.segmentManager.allocatingFrom.allocatePosition == 2428
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == 5242880
CommitLog.instance.segmentManager.allocatingFrom.fd == 177
CommitLog.instance.segmentManager.allocatingFrom.id == 1731353097680L
CommitLog.instance.segmentManager.allocatingFrom.idBase == 1731353097676L
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset == 1933 || CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset == 2078 || CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset == 2420
CommitLog.instance.segmentManager.allocatingFrom.nextId == 6
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == 1731353097679L
CommitLog.instance.segmentManager.availableSegment.allocatePosition == 28
CommitLog.instance.segmentManager.availableSegment.fd == 178
CommitLog.instance.segmentManager.availableSegment.id == 1731353097681L
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == 20
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize == 3
CommitLog.instance.segmentManager.size == 10485760
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
("oneOf.java.jpp: SEQUENCE unimplemented" != null)
StorageService.instance.RING_DELAY == 30000
daikon.Quant.fuzzy.eq(StorageService.instance.traceProbability, 0.0)
cfsInstance.compactionStrategyManager.fanout == 10
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD == 32
cfsInstance.indexManager.DEFAULT_PAGE_SIZE == 10000
cfsInstance.metadata.resource.hash == 752961001
cfsInstance.sampleLatencyNanos == 2500000000L
resultSetInstance.metadata.columnCount == 5
539 * CommitLog.instance.executor.lastSyncedAt - 2.24037702617E11 * CommitLog.instance.executor.written + 410838266 * CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 4.8082256918869176E16 == 0
539 * CommitLog.instance.executor.lastSyncedAt - 2.24037702617E11 * CommitLog.instance.executor.written + 410838266 * CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 4.8082253632163048E16 == 0
331 * CommitLog.instance.executor.lastSyncedAt - 1.49075919513E11 * CommitLog.instance.executor.written + 410838266 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 2.9527546878358424E16 == 0
15080 * CommitLog.instance.executor.lastSyncedAt + 1.49075919513E11 * CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 2.24037702617E11 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 1.34511057423637658E18 == 0
15080 * CommitLog.instance.executor.lastSyncedAt + 1.49075919513E11 * CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 2.24037702617E11 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 1.34510938162902042E18 == 0
===========================================================================
org.apache.cassandra.db.RangeTombstoneTest@testTrackTimesRangeTombstone768746989:::dump
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.keyValidator.isByteOrderComparable
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.allocatingFrom.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.availableSegment.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.joinRing
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.useStrictConsistency
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionSpaceCheck
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.enabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.isActive
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_ENABLED
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.isEnabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.shouldDefragment
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.supportsEarlyOpen
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.data.loadsstables
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.directories.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.keyspace.initialized
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.allColumnFilter.isFetchAll
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.keyValidator.isByteOrderComparable
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.valid
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.viewManager.baseTableMetadata.isCompound
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK == CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MIN_THRESHOLD
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CFMetadataInstance.partitioner.MINIMUM.serialVersionUID
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.executor.syncComplete.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.managerThreadWaitQueue.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.segmentPrepared.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == StorageService.instance.threadCounter
CFMetadataInstance.isCounter == CFMetadataInstance.isDense
CFMetadataInstance.isCounter == CFMetadataInstance.isIndex
CFMetadataInstance.isCounter == CFMetadataInstance.isSuper
CFMetadataInstance.isCounter == CFMetadataInstance.isView
CFMetadataInstance.isCounter == CommitLog.instance.executor.shutdown
CFMetadataInstance.isCounter == CommitLog.instance.segmentManager.shutdown
CFMetadataInstance.isCounter == StorageService.instance.allowSimultaneousMoves
CFMetadataInstance.isCounter == StorageService.instance.authSetupCalled
CFMetadataInstance.isCounter == StorageService.instance.authSetupComplete
CFMetadataInstance.isCounter == StorageService.instance.gossipActive
CFMetadataInstance.isCounter == StorageService.instance.initialized
CFMetadataInstance.isCounter == StorageService.instance.isBootstrapMode
CFMetadataInstance.isCounter == StorageService.instance.isDecommissioning
CFMetadataInstance.isCounter == StorageService.instance.isRebuilding
CFMetadataInstance.isCounter == StorageService.instance.isShutdown
CFMetadataInstance.isCounter == StorageService.instance.isSurveyMode
CFMetadataInstance.isCounter == StorageService.instance.joined
CFMetadataInstance.isCounter == StorageService.instance.replacing
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.compactionLogger.enabled
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.currentBoundaries.isInvalid
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.partitionSSTablesByTokenRange
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.keyspace.TEST_FAIL_WRITES
CFMetadataInstance.isCounter == cfsInstance.keyspace.viewManager.enableCoordinatorBatchlog
CFMetadataInstance.isCounter == cfsInstance.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.metric.aliasFactory.isIndex
CFMetadataInstance.isCounter == cfsInstance.metric.factory.isIndex
CFMetadataInstance.isCounter == cfsInstance.readOrdering.current.isBlocking
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isDense
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isView
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.executor.syncComplete.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.bufferPool.usedBuffers
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.managerThreadWaitQueue.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.segmentPrepared.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == QueryProcessor.instance.lastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.statics.complexIdx == QueryProcessor.instance.thriftLastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.legacyProgressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.nextRepairCommand
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.progressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.remainingCFs
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.tokenMetadata.ringVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.totalCFs
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.compactionLogger.identifier
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.currentBoundaries.directoriesVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.fileIndexGenerator
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.keyspace.TEST_FAIL_MV_LOCKS_COUNT
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.keyspace.replicationStrategy.lastInvalidatedVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.readOrdering.current.id
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.readOrdering.current.running
CFMetadataInstance.partitionColumns.statics.complexIdx == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)
CFMetadataInstance.partitionColumns.statics.complexIdx == daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.EMPTY_SIZE == StorageService.instance.tokenMetadata.partitioner.EMPTY_SIZE
CFMetadataInstance.partitioner.EMPTY_SIZE == StorageService.instance.valueFactory.partitioner.EMPTY_SIZE
CFMetadataInstance.partitioner.EMPTY_SIZE == cfsInstance.metadata.partitioner.EMPTY_SIZE
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == CommitLog.instance.configuration.encryptionContext.chunkLength
CommitLog.instance.executor.markerIntervalNanos == CommitLog.instance.executor.syncIntervalNanos
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.managerThreadWaitQueue.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.segmentPrepared.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.keyspace.writeOrder.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.readOrdering.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)-1
CommitLog.instance.executor.syncComplete.CANCELLED == daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == CommitLog.instance.segmentManager.availableSegment.ENTRY_OVERHEAD_SIZE
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == CommitLog.instance.segmentManager.availableSegment.SYNC_MARKER_SIZE
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.availableSegment.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.bufferPool.bufferSize
CommitLog.instance.segmentManager.allocatingFrom.idBase == CommitLog.instance.segmentManager.availableSegment.idBase
CommitLog.instance.segmentManager.allocatingFrom.nextId == CommitLog.instance.segmentManager.availableSegment.nextId
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == CommitLog.instance.segmentManager.availableSegment.replayLimitId
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == CommitLog.instance.segmentManager.availableSegment.lastSyncedOffset
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE == resultSetInstance.rows_FOR_ENCLOSING_USE
daikon.Quant.pairwiseEqual(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE, resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.allColumnFilter.isFetchAll == true
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK == 2
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == 4
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == 1
CFMetadataInstance.isCounter == false
CFMetadataInstance.partitioner.EMPTY_SIZE == 24
CFMetadataInstance.resource.hash == 493049612
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == 65536
CommitLog.instance.MAX_MUTATION_SIZE == 2621440
CommitLog.instance.archiver.restorePointInTime == 4510987932000L
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS == 100
CommitLog.instance.executor.markerIntervalNanos == 1000000
CommitLog.instance.executor.pending == 0 || CommitLog.instance.executor.pending == 1
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == 12
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == 8
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition == 2643 || CommitLog.instance.segmentManager.allocatingFrom.allocatePosition == 2730 || CommitLog.instance.segmentManager.allocatingFrom.allocatePosition == 3072
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == 5242880
CommitLog.instance.segmentManager.allocatingFrom.fd == 177
CommitLog.instance.segmentManager.allocatingFrom.id == 1731353097680L
CommitLog.instance.segmentManager.allocatingFrom.idBase == 1731353097676L
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset == 2635 || CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset == 2722 || CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset == 3064
CommitLog.instance.segmentManager.allocatingFrom.nextId == 6
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == 1731353097679L
CommitLog.instance.segmentManager.availableSegment.allocatePosition == 28
CommitLog.instance.segmentManager.availableSegment.fd == 178
CommitLog.instance.segmentManager.availableSegment.id == 1731353097681L
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == 20
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize == 3
CommitLog.instance.segmentManager.size == 10485760
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
("oneOf.java.jpp: SEQUENCE unimplemented" != null)
StorageService.instance.RING_DELAY == 30000
daikon.Quant.fuzzy.eq(StorageService.instance.traceProbability, 0.0)
cfsInstance.compactionStrategyManager.fanout == 10
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD == 32
cfsInstance.indexManager.DEFAULT_PAGE_SIZE == 10000
cfsInstance.metadata.resource.hash == 752961001
cfsInstance.sampleLatencyNanos == 2500000000L
resultSetInstance.metadata.columnCount == 5
3 * CommitLog.instance.executor.lastSyncedAt - 801017318 * CommitLog.instance.executor.pending - 853745441 * CommitLog.instance.executor.written - 2.67615592987558E14 == 0
429 * CommitLog.instance.executor.lastSyncedAt + 2.14826483871E11 * CommitLog.instance.executor.pending - 853745441 * CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 3.8268567747157328E16 == 0
429 * CommitLog.instance.executor.lastSyncedAt + 2.14826483871E11 * CommitLog.instance.executor.pending - 853745441 * CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 3.8268574577120864E16 == 0
429 * CommitLog.instance.executor.lastSyncedAt - 8.1249404275E10 * CommitLog.instance.executor.pending - 853745441 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 3.8268367290758576E16 == 0
597 * CommitLog.instance.executor.lastSyncedAt - 2.14826483871E11 * CommitLog.instance.executor.written + 314203784 * CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 5.3255953673878096E16 == 0
597 * CommitLog.instance.executor.lastSyncedAt - 2.14826483871E11 * CommitLog.instance.executor.written + 314203784 * CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 5.3255951160247824E16 == 0
117 * CommitLog.instance.executor.lastSyncedAt + 8.1249404275E10 * CommitLog.instance.executor.written - 801017318 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 1.0436386537075994E16 == 0
44616 * CommitLog.instance.executor.lastSyncedAt + 1.26036958007E11 * CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 2.14826483871E11 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 3.9799327643162337E18 == 0
44616 * CommitLog.instance.executor.lastSyncedAt + 1.26036958007E11 * CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 2.14826483871E11 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 3.9799317560205696E18 == 0
104 * CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.allocatePosition + CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset + 8 == 0
104 * CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset + CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset == 0
===========================================================================
org.apache.cassandra.db.RangeTombstoneTest@testTrackTimesRangeTombstoneWithData768746989:::dump
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.keyValidator.isByteOrderComparable
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.allocatingFrom.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.availableSegment.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.joinRing
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.useStrictConsistency
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionSpaceCheck
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.enabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.isActive
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_ENABLED
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.isEnabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.shouldDefragment
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.supportsEarlyOpen
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.data.loadsstables
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.directories.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.keyspace.initialized
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.allColumnFilter.isFetchAll
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.keyValidator.isByteOrderComparable
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.valid
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.viewManager.baseTableMetadata.isCompound
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK == CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MIN_THRESHOLD
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CFMetadataInstance.partitioner.MINIMUM.serialVersionUID
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.executor.syncComplete.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.managerThreadWaitQueue.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.segmentPrepared.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == StorageService.instance.threadCounter
CFMetadataInstance.isCounter == CFMetadataInstance.isDense
CFMetadataInstance.isCounter == CFMetadataInstance.isIndex
CFMetadataInstance.isCounter == CFMetadataInstance.isSuper
CFMetadataInstance.isCounter == CFMetadataInstance.isView
CFMetadataInstance.isCounter == CommitLog.instance.executor.shutdown
CFMetadataInstance.isCounter == CommitLog.instance.executor.syncRequested
CFMetadataInstance.isCounter == CommitLog.instance.segmentManager.shutdown
CFMetadataInstance.isCounter == StorageService.instance.allowSimultaneousMoves
CFMetadataInstance.isCounter == StorageService.instance.authSetupCalled
CFMetadataInstance.isCounter == StorageService.instance.authSetupComplete
CFMetadataInstance.isCounter == StorageService.instance.gossipActive
CFMetadataInstance.isCounter == StorageService.instance.initialized
CFMetadataInstance.isCounter == StorageService.instance.isBootstrapMode
CFMetadataInstance.isCounter == StorageService.instance.isDecommissioning
CFMetadataInstance.isCounter == StorageService.instance.isRebuilding
CFMetadataInstance.isCounter == StorageService.instance.isShutdown
CFMetadataInstance.isCounter == StorageService.instance.isSurveyMode
CFMetadataInstance.isCounter == StorageService.instance.joined
CFMetadataInstance.isCounter == StorageService.instance.replacing
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.compactionLogger.enabled
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.currentBoundaries.isInvalid
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.partitionSSTablesByTokenRange
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.keyspace.TEST_FAIL_WRITES
CFMetadataInstance.isCounter == cfsInstance.keyspace.viewManager.enableCoordinatorBatchlog
CFMetadataInstance.isCounter == cfsInstance.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.metric.aliasFactory.isIndex
CFMetadataInstance.isCounter == cfsInstance.metric.factory.isIndex
CFMetadataInstance.isCounter == cfsInstance.readOrdering.current.isBlocking
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isDense
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isView
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.executor.syncComplete.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.bufferPool.usedBuffers
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.managerThreadWaitQueue.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.segmentPrepared.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == QueryProcessor.instance.lastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.statics.complexIdx == QueryProcessor.instance.thriftLastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.legacyProgressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.nextRepairCommand
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.progressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.remainingCFs
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.tokenMetadata.ringVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.totalCFs
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.compactionLogger.identifier
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.currentBoundaries.directoriesVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.fileIndexGenerator
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.keyspace.TEST_FAIL_MV_LOCKS_COUNT
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.keyspace.replicationStrategy.lastInvalidatedVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.readOrdering.current.id
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.readOrdering.current.running
CFMetadataInstance.partitionColumns.statics.complexIdx == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)
CFMetadataInstance.partitionColumns.statics.complexIdx == daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.EMPTY_SIZE == StorageService.instance.tokenMetadata.partitioner.EMPTY_SIZE
CFMetadataInstance.partitioner.EMPTY_SIZE == StorageService.instance.valueFactory.partitioner.EMPTY_SIZE
CFMetadataInstance.partitioner.EMPTY_SIZE == cfsInstance.metadata.partitioner.EMPTY_SIZE
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == CommitLog.instance.configuration.encryptionContext.chunkLength
CommitLog.instance.executor.markerIntervalNanos == CommitLog.instance.executor.syncIntervalNanos
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.managerThreadWaitQueue.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.segmentPrepared.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.keyspace.writeOrder.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.readOrdering.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)-1
CommitLog.instance.executor.syncComplete.CANCELLED == daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == CommitLog.instance.segmentManager.availableSegment.ENTRY_OVERHEAD_SIZE
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == CommitLog.instance.segmentManager.availableSegment.SYNC_MARKER_SIZE
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.availableSegment.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.bufferPool.bufferSize
CommitLog.instance.segmentManager.allocatingFrom.idBase == CommitLog.instance.segmentManager.availableSegment.idBase
CommitLog.instance.segmentManager.allocatingFrom.nextId == CommitLog.instance.segmentManager.availableSegment.nextId
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == CommitLog.instance.segmentManager.availableSegment.replayLimitId
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == CommitLog.instance.segmentManager.availableSegment.lastSyncedOffset
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE == resultSetInstance.rows_FOR_ENCLOSING_USE
daikon.Quant.pairwiseEqual(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE, resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.allColumnFilter.isFetchAll == true
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK == 2
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == 4
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == 1
CFMetadataInstance.isCounter == false
CFMetadataInstance.partitioner.EMPTY_SIZE == 24
CFMetadataInstance.resource.hash == 493049612
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == 65536
CommitLog.instance.MAX_MUTATION_SIZE == 2621440
CommitLog.instance.archiver.restorePointInTime == 4510987932000L
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS == 100
CommitLog.instance.executor.markerIntervalNanos == 1000000
CommitLog.instance.executor.pending == 0 || CommitLog.instance.executor.pending == 1
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == 12
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == 8
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == 5242880
CommitLog.instance.segmentManager.allocatingFrom.fd == 177
CommitLog.instance.segmentManager.allocatingFrom.id == 1731353097680L
CommitLog.instance.segmentManager.allocatingFrom.idBase == 1731353097676L
CommitLog.instance.segmentManager.allocatingFrom.nextId == 6
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == 1731353097679L
CommitLog.instance.segmentManager.availableSegment.allocatePosition == 28
CommitLog.instance.segmentManager.availableSegment.fd == 178
CommitLog.instance.segmentManager.availableSegment.id == 1731353097681L
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == 20
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize == 3
CommitLog.instance.segmentManager.size == 10485760
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
("oneOf.java.jpp: SEQUENCE unimplemented" != null)
StorageService.instance.RING_DELAY == 30000
daikon.Quant.fuzzy.eq(StorageService.instance.traceProbability, 0.0)
cfsInstance.compactionStrategyManager.fanout == 10
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD == 32
cfsInstance.indexManager.DEFAULT_PAGE_SIZE == 10000
cfsInstance.metadata.resource.hash == 752961001
cfsInstance.sampleLatencyNanos == 2500000000L
resultSetInstance.metadata.columnCount == 5
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK >= CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitionColumns.statics.complexIdx <= CommitLog.instance.executor.pending
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.written
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.EMPTY_SIZE > CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.resource.hash < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.resource.hash > CommitLog.instance.executor.pending
CFMetadataInstance.resource.hash > CommitLog.instance.executor.written
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.resource.hash > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.executor.pending
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.executor.written
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.executor.pending
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.executor.written
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.archiver.restorePointInTime < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.executor.pending
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.executor.written
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > CommitLog.instance.executor.pending
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > CommitLog.instance.executor.written
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.markerIntervalNanos
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.pending
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.written
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.size
CommitLog.instance.executor.lastSyncedAt > StorageService.instance.RING_DELAY
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.lastSyncedAt > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.lastSyncedAt > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.lastSyncedAt > cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.lastSyncedAt > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.executor.pending
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.executor.written
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.pending < CommitLog.instance.executor.written
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.pending < StorageService.instance.RING_DELAY
CommitLog.instance.executor.pending < cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.pending < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.pending < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.pending < cfsInstance.metadata.resource.hash
CommitLog.instance.executor.pending < cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.pending < resultSetInstance.metadata.columnCount
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.written < StorageService.instance.RING_DELAY
CommitLog.instance.executor.written > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.written < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.written < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.written < cfsInstance.metadata.resource.hash
CommitLog.instance.executor.written < cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.written > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 8 == 0
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset >= CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > resultSetInstance.metadata.columnCount
4 * CommitLog.instance.executor.lastSyncedAt - 709653791 * CommitLog.instance.executor.pending - 768449891 * CommitLog.instance.executor.written - 3.56825796842802E14 == 0
296 * CommitLog.instance.executor.lastSyncedAt + 1.32751088359E11 * CommitLog.instance.executor.pending - 224628097 * CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 2.640552258924428E16 == 0
296 * CommitLog.instance.executor.lastSyncedAt + 1.32751088359E11 * CommitLog.instance.executor.pending - 224628097 * CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 2.6405524386269056E16 == 0
441 * CommitLog.instance.executor.lastSyncedAt - 7.3436518639E10 * CommitLog.instance.executor.pending - 768449891 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 3.9339049343535024E16 == 0
598 * CommitLog.instance.executor.lastSyncedAt - 1.32751088359E11 * CommitLog.instance.executor.written + 443157347 * CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 5.3346715626336112E16 == 0
598 * CommitLog.instance.executor.lastSyncedAt - 1.32751088359E11 * CommitLog.instance.executor.written + 443157347 * CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 5.3346712081077344E16 == 0
25 * CommitLog.instance.executor.lastSyncedAt + 7.3436518639E10 * CommitLog.instance.executor.written - 709653791 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 2.229242583435063E15 == 0
45864 * CommitLog.instance.executor.lastSyncedAt - 7.3436518639E10 * CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 6.482270025E9 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 4.0912605442354929E18 == 0
45864 * CommitLog.instance.executor.lastSyncedAt - 7.3436518639E10 * CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 6.482270025E9 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 4.0912611317276421E18 == 0
===========================================================================
org.apache.cassandra.db.compaction.AntiCompactionBytemanTest@testRedundantTransitions-54916894:::dump
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.allocatingFrom.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.availableSegment.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.joinRing
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.useStrictConsistency
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionSpaceCheck
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.enabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.isActive
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.partitionSSTablesByTokenRange
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_ENABLED
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.isEnabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.shouldDefragment
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.supportsEarlyOpen
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.data.loadsstables
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.directories.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.keyspace.initialized
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.allColumnFilter.isFetchAll
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.valid
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.viewManager.baseTableMetadata.isCompound
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MIN_THRESHOLD
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CFMetadataInstance.partitioner.MINIMUM.serialVersionUID
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.executor.syncComplete.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.managerThreadWaitQueue.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.segmentPrepared.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == StorageService.instance.threadCounter
CFMetadataInstance.isCounter == CFMetadataInstance.isDense
CFMetadataInstance.isCounter == CFMetadataInstance.isIndex
CFMetadataInstance.isCounter == CFMetadataInstance.isSuper
CFMetadataInstance.isCounter == CFMetadataInstance.isView
CFMetadataInstance.isCounter == CFMetadataInstance.partitioner.partitionOrdering.isByteOrderComparable
CFMetadataInstance.isCounter == CommitLog.instance.executor.shutdown
CFMetadataInstance.isCounter == CommitLog.instance.segmentManager.shutdown
CFMetadataInstance.isCounter == StorageService.instance.allowSimultaneousMoves
CFMetadataInstance.isCounter == StorageService.instance.authSetupCalled
CFMetadataInstance.isCounter == StorageService.instance.authSetupComplete
CFMetadataInstance.isCounter == StorageService.instance.gossipActive
CFMetadataInstance.isCounter == StorageService.instance.initialized
CFMetadataInstance.isCounter == StorageService.instance.isBootstrapMode
CFMetadataInstance.isCounter == StorageService.instance.isDecommissioning
CFMetadataInstance.isCounter == StorageService.instance.isRebuilding
CFMetadataInstance.isCounter == StorageService.instance.isShutdown
CFMetadataInstance.isCounter == StorageService.instance.isSurveyMode
CFMetadataInstance.isCounter == StorageService.instance.joined
CFMetadataInstance.isCounter == StorageService.instance.replacing
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.compactionLogger.enabled
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.currentBoundaries.isInvalid
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.diskBoundaryManager.diskBoundaries.isInvalid
CFMetadataInstance.isCounter == cfsInstance.keyspace.TEST_FAIL_WRITES
CFMetadataInstance.isCounter == cfsInstance.keyspace.viewManager.enableCoordinatorBatchlog
CFMetadataInstance.isCounter == cfsInstance.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.metric.aliasFactory.isIndex
CFMetadataInstance.isCounter == cfsInstance.metric.factory.isIndex
CFMetadataInstance.isCounter == cfsInstance.readOrdering.current.isBlocking
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isDense
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isView
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.executor.syncComplete.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.bufferPool.usedBuffers
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.managerThreadWaitQueue.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.segmentPrepared.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == QueryProcessor.instance.lastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.statics.complexIdx == QueryProcessor.instance.thriftLastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.legacyProgressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.nextRepairCommand
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.progressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.remainingCFs
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.tokenMetadata.ringVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.totalCFs
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.compactionLogger.identifier
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.currentBoundaries.directoriesVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.diskBoundaryManager.diskBoundaries.ringVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.fileIndexGenerator
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.keyspace.TEST_FAIL_MV_LOCKS_COUNT
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.keyspace.replicationStrategy.lastInvalidatedVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.readOrdering.current.id
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.readOrdering.current.running
CFMetadataInstance.partitionColumns.statics.complexIdx == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.HEAP_SIZE == StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.HEAP_SIZE == StorageService.instance.valueFactory.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.HEAP_SIZE == cfsInstance.metadata.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.MAXIMUM == StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CFMetadataInstance.partitioner.MAXIMUM == StorageService.instance.valueFactory.partitioner.MAXIMUM
CFMetadataInstance.partitioner.MAXIMUM == cfsInstance.metadata.partitioner.MAXIMUM
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == CommitLog.instance.configuration.encryptionContext.chunkLength
CommitLog.instance.executor.markerIntervalNanos == CommitLog.instance.executor.syncIntervalNanos
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.managerThreadWaitQueue.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.segmentPrepared.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.keyspace.writeOrder.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.readOrdering.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)-1
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == CommitLog.instance.segmentManager.availableSegment.ENTRY_OVERHEAD_SIZE
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == CommitLog.instance.segmentManager.availableSegment.SYNC_MARKER_SIZE
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.availableSegment.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.bufferPool.bufferSize
CommitLog.instance.segmentManager.allocatingFrom.idBase == CommitLog.instance.segmentManager.availableSegment.idBase
CommitLog.instance.segmentManager.allocatingFrom.nextId == CommitLog.instance.segmentManager.availableSegment.nextId
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == CommitLog.instance.segmentManager.availableSegment.replayLimitId
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == CommitLog.instance.segmentManager.availableSegment.lastSyncedOffset
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE == resultSetInstance.rows_FOR_ENCLOSING_USE
CFMetadataInstance.allColumnFilter.isFetchAll == true
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK == 2
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == 4
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == 1
CFMetadataInstance.isCounter == false
CFMetadataInstance.partitionColumns.regulars.complexIdx == 0 || CFMetadataInstance.partitionColumns.regulars.complexIdx == 1
CFMetadataInstance.partitioner.HEAP_SIZE == 24
CFMetadataInstance.partitioner.MAXIMUM == 9223372036854775807L
CFMetadataInstance.partitioner.MINIMUM.token == -9223372036854775808L
CFMetadataInstance.resource.hash == -1882274597 || CFMetadataInstance.resource.hash == 1407893056
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == 65536
CommitLog.instance.MAX_MUTATION_SIZE == 2621440
CommitLog.instance.archiver.restorePointInTime == 4510987932000L
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS == 100
CommitLog.instance.executor.markerIntervalNanos == 1000000
CommitLog.instance.executor.pending == 0 || CommitLog.instance.executor.pending == 1
CommitLog.instance.executor.written >= 1
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == 12
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == 8
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == 5242880
CommitLog.instance.segmentManager.allocatingFrom.fd == 177 || CommitLog.instance.segmentManager.allocatingFrom.fd == 180
CommitLog.instance.segmentManager.allocatingFrom.id == 1731353206874L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353206875L
CommitLog.instance.segmentManager.allocatingFrom.idBase == 1731353206870L
CommitLog.instance.segmentManager.allocatingFrom.nextId == 6 || CommitLog.instance.segmentManager.allocatingFrom.nextId == 7
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == 1731353206873L
CommitLog.instance.segmentManager.availableSegment.allocatePosition == 28
CommitLog.instance.segmentManager.availableSegment.fd == 180 || CommitLog.instance.segmentManager.availableSegment.fd == 226
CommitLog.instance.segmentManager.availableSegment.id == 1731353206875L || CommitLog.instance.segmentManager.availableSegment.id == 1731353206876L
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == 20
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize == 3
CommitLog.instance.segmentManager.size == 10485760
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
("oneOf.java.jpp: SEQUENCE unimplemented" != null)
StorageService.instance.RING_DELAY == 30000
daikon.Quant.fuzzy.eq(StorageService.instance.traceProbability, 0.0)
cfsInstance.compactionStrategyManager.fanout == 10
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD == 32
cfsInstance.indexManager.DEFAULT_PAGE_SIZE == 10000
cfsInstance.metadata.resource.hash == -584417373 || cfsInstance.metadata.resource.hash == 1407893056 || cfsInstance.metadata.resource.hash == 1943653847
cfsInstance.sampleLatencyNanos == 0 || cfsInstance.sampleLatencyNanos == 2500000000L
resultSetInstance.metadata.columnCount >= 1
daikon.Quant.eltsNotEqual(resultSetInstance.rows_FOR_ENCLOSING_USE, null)
daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) == 0 || daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) == 1 || daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) == 2
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != cfsInstance.sampleLatencyNanos
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != resultSetInstance.metadata.columnCount
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK != CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK != cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK != cfsInstance.sampleLatencyNanos
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK >= CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK != CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK >= CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK <= CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK != cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK != cfsInstance.sampleLatencyNanos
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK <= resultSetInstance.metadata.columnCount
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.partitionColumns.regulars.complexIdx >= CFMetadataInstance.partitionColumns.statics.complexIdx
CFMetadataInstance.partitionColumns.regulars.complexIdx < CFMetadataInstance.partitioner.HEAP_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CFMetadataInstance.partitioner.MAXIMUM
CFMetadataInstance.partitionColumns.regulars.complexIdx > CFMetadataInstance.partitioner.MINIMUM.token
CFMetadataInstance.partitionColumns.regulars.complexIdx != CFMetadataInstance.resource.hash
CFMetadataInstance.partitionColumns.regulars.complexIdx < CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.MAX_MUTATION_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.archiver.restorePointInTime
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.markerIntervalNanos
CFMetadataInstance.partitionColumns.regulars.complexIdx >= CommitLog.instance.executor.pending
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.written
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.idBase
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitionColumns.regulars.complexIdx < StorageService.instance.RING_DELAY
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.compactionStrategyManager.fanout
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx != cfsInstance.metadata.resource.hash
CFMetadataInstance.partitionColumns.regulars.complexIdx != cfsInstance.sampleLatencyNanos
CFMetadataInstance.partitionColumns.regulars.complexIdx <= resultSetInstance.metadata.columnCount
CFMetadataInstance.partitionColumns.regulars.complexIdx >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.partitionColumns.statics.complexIdx != CFMetadataInstance.resource.hash
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitionColumns.statics.complexIdx <= CommitLog.instance.executor.pending
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.written
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitionColumns.statics.complexIdx != cfsInstance.metadata.resource.hash
CFMetadataInstance.partitionColumns.statics.complexIdx <= cfsInstance.sampleLatencyNanos
CFMetadataInstance.partitionColumns.statics.complexIdx < resultSetInstance.metadata.columnCount
CFMetadataInstance.partitionColumns.statics.complexIdx <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.HEAP_SIZE != CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.HEAP_SIZE > CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.HEAP_SIZE > CommitLog.instance.executor.written
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.HEAP_SIZE != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.HEAP_SIZE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.HEAP_SIZE != cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.HEAP_SIZE != cfsInstance.sampleLatencyNanos
CFMetadataInstance.partitioner.HEAP_SIZE > resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.HEAP_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.MAXIMUM > CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.written
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.sampleLatencyNanos
CFMetadataInstance.partitioner.MAXIMUM > resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.MAXIMUM > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.MINIMUM.token < CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.written
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.sampleLatencyNanos
CFMetadataInstance.partitioner.MINIMUM.token < resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.MINIMUM.token < daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.resource.hash != CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE
CFMetadataInstance.resource.hash != CommitLog.instance.MAX_MUTATION_SIZE
CFMetadataInstance.resource.hash < CommitLog.instance.archiver.restorePointInTime
CFMetadataInstance.resource.hash != CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS
CFMetadataInstance.resource.hash < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.resource.hash != CommitLog.instance.executor.markerIntervalNanos
CFMetadataInstance.resource.hash != CommitLog.instance.executor.pending
CFMetadataInstance.resource.hash != CommitLog.instance.executor.syncComplete.CANCELLED
CFMetadataInstance.resource.hash != CommitLog.instance.executor.written
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.idBase
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.availableSegment.allocatePosition
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.size
CFMetadataInstance.resource.hash != StorageService.instance.RING_DELAY
CFMetadataInstance.resource.hash != cfsInstance.compactionStrategyManager.fanout
CFMetadataInstance.resource.hash != cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CFMetadataInstance.resource.hash != cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CFMetadataInstance.resource.hash != cfsInstance.sampleLatencyNanos
CFMetadataInstance.resource.hash != resultSetInstance.metadata.columnCount
CFMetadataInstance.resource.hash != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.resource.hash != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.executor.pending
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.executor.written
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE != cfsInstance.metadata.resource.hash
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE != cfsInstance.sampleLatencyNanos
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > resultSetInstance.metadata.columnCount
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.executor.pending
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.executor.written
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.MAX_MUTATION_SIZE != cfsInstance.metadata.resource.hash
CommitLog.instance.MAX_MUTATION_SIZE != cfsInstance.sampleLatencyNanos
CommitLog.instance.MAX_MUTATION_SIZE > resultSetInstance.metadata.columnCount
CommitLog.instance.MAX_MUTATION_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.archiver.restorePointInTime < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.executor.pending
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.executor.written
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.archiver.restorePointInTime > cfsInstance.metadata.resource.hash
CommitLog.instance.archiver.restorePointInTime > cfsInstance.sampleLatencyNanos
CommitLog.instance.archiver.restorePointInTime % resultSetInstance.metadata.columnCount == 0
CommitLog.instance.archiver.restorePointInTime > resultSetInstance.metadata.columnCount
CommitLog.instance.archiver.restorePointInTime > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > CommitLog.instance.executor.pending
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > CommitLog.instance.executor.written
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS != cfsInstance.metadata.resource.hash
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS != cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.markerIntervalNanos
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.pending
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.written
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.size
CommitLog.instance.executor.lastSyncedAt > StorageService.instance.RING_DELAY
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.lastSyncedAt > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.lastSyncedAt > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.lastSyncedAt > cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.lastSyncedAt > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.lastSyncedAt > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.executor.pending
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.executor.written
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.markerIntervalNanos < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.markerIntervalNanos != cfsInstance.metadata.resource.hash
CommitLog.instance.executor.markerIntervalNanos != cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.markerIntervalNanos > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.markerIntervalNanos > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.pending < CommitLog.instance.executor.written
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.pending < StorageService.instance.RING_DELAY
CommitLog.instance.executor.pending < cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.pending < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.pending < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.pending != cfsInstance.metadata.resource.hash
CommitLog.instance.executor.pending % resultSetInstance.metadata.columnCount == 0
CommitLog.instance.executor.pending <= resultSetInstance.metadata.columnCount
CommitLog.instance.executor.syncComplete.CANCELLED != cfsInstance.metadata.resource.hash
CommitLog.instance.executor.syncComplete.CANCELLED <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.written < StorageService.instance.RING_DELAY
CommitLog.instance.executor.written != cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.written < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.written < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.written != cfsInstance.metadata.resource.hash
CommitLog.instance.executor.written != cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.written >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE != resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 8 == 0
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.fd != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.fd != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.fd > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.fd < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.fd < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.fd != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.fd != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.fd > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.fd > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.id < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.id > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.id > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.id > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.idBase < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.idBase > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.idBase > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset >= CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset >= CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.nextId > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.nextId < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.nextId < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.nextId != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.nextId != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.nextId > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.availableSegment.allocatePosition < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.availableSegment.allocatePosition != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.allocatePosition != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.availableSegment.allocatePosition > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.allocatePosition > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.fd < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.availableSegment.fd > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.availableSegment.fd > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.availableSegment.fd < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.fd < StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.availableSegment.fd < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.availableSegment.fd != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.fd != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.availableSegment.fd > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.fd > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.availableSegment.id > CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.availableSegment.id > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.availableSegment.id > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.id > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset >= resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.size != cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.size != cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.size > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.size > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
daikon.Quant.subsetOf(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE, resultSetInstance.rows_FOR_ENCLOSING_USE)
StorageService.instance.RING_DELAY != cfsInstance.metadata.resource.hash
StorageService.instance.RING_DELAY != cfsInstance.sampleLatencyNanos
StorageService.instance.RING_DELAY % resultSetInstance.metadata.columnCount == 0
StorageService.instance.RING_DELAY > resultSetInstance.metadata.columnCount
StorageService.instance.RING_DELAY > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.compactionStrategyManager.fanout != cfsInstance.metadata.resource.hash
cfsInstance.compactionStrategyManager.fanout != cfsInstance.sampleLatencyNanos
cfsInstance.compactionStrategyManager.fanout != resultSetInstance.metadata.columnCount
cfsInstance.compactionStrategyManager.fanout > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD != cfsInstance.metadata.resource.hash
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD != cfsInstance.sampleLatencyNanos
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > resultSetInstance.metadata.columnCount
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.indexManager.DEFAULT_PAGE_SIZE != cfsInstance.metadata.resource.hash
cfsInstance.indexManager.DEFAULT_PAGE_SIZE != cfsInstance.sampleLatencyNanos
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > resultSetInstance.metadata.columnCount
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.metadata.resource.hash != cfsInstance.sampleLatencyNanos
cfsInstance.metadata.resource.hash != resultSetInstance.metadata.columnCount
cfsInstance.metadata.resource.hash != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.metadata.resource.hash != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
cfsInstance.sampleLatencyNanos != resultSetInstance.metadata.columnCount
cfsInstance.sampleLatencyNanos >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
resultSetInstance.metadata.columnCount >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CommitLog.instance.executor.lastSyncedAt - 33659783 * resultSetInstance.metadata.columnCount + 253514569 * daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 8.9314982931667E13 == 0
CommitLog.instance.executor.lastSyncedAt - 33659783 * resultSetInstance.metadata.columnCount + 253514569 * daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1 - 8.9314729417098E13 == 0
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 92 * CommitLog.instance.segmentManager.allocatingFrom.id - CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset + 1.592844950324E14 == 0
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 92 * CommitLog.instance.segmentManager.availableSegment.id + 1.59284495032492E14 == 0
92 * CommitLog.instance.segmentManager.allocatingFrom.id - CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset + CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 1.59284495032408E14 == 0
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 92 * CommitLog.instance.segmentManager.availableSegment.id + 1.592844950325E14 == 0
===========================================================================
org.apache.cassandra.service.JoinTokenRingTest@testIndexPreJoinInvocation-129551606:::dump
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.allocatingFrom.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.availableSegment.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.joinRing
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.useStrictConsistency
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionSpaceCheck
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.enabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.isActive
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_ENABLED
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.isEnabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.shouldDefragment
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.supportsEarlyOpen
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.data.loadsstables
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.directories.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.keyspace.initialized
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.allColumnFilter.isFetchAll
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.valid
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.viewManager.baseTableMetadata.isCompound
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MIN_THRESHOLD
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CFMetadataInstance.partitioner.MINIMUM.serialVersionUID
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.executor.syncComplete.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.managerThreadWaitQueue.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.segmentPrepared.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == StorageService.instance.threadCounter
CFMetadataInstance.isCounter == CFMetadataInstance.isDense
CFMetadataInstance.isCounter == CFMetadataInstance.isIndex
CFMetadataInstance.isCounter == CFMetadataInstance.isSuper
CFMetadataInstance.isCounter == CFMetadataInstance.isView
CFMetadataInstance.isCounter == CommitLog.instance.executor.shutdown
CFMetadataInstance.isCounter == CommitLog.instance.executor.syncRequested
CFMetadataInstance.isCounter == CommitLog.instance.segmentManager.shutdown
CFMetadataInstance.isCounter == StorageService.instance.allowSimultaneousMoves
CFMetadataInstance.isCounter == StorageService.instance.authSetupComplete
CFMetadataInstance.isCounter == StorageService.instance.gossipActive
CFMetadataInstance.isCounter == StorageService.instance.initialized
CFMetadataInstance.isCounter == StorageService.instance.isBootstrapMode
CFMetadataInstance.isCounter == StorageService.instance.isDecommissioning
CFMetadataInstance.isCounter == StorageService.instance.isRebuilding
CFMetadataInstance.isCounter == StorageService.instance.isShutdown
CFMetadataInstance.isCounter == StorageService.instance.isSurveyMode
CFMetadataInstance.isCounter == StorageService.instance.replacing
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.compactionLogger.enabled
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.currentBoundaries.isInvalid
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.partitionSSTablesByTokenRange
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.keyspace.TEST_FAIL_WRITES
CFMetadataInstance.isCounter == cfsInstance.keyspace.viewManager.enableCoordinatorBatchlog
CFMetadataInstance.isCounter == cfsInstance.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.metric.aliasFactory.isIndex
CFMetadataInstance.isCounter == cfsInstance.metric.factory.isIndex
CFMetadataInstance.isCounter == cfsInstance.readOrdering.current.isBlocking
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isDense
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isView
CFMetadataInstance.keyValidator.STATIC_MARKER == cfsInstance.metadata.keyValidator.STATIC_MARKER
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.executor.syncComplete.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.bufferPool.usedBuffers
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.managerThreadWaitQueue.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.segmentPrepared.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == QueryProcessor.instance.lastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.statics.complexIdx == QueryProcessor.instance.thriftLastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.legacyProgressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.nextRepairCommand
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.progressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.remainingCFs
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.totalCFs
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.compactionLogger.identifier
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.currentBoundaries.directoriesVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.fileIndexGenerator
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.keyspace.TEST_FAIL_MV_LOCKS_COUNT
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.keyspace.replicationStrategy.lastInvalidatedVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.readOrdering.current.id
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.readOrdering.current.running
CFMetadataInstance.partitionColumns.statics.complexIdx == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.EMPTY_SIZE == StorageService.instance.tokenMetadata.partitioner.EMPTY_SIZE
CFMetadataInstance.partitioner.EMPTY_SIZE == StorageService.instance.valueFactory.partitioner.EMPTY_SIZE
CFMetadataInstance.partitioner.EMPTY_SIZE == cfsInstance.metadata.partitioner.EMPTY_SIZE
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == CommitLog.instance.configuration.encryptionContext.chunkLength
CommitLog.instance.executor.markerIntervalNanos == CommitLog.instance.executor.syncIntervalNanos
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.managerThreadWaitQueue.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.segmentPrepared.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.keyspace.writeOrder.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.readOrdering.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)-1
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == CommitLog.instance.segmentManager.availableSegment.ENTRY_OVERHEAD_SIZE
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == CommitLog.instance.segmentManager.availableSegment.SYNC_MARKER_SIZE
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.availableSegment.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.bufferPool.bufferSize
CommitLog.instance.segmentManager.allocatingFrom.idBase == CommitLog.instance.segmentManager.availableSegment.idBase
CommitLog.instance.segmentManager.allocatingFrom.nextId == CommitLog.instance.segmentManager.availableSegment.nextId
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == CommitLog.instance.segmentManager.availableSegment.replayLimitId
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == CommitLog.instance.segmentManager.availableSegment.lastSyncedOffset
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE == resultSetInstance.rows_FOR_ENCLOSING_USE
CFMetadataInstance.allColumnFilter.isFetchAll == true
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK == 2
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == 4
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == 1
CFMetadataInstance.isCounter == false
CFMetadataInstance.keyValidator.STATIC_MARKER == 65535
CFMetadataInstance.partitionColumns.regulars.complexIdx >= 0
CFMetadataInstance.partitioner.EMPTY_SIZE == 24
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == 65536
CommitLog.instance.MAX_MUTATION_SIZE == 2621440
CommitLog.instance.archiver.restorePointInTime == 4510987932000L
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS == 100
CommitLog.instance.executor.markerIntervalNanos == 1000000
CommitLog.instance.executor.pending == 0 || CommitLog.instance.executor.pending == 1
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == 12
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == 8
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == 5242880
CommitLog.instance.segmentManager.allocatingFrom.fd == 177
CommitLog.instance.segmentManager.allocatingFrom.id == 1731353054455L
CommitLog.instance.segmentManager.allocatingFrom.idBase == 1731353054451L
CommitLog.instance.segmentManager.allocatingFrom.nextId == 6
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == 1731353054454L
CommitLog.instance.segmentManager.availableSegment.allocatePosition == 28
CommitLog.instance.segmentManager.availableSegment.fd == 178
CommitLog.instance.segmentManager.availableSegment.id == 1731353054456L
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == 20
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize == 3
CommitLog.instance.segmentManager.size == 10485760
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
("oneOf.java.jpp: SEQUENCE unimplemented" != null)
StorageService.instance.RING_DELAY == 30000
StorageService.instance.tokenMetadata.ringVersion == 0 || StorageService.instance.tokenMetadata.ringVersion == 1
daikon.Quant.fuzzy.eq(StorageService.instance.traceProbability, 0.0)
cfsInstance.compactionStrategyManager.fanout == 10
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD == 32
cfsInstance.indexManager.DEFAULT_PAGE_SIZE == 10000
cfsInstance.metadata.keyValidator.STATIC_MARKER == 65535
cfsInstance.sampleLatencyNanos == 2500000000L
daikon.Quant.eltsNotEqual(resultSetInstance.rows_FOR_ENCLOSING_USE, null)
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > StorageService.instance.tokenMetadata.ringVersion
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != resultSetInstance.metadata.columnCount
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK != CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > StorageService.instance.tokenMetadata.ringVersion
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK != CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK >= CommitLog.instance.executor.pending
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.executor.written
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK >= StorageService.instance.tokenMetadata.ringVersion
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK > cfsInstance.metadata.resource.hash
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK <= resultSetInstance.metadata.columnCount
CFMetadataInstance.keyValidator.STATIC_MARKER > CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.keyValidator.STATIC_MARKER > CFMetadataInstance.resource.hash
CFMetadataInstance.keyValidator.STATIC_MARKER < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.keyValidator.STATIC_MARKER > CommitLog.instance.executor.pending
CFMetadataInstance.keyValidator.STATIC_MARKER > CommitLog.instance.executor.written
CFMetadataInstance.keyValidator.STATIC_MARKER > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.keyValidator.STATIC_MARKER > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.keyValidator.STATIC_MARKER > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.keyValidator.STATIC_MARKER > StorageService.instance.tokenMetadata.ringVersion
CFMetadataInstance.keyValidator.STATIC_MARKER > cfsInstance.metadata.resource.hash
CFMetadataInstance.keyValidator.STATIC_MARKER > resultSetInstance.metadata.columnCount
CFMetadataInstance.keyValidator.STATIC_MARKER > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitionColumns.regulars.complexIdx >= CFMetadataInstance.partitionColumns.statics.complexIdx
CFMetadataInstance.partitionColumns.regulars.complexIdx < CFMetadataInstance.partitioner.EMPTY_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx != CFMetadataInstance.resource.hash
CFMetadataInstance.partitionColumns.regulars.complexIdx < CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.MAX_MUTATION_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.archiver.restorePointInTime
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.markerIntervalNanos
CFMetadataInstance.partitionColumns.regulars.complexIdx >= CommitLog.instance.executor.pending
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.written
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx != CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.idBase
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitionColumns.regulars.complexIdx < StorageService.instance.RING_DELAY
CFMetadataInstance.partitionColumns.regulars.complexIdx != StorageService.instance.tokenMetadata.ringVersion
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.compactionStrategyManager.fanout
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.metadata.keyValidator.STATIC_MARKER
CFMetadataInstance.partitionColumns.regulars.complexIdx > cfsInstance.metadata.resource.hash
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.sampleLatencyNanos
CFMetadataInstance.partitionColumns.statics.complexIdx != CFMetadataInstance.resource.hash
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitionColumns.statics.complexIdx <= CommitLog.instance.executor.pending
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.written
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitionColumns.statics.complexIdx <= StorageService.instance.tokenMetadata.ringVersion
CFMetadataInstance.partitionColumns.statics.complexIdx < resultSetInstance.metadata.columnCount
CFMetadataInstance.partitionColumns.statics.complexIdx <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.EMPTY_SIZE != CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.EMPTY_SIZE > CommitLog.instance.executor.pending
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.executor.written
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitioner.EMPTY_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.partitioner.EMPTY_SIZE > StorageService.instance.tokenMetadata.ringVersion
CFMetadataInstance.partitioner.EMPTY_SIZE > cfsInstance.metadata.resource.hash
CFMetadataInstance.partitioner.EMPTY_SIZE > resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.EMPTY_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.resource.hash != CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE
CFMetadataInstance.resource.hash != CommitLog.instance.MAX_MUTATION_SIZE
CFMetadataInstance.resource.hash < CommitLog.instance.archiver.restorePointInTime
CFMetadataInstance.resource.hash != CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS
CFMetadataInstance.resource.hash < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.resource.hash != CommitLog.instance.executor.markerIntervalNanos
CFMetadataInstance.resource.hash != CommitLog.instance.executor.pending
CFMetadataInstance.resource.hash != CommitLog.instance.executor.syncComplete.CANCELLED
CFMetadataInstance.resource.hash != CommitLog.instance.executor.written
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.idBase
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.availableSegment.allocatePosition
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.size
CFMetadataInstance.resource.hash != StorageService.instance.RING_DELAY
CFMetadataInstance.resource.hash != StorageService.instance.tokenMetadata.ringVersion
CFMetadataInstance.resource.hash != cfsInstance.compactionStrategyManager.fanout
CFMetadataInstance.resource.hash != cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CFMetadataInstance.resource.hash != cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CFMetadataInstance.resource.hash != cfsInstance.metadata.keyValidator.STATIC_MARKER
CFMetadataInstance.resource.hash < cfsInstance.sampleLatencyNanos
CFMetadataInstance.resource.hash != resultSetInstance.metadata.columnCount
CFMetadataInstance.resource.hash != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.resource.hash != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.executor.pending
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.executor.written
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > StorageService.instance.tokenMetadata.ringVersion
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > cfsInstance.metadata.resource.hash
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > resultSetInstance.metadata.columnCount
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.executor.pending
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.executor.written
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.MAX_MUTATION_SIZE > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.MAX_MUTATION_SIZE > StorageService.instance.tokenMetadata.ringVersion
CommitLog.instance.MAX_MUTATION_SIZE > cfsInstance.metadata.resource.hash
CommitLog.instance.MAX_MUTATION_SIZE > resultSetInstance.metadata.columnCount
CommitLog.instance.MAX_MUTATION_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.archiver.restorePointInTime < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.executor.pending
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.executor.written
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.archiver.restorePointInTime > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.archiver.restorePointInTime > StorageService.instance.tokenMetadata.ringVersion
CommitLog.instance.archiver.restorePointInTime > cfsInstance.metadata.resource.hash
CommitLog.instance.archiver.restorePointInTime % resultSetInstance.metadata.columnCount == 0
CommitLog.instance.archiver.restorePointInTime > resultSetInstance.metadata.columnCount
CommitLog.instance.archiver.restorePointInTime > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > CommitLog.instance.executor.pending
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > StorageService.instance.tokenMetadata.ringVersion
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.markerIntervalNanos
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.pending
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.written
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.size
CommitLog.instance.executor.lastSyncedAt > StorageService.instance.RING_DELAY
CommitLog.instance.executor.lastSyncedAt > StorageService.instance.tokenMetadata.ringVersion
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.lastSyncedAt > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.lastSyncedAt > cfsInstance.metadata.keyValidator.STATIC_MARKER
CommitLog.instance.executor.lastSyncedAt > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.lastSyncedAt > cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.lastSyncedAt > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.lastSyncedAt > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.executor.pending
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.executor.written
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.markerIntervalNanos > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.markerIntervalNanos > StorageService.instance.tokenMetadata.ringVersion
CommitLog.instance.executor.markerIntervalNanos > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.markerIntervalNanos > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.markerIntervalNanos > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.pending < CommitLog.instance.executor.written
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.pending < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.pending < StorageService.instance.RING_DELAY
CommitLog.instance.executor.pending < cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.pending < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.pending < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.pending < cfsInstance.metadata.keyValidator.STATIC_MARKER
CommitLog.instance.executor.pending > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.pending < cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.pending <= resultSetInstance.metadata.columnCount
CommitLog.instance.executor.syncComplete.CANCELLED > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.syncComplete.CANCELLED <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.executor.written > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.executor.written < CommitLog.instance.segmentManager.size
CommitLog.instance.executor.written < StorageService.instance.RING_DELAY
CommitLog.instance.executor.written > StorageService.instance.tokenMetadata.ringVersion
CommitLog.instance.executor.written > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.written > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.written < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.written < cfsInstance.metadata.keyValidator.STATIC_MARKER
CommitLog.instance.executor.written > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.written < cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.written > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.written > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > StorageService.instance.tokenMetadata.ringVersion
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE != resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > StorageService.instance.tokenMetadata.ringVersion
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 8 == 0
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > StorageService.instance.tokenMetadata.ringVersion
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.metadata.keyValidator.STATIC_MARKER
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > StorageService.instance.tokenMetadata.ringVersion
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.fd < CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.fd > StorageService.instance.tokenMetadata.ringVersion
CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.fd > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.fd > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.id > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.id > StorageService.instance.tokenMetadata.ringVersion
CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.id > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.id > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.idBase > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.idBase > StorageService.instance.tokenMetadata.ringVersion
CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.idBase > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.idBase > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset >= CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > StorageService.instance.tokenMetadata.ringVersion
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.metadata.keyValidator.STATIC_MARKER
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < CommitLog.instance.segmentManager.size
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > StorageService.instance.RING_DELAY
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > StorageService.instance.tokenMetadata.ringVersion
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.metadata.keyValidator.STATIC_MARKER
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.sampleLatencyNanos
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.nextId > StorageService.instance.tokenMetadata.ringVersion
CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.nextId != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > StorageService.instance.tokenMetadata.ringVersion
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.allocatePosition > StorageService.instance.tokenMetadata.ringVersion
CommitLog.instance.segmentManager.availableSegment.allocatePosition > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.allocatePosition > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.allocatePosition > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.fd > StorageService.instance.tokenMetadata.ringVersion
CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.fd > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.fd > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.id > StorageService.instance.tokenMetadata.ringVersion
CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.id > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.id > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > StorageService.instance.tokenMetadata.ringVersion
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset >= resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize > StorageService.instance.tokenMetadata.ringVersion
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.size > StorageService.instance.tokenMetadata.ringVersion
CommitLog.instance.segmentManager.size > cfsInstance.metadata.resource.hash
CommitLog.instance.segmentManager.size > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.size > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
daikon.Quant.subsetOf(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE, resultSetInstance.rows_FOR_ENCLOSING_USE)
StorageService.instance.RING_DELAY > StorageService.instance.tokenMetadata.ringVersion
StorageService.instance.RING_DELAY > cfsInstance.metadata.resource.hash
StorageService.instance.RING_DELAY % resultSetInstance.metadata.columnCount == 0
StorageService.instance.RING_DELAY > resultSetInstance.metadata.columnCount
StorageService.instance.RING_DELAY > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
StorageService.instance.tokenMetadata.ringVersion < cfsInstance.compactionStrategyManager.fanout
StorageService.instance.tokenMetadata.ringVersion < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
StorageService.instance.tokenMetadata.ringVersion < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
StorageService.instance.tokenMetadata.ringVersion < cfsInstance.metadata.keyValidator.STATIC_MARKER
StorageService.instance.tokenMetadata.ringVersion > cfsInstance.metadata.resource.hash
StorageService.instance.tokenMetadata.ringVersion < cfsInstance.sampleLatencyNanos
StorageService.instance.tokenMetadata.ringVersion <= resultSetInstance.metadata.columnCount
cfsInstance.compactionStrategyManager.fanout > cfsInstance.metadata.resource.hash
cfsInstance.compactionStrategyManager.fanout != resultSetInstance.metadata.columnCount
cfsInstance.compactionStrategyManager.fanout != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > cfsInstance.metadata.resource.hash
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > resultSetInstance.metadata.columnCount
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > cfsInstance.metadata.resource.hash
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > resultSetInstance.metadata.columnCount
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.metadata.keyValidator.STATIC_MARKER > cfsInstance.metadata.resource.hash
cfsInstance.metadata.keyValidator.STATIC_MARKER > resultSetInstance.metadata.columnCount
cfsInstance.metadata.keyValidator.STATIC_MARKER > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.metadata.resource.hash < cfsInstance.sampleLatencyNanos
cfsInstance.metadata.resource.hash < resultSetInstance.metadata.columnCount
cfsInstance.metadata.resource.hash < daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
cfsInstance.sampleLatencyNanos > resultSetInstance.metadata.columnCount
cfsInstance.sampleLatencyNanos > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
===========================================================================
org.apache.cassandra.streaming.StreamTransferTaskTest@testFailSessionDuringTransferShouldNotReleaseReferences768746989:::dump
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.keyValidator.isByteOrderComparable
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.allocatingFrom.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.availableSegment.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.joinRing
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.useStrictConsistency
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionSpaceCheck
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.enabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.isActive
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_ENABLED
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.isEnabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.shouldDefragment
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.supportsEarlyOpen
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.data.loadsstables
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.directories.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.keyspace.initialized
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.allColumnFilter.isFetchAll
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.keyValidator.isByteOrderComparable
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.valid
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.viewManager.baseTableMetadata.isCompound
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK == CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MIN_THRESHOLD
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CFMetadataInstance.partitioner.MINIMUM.serialVersionUID
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.executor.syncComplete.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.managerThreadWaitQueue.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.segmentPrepared.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == StorageService.instance.threadCounter
CFMetadataInstance.isCounter == CFMetadataInstance.isDense
CFMetadataInstance.isCounter == CFMetadataInstance.isIndex
CFMetadataInstance.isCounter == CFMetadataInstance.isSuper
CFMetadataInstance.isCounter == CFMetadataInstance.isView
CFMetadataInstance.isCounter == CommitLog.instance.executor.shutdown
CFMetadataInstance.isCounter == CommitLog.instance.executor.syncRequested
CFMetadataInstance.isCounter == CommitLog.instance.segmentManager.shutdown
CFMetadataInstance.isCounter == StorageService.instance.allowSimultaneousMoves
CFMetadataInstance.isCounter == StorageService.instance.authSetupCalled
CFMetadataInstance.isCounter == StorageService.instance.authSetupComplete
CFMetadataInstance.isCounter == StorageService.instance.gossipActive
CFMetadataInstance.isCounter == StorageService.instance.initialized
CFMetadataInstance.isCounter == StorageService.instance.isBootstrapMode
CFMetadataInstance.isCounter == StorageService.instance.isDecommissioning
CFMetadataInstance.isCounter == StorageService.instance.isRebuilding
CFMetadataInstance.isCounter == StorageService.instance.isShutdown
CFMetadataInstance.isCounter == StorageService.instance.isSurveyMode
CFMetadataInstance.isCounter == StorageService.instance.joined
CFMetadataInstance.isCounter == StorageService.instance.replacing
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.compactionLogger.enabled
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.currentBoundaries.isInvalid
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.partitionSSTablesByTokenRange
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.keyspace.TEST_FAIL_WRITES
CFMetadataInstance.isCounter == cfsInstance.keyspace.viewManager.enableCoordinatorBatchlog
CFMetadataInstance.isCounter == cfsInstance.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.metric.aliasFactory.isIndex
CFMetadataInstance.isCounter == cfsInstance.metric.factory.isIndex
CFMetadataInstance.isCounter == cfsInstance.readOrdering.current.isBlocking
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isDense
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isView
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.executor.pending
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.executor.syncComplete.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.bufferPool.usedBuffers
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.managerThreadWaitQueue.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.segmentPrepared.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == QueryProcessor.instance.lastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.statics.complexIdx == QueryProcessor.instance.thriftLastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.legacyProgressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.nextRepairCommand
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.progressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.remainingCFs
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.tokenMetadata.ringVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.totalCFs
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.compactionLogger.identifier
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.currentBoundaries.directoriesVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.fileIndexGenerator
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.keyspace.TEST_FAIL_MV_LOCKS_COUNT
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.keyspace.replicationStrategy.lastInvalidatedVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.readOrdering.current.id
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.readOrdering.current.running
CFMetadataInstance.partitionColumns.statics.complexIdx == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)
CFMetadataInstance.partitionColumns.statics.complexIdx == daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.EMPTY_SIZE == StorageService.instance.tokenMetadata.partitioner.EMPTY_SIZE
CFMetadataInstance.partitioner.EMPTY_SIZE == StorageService.instance.valueFactory.partitioner.EMPTY_SIZE
CFMetadataInstance.partitioner.EMPTY_SIZE == cfsInstance.metadata.partitioner.EMPTY_SIZE
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == CommitLog.instance.configuration.encryptionContext.chunkLength
CommitLog.instance.executor.markerIntervalNanos == CommitLog.instance.executor.syncIntervalNanos
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.managerThreadWaitQueue.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.segmentPrepared.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.keyspace.writeOrder.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.readOrdering.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)-1
CommitLog.instance.executor.syncComplete.CANCELLED == daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == CommitLog.instance.segmentManager.availableSegment.ENTRY_OVERHEAD_SIZE
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == CommitLog.instance.segmentManager.availableSegment.SYNC_MARKER_SIZE
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.availableSegment.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.bufferPool.bufferSize
CommitLog.instance.segmentManager.allocatingFrom.idBase == CommitLog.instance.segmentManager.availableSegment.idBase
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset == CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.nextId == CommitLog.instance.segmentManager.availableSegment.nextId
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == CommitLog.instance.segmentManager.availableSegment.replayLimitId
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == CommitLog.instance.segmentManager.availableSegment.lastSyncedOffset
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE == resultSetInstance.rows_FOR_ENCLOSING_USE
daikon.Quant.pairwiseEqual(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE, resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.allColumnFilter.isFetchAll == true
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK == 2
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == 4
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == 1
CFMetadataInstance.isCounter == false
CFMetadataInstance.partitioner.EMPTY_SIZE == 24
CFMetadataInstance.resource.hash == 1457797880
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == 65536
CommitLog.instance.MAX_MUTATION_SIZE == 2621440
CommitLog.instance.archiver.restorePointInTime == 4510987932000L
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS == 100
CommitLog.instance.executor.lastSyncedAt == 89153476901547L || CommitLog.instance.executor.lastSyncedAt == 89153754398678L
CommitLog.instance.executor.markerIntervalNanos == 1000000
CommitLog.instance.executor.written == 4 || CommitLog.instance.executor.written == 5
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == 12
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == 8
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition == 1407 || CommitLog.instance.segmentManager.allocatingFrom.allocatePosition == 1480
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == 5242880
CommitLog.instance.segmentManager.allocatingFrom.fd == 177
CommitLog.instance.segmentManager.allocatingFrom.id == 1731353043378L
CommitLog.instance.segmentManager.allocatingFrom.idBase == 1731353043374L
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset == 1399 || CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset == 1472
CommitLog.instance.segmentManager.allocatingFrom.nextId == 6
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == 1731353043377L
CommitLog.instance.segmentManager.availableSegment.allocatePosition == 28
CommitLog.instance.segmentManager.availableSegment.fd == 178
CommitLog.instance.segmentManager.availableSegment.id == 1731353043379L
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == 20
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize == 3
CommitLog.instance.segmentManager.size == 10485760
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
("oneOf.java.jpp: SEQUENCE unimplemented" != null)
StorageService.instance.RING_DELAY == 30000
daikon.Quant.fuzzy.eq(StorageService.instance.traceProbability, 0.0)
cfsInstance.compactionStrategyManager.fanout == 10
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD == 32
cfsInstance.indexManager.DEFAULT_PAGE_SIZE == 10000
cfsInstance.metadata.resource.hash == 752961001
cfsInstance.sampleLatencyNanos == 2500000000L
resultSetInstance.metadata.columnCount == 5
===========================================================================
org.apache.cassandra.streaming.StreamTransferTaskTest@testScheduleTimeout768746989:::dump
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.keyValidator.isByteOrderComparable
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.allocatingFrom.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.availableSegment.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.joinRing
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.useStrictConsistency
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionSpaceCheck
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.enabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.isActive
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_ENABLED
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.isEnabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.shouldDefragment
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.supportsEarlyOpen
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.data.loadsstables
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.directories.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.keyspace.initialized
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.allColumnFilter.isFetchAll
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.keyValidator.isByteOrderComparable
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.valid
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.viewManager.baseTableMetadata.isCompound
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK == CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MIN_THRESHOLD
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CFMetadataInstance.partitioner.MINIMUM.serialVersionUID
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.executor.syncComplete.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.managerThreadWaitQueue.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.segmentPrepared.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == StorageService.instance.threadCounter
CFMetadataInstance.isCounter == CFMetadataInstance.isDense
CFMetadataInstance.isCounter == CFMetadataInstance.isIndex
CFMetadataInstance.isCounter == CFMetadataInstance.isSuper
CFMetadataInstance.isCounter == CFMetadataInstance.isView
CFMetadataInstance.isCounter == CommitLog.instance.executor.shutdown
CFMetadataInstance.isCounter == CommitLog.instance.executor.syncRequested
CFMetadataInstance.isCounter == CommitLog.instance.segmentManager.shutdown
CFMetadataInstance.isCounter == StorageService.instance.allowSimultaneousMoves
CFMetadataInstance.isCounter == StorageService.instance.authSetupCalled
CFMetadataInstance.isCounter == StorageService.instance.authSetupComplete
CFMetadataInstance.isCounter == StorageService.instance.gossipActive
CFMetadataInstance.isCounter == StorageService.instance.initialized
CFMetadataInstance.isCounter == StorageService.instance.isBootstrapMode
CFMetadataInstance.isCounter == StorageService.instance.isDecommissioning
CFMetadataInstance.isCounter == StorageService.instance.isRebuilding
CFMetadataInstance.isCounter == StorageService.instance.isShutdown
CFMetadataInstance.isCounter == StorageService.instance.isSurveyMode
CFMetadataInstance.isCounter == StorageService.instance.joined
CFMetadataInstance.isCounter == StorageService.instance.replacing
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.compactionLogger.enabled
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.currentBoundaries.isInvalid
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.partitionSSTablesByTokenRange
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.keyspace.TEST_FAIL_WRITES
CFMetadataInstance.isCounter == cfsInstance.keyspace.viewManager.enableCoordinatorBatchlog
CFMetadataInstance.isCounter == cfsInstance.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.metric.aliasFactory.isIndex
CFMetadataInstance.isCounter == cfsInstance.metric.factory.isIndex
CFMetadataInstance.isCounter == cfsInstance.readOrdering.current.isBlocking
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isDense
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isView
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.executor.pending
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.executor.syncComplete.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.bufferPool.usedBuffers
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.managerThreadWaitQueue.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.segmentPrepared.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == QueryProcessor.instance.lastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.statics.complexIdx == QueryProcessor.instance.thriftLastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.legacyProgressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.nextRepairCommand
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.progressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.remainingCFs
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.tokenMetadata.ringVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.totalCFs
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.compactionLogger.identifier
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.currentBoundaries.directoriesVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.fileIndexGenerator
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.keyspace.TEST_FAIL_MV_LOCKS_COUNT
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.keyspace.replicationStrategy.lastInvalidatedVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.readOrdering.current.id
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.readOrdering.current.running
CFMetadataInstance.partitionColumns.statics.complexIdx == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)
CFMetadataInstance.partitionColumns.statics.complexIdx == daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.EMPTY_SIZE == StorageService.instance.tokenMetadata.partitioner.EMPTY_SIZE
CFMetadataInstance.partitioner.EMPTY_SIZE == StorageService.instance.valueFactory.partitioner.EMPTY_SIZE
CFMetadataInstance.partitioner.EMPTY_SIZE == cfsInstance.metadata.partitioner.EMPTY_SIZE
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == CommitLog.instance.configuration.encryptionContext.chunkLength
CommitLog.instance.executor.markerIntervalNanos == CommitLog.instance.executor.syncIntervalNanos
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.managerThreadWaitQueue.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.segmentPrepared.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.keyspace.writeOrder.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.readOrdering.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)-1
CommitLog.instance.executor.syncComplete.CANCELLED == daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == CommitLog.instance.segmentManager.availableSegment.ENTRY_OVERHEAD_SIZE
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == CommitLog.instance.segmentManager.availableSegment.SYNC_MARKER_SIZE
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.availableSegment.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.bufferPool.bufferSize
CommitLog.instance.segmentManager.allocatingFrom.idBase == CommitLog.instance.segmentManager.availableSegment.idBase
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset == CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.nextId == CommitLog.instance.segmentManager.availableSegment.nextId
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == CommitLog.instance.segmentManager.availableSegment.replayLimitId
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == CommitLog.instance.segmentManager.availableSegment.lastSyncedOffset
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE == resultSetInstance.rows_FOR_ENCLOSING_USE
daikon.Quant.pairwiseEqual(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE, resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.allColumnFilter.isFetchAll == true
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK == 2
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == 4
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == 1
CFMetadataInstance.isCounter == false
CFMetadataInstance.partitioner.EMPTY_SIZE == 24
CFMetadataInstance.resource.hash == 1457797880
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == 65536
CommitLog.instance.MAX_MUTATION_SIZE == 2621440
CommitLog.instance.archiver.restorePointInTime == 4510987932000L
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS == 100
CommitLog.instance.executor.lastSyncedAt == 89152776367715L || CommitLog.instance.executor.lastSyncedAt == 89153089179030L
CommitLog.instance.executor.markerIntervalNanos == 1000000
CommitLog.instance.executor.written == 2 || CommitLog.instance.executor.written == 3
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == 12
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == 8
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition == 1261 || CommitLog.instance.segmentManager.allocatingFrom.allocatePosition == 1334
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == 5242880
CommitLog.instance.segmentManager.allocatingFrom.fd == 177
CommitLog.instance.segmentManager.allocatingFrom.id == 1731353043378L
CommitLog.instance.segmentManager.allocatingFrom.idBase == 1731353043374L
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset == 1253 || CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset == 1326
CommitLog.instance.segmentManager.allocatingFrom.nextId == 6
CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == 1731353043377L
CommitLog.instance.segmentManager.availableSegment.allocatePosition == 28
CommitLog.instance.segmentManager.availableSegment.fd == 178
CommitLog.instance.segmentManager.availableSegment.id == 1731353043379L
CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset == 20
CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize == 3
CommitLog.instance.segmentManager.size == 10485760
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
("oneOf.java.jpp: SEQUENCE unimplemented" != null)
StorageService.instance.RING_DELAY == 30000
daikon.Quant.fuzzy.eq(StorageService.instance.traceProbability, 0.0)
cfsInstance.compactionStrategyManager.fanout == 10
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD == 32
cfsInstance.indexManager.DEFAULT_PAGE_SIZE == 10000
cfsInstance.metadata.resource.hash == 752961001
cfsInstance.sampleLatencyNanos == 2500000000L
resultSetInstance.metadata.columnCount == 5
===========================================================================
org.apache.cassandra.tools.StandaloneScrubberTest@testStandaloneScrubber_WithArgs-54916894:::dump
CFMetadataInstance.allColumnFilter.isFetchAll == CFMetadataInstance.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.allocatingFrom.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == CommitLog.instance.segmentManager.availableSegment.headerWritten
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.joinRing
CFMetadataInstance.allColumnFilter.isFetchAll == StorageService.instance.useStrictConsistency
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionSpaceCheck
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.enabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.isActive
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.partitionSSTablesByTokenRange
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_ENABLED
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.schemaCompactionParams.isEnabled
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.shouldDefragment
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.compactionStrategyManager.supportsEarlyOpen
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.data.loadsstables
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.directories.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.allColumnFilter.isFetchAll
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.isCompound
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.metadata.keyValidator.isByteOrderComparable
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.valid
CFMetadataInstance.allColumnFilter.isFetchAll == cfsInstance.viewManager.baseTableMetadata.isCompound
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MIN_THRESHOLD
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CFMetadataInstance.partitioner.MINIMUM.serialVersionUID
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.executor.syncComplete.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.managerThreadWaitQueue.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == CommitLog.instance.segmentManager.segmentPrepared.SIGNALLED
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == StorageService.instance.threadCounter
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == cfsInstance.fileIndexGenerator
CFMetadataInstance.isCounter == CFMetadataInstance.isDense
CFMetadataInstance.isCounter == CFMetadataInstance.isIndex
CFMetadataInstance.isCounter == CFMetadataInstance.isSuper
CFMetadataInstance.isCounter == CFMetadataInstance.isView
CFMetadataInstance.isCounter == CFMetadataInstance.partitioner.partitionOrdering.isByteOrderComparable
CFMetadataInstance.isCounter == CommitLog.instance.executor.shutdown
CFMetadataInstance.isCounter == CommitLog.instance.executor.syncRequested
CFMetadataInstance.isCounter == CommitLog.instance.segmentManager.shutdown
CFMetadataInstance.isCounter == StorageService.instance.allowSimultaneousMoves
CFMetadataInstance.isCounter == StorageService.instance.authSetupCalled
CFMetadataInstance.isCounter == StorageService.instance.authSetupComplete
CFMetadataInstance.isCounter == StorageService.instance.gossipActive
CFMetadataInstance.isCounter == StorageService.instance.initialized
CFMetadataInstance.isCounter == StorageService.instance.isBootstrapMode
CFMetadataInstance.isCounter == StorageService.instance.isDecommissioning
CFMetadataInstance.isCounter == StorageService.instance.isRebuilding
CFMetadataInstance.isCounter == StorageService.instance.isShutdown
CFMetadataInstance.isCounter == StorageService.instance.isSurveyMode
CFMetadataInstance.isCounter == StorageService.instance.joined
CFMetadataInstance.isCounter == StorageService.instance.replacing
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.compactionLogger.enabled
CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.currentBoundaries.isInvalid
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.directories.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.diskBoundaryManager.diskBoundaries.isInvalid
CFMetadataInstance.isCounter == cfsInstance.keyspace.TEST_FAIL_WRITES
CFMetadataInstance.isCounter == cfsInstance.keyspace.initialized
CFMetadataInstance.isCounter == cfsInstance.keyspace.viewManager.enableCoordinatorBatchlog
CFMetadataInstance.isCounter == cfsInstance.metadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.metadata.isDense
CFMetadataInstance.isCounter == cfsInstance.metadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.metadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.metadata.isView
CFMetadataInstance.isCounter == cfsInstance.metric.aliasFactory.isIndex
CFMetadataInstance.isCounter == cfsInstance.metric.factory.isIndex
CFMetadataInstance.isCounter == cfsInstance.readOrdering.current.isBlocking
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isCounter
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isDense
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isIndex
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isSuper
CFMetadataInstance.isCounter == cfsInstance.viewManager.baseTableMetadata.isView
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.executor.pending
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.executor.syncComplete.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.executor.written
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.bufferPool.usedBuffers
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.managerThreadWaitQueue.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.segmentManager.segmentPrepared.NOT_SET
CFMetadataInstance.partitionColumns.statics.complexIdx == QueryProcessor.instance.lastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.statics.complexIdx == QueryProcessor.instance.thriftLastMinuteEvictionsCount
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.legacyProgressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.nextRepairCommand
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.progressSupport.notificationSerialNumber
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.remainingCFs
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.tokenMetadata.ringVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == StorageService.instance.totalCFs
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.compactionLogger.identifier
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.currentBoundaries.directoriesVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.diskBoundaryManager.diskBoundaries.ringVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.keyspace.TEST_FAIL_MV_LOCKS_COUNT
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.keyspace.replicationStrategy.lastInvalidatedVersion
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.readOrdering.current.id
CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.readOrdering.current.running
CFMetadataInstance.partitionColumns.statics.complexIdx == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.HEAP_SIZE == StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.HEAP_SIZE == StorageService.instance.valueFactory.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.HEAP_SIZE == cfsInstance.metadata.partitioner.HEAP_SIZE
CFMetadataInstance.partitioner.MAXIMUM == StorageService.instance.tokenMetadata.partitioner.MAXIMUM
CFMetadataInstance.partitioner.MAXIMUM == StorageService.instance.valueFactory.partitioner.MAXIMUM
CFMetadataInstance.partitioner.MAXIMUM == cfsInstance.metadata.partitioner.MAXIMUM
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == CommitLog.instance.configuration.encryptionContext.chunkLength
CommitLog.instance.executor.markerIntervalNanos == CommitLog.instance.executor.syncIntervalNanos
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.managerThreadWaitQueue.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == CommitLog.instance.segmentManager.segmentPrepared.CANCELLED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.keyspace.writeOrder.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.readOrdering.FINISHED
CommitLog.instance.executor.syncComplete.CANCELLED == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)-1
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == CommitLog.instance.segmentManager.availableSegment.ENTRY_OVERHEAD_SIZE
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == CommitLog.instance.segmentManager.availableSegment.SYNC_MARKER_SIZE
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition == CommitLog.instance.segmentManager.availableSegment.allocatePosition
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.availableSegment.endOfBuffer
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == CommitLog.instance.segmentManager.bufferPool.bufferSize
CommitLog.instance.segmentManager.allocatingFrom.idBase == CommitLog.instance.segmentManager.allocatingFrom.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.idBase == CommitLog.instance.segmentManager.availableSegment.idBase
CommitLog.instance.segmentManager.allocatingFrom.idBase == CommitLog.instance.segmentManager.availableSegment.replayLimitId
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset == CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset == CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset == CommitLog.instance.segmentManager.availableSegment.lastSyncedOffset
CommitLog.instance.segmentManager.allocatingFrom.nextId == CommitLog.instance.segmentManager.availableSegment.nextId
CommitLog.instance.segmentManager.allocatingFrom.nextId == CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE == resultSetInstance.rows_FOR_ENCLOSING_USE
CFMetadataInstance.allColumnFilter.isFetchAll == true
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK == 2
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK == 4
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == 1
CFMetadataInstance.isCounter == false
CFMetadataInstance.partitionColumns.regulars.complexIdx == 1 || CFMetadataInstance.partitionColumns.regulars.complexIdx == 5
CFMetadataInstance.partitioner.HEAP_SIZE == 24
CFMetadataInstance.partitioner.MAXIMUM == 9223372036854775807L
CFMetadataInstance.partitioner.MINIMUM.token == -9223372036854775808L
CFMetadataInstance.resource.hash == -1782923776 || CFMetadataInstance.resource.hash == 1976282729
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE == 65536
CommitLog.instance.MAX_MUTATION_SIZE == 2621440
CommitLog.instance.archiver.restorePointInTime == 4510987932000L
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS == 100
CommitLog.instance.executor.markerIntervalNanos == 1000000
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE == 12
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE == 8
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition == 28
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer == 5242880
CommitLog.instance.segmentManager.allocatingFrom.fd == 200
CommitLog.instance.segmentManager.allocatingFrom.id == 1731353221708L
CommitLog.instance.segmentManager.allocatingFrom.idBase == 1731353221707L
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset == 20
CommitLog.instance.segmentManager.allocatingFrom.nextId == 3
CommitLog.instance.segmentManager.availableSegment.fd == 201
CommitLog.instance.segmentManager.availableSegment.id == 1731353221709L
CommitLog.instance.segmentManager.size == 10485760
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE != null
("oneOf.java.jpp: SEQUENCE unimplemented" != null)
StorageService.instance.RING_DELAY == 30000
daikon.Quant.fuzzy.eq(StorageService.instance.traceProbability, 0.0)
cfsInstance.compactionStrategyManager.fanout == 10
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD == 32
cfsInstance.indexManager.DEFAULT_PAGE_SIZE == 10000
cfsInstance.metadata.resource.hash == -16027700
cfsInstance.sampleLatencyNanos == 2500000000L
resultSetInstance.metadata.columnCount >= 1
daikon.Quant.eltsNotEqual(resultSetInstance.rows_FOR_ENCLOSING_USE, null)
daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) == 0 || daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) == 1 || daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) == 2
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != resultSetInstance.metadata.columnCount
CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK != CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK != CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK <= CFMetadataInstance.partitionColumns.regulars.complexIdx
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK != CFMetadataInstance.resource.hash
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK <= resultSetInstance.metadata.columnCount
CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.partitionColumns.regulars.complexIdx > CFMetadataInstance.partitionColumns.statics.complexIdx
CFMetadataInstance.partitionColumns.regulars.complexIdx < CFMetadataInstance.partitioner.HEAP_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CFMetadataInstance.partitioner.MAXIMUM
CFMetadataInstance.partitionColumns.regulars.complexIdx > CFMetadataInstance.partitioner.MINIMUM.token
CFMetadataInstance.partitionColumns.regulars.complexIdx != CFMetadataInstance.resource.hash
CFMetadataInstance.partitionColumns.regulars.complexIdx < CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.MAX_MUTATION_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.archiver.restorePointInTime
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.executor.markerIntervalNanos
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.idBase
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.partitionColumns.regulars.complexIdx != CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.partitionColumns.regulars.complexIdx < CommitLog.instance.segmentManager.size
CFMetadataInstance.partitionColumns.regulars.complexIdx < StorageService.instance.RING_DELAY
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.compactionStrategyManager.fanout
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CFMetadataInstance.partitionColumns.regulars.complexIdx > cfsInstance.metadata.resource.hash
CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.sampleLatencyNanos
CFMetadataInstance.partitionColumns.regulars.complexIdx > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitionColumns.statics.complexIdx != CFMetadataInstance.resource.hash
CFMetadataInstance.partitionColumns.statics.complexIdx < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitionColumns.statics.complexIdx < resultSetInstance.metadata.columnCount
CFMetadataInstance.partitionColumns.statics.complexIdx <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.HEAP_SIZE != CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.HEAP_SIZE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.HEAP_SIZE > resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.HEAP_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.MAXIMUM > CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.MAXIMUM > CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.MAXIMUM > resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.MAXIMUM > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.partitioner.MINIMUM.token < CFMetadataInstance.resource.hash
CFMetadataInstance.partitioner.MINIMUM.token < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.partitioner.MINIMUM.token < resultSetInstance.metadata.columnCount
CFMetadataInstance.partitioner.MINIMUM.token < daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.resource.hash != CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE
CFMetadataInstance.resource.hash != CommitLog.instance.MAX_MUTATION_SIZE
CFMetadataInstance.resource.hash < CommitLog.instance.archiver.restorePointInTime
CFMetadataInstance.resource.hash != CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS
CFMetadataInstance.resource.hash < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.resource.hash != CommitLog.instance.executor.markerIntervalNanos
CFMetadataInstance.resource.hash != CommitLog.instance.executor.syncComplete.CANCELLED
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.allocatingFrom.fd
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.id
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.allocatingFrom.idBase
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.allocatingFrom.nextId
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.availableSegment.fd
CFMetadataInstance.resource.hash < CommitLog.instance.segmentManager.availableSegment.id
CFMetadataInstance.resource.hash != CommitLog.instance.segmentManager.size
CFMetadataInstance.resource.hash != StorageService.instance.RING_DELAY
CFMetadataInstance.resource.hash != cfsInstance.compactionStrategyManager.fanout
CFMetadataInstance.resource.hash != cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CFMetadataInstance.resource.hash != cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CFMetadataInstance.resource.hash != cfsInstance.metadata.resource.hash
CFMetadataInstance.resource.hash < cfsInstance.sampleLatencyNanos
CFMetadataInstance.resource.hash != resultSetInstance.metadata.columnCount
CFMetadataInstance.resource.hash != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CFMetadataInstance.resource.hash != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE < CommitLog.instance.executor.lastSyncedAt
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > resultSetInstance.metadata.columnCount
CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.MAX_MUTATION_SIZE < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.MAX_MUTATION_SIZE > resultSetInstance.metadata.columnCount
CommitLog.instance.MAX_MUTATION_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.archiver.restorePointInTime < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.archiver.restorePointInTime % resultSetInstance.metadata.columnCount == 0
CommitLog.instance.archiver.restorePointInTime > resultSetInstance.metadata.columnCount
CommitLog.instance.archiver.restorePointInTime > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS < CommitLog.instance.executor.lastSyncedAt
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.executor.markerIntervalNanos
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.fd
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.id
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.idBase
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.allocatingFrom.nextId
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.fd
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.availableSegment.id
CommitLog.instance.executor.lastSyncedAt > CommitLog.instance.segmentManager.size
CommitLog.instance.executor.lastSyncedAt > StorageService.instance.RING_DELAY
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.fanout
CommitLog.instance.executor.lastSyncedAt > cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD
CommitLog.instance.executor.lastSyncedAt > cfsInstance.indexManager.DEFAULT_PAGE_SIZE
CommitLog.instance.executor.lastSyncedAt > cfsInstance.metadata.resource.hash
CommitLog.instance.executor.lastSyncedAt > cfsInstance.sampleLatencyNanos
CommitLog.instance.executor.lastSyncedAt > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.lastSyncedAt > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.markerIntervalNanos > resultSetInstance.metadata.columnCount
CommitLog.instance.executor.markerIntervalNanos > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.executor.syncComplete.CANCELLED <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE != resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.fd > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.fd > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.id > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.id > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.idBase > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.idBase > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset >= resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.allocatingFrom.nextId > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.fd > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.fd > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.availableSegment.id > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.availableSegment.id > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
CommitLog.instance.segmentManager.size > resultSetInstance.metadata.columnCount
CommitLog.instance.segmentManager.size > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
daikon.Quant.subsetOf(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE, resultSetInstance.rows_FOR_ENCLOSING_USE)
StorageService.instance.RING_DELAY % resultSetInstance.metadata.columnCount == 0
StorageService.instance.RING_DELAY > resultSetInstance.metadata.columnCount
StorageService.instance.RING_DELAY > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.compactionStrategyManager.fanout != resultSetInstance.metadata.columnCount
cfsInstance.compactionStrategyManager.fanout > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > resultSetInstance.metadata.columnCount
cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > resultSetInstance.metadata.columnCount
cfsInstance.indexManager.DEFAULT_PAGE_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
cfsInstance.metadata.resource.hash < resultSetInstance.metadata.columnCount
cfsInstance.metadata.resource.hash < daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1
cfsInstance.sampleLatencyNanos > resultSetInstance.metadata.columnCount
cfsInstance.sampleLatencyNanos > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)
resultSetInstance.metadata.columnCount >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)