package daikon.cassandra;
import daikon.*;
import java.util.Set;
import java.util.ArrayList;
import java.util.List;
//this class is automatically generated by our scripts
public class InvariantPool2796{

	public static List<Invariant> invariants2796 = new ArrayList<>();

	public static void installInv2796(){
		invariants2796.add(new Invariant(2000, "CFMetadataInstance.partitionColumns.regulars.complexIdx == CommitLog.instance.segmentManager.managerThreadWaitQueue.NOT_SET"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.regulars.complexIdx"))).intValue() == ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.managerThreadWaitQueue.NOT_SET"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2001, "CFMetadataInstance.partitionColumns.regulars.complexIdx == CommitLog.instance.segmentManager.segmentPrepared.NOT_SET"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.regulars.complexIdx"))).intValue() == ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.segmentPrepared.NOT_SET"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2002, "CFMetadataInstance.partitionColumns.regulars.complexIdx == QueryProcessor.instance.lastMinuteEvictionsCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.regulars.complexIdx"))).intValue() == ((Number)(InvariantChecker.getValue("QueryProcessor.instance.lastMinuteEvictionsCount"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2003, "CFMetadataInstance.partitionColumns.regulars.complexIdx == QueryProcessor.instance.thriftLastMinuteEvictionsCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.regulars.complexIdx"))).intValue() == ((Number)(InvariantChecker.getValue("QueryProcessor.instance.thriftLastMinuteEvictionsCount"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2004, "CFMetadataInstance.partitionColumns.regulars.complexIdx == StorageService.instance.legacyProgressSupport.notificationSerialNumber"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.regulars.complexIdx"))).intValue() == ((Number)(InvariantChecker.getValue("StorageService.instance.legacyProgressSupport.notificationSerialNumber"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2005, "CFMetadataInstance.partitionColumns.regulars.complexIdx == StorageService.instance.nextRepairCommand"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.regulars.complexIdx"))).intValue() == ((Number)(InvariantChecker.getValue("StorageService.instance.nextRepairCommand"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2006, "CFMetadataInstance.partitionColumns.regulars.complexIdx == StorageService.instance.progressSupport.notificationSerialNumber"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.regulars.complexIdx"))).intValue() == ((Number)(InvariantChecker.getValue("StorageService.instance.progressSupport.notificationSerialNumber"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2007, "CFMetadataInstance.partitionColumns.regulars.complexIdx == StorageService.instance.remainingCFs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.regulars.complexIdx"))).intValue() == ((Number)(InvariantChecker.getValue("StorageService.instance.remainingCFs"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2008, "CFMetadataInstance.partitionColumns.regulars.complexIdx == StorageService.instance.tokenMetadata.ringVersion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.regulars.complexIdx"))).intValue() == ((Number)(InvariantChecker.getValue("StorageService.instance.tokenMetadata.ringVersion"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2009, "CFMetadataInstance.partitionColumns.regulars.complexIdx == StorageService.instance.totalCFs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.regulars.complexIdx"))).intValue() == ((Number)(InvariantChecker.getValue("StorageService.instance.totalCFs"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2010, "CFMetadataInstance.partitionColumns.regulars.complexIdx == cfsInstance.compactionStrategyManager.compactionLogger.identifier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.regulars.complexIdx"))).intValue() == ((Number)(InvariantChecker.getValue("cfsInstance.compactionStrategyManager.compactionLogger.identifier"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2011, "CFMetadataInstance.partitionColumns.regulars.complexIdx == cfsInstance.compactionStrategyManager.currentBoundaries.directoriesVersion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.regulars.complexIdx"))).intValue() == ((Number)(InvariantChecker.getValue("cfsInstance.compactionStrategyManager.currentBoundaries.directoriesVersion"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2012, "CFMetadataInstance.partitionColumns.regulars.complexIdx == cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.regulars.complexIdx"))).intValue() == ((Number)(InvariantChecker.getValue("cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2013, "CFMetadataInstance.partitionColumns.regulars.complexIdx == cfsInstance.keyspace.TEST_FAIL_MV_LOCKS_COUNT"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.regulars.complexIdx"))).intValue() == ((Number)(InvariantChecker.getValue("cfsInstance.keyspace.TEST_FAIL_MV_LOCKS_COUNT"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2014, "CFMetadataInstance.partitionColumns.regulars.complexIdx == cfsInstance.keyspace.replicationStrategy.lastInvalidatedVersion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.regulars.complexIdx"))).intValue() == ((Number)(InvariantChecker.getValue("cfsInstance.keyspace.replicationStrategy.lastInvalidatedVersion"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2015, "CFMetadataInstance.partitionColumns.regulars.complexIdx == daikon.Quant.size(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.regulars.complexIdx"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("QueryProcessor.instance.thriftPreparedStatements")).toArray(new Object[0]))));
			}
		});
		invariants2796.add(new Invariant(2016, "CFMetadataInstance.partitionColumns.statics.complexIdx == CFMetadataInstance.partitioner.MINIMUM.serialVersionUID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.statics.complexIdx"))).intValue() == ((Number)(InvariantChecker.getValue("CFMetadataInstance.partitioner.MINIMUM.serialVersionUID"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2017, "StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE == cfsInstance.metadata.partitioner.HEAP_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE"))).intValue() == ((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.HEAP_SIZE"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2018, "StorageService.instance.tokenMetadata.partitioner.MAXIMUM == cfsInstance.metadata.partitioner.MAXIMUM"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("StorageService.instance.tokenMetadata.partitioner.MAXIMUM"))).intValue() == ((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.MAXIMUM"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2019, "cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD == cfsInstance.metadata.partitioner.EMPTY_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD"))).intValue() == ((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.EMPTY_SIZE"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2020, "cfsInstance.directories.metadata.isIndex == cfsInstance.diskBoundaryManager.diskBoundaries.isInvalid"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("cfsInstance.directories.metadata.isIndex"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("cfsInstance.diskBoundaryManager.diskBoundaries.isInvalid"))).booleanValue());
			}
		});
		invariants2796.add(new Invariant(2021, "cfsInstance.directories.metadata.isIndex == cfsInstance.metadata.isIndex"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("cfsInstance.directories.metadata.isIndex"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("cfsInstance.metadata.isIndex"))).booleanValue());
			}
		});
		invariants2796.add(new Invariant(2022, "cfsInstance.directories.metadata.isIndex == cfsInstance.metric.aliasFactory.isIndex"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("cfsInstance.directories.metadata.isIndex"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("cfsInstance.metric.aliasFactory.isIndex"))).booleanValue());
			}
		});
		invariants2796.add(new Invariant(2023, "cfsInstance.directories.metadata.isIndex == cfsInstance.metric.factory.isIndex"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("cfsInstance.directories.metadata.isIndex"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("cfsInstance.metric.factory.isIndex"))).booleanValue());
			}
		});
		invariants2796.add(new Invariant(2024, "CFMetadataInstance.resource.hash == -1493090395 || CFMetadataInstance.resource.hash == 1377534570"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() == -1493090395 || ((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() == 1377534570);
			}
		});
		invariants2796.add(new Invariant(2025, "CommitLog.instance.segmentManager.allocatingFrom.fd == 177 || CommitLog.instance.segmentManager.allocatingFrom.fd == 178 || CommitLog.instance.segmentManager.allocatingFrom.fd == 190"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() == 177 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() == 178 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() == 190);
			}
		});
		invariants2796.add(new Invariant(2026, "CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224511L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224512L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224513L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() == 1731353224511L || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() == 1731353224512L || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() == 1731353224513L);
			}
		});
		invariants2796.add(new Invariant(2027, "CommitLog.instance.segmentManager.allocatingFrom.nextId == 41 || CommitLog.instance.segmentManager.allocatingFrom.nextId == 42 || CommitLog.instance.segmentManager.allocatingFrom.nextId == 43"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.nextId"))).intValue() == 41 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.nextId"))).intValue() == 42 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.nextId"))).intValue() == 43);
			}
		});
		invariants2796.add(new Invariant(2028, "CommitLog.instance.segmentManager.availableSegment.fd == 178 || CommitLog.instance.segmentManager.availableSegment.fd == 183 || CommitLog.instance.segmentManager.availableSegment.fd == 190"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() == 178 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() == 183 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() == 190);
			}
		});
		invariants2796.add(new Invariant(2029, "CommitLog.instance.segmentManager.availableSegment.id == 1731353224512L || CommitLog.instance.segmentManager.availableSegment.id == 1731353224513L || CommitLog.instance.segmentManager.availableSegment.id == 1731353224514L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() == 1731353224512L || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() == 1731353224513L || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() == 1731353224514L);
			}
		});
		invariants2796.add(new Invariant(2030, "cfsInstance.diskBoundaryManager.diskBoundaries.isInvalid == false"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("cfsInstance.diskBoundaryManager.diskBoundaries.isInvalid"))).booleanValue() == false);
			}
		});
		invariants2796.add(new Invariant(2031, "cfsInstance.metadata.partitioner.EMPTY_SIZE == 32"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.EMPTY_SIZE"))).intValue() == 32);
			}
		});
		invariants2796.add(new Invariant(2032, "cfsInstance.metadata.partitioner.HEAP_SIZE == 24"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.HEAP_SIZE"))).intValue() == 24);
			}
		});
		invariants2796.add(new Invariant(2033, "cfsInstance.metadata.partitioner.MAXIMUM == 9223372036854775807L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.MAXIMUM"))).intValue() == 9223372036854775807L);
			}
		});
		invariants2796.add(new Invariant(2034, "cfsInstance.metadata.resource.hash == -1493090395 || cfsInstance.metadata.resource.hash == 1377534570"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() == -1493090395 || ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() == 1377534570);
			}
		});
		invariants2796.add(new Invariant(2035, "cfsInstance.readOrdering.current.id == 0 || cfsInstance.readOrdering.current.id == 1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.id"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.id"))).intValue() == 1);
			}
		});
		invariants2796.add(new Invariant(2036, "cfsInstance.readOrdering.current.running == -1 || cfsInstance.readOrdering.current.running == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.running"))).intValue() == -1 || ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.running"))).intValue() == 0);
			}
		});
		invariants2796.add(new Invariant(2037, "CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > cfsInstance.readOrdering.current.id"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.id"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2038, "CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > cfsInstance.readOrdering.current.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.running"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2039, "CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > cfsInstance.readOrdering.current.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.running"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2040, "CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK >= cfsInstance.readOrdering.current.id"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK"))).intValue() >= ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.id"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2041, "CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK > cfsInstance.readOrdering.current.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.running"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2042, "CFMetadataInstance.partitionColumns.regulars.complexIdx <= CFMetadataInstance.partitionColumns.statics.complexIdx"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.regulars.complexIdx"))).intValue() <= ((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.statics.complexIdx"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2043, "CFMetadataInstance.partitionColumns.regulars.complexIdx <= CommitLog.instance.executor.pending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.regulars.complexIdx"))).intValue() <= ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2044, "CFMetadataInstance.partitionColumns.regulars.complexIdx >= cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.regulars.complexIdx"))).intValue() >= ((Number)(InvariantChecker.getValue("cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2045, "CFMetadataInstance.partitionColumns.regulars.complexIdx >= cfsInstance.readOrdering.current.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.regulars.complexIdx"))).intValue() >= ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.running"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2046, "CFMetadataInstance.partitionColumns.regulars.complexIdx < resultSetInstance.metadata.columnCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.regulars.complexIdx"))).intValue() < ((Number)(InvariantChecker.getValue("resultSetInstance.metadata.columnCount"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2047, "CFMetadataInstance.partitionColumns.regulars.complexIdx <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.regulars.complexIdx"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0]))));
			}
		});
		invariants2796.add(new Invariant(2048, "CFMetadataInstance.partitionColumns.statics.complexIdx < CFMetadataInstance.partitioner.EMPTY_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.statics.complexIdx"))).intValue() < ((Number)(InvariantChecker.getValue("CFMetadataInstance.partitioner.EMPTY_SIZE"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2049, "CFMetadataInstance.partitionColumns.statics.complexIdx < StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.statics.complexIdx"))).intValue() < ((Number)(InvariantChecker.getValue("StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2050, "CFMetadataInstance.partitionColumns.statics.complexIdx < StorageService.instance.tokenMetadata.partitioner.MAXIMUM"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.statics.complexIdx"))).intValue() < ((Number)(InvariantChecker.getValue("StorageService.instance.tokenMetadata.partitioner.MAXIMUM"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2051, "CFMetadataInstance.partitionColumns.statics.complexIdx > cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.statics.complexIdx"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2052, "CFMetadataInstance.partitionColumns.statics.complexIdx > cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.statics.complexIdx"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2053, "CFMetadataInstance.partitionColumns.statics.complexIdx < cfsInstance.metadata.partitioner.EMPTY_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.statics.complexIdx"))).intValue() < ((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.EMPTY_SIZE"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2054, "CFMetadataInstance.partitionColumns.statics.complexIdx < cfsInstance.metadata.partitioner.HEAP_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.statics.complexIdx"))).intValue() < ((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.HEAP_SIZE"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2055, "CFMetadataInstance.partitionColumns.statics.complexIdx < cfsInstance.metadata.partitioner.MAXIMUM"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.statics.complexIdx"))).intValue() < ((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.MAXIMUM"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2056, "CFMetadataInstance.partitionColumns.statics.complexIdx >= cfsInstance.readOrdering.current.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.statics.complexIdx"))).intValue() >= ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.running"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2057, "CFMetadataInstance.partitioner.EMPTY_SIZE > cfsInstance.readOrdering.current.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitioner.EMPTY_SIZE"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.running"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2058, "CFMetadataInstance.partitioner.HEAP_SIZE > cfsInstance.readOrdering.current.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitioner.HEAP_SIZE"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.running"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2059, "CFMetadataInstance.partitioner.MAXIMUM > cfsInstance.readOrdering.current.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitioner.MAXIMUM"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.running"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2060, "CFMetadataInstance.partitioner.MINIMUM.serialVersionUID >= cfsInstance.fileIndexGenerator"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitioner.MINIMUM.serialVersionUID"))).intValue() >= ((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2061, "CFMetadataInstance.partitioner.MINIMUM.serialVersionUID >= cfsInstance.readOrdering.current.id"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitioner.MINIMUM.serialVersionUID"))).intValue() >= ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.id"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2062, "CFMetadataInstance.partitioner.MINIMUM.serialVersionUID > cfsInstance.readOrdering.current.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitioner.MINIMUM.serialVersionUID"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.running"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2063, "CFMetadataInstance.partitioner.MINIMUM.token < cfsInstance.readOrdering.current.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitioner.MINIMUM.token"))).intValue() < ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.running"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2064, "CFMetadataInstance.resource.hash != cfsInstance.metadata.partitioner.EMPTY_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() != ((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.EMPTY_SIZE"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2065, "CFMetadataInstance.resource.hash < cfsInstance.metadata.partitioner.HEAP_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() < ((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.HEAP_SIZE"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2066, "CFMetadataInstance.resource.hash < cfsInstance.metadata.partitioner.MAXIMUM"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() < ((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.MAXIMUM"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2067, "CFMetadataInstance.resource.hash != cfsInstance.readOrdering.current.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() != ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.running"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2068, "CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > cfsInstance.readOrdering.current.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.running"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2069, "CommitLog.instance.MAX_MUTATION_SIZE > cfsInstance.readOrdering.current.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.MAX_MUTATION_SIZE"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.running"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2070, "CommitLog.instance.archiver.restorePointInTime > cfsInstance.readOrdering.current.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.archiver.restorePointInTime"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.running"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2071, "CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > cfsInstance.readOrdering.current.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.running"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2072, "CommitLog.instance.executor.lastSyncedAt > cfsInstance.metadata.partitioner.EMPTY_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.EMPTY_SIZE"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2073, "CommitLog.instance.executor.lastSyncedAt > cfsInstance.metadata.partitioner.HEAP_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.HEAP_SIZE"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2074, "CommitLog.instance.executor.lastSyncedAt < cfsInstance.metadata.partitioner.MAXIMUM"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() < ((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.MAXIMUM"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2075, "CommitLog.instance.executor.lastSyncedAt > cfsInstance.readOrdering.current.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.running"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2076, "CommitLog.instance.executor.markerIntervalNanos > cfsInstance.readOrdering.current.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.markerIntervalNanos"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.running"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2077, "CommitLog.instance.executor.pending < cfsInstance.metadata.partitioner.EMPTY_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() < ((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.EMPTY_SIZE"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2078, "CommitLog.instance.executor.pending < cfsInstance.metadata.partitioner.HEAP_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() < ((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.HEAP_SIZE"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2079, "CommitLog.instance.executor.pending < cfsInstance.metadata.partitioner.MAXIMUM"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() < ((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.MAXIMUM"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2080, "CommitLog.instance.executor.pending >= cfsInstance.readOrdering.current.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() >= ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.running"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2081, "CommitLog.instance.executor.syncComplete.CANCELLED <= cfsInstance.readOrdering.current.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.syncComplete.CANCELLED"))).intValue() <= ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.running"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2082, "CommitLog.instance.executor.written > cfsInstance.metadata.partitioner.EMPTY_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.EMPTY_SIZE"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2083, "CommitLog.instance.executor.written > cfsInstance.metadata.partitioner.HEAP_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.HEAP_SIZE"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2084, "CommitLog.instance.executor.written < cfsInstance.metadata.partitioner.MAXIMUM"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() < ((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.MAXIMUM"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2085, "CommitLog.instance.executor.written > cfsInstance.readOrdering.current.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.running"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2086, "CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > cfsInstance.readOrdering.current.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.running"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2087, "CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > cfsInstance.readOrdering.current.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.running"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2088, "CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.metadata.partitioner.EMPTY_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.EMPTY_SIZE"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2089, "CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.metadata.partitioner.HEAP_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.HEAP_SIZE"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2090, "CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.metadata.partitioner.MAXIMUM"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() < ((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.MAXIMUM"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2091, "CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.readOrdering.current.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.running"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2092, "CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > cfsInstance.readOrdering.current.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.running"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2093, "CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.metadata.partitioner.EMPTY_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.EMPTY_SIZE"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2094, "CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.metadata.partitioner.HEAP_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.HEAP_SIZE"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2095, "CommitLog.instance.segmentManager.allocatingFrom.fd < cfsInstance.metadata.partitioner.MAXIMUM"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() < ((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.MAXIMUM"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2096, "CommitLog.instance.segmentManager.allocatingFrom.fd > cfsInstance.readOrdering.current.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.running"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2097, "CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.metadata.partitioner.EMPTY_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.EMPTY_SIZE"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2098, "CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.metadata.partitioner.HEAP_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.HEAP_SIZE"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2099, "CommitLog.instance.segmentManager.allocatingFrom.id < cfsInstance.metadata.partitioner.MAXIMUM"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() < ((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.MAXIMUM"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2100, "CommitLog.instance.segmentManager.allocatingFrom.id > cfsInstance.readOrdering.current.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.running"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2101, "CommitLog.instance.segmentManager.allocatingFrom.idBase > cfsInstance.readOrdering.current.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.idBase"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.running"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2102, "CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.metadata.partitioner.EMPTY_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.EMPTY_SIZE"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2103, "CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.metadata.partitioner.HEAP_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.HEAP_SIZE"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2104, "CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.metadata.partitioner.MAXIMUM"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() < ((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.MAXIMUM"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2105, "CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.readOrdering.current.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.running"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2106, "CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.metadata.partitioner.EMPTY_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.EMPTY_SIZE"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2107, "CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.metadata.partitioner.HEAP_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.HEAP_SIZE"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2108, "CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.metadata.partitioner.MAXIMUM"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() < ((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.MAXIMUM"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2109, "CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.readOrdering.current.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.running"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2110, "CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.metadata.partitioner.EMPTY_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.nextId"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.EMPTY_SIZE"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2111, "CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.metadata.partitioner.HEAP_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.nextId"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.HEAP_SIZE"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2112, "CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.metadata.partitioner.MAXIMUM"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.nextId"))).intValue() < ((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.MAXIMUM"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2113, "CommitLog.instance.segmentManager.allocatingFrom.nextId > cfsInstance.readOrdering.current.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.nextId"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.running"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2114, "CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > cfsInstance.readOrdering.current.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.replayLimitId"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.running"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2115, "CommitLog.instance.segmentManager.availableSegment.allocatePosition > cfsInstance.readOrdering.current.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.allocatePosition"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.running"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2116, "CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.metadata.partitioner.EMPTY_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.EMPTY_SIZE"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2117, "CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.metadata.partitioner.HEAP_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.HEAP_SIZE"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2118, "CommitLog.instance.segmentManager.availableSegment.fd < cfsInstance.metadata.partitioner.MAXIMUM"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() < ((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.MAXIMUM"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2119, "CommitLog.instance.segmentManager.availableSegment.fd > cfsInstance.readOrdering.current.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.running"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2120, "CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.metadata.partitioner.EMPTY_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.EMPTY_SIZE"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2121, "CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.metadata.partitioner.HEAP_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.HEAP_SIZE"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2122, "CommitLog.instance.segmentManager.availableSegment.id < cfsInstance.metadata.partitioner.MAXIMUM"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() < ((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.MAXIMUM"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2123, "CommitLog.instance.segmentManager.availableSegment.id > cfsInstance.readOrdering.current.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.running"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2124, "CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > cfsInstance.readOrdering.current.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.running"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2125, "CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize > cfsInstance.readOrdering.current.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.running"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2126, "CommitLog.instance.segmentManager.size > cfsInstance.metadata.partitioner.EMPTY_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.size"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.EMPTY_SIZE"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2127, "CommitLog.instance.segmentManager.size > cfsInstance.metadata.partitioner.HEAP_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.size"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.HEAP_SIZE"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2128, "CommitLog.instance.segmentManager.size < cfsInstance.metadata.partitioner.MAXIMUM"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.size"))).intValue() < ((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.MAXIMUM"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2129, "CommitLog.instance.segmentManager.size > cfsInstance.readOrdering.current.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.size"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.running"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2130, "StorageService.instance.RING_DELAY > cfsInstance.readOrdering.current.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("StorageService.instance.RING_DELAY"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.running"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2131, "StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE > cfsInstance.readOrdering.current.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("StorageService.instance.tokenMetadata.partitioner.HEAP_SIZE"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.running"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2132, "StorageService.instance.tokenMetadata.partitioner.MAXIMUM > cfsInstance.readOrdering.current.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("StorageService.instance.tokenMetadata.partitioner.MAXIMUM"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.running"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2133, "cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion < cfsInstance.metadata.partitioner.EMPTY_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion"))).intValue() < ((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.EMPTY_SIZE"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2134, "cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion < cfsInstance.metadata.partitioner.HEAP_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion"))).intValue() < ((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.HEAP_SIZE"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2135, "cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion < cfsInstance.metadata.partitioner.MAXIMUM"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion"))).intValue() < ((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.MAXIMUM"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2136, "cfsInstance.compactionStrategyManager.fanout > cfsInstance.readOrdering.current.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.compactionStrategyManager.fanout"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.running"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2137, "cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD > cfsInstance.readOrdering.current.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.running"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2138, "cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion >= cfsInstance.readOrdering.current.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion"))).intValue() >= ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.running"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2139, "cfsInstance.fileIndexGenerator < cfsInstance.metadata.partitioner.EMPTY_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue() < ((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.EMPTY_SIZE"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2140, "cfsInstance.fileIndexGenerator < cfsInstance.metadata.partitioner.HEAP_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue() < ((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.HEAP_SIZE"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2141, "cfsInstance.fileIndexGenerator < cfsInstance.metadata.partitioner.MAXIMUM"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue() < ((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.MAXIMUM"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2142, "cfsInstance.fileIndexGenerator >= cfsInstance.readOrdering.current.id"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue() >= ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.id"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2143, "cfsInstance.fileIndexGenerator >= cfsInstance.readOrdering.current.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue() >= ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.running"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2144, "cfsInstance.indexManager.DEFAULT_PAGE_SIZE > cfsInstance.readOrdering.current.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.indexManager.DEFAULT_PAGE_SIZE"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.running"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2145, "cfsInstance.metadata.partitioner.EMPTY_SIZE < cfsInstance.metadata.resource.hash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.EMPTY_SIZE"))).intValue() < ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2146, "cfsInstance.metadata.partitioner.EMPTY_SIZE > cfsInstance.readOrdering.current.id"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.EMPTY_SIZE"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.id"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2147, "cfsInstance.metadata.partitioner.EMPTY_SIZE > cfsInstance.readOrdering.current.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.EMPTY_SIZE"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.running"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2148, "cfsInstance.metadata.partitioner.EMPTY_SIZE > resultSetInstance.metadata.columnCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.EMPTY_SIZE"))).intValue() > ((Number)(InvariantChecker.getValue("resultSetInstance.metadata.columnCount"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2149, "cfsInstance.metadata.partitioner.EMPTY_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.EMPTY_SIZE"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0]))));
			}
		});
		invariants2796.add(new Invariant(2150, "cfsInstance.metadata.partitioner.HEAP_SIZE > cfsInstance.metadata.resource.hash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.HEAP_SIZE"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2151, "cfsInstance.metadata.partitioner.HEAP_SIZE > cfsInstance.readOrdering.current.id"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.HEAP_SIZE"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.id"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2152, "cfsInstance.metadata.partitioner.HEAP_SIZE > cfsInstance.readOrdering.current.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.HEAP_SIZE"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.running"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2153, "cfsInstance.metadata.partitioner.HEAP_SIZE > resultSetInstance.metadata.columnCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.HEAP_SIZE"))).intValue() > ((Number)(InvariantChecker.getValue("resultSetInstance.metadata.columnCount"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2154, "cfsInstance.metadata.partitioner.HEAP_SIZE > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.HEAP_SIZE"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0]))));
			}
		});
		invariants2796.add(new Invariant(2155, "cfsInstance.metadata.partitioner.MAXIMUM > cfsInstance.metadata.resource.hash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.MAXIMUM"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2156, "cfsInstance.metadata.partitioner.MAXIMUM > cfsInstance.readOrdering.current.id"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.MAXIMUM"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.id"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2157, "cfsInstance.metadata.partitioner.MAXIMUM > cfsInstance.readOrdering.current.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.MAXIMUM"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.running"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2158, "cfsInstance.metadata.partitioner.MAXIMUM > resultSetInstance.metadata.columnCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.MAXIMUM"))).intValue() > ((Number)(InvariantChecker.getValue("resultSetInstance.metadata.columnCount"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2159, "cfsInstance.metadata.partitioner.MAXIMUM > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.MAXIMUM"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0]))));
			}
		});
		invariants2796.add(new Invariant(2160, "cfsInstance.metadata.resource.hash != cfsInstance.readOrdering.current.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() != ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.running"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2161, "cfsInstance.readOrdering.current.id >= cfsInstance.readOrdering.current.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.id"))).intValue() >= ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.running"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2162, "cfsInstance.readOrdering.current.id <= resultSetInstance.metadata.columnCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.id"))).intValue() <= ((Number)(InvariantChecker.getValue("resultSetInstance.metadata.columnCount"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2163, "cfsInstance.readOrdering.current.running < cfsInstance.sampleLatencyNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.running"))).intValue() < ((Number)(InvariantChecker.getValue("cfsInstance.sampleLatencyNanos"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2164, "cfsInstance.readOrdering.current.running < resultSetInstance.metadata.columnCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.running"))).intValue() < ((Number)(InvariantChecker.getValue("resultSetInstance.metadata.columnCount"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2165, "cfsInstance.readOrdering.current.running <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.running"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0]))));
			}
		});
		invariants2796.add(new Invariant(2166, "CFMetadataInstance.partitionColumns.statics.complexIdx - CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.id + 1.731353224512E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.statics.complexIdx"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() + 1.731353224512E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2167, "CFMetadataInstance.partitionColumns.statics.complexIdx - CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.availableSegment.id + 1.731353224513E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.statics.complexIdx"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() + 1.731353224513E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2168, "CFMetadataInstance.partitionColumns.statics.complexIdx - CommitLog.instance.segmentManager.allocatingFrom.id + cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion + 1.731353224512E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.statics.complexIdx"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() + ((Number)(InvariantChecker.getValue("cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion"))).intValue() + 1.731353224512E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2169, "2 * CFMetadataInstance.partitionColumns.statics.complexIdx - CommitLog.instance.segmentManager.allocatingFrom.id + cfsInstance.fileIndexGenerator + 1.73135322451E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2 * ((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.statics.complexIdx"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() + ((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue() + 1.73135322451E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2170, "CFMetadataInstance.partitionColumns.statics.complexIdx - CommitLog.instance.segmentManager.allocatingFrom.id + cfsInstance.readOrdering.current.id + 1.731353224511E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.statics.complexIdx"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() + ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.id"))).intValue() + 1.731353224511E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2171, "CFMetadataInstance.partitionColumns.statics.complexIdx - CommitLog.instance.segmentManager.availableSegment.id + cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion + 1.731353224513E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.statics.complexIdx"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() + ((Number)(InvariantChecker.getValue("cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion"))).intValue() + 1.731353224513E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2172, "2 * CFMetadataInstance.partitionColumns.statics.complexIdx - CommitLog.instance.segmentManager.availableSegment.id + cfsInstance.fileIndexGenerator + 1.731353224511E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2 * ((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.statics.complexIdx"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() + ((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue() + 1.731353224511E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2173, "CFMetadataInstance.partitionColumns.statics.complexIdx - CommitLog.instance.segmentManager.availableSegment.id + cfsInstance.readOrdering.current.id + 1.731353224512E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.statics.complexIdx"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() + ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.id"))).intValue() + 1.731353224512E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2174, "2 * CommitLog.instance.executor.lastSyncedAt - 55386243 * CommitLog.instance.executor.pending - 119924157 * CommitLog.instance.executor.written - 1.78864213201081E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 55386243 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - 119924157 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() - 1.78864213201081E14 == 0);
			}
		});
		invariants2796.add(new Invariant(2175, "60 * CommitLog.instance.executor.lastSyncedAt + 1936137420 * CommitLog.instance.executor.pending - 39974719 * CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 5.370629381748061E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (60 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() + 1936137420 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - 39974719 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() - 5.370629381748061E15 == 0);
			}
		});
		invariants2796.add(new Invariant(2176, "60 * CommitLog.instance.executor.lastSyncedAt + 1936137420 * CommitLog.instance.executor.pending - 39974719 * CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 5.370629701545813E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (60 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() + 1936137420 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - 39974719 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() - 5.370629701545813E15 == 0);
			}
		});
		invariants2796.add(new Invariant(2177, "60 * CommitLog.instance.executor.lastSyncedAt - 7.617820421E9 * CommitLog.instance.executor.pending - 39974719 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 5.370629701545813E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (60 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 7.617820421E9 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - 39974719 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() - 5.370629701545813E15 == 0);
			}
		});
		invariants2796.add(new Invariant(2178, "CommitLog.instance.executor.lastSyncedAt + 32268957 * CommitLog.instance.executor.pending - 119924157 * daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 8.9511076657925E13 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() + 32268957 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - 119924157 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0]))) - 8.9511076657925E13 == 0);
			}
		});
		invariants2796.add(new Invariant(2179, "CommitLog.instance.executor.lastSyncedAt + 32268957 * CommitLog.instance.executor.pending - 119924157 * daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1 - 8.9511196582082E13 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() + 32268957 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - 119924157 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0])))-1 - 8.9511196582082E13 == 0);
			}
		});
		invariants2796.add(new Invariant(2180, "20 * CommitLog.instance.executor.lastSyncedAt - 645379140 * CommitLog.instance.executor.written - 6154027 * CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 1.789366147133333E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (20 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 645379140 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() - 6154027 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() - 1.789366147133333E15 == 0);
			}
		});
		invariants2796.add(new Invariant(2181, "20 * CommitLog.instance.executor.lastSyncedAt - 645379140 * CommitLog.instance.executor.written - 6154027 * CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 1.789366196365549E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (20 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 645379140 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() - 6154027 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() - 1.789366196365549E15 == 0);
			}
		});
		invariants2796.add(new Invariant(2182, "298 * CommitLog.instance.executor.lastSyncedAt - 2.2853461263E10 * CommitLog.instance.executor.written + 55386243 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 2.6644251187768416E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (298 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 2.2853461263E10 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() + 55386243 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() - 2.6644251187768416E16 == 0);
			}
		});
		invariants2796.add(new Invariant(2183, "CommitLog.instance.executor.lastSyncedAt - 32268957 * CommitLog.instance.executor.written - 55386243 * daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 8.9468578441556E13 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 32268957 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() - 55386243 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0]))) - 8.9468578441556E13 == 0);
			}
		});
		invariants2796.add(new Invariant(2184, "CommitLog.instance.executor.lastSyncedAt - 32268957 * CommitLog.instance.executor.written - 55386243 * daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1 - 8.9468633827799E13 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 32268957 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() - 55386243 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0])))-1 - 8.9468633827799E13 == 0);
			}
		});
		invariants2796.add(new Invariant(2185, "14340 * CommitLog.instance.executor.lastSyncedAt - 7.617820421E9 * CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 1936137420 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 1.28358043772688589E18 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (14340 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 7.617820421E9 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() - 1936137420 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() - 1.28358043772688589E18 == 0);
			}
		});
		invariants2796.add(new Invariant(2186, "14340 * CommitLog.instance.executor.lastSyncedAt - 7.617820421E9 * CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 1936137420 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 1.28358049866944947E18 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (14340 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 7.617820421E9 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() - 1936137420 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() - 1.28358049866944947E18 == 0);
			}
		});
		invariants2796.add(new Invariant(2187, "239 * CommitLog.instance.executor.lastSyncedAt - 32268957 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 2.2853461263E10 * daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 2.1393119150444616E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (239 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 32268957 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() - 2.2853461263E10 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0]))) - 2.1393119150444616E16 == 0);
			}
		});
		invariants2796.add(new Invariant(2188, "239 * CommitLog.instance.executor.lastSyncedAt - 32268957 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 2.2853461263E10 * daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1 - 2.1393142003905876E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (239 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 32268957 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() - 2.2853461263E10 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0])))-1 - 2.1393142003905876E16 == 0);
			}
		});
		invariants2796.add(new Invariant(2189, "CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.id + cfsInstance.readOrdering.current.id + 1.73135322451E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() + ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.id"))).intValue() + 1.73135322451E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2190, "CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.availableSegment.id + cfsInstance.readOrdering.current.id + 1.731353224511E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() + ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.id"))).intValue() + 1.731353224511E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2191, "CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.fileIndexGenerator + 2 * cfsInstance.readOrdering.current.id - 1.731353224512E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() - ((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue() + 2 * ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.id"))).intValue() - 1.731353224512E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2192, "CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.readOrdering.current.id - daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.73135322451E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() - ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.id"))).intValue() - daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0]))) - 1.73135322451E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2193, "CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.fileIndexGenerator + 2 * cfsInstance.readOrdering.current.id - 1.731353224513E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() - ((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue() + 2 * ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.id"))).intValue() - 1.731353224513E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2194, "CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.readOrdering.current.id - daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224511E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() - ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.id"))).intValue() - daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0]))) - 1.731353224511E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2195, "CFMetadataInstance.partitionColumns.regulars.complexIdx == 0 || CFMetadataInstance.partitionColumns.regulars.complexIdx == 2"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.regulars.complexIdx"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.regulars.complexIdx"))).intValue() == 2);
			}
		});
		invariants2796.add(new Invariant(2196, "CFMetadataInstance.resource.hash == -1493090395 || CFMetadataInstance.resource.hash == -1493090394"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() == -1493090395 || ((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() == -1493090394);
			}
		});
		invariants2796.add(new Invariant(2197, "CommitLog.instance.segmentManager.allocatingFrom.fd == 177 || CommitLog.instance.segmentManager.allocatingFrom.fd == 183 || CommitLog.instance.segmentManager.allocatingFrom.fd == 190"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() == 177 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() == 183 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() == 190);
			}
		});
		invariants2796.add(new Invariant(2198, "CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224513L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224514L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224515L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() == 1731353224513L || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() == 1731353224514L || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() == 1731353224515L);
			}
		});
		invariants2796.add(new Invariant(2199, "CommitLog.instance.segmentManager.allocatingFrom.nextId == 43 || CommitLog.instance.segmentManager.allocatingFrom.nextId == 44 || CommitLog.instance.segmentManager.allocatingFrom.nextId == 45"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.nextId"))).intValue() == 43 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.nextId"))).intValue() == 44 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.nextId"))).intValue() == 45);
			}
		});
		invariants2796.add(new Invariant(2200, "CommitLog.instance.segmentManager.availableSegment.fd == 177 || CommitLog.instance.segmentManager.availableSegment.fd == 180 || CommitLog.instance.segmentManager.availableSegment.fd == 183"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() == 177 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() == 180 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() == 183);
			}
		});
		invariants2796.add(new Invariant(2201, "CommitLog.instance.segmentManager.availableSegment.id == 1731353224514L || CommitLog.instance.segmentManager.availableSegment.id == 1731353224515L || CommitLog.instance.segmentManager.availableSegment.id == 1731353224516L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() == 1731353224514L || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() == 1731353224515L || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() == 1731353224516L);
			}
		});
		invariants2796.add(new Invariant(2202, "cfsInstance.metadata.resource.hash == -1493090395 || cfsInstance.metadata.resource.hash == -1493090394"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() == -1493090395 || ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() == -1493090394);
			}
		});
		invariants2796.add(new Invariant(2203, "CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK != CFMetadataInstance.partitionColumns.regulars.complexIdx"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK"))).intValue() != ((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.regulars.complexIdx"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2204, "CFMetadataInstance.partitionColumns.regulars.complexIdx != resultSetInstance.metadata.columnCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.regulars.complexIdx"))).intValue() != ((Number)(InvariantChecker.getValue("resultSetInstance.metadata.columnCount"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2205, "CFMetadataInstance.partitionColumns.regulars.complexIdx - 2 * CommitLog.instance.executor.pending - 2 * CommitLog.instance.segmentManager.allocatingFrom.id + 3.462706449028E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.regulars.complexIdx"))).intValue() - 2 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - 2 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() + 3.462706449028E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2206, "CFMetadataInstance.partitionColumns.regulars.complexIdx - 2 * CommitLog.instance.executor.pending - 2 * CommitLog.instance.segmentManager.availableSegment.id + 3.46270644903E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.regulars.complexIdx"))).intValue() - 2 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - 2 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() + 3.46270644903E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2207, "CFMetadataInstance.partitionColumns.regulars.complexIdx - 2 * CommitLog.instance.segmentManager.allocatingFrom.nextId + 2 * cfsInstance.metadata.resource.hash + 2.986180876E9 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.regulars.complexIdx"))).intValue() - 2 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.nextId"))).intValue() + 2 * ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() + 2.986180876E9 == 0);
			}
		});
		invariants2796.add(new Invariant(2208, "CFMetadataInstance.partitionColumns.statics.complexIdx + CommitLog.instance.executor.pending + CommitLog.instance.segmentManager.allocatingFrom.id - 1.731353224515E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.statics.complexIdx"))).intValue() + ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() + ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() - 1.731353224515E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2209, "CFMetadataInstance.partitionColumns.statics.complexIdx + CommitLog.instance.executor.pending + CommitLog.instance.segmentManager.availableSegment.id - 1.731353224516E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.statics.complexIdx"))).intValue() + ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() + ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() - 1.731353224516E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2210, "CFMetadataInstance.partitionColumns.statics.complexIdx + CommitLog.instance.segmentManager.allocatingFrom.nextId - cfsInstance.metadata.resource.hash - 1493090439 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.statics.complexIdx"))).intValue() + ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.nextId"))).intValue() - ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() - 1493090439 == 0);
			}
		});
		invariants2796.add(new Invariant(2211, "7 * CFMetadataInstance.resource.hash - 7 * CommitLog.instance.executor.pending + CommitLog.instance.segmentManager.allocatingFrom.fd + 1.0451632582E10 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (7 * ((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() - 7 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() + ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() + 1.0451632582E10 == 0);
			}
		});
		invariants2796.add(new Invariant(2212, "CFMetadataInstance.resource.hash - CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.id + 1.732846314909E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() + 1.732846314909E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2213, "CFMetadataInstance.resource.hash - CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.nextId + 1493090439 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.nextId"))).intValue() + 1493090439 == 0);
			}
		});
		invariants2796.add(new Invariant(2214, "6 * CFMetadataInstance.resource.hash - 6 * CommitLog.instance.executor.pending + CommitLog.instance.segmentManager.availableSegment.fd + 8.958542193E9 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (6 * ((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() - 6 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() + ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() + 8.958542193E9 == 0);
			}
		});
		invariants2796.add(new Invariant(2215, "CFMetadataInstance.resource.hash - CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.availableSegment.id + 1.73284631491E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() + 1.73284631491E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2216, "CFMetadataInstance.resource.hash - CommitLog.instance.executor.pending - cfsInstance.readOrdering.current.id + 1493090397 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.id"))).intValue() + 1493090397 == 0);
			}
		});
		invariants2796.add(new Invariant(2217, "CFMetadataInstance.resource.hash + CommitLog.instance.executor.pending + daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) + 1493090394 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() + ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() + daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0]))) + 1493090394 == 0);
			}
		});
		invariants2796.add(new Invariant(2218, "31457280 * CFMetadataInstance.resource.hash + 5242880 * CommitLog.instance.segmentManager.availableSegment.fd - 3 * CommitLog.instance.segmentManager.size + 4.696856169283584E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (31457280 * ((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() + 5242880 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() - 3 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.size"))).intValue() + 4.696856169283584E16 == 0);
			}
		});
		invariants2796.add(new Invariant(2219, "3 * CommitLog.instance.executor.lastSyncedAt - 64021072 * CommitLog.instance.executor.pending - 194242273 * CommitLog.instance.executor.written - 2.68289605728946E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (3 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 64021072 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - 194242273 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() - 2.68289605728946E14 == 0);
			}
		});
		invariants2796.add(new Invariant(2220, "276 * CommitLog.instance.executor.lastSyncedAt + 1.1980350492E10 * CommitLog.instance.executor.pending - 194242273 * CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 2.4707243345484844E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (276 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() + 1.1980350492E10 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - 194242273 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() - 2.4707243345484844E16 == 0);
			}
		});
		invariants2796.add(new Invariant(2221, "276 * CommitLog.instance.executor.lastSyncedAt + 1.1980350492E10 * CommitLog.instance.executor.pending - 194242273 * CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 2.4707244899423028E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (276 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() + 1.1980350492E10 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - 194242273 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() - 2.4707244899423028E16 == 0);
			}
		});
		invariants2796.add(new Invariant(2222, "276 * CommitLog.instance.executor.lastSyncedAt - 3.1918403206E10 * CommitLog.instance.executor.pending - 194242273 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 2.4707244899423028E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (276 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 3.1918403206E10 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - 194242273 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() - 2.4707244899423028E16 == 0);
			}
		});
		invariants2796.add(new Invariant(2223, "69 * CommitLog.instance.executor.lastSyncedAt - 2.995087623E9 * CommitLog.instance.executor.written - 16005268 * CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 6.17268790292635E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (69 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 2.995087623E9 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() - 16005268 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() - 6.17268790292635E15 == 0);
			}
		});
		invariants2796.add(new Invariant(2224, "69 * CommitLog.instance.executor.lastSyncedAt - 2.995087623E9 * CommitLog.instance.executor.written - 16005268 * CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 6.172688030968494E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (69 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 2.995087623E9 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() - 16005268 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() - 6.172688030968494E15 == 0);
			}
		});
		invariants2796.add(new Invariant(2225, "201 * CommitLog.instance.executor.lastSyncedAt - 1.5959201603E10 * CommitLog.instance.executor.written + 32010536 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 1.797134938543391E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (201 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 1.5959201603E10 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() + 32010536 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() - 1.797134938543391E16 == 0);
			}
		});
		invariants2796.add(new Invariant(2226, "31188 * CommitLog.instance.executor.lastSyncedAt - 1.5959201603E10 * CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 5.990175246E9 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 2.7919185459611894E18 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (31188 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 1.5959201603E10 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() - 5.990175246E9 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() - 2.7919185459611894E18 == 0);
			}
		});
		invariants2796.add(new Invariant(2227, "31188 * CommitLog.instance.executor.lastSyncedAt - 1.5959201603E10 * CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 5.990175246E9 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 2.7919186736348022E18 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (31188 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 1.5959201603E10 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() - 5.990175246E9 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() - 2.7919186736348022E18 == 0);
			}
		});
		invariants2796.add(new Invariant(2228, "CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.id + cfsInstance.readOrdering.current.id + 1.731353224511E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() + ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.id"))).intValue() + 1.731353224511E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2229, "CommitLog.instance.executor.pending + CommitLog.instance.segmentManager.allocatingFrom.id + daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224514E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() + ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() + daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0]))) - 1.731353224514E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2230, "CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.availableSegment.id + cfsInstance.readOrdering.current.id + 1.731353224512E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() + ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.id"))).intValue() + 1.731353224512E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2231, "CommitLog.instance.executor.pending + CommitLog.instance.segmentManager.availableSegment.id + daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224515E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() + ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() + daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0]))) - 1.731353224515E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2232, "4 * CommitLog.instance.segmentManager.allocatingFrom.fd + 27 * CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.fileIndexGenerator - 4.674653706261E13 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (4 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() + 27 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() - ((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue() - 4.674653706261E13 == 0);
			}
		});
		invariants2796.add(new Invariant(2233, "4 * CommitLog.instance.segmentManager.allocatingFrom.fd + 27 * CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.fileIndexGenerator - 4.6746537062637E13 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (4 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() + 27 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() - ((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue() - 4.6746537062637E13 == 0);
			}
		});
		invariants2796.add(new Invariant(2234, "15 * CommitLog.instance.segmentManager.allocatingFrom.id + 4 * CommitLog.instance.segmentManager.availableSegment.fd - 9 * cfsInstance.fileIndexGenerator - 2.5970298368418E13 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (15 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() + 4 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() - 9 * ((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue() - 2.5970298368418E13 == 0);
			}
		});
		invariants2796.add(new Invariant(2235, "CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.readOrdering.current.id - daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224511E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() - ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.id"))).intValue() - daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0]))) - 1.731353224511E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2236, "4 * CommitLog.instance.segmentManager.availableSegment.fd + 15 * CommitLog.instance.segmentManager.availableSegment.id - 9 * cfsInstance.fileIndexGenerator - 2.5970298368433E13 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (4 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() + 15 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() - 9 * ((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue() - 2.5970298368433E13 == 0);
			}
		});
		invariants2796.add(new Invariant(2237, "5242880 * CommitLog.instance.segmentManager.availableSegment.fd - 3 * CommitLog.instance.segmentManager.size + 31457280 * cfsInstance.metadata.resource.hash + 4.696856169283584E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (5242880 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() - 3 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.size"))).intValue() + 31457280 * ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() + 4.696856169283584E16 == 0);
			}
		});
		invariants2796.add(new Invariant(2238, "CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.readOrdering.current.id - daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224512E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() - ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.id"))).intValue() - daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0]))) - 1.731353224512E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2239, "CFMetadataInstance.partitioner.comparator.isByteOrderComparable == cfsInstance.directories.metadata.isIndex"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("CFMetadataInstance.partitioner.comparator.isByteOrderComparable"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("cfsInstance.directories.metadata.isIndex"))).booleanValue());
			}
		});
		invariants2796.add(new Invariant(2240, "CFMetadataInstance.partitioner.partitionOrdering.isByteOrderComparable == CommitLog.instance.executor.syncRequested"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("CFMetadataInstance.partitioner.partitionOrdering.isByteOrderComparable"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("CommitLog.instance.executor.syncRequested"))).booleanValue());
			}
		});
		invariants2796.add(new Invariant(2241, "CommitLog.instance.executor.pending == cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() == ((Number)(InvariantChecker.getValue("cfsInstance.diskBoundaryManager.diskBoundaries.directoriesVersion"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2242, "CommitLog.instance.executor.syncRequested == cfsInstance.diskBoundaryManager.diskBoundaries.isInvalid"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("CommitLog.instance.executor.syncRequested"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("cfsInstance.diskBoundaryManager.diskBoundaries.isInvalid"))).booleanValue());
			}
		});
		invariants2796.add(new Invariant(2243, "CFMetadataInstance.resource.hash == -1493090402 || CFMetadataInstance.resource.hash == 1292670864"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() == -1493090402 || ((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() == 1292670864);
			}
		});
		invariants2796.add(new Invariant(2244, "CommitLog.instance.segmentManager.allocatingFrom.fd == 177 || CommitLog.instance.segmentManager.allocatingFrom.fd == 180 || CommitLog.instance.segmentManager.allocatingFrom.fd == 183"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() == 177 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() == 180 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() == 183);
			}
		});
		invariants2796.add(new Invariant(2245, "CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224497L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224498L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224499L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() == 1731353224497L || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() == 1731353224498L || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() == 1731353224499L);
			}
		});
		invariants2796.add(new Invariant(2246, "CommitLog.instance.segmentManager.allocatingFrom.nextId == 27 || CommitLog.instance.segmentManager.allocatingFrom.nextId == 28 || CommitLog.instance.segmentManager.allocatingFrom.nextId == 29"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.nextId"))).intValue() == 27 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.nextId"))).intValue() == 28 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.nextId"))).intValue() == 29);
			}
		});
		invariants2796.add(new Invariant(2247, "CommitLog.instance.segmentManager.availableSegment.fd == 177 || CommitLog.instance.segmentManager.availableSegment.fd == 180 || CommitLog.instance.segmentManager.availableSegment.fd == 254"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() == 177 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() == 180 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() == 254);
			}
		});
		invariants2796.add(new Invariant(2248, "CommitLog.instance.segmentManager.availableSegment.id == 1731353224498L || CommitLog.instance.segmentManager.availableSegment.id == 1731353224499L || CommitLog.instance.segmentManager.availableSegment.id == 1731353224500L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() == 1731353224498L || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() == 1731353224499L || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() == 1731353224500L);
			}
		});
		invariants2796.add(new Invariant(2249, "cfsInstance.metadata.resource.hash == -1493090402 || cfsInstance.metadata.resource.hash == 1292670864"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() == -1493090402 || ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() == 1292670864);
			}
		});
		invariants2796.add(new Invariant(2250, "CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.metadata.partitioner.EMPTY_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.regulars.complexIdx"))).intValue() < ((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.EMPTY_SIZE"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2251, "CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.metadata.partitioner.HEAP_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.regulars.complexIdx"))).intValue() < ((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.HEAP_SIZE"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2252, "CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.metadata.partitioner.MAXIMUM"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.regulars.complexIdx"))).intValue() < ((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.MAXIMUM"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2253, "CommitLog.instance.executor.syncComplete.NOT_SET >= cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.syncComplete.NOT_SET"))).intValue() >= ((Number)(InvariantChecker.getValue("cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2254, "CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset != cfsInstance.metadata.partitioner.HEAP_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() != ((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.HEAP_SIZE"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2255, "CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset != cfsInstance.metadata.partitioner.HEAP_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() != ((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.HEAP_SIZE"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2256, "CommitLog.instance.segmentManager.allocatingFrom.nextId < cfsInstance.metadata.partitioner.EMPTY_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.nextId"))).intValue() < ((Number)(InvariantChecker.getValue("cfsInstance.metadata.partitioner.EMPTY_SIZE"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2257, "CFMetadataInstance.partitionColumns.regulars.complexIdx - CommitLog.instance.segmentManager.allocatingFrom.id + cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion + 1.731353224498E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.regulars.complexIdx"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() + ((Number)(InvariantChecker.getValue("cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion"))).intValue() + 1.731353224498E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2258, "CFMetadataInstance.partitionColumns.regulars.complexIdx - CommitLog.instance.segmentManager.allocatingFrom.id + cfsInstance.readOrdering.current.id + 1.731353224497E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.regulars.complexIdx"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() + ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.id"))).intValue() + 1.731353224497E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2259, "CFMetadataInstance.partitionColumns.regulars.complexIdx - CommitLog.instance.segmentManager.availableSegment.id + cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion + 1.731353224499E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.regulars.complexIdx"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() + ((Number)(InvariantChecker.getValue("cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion"))).intValue() + 1.731353224499E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2260, "CFMetadataInstance.partitionColumns.regulars.complexIdx - CommitLog.instance.segmentManager.availableSegment.id + cfsInstance.readOrdering.current.id + 1.731353224498E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.regulars.complexIdx"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() + ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.id"))).intValue() + 1.731353224498E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2261, "CommitLog.instance.executor.lastSyncedAt - 42721225 * CommitLog.instance.executor.pending - 69881870 * CommitLog.instance.executor.written - 8.9383577617077E13 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 42721225 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - 69881870 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() - 8.9383577617077E13 == 0);
			}
		});
		invariants2796.add(new Invariant(2262, "18 * CommitLog.instance.executor.lastSyncedAt - 488891610 * CommitLog.instance.executor.written - 8544245 * CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 1.609634947143376E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (18 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 488891610 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() - 8544245 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() - 1.609634947143376E15 == 0);
			}
		});
		invariants2796.add(new Invariant(2263, "18 * CommitLog.instance.executor.lastSyncedAt - 488891610 * CommitLog.instance.executor.written - 8544245 * CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 1.609635015497336E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (18 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 488891610 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() - 8544245 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() - 1.609635015497336E15 == 0);
			}
		});
		invariants2796.add(new Invariant(2264, "134 * CommitLog.instance.executor.lastSyncedAt - 1.320908083E10 * CommitLog.instance.executor.written + 42721225 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 1.1973746308738568E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (134 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 1.320908083E10 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() + 42721225 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() - 1.1973746308738568E16 == 0);
			}
		});
		invariants2796.add(new Invariant(2265, "5 * CommitLog.instance.segmentManager.allocatingFrom.fd + 12 * CommitLog.instance.segmentManager.allocatingFrom.id - 9 * cfsInstance.fileIndexGenerator - 2.0776238694861E13 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (5 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() + 12 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() - 9 * ((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue() - 2.0776238694861E13 == 0);
			}
		});
		invariants2796.add(new Invariant(2266, "5 * CommitLog.instance.segmentManager.allocatingFrom.fd + 12 * CommitLog.instance.segmentManager.availableSegment.id - 9 * cfsInstance.fileIndexGenerator - 2.0776238694873E13 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (5 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() + 12 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() - 9 * ((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue() - 2.0776238694873E13 == 0);
			}
		});
		invariants2796.add(new Invariant(2267, "157 * CommitLog.instance.segmentManager.allocatingFrom.id - 5 * CommitLog.instance.segmentManager.availableSegment.fd + 71 * cfsInstance.fileIndexGenerator - 2.71822456245286E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (157 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() - 5 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() + 71 * ((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue() - 2.71822456245286E14 == 0);
			}
		});
		invariants2796.add(new Invariant(2268, "CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion - cfsInstance.readOrdering.current.id - 1.731353224498E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() - ((Number)(InvariantChecker.getValue("cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion"))).intValue() - ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.id"))).intValue() - 1.731353224498E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2269, "2 * CommitLog.instance.segmentManager.allocatingFrom.id + cfsInstance.fileIndexGenerator - 2 * cfsInstance.readOrdering.current.id - 3.462706448996E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() + ((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue() - 2 * ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.id"))).intValue() - 3.462706448996E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2270, "CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.readOrdering.current.id - daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224496E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() - ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.id"))).intValue() - daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0]))) - 1.731353224496E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2271, "5 * CommitLog.instance.segmentManager.availableSegment.fd - 157 * CommitLog.instance.segmentManager.availableSegment.id - 71 * cfsInstance.fileIndexGenerator + 2.71822456245443E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (5 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() - 157 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() - 71 * ((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue() + 2.71822456245443E14 == 0);
			}
		});
		invariants2796.add(new Invariant(2272, "CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion - cfsInstance.readOrdering.current.id - 1.731353224499E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() - ((Number)(InvariantChecker.getValue("cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion"))).intValue() - ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.id"))).intValue() - 1.731353224499E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2273, "2 * CommitLog.instance.segmentManager.availableSegment.id + cfsInstance.fileIndexGenerator - 2 * cfsInstance.readOrdering.current.id - 3.462706448998E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() + ((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue() - 2 * ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.id"))).intValue() - 3.462706448998E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2274, "CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.readOrdering.current.id - daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224497E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() - ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.id"))).intValue() - daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0]))) - 1.731353224497E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2275, "CFMetadataInstance.compactValueColumn.type.isByteOrderComparable == CFMetadataInstance.keyValidator.isByteOrderComparable"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("CFMetadataInstance.compactValueColumn.type.isByteOrderComparable"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("CFMetadataInstance.keyValidator.isByteOrderComparable"))).booleanValue());
			}
		});
		invariants2796.add(new Invariant(2276, "CFMetadataInstance.compactValueColumn.hash == -40591990 || CFMetadataInstance.compactValueColumn.hash == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.compactValueColumn.hash"))).intValue() == -40591990 || ((Number)(InvariantChecker.getValue("CFMetadataInstance.compactValueColumn.hash"))).intValue() == 0);
			}
		});
		invariants2796.add(new Invariant(2277, "CFMetadataInstance.partitionColumns.statics.complexIdx == 1 || CFMetadataInstance.partitionColumns.statics.complexIdx == 2"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.statics.complexIdx"))).intValue() == 1 || ((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.statics.complexIdx"))).intValue() == 2);
			}
		});
		invariants2796.add(new Invariant(2278, "CFMetadataInstance.resource.hash == 2144393068 || CFMetadataInstance.resource.hash == 2144393069"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() == 2144393068 || ((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() == 2144393069);
			}
		});
		invariants2796.add(new Invariant(2279, "CommitLog.instance.segmentManager.allocatingFrom.fd == 178 || CommitLog.instance.segmentManager.allocatingFrom.fd == 180 || CommitLog.instance.segmentManager.allocatingFrom.fd == 211"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() == 178 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() == 180 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() == 211);
			}
		});
		invariants2796.add(new Invariant(2280, "CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224477L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224478L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224479L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() == 1731353224477L || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() == 1731353224478L || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() == 1731353224479L);
			}
		});
		invariants2796.add(new Invariant(2281, "CommitLog.instance.segmentManager.allocatingFrom.nextId == 7 || CommitLog.instance.segmentManager.allocatingFrom.nextId == 8 || CommitLog.instance.segmentManager.allocatingFrom.nextId == 9"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.nextId"))).intValue() == 7 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.nextId"))).intValue() == 8 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.nextId"))).intValue() == 9);
			}
		});
		invariants2796.add(new Invariant(2282, "CommitLog.instance.segmentManager.availableSegment.fd == 177 || CommitLog.instance.segmentManager.availableSegment.fd == 180 || CommitLog.instance.segmentManager.availableSegment.fd == 211"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() == 177 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() == 180 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() == 211);
			}
		});
		invariants2796.add(new Invariant(2283, "CommitLog.instance.segmentManager.availableSegment.id == 1731353224478L || CommitLog.instance.segmentManager.availableSegment.id == 1731353224479L || CommitLog.instance.segmentManager.availableSegment.id == 1731353224480L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() == 1731353224478L || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() == 1731353224479L || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() == 1731353224480L);
			}
		});
		invariants2796.add(new Invariant(2284, "cfsInstance.metadata.resource.hash == -1614813437 || cfsInstance.metadata.resource.hash == 2144393069"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() == -1614813437 || ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() == 2144393069);
			}
		});
		invariants2796.add(new Invariant(2285, "CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > CFMetadataInstance.compactValueColumn.hash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK"))).intValue() > ((Number)(InvariantChecker.getValue("CFMetadataInstance.compactValueColumn.hash"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2286, "CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > CFMetadataInstance.compactValueColumn.hash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK"))).intValue() > ((Number)(InvariantChecker.getValue("CFMetadataInstance.compactValueColumn.hash"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2287, "CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK > CFMetadataInstance.compactValueColumn.hash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK"))).intValue() > ((Number)(InvariantChecker.getValue("CFMetadataInstance.compactValueColumn.hash"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2288, "CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK <= CFMetadataInstance.partitionColumns.statics.complexIdx"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK"))).intValue() <= ((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.statics.complexIdx"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2289, "CFMetadataInstance.compactValueColumn.NO_POSITION != CFMetadataInstance.compactValueColumn.hash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.compactValueColumn.NO_POSITION"))).intValue() != ((Number)(InvariantChecker.getValue("CFMetadataInstance.compactValueColumn.hash"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2290, "CFMetadataInstance.compactValueColumn.NO_POSITION != cfsInstance.metadata.resource.hash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.compactValueColumn.NO_POSITION"))).intValue() != ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2291, "CFMetadataInstance.compactValueColumn.hash < CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.compactValueColumn.hash"))).intValue() < ((Number)(InvariantChecker.getValue("CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2292, "CFMetadataInstance.compactValueColumn.hash < CFMetadataInstance.partitioner.HEAP_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.compactValueColumn.hash"))).intValue() < ((Number)(InvariantChecker.getValue("CFMetadataInstance.partitioner.HEAP_SIZE"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2293, "CFMetadataInstance.compactValueColumn.hash < CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.compactValueColumn.hash"))).intValue() < ((Number)(InvariantChecker.getValue("CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2294, "CFMetadataInstance.compactValueColumn.hash < CommitLog.instance.MAX_MUTATION_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.compactValueColumn.hash"))).intValue() < ((Number)(InvariantChecker.getValue("CommitLog.instance.MAX_MUTATION_SIZE"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2295, "CFMetadataInstance.compactValueColumn.hash < CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.compactValueColumn.hash"))).intValue() < ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2296, "CFMetadataInstance.compactValueColumn.hash < CommitLog.instance.executor.markerIntervalNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.compactValueColumn.hash"))).intValue() < ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.markerIntervalNanos"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2297, "CFMetadataInstance.compactValueColumn.hash <= CommitLog.instance.executor.pending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.compactValueColumn.hash"))).intValue() <= ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2298, "CFMetadataInstance.compactValueColumn.hash != CommitLog.instance.executor.syncComplete.CANCELLED"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.compactValueColumn.hash"))).intValue() != ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.syncComplete.CANCELLED"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2299, "CFMetadataInstance.compactValueColumn.hash <= CommitLog.instance.executor.syncComplete.NOT_SET"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.compactValueColumn.hash"))).intValue() <= ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.syncComplete.NOT_SET"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2300, "CFMetadataInstance.compactValueColumn.hash < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.compactValueColumn.hash"))).intValue() < ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2301, "CFMetadataInstance.compactValueColumn.hash < CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.compactValueColumn.hash"))).intValue() < ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2302, "CFMetadataInstance.compactValueColumn.hash < CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.compactValueColumn.hash"))).intValue() < ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2303, "CFMetadataInstance.compactValueColumn.hash < CommitLog.instance.segmentManager.availableSegment.allocatePosition"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.compactValueColumn.hash"))).intValue() < ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.allocatePosition"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2304, "CFMetadataInstance.compactValueColumn.hash < CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.compactValueColumn.hash"))).intValue() < ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2305, "CFMetadataInstance.compactValueColumn.hash < CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.compactValueColumn.hash"))).intValue() < ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2306, "CFMetadataInstance.compactValueColumn.hash < StorageService.instance.RING_DELAY"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.compactValueColumn.hash"))).intValue() < ((Number)(InvariantChecker.getValue("StorageService.instance.RING_DELAY"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2307, "CFMetadataInstance.compactValueColumn.hash < cfsInstance.compactionStrategyManager.fanout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.compactValueColumn.hash"))).intValue() < ((Number)(InvariantChecker.getValue("cfsInstance.compactionStrategyManager.fanout"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2308, "CFMetadataInstance.compactValueColumn.hash < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.compactValueColumn.hash"))).intValue() < ((Number)(InvariantChecker.getValue("cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2309, "CFMetadataInstance.compactValueColumn.hash <= cfsInstance.fileIndexGenerator"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.compactValueColumn.hash"))).intValue() <= ((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2310, "CFMetadataInstance.compactValueColumn.hash < cfsInstance.indexManager.DEFAULT_PAGE_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.compactValueColumn.hash"))).intValue() < ((Number)(InvariantChecker.getValue("cfsInstance.indexManager.DEFAULT_PAGE_SIZE"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2311, "CFMetadataInstance.compactValueColumn.hash < cfsInstance.metadata.compactValueColumn.NO_POSITION"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.compactValueColumn.hash"))).intValue() < ((Number)(InvariantChecker.getValue("cfsInstance.metadata.compactValueColumn.NO_POSITION"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2312, "CFMetadataInstance.compactValueColumn.hash != cfsInstance.metadata.resource.hash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.compactValueColumn.hash"))).intValue() != ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2313, "CFMetadataInstance.compactValueColumn.hash <= cfsInstance.readOrdering.current.id"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.compactValueColumn.hash"))).intValue() <= ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.id"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2314, "CFMetadataInstance.compactValueColumn.hash <= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.compactValueColumn.hash"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0]))));
			}
		});
		invariants2796.add(new Invariant(2315, "CFMetadataInstance.compactValueColumn.hash != daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.compactValueColumn.hash"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0])))-1);
			}
		});
		invariants2796.add(new Invariant(2316, "CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE != cfsInstance.metadata.resource.hash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.compactValueColumn.name.EMPTY_SIZE"))).intValue() != ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2317, "CFMetadataInstance.partitionColumns.statics.complexIdx >= CommitLog.instance.executor.pending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.statics.complexIdx"))).intValue() >= ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2318, "CFMetadataInstance.partitionColumns.statics.complexIdx > CommitLog.instance.executor.syncComplete.NOT_SET"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.statics.complexIdx"))).intValue() > ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.syncComplete.NOT_SET"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2319, "CFMetadataInstance.partitionColumns.statics.complexIdx > cfsInstance.fileIndexGenerator"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.statics.complexIdx"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2320, "CFMetadataInstance.partitionColumns.statics.complexIdx > cfsInstance.readOrdering.current.id"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.statics.complexIdx"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.id"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2321, "cfsInstance.fileIndexGenerator < resultSetInstance.metadata.columnCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue() < ((Number)(InvariantChecker.getValue("resultSetInstance.metadata.columnCount"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2322, "cfsInstance.readOrdering.current.id < resultSetInstance.metadata.columnCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.id"))).intValue() < ((Number)(InvariantChecker.getValue("resultSetInstance.metadata.columnCount"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2323, "CFMetadataInstance.resource.hash - CommitLog.instance.executor.pending - daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 2144393068 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0]))) - 2144393068 == 0);
			}
		});
		invariants2796.add(new Invariant(2324, "CFMetadataInstance.resource.hash - CommitLog.instance.executor.pending - daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1 - 2144393069 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0])))-1 - 2144393069 == 0);
			}
		});
		invariants2796.add(new Invariant(2325, "239 * CFMetadataInstance.resource.hash - CommitLog.instance.segmentManager.allocatingFrom.allocatePosition + CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 5.12509943244E11 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (239 * ((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() + ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() - 5.12509943244E11 == 0);
			}
		});
		invariants2796.add(new Invariant(2326, "173015040 * CFMetadataInstance.resource.hash - 5242880 * CommitLog.instance.segmentManager.allocatingFrom.fd - 31 * CommitLog.instance.segmentManager.size - 3.7101225117745152E17 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (173015040 * ((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() - 5242880 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() - 31 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.size"))).intValue() - 3.7101225117745152E17 == 0);
			}
		});
		invariants2796.add(new Invariant(2327, "239 * CFMetadataInstance.resource.hash - CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset + CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 5.12509943252E11 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (239 * ((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() + ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() - 5.12509943252E11 == 0);
			}
		});
		invariants2796.add(new Invariant(2328, "CommitLog.instance.executor.lastSyncedAt - 28143378 * resultSetInstance.metadata.columnCount + 231729187 * daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 8.9338498980838E13 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 28143378 * ((Number)(InvariantChecker.getValue("resultSetInstance.metadata.columnCount"))).intValue() + 231729187 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0]))) - 8.9338498980838E13 == 0);
			}
		});
		invariants2796.add(new Invariant(2329, "CommitLog.instance.executor.lastSyncedAt - 28143378 * resultSetInstance.metadata.columnCount + 231729187 * daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1 - 8.9338267251651E13 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 28143378 * ((Number)(InvariantChecker.getValue("resultSetInstance.metadata.columnCount"))).intValue() + 231729187 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0])))-1 - 8.9338267251651E13 == 0);
			}
		});
		invariants2796.add(new Invariant(2330, "7 * CommitLog.instance.executor.pending + 17 * CommitLog.instance.segmentManager.allocatingFrom.id + CommitLog.instance.segmentManager.availableSegment.fd - 2.943300481632E13 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (7 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() + 17 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() + ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() - 2.943300481632E13 == 0);
			}
		});
		invariants2796.add(new Invariant(2331, "7 * CommitLog.instance.executor.pending + CommitLog.instance.segmentManager.availableSegment.fd + 17 * CommitLog.instance.segmentManager.availableSegment.id - 2.9433004816337E13 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (7 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() + ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() + 17 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() - 2.9433004816337E13 == 0);
			}
		});
		invariants2796.add(new Invariant(2332, "CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 233 * CommitLog.instance.segmentManager.allocatingFrom.id - CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset + 4.03405301303133E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() - 233 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() + 4.03405301303133E14 == 0);
			}
		});
		invariants2796.add(new Invariant(2333, "CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 239 * CommitLog.instance.segmentManager.allocatingFrom.id - CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset + 4.13793420649995E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() - 239 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() + 4.13793420649995E14 == 0);
			}
		});
		invariants2796.add(new Invariant(2334, "CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 233 * CommitLog.instance.segmentManager.availableSegment.id + 4.03405301303366E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() - 233 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() + 4.03405301303366E14 == 0);
			}
		});
		invariants2796.add(new Invariant(2335, "CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 239 * CommitLog.instance.segmentManager.availableSegment.id + 4.13793420650234E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() - 239 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() + 4.13793420650234E14 == 0);
			}
		});
		invariants2796.add(new Invariant(2336, "CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 239 * CommitLog.instance.segmentManager.availableSegment.id + 4.13793420650242E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() - 239 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() + 4.13793420650242E14 == 0);
			}
		});
		invariants2796.add(new Invariant(2337, "CFMetadataInstance.resource.hash == 2144393074 || CFMetadataInstance.resource.hash == 2144393075"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() == 2144393074 || ((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() == 2144393075);
			}
		});
		invariants2796.add(new Invariant(2338, "CommitLog.instance.segmentManager.allocatingFrom.fd == 177 || CommitLog.instance.segmentManager.allocatingFrom.fd == 180 || CommitLog.instance.segmentManager.allocatingFrom.fd == 214"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() == 177 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() == 180 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() == 214);
			}
		});
		invariants2796.add(new Invariant(2339, "CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224489L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224490L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224491L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() == 1731353224489L || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() == 1731353224490L || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() == 1731353224491L);
			}
		});
		invariants2796.add(new Invariant(2340, "CommitLog.instance.segmentManager.allocatingFrom.nextId == 19 || CommitLog.instance.segmentManager.allocatingFrom.nextId == 20 || CommitLog.instance.segmentManager.allocatingFrom.nextId == 21"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.nextId"))).intValue() == 19 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.nextId"))).intValue() == 20 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.nextId"))).intValue() == 21);
			}
		});
		invariants2796.add(new Invariant(2341, "CommitLog.instance.segmentManager.availableSegment.fd == 177 || CommitLog.instance.segmentManager.availableSegment.fd == 180 || CommitLog.instance.segmentManager.availableSegment.fd == 214"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() == 177 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() == 180 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() == 214);
			}
		});
		invariants2796.add(new Invariant(2342, "CommitLog.instance.segmentManager.availableSegment.id == 1731353224490L || CommitLog.instance.segmentManager.availableSegment.id == 1731353224491L || CommitLog.instance.segmentManager.availableSegment.id == 1731353224492L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() == 1731353224490L || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() == 1731353224491L || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() == 1731353224492L);
			}
		});
		invariants2796.add(new Invariant(2343, "cfsInstance.metadata.resource.hash == 2144393074 || cfsInstance.metadata.resource.hash == 2144393075"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() == 2144393074 || ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() == 2144393075);
			}
		});
		invariants2796.add(new Invariant(2344, "CommitLog.instance.executor.pending <= cfsInstance.sampleLatencyNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() <= ((Number)(InvariantChecker.getValue("cfsInstance.sampleLatencyNanos"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2345, "CommitLog.instance.segmentManager.allocatingFrom.nextId >= resultSetInstance.metadata.columnCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.nextId"))).intValue() >= ((Number)(InvariantChecker.getValue("resultSetInstance.metadata.columnCount"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2346, "cfsInstance.compactionStrategyManager.fanout >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.compactionStrategyManager.fanout"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0]))));
			}
		});
		invariants2796.add(new Invariant(2347, "CFMetadataInstance.resource.hash + CommitLog.instance.executor.pending + daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 2144393075 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() + ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() + daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0]))) - 2144393075 == 0);
			}
		});
		invariants2796.add(new Invariant(2348, "37 * CFMetadataInstance.resource.hash + CommitLog.instance.segmentManager.allocatingFrom.fd + 37 * cfsInstance.fileIndexGenerator - 7.9342543989E10 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (37 * ((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() + ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() + 37 * ((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue() - 7.9342543989E10 == 0);
			}
		});
		invariants2796.add(new Invariant(2349, "10485760 * CFMetadataInstance.resource.hash - 5242880 * CommitLog.instance.segmentManager.allocatingFrom.id + CommitLog.instance.segmentManager.size + 9.0547916024787763E18 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (10485760 * ((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() - 5242880 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() + ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.size"))).intValue() + 9.0547916024787763E18 == 0);
			}
		});
		invariants2796.add(new Invariant(2350, "2 * CFMetadataInstance.resource.hash - CommitLog.instance.segmentManager.allocatingFrom.id + cfsInstance.fileIndexGenerator + 1.72706443834E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2 * ((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() + ((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue() + 1.72706443834E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2351, "10485760 * CFMetadataInstance.resource.hash - 5242880 * CommitLog.instance.segmentManager.allocatingFrom.nextId + CommitLog.instance.segmentManager.size - 2.248559103049728E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (10485760 * ((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() - 5242880 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.nextId"))).intValue() + ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.size"))).intValue() - 2.248559103049728E16 == 0);
			}
		});
		invariants2796.add(new Invariant(2352, "2 * CFMetadataInstance.resource.hash - CommitLog.instance.segmentManager.allocatingFrom.nextId + cfsInstance.fileIndexGenerator - 4.28878613E9 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2 * ((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.nextId"))).intValue() + ((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue() - 4.28878613E9 == 0);
			}
		});
		invariants2796.add(new Invariant(2353, "193986560 * CFMetadataInstance.resource.hash + 5242880 * CommitLog.instance.segmentManager.availableSegment.fd + 37 * CommitLog.instance.segmentManager.size - 4.1598343722303488E17 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (193986560 * ((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() + 5242880 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() + 37 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.size"))).intValue() - 4.1598343722303488E17 == 0);
			}
		});
		invariants2796.add(new Invariant(2354, "10485760 * CFMetadataInstance.resource.hash - 5242880 * CommitLog.instance.segmentManager.availableSegment.id + CommitLog.instance.segmentManager.size + 9.0547916024840192E18 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (10485760 * ((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() - 5242880 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() + ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.size"))).intValue() + 9.0547916024840192E18 == 0);
			}
		});
		invariants2796.add(new Invariant(2355, "2 * CFMetadataInstance.resource.hash - CommitLog.instance.segmentManager.availableSegment.id + cfsInstance.fileIndexGenerator + 1.727064438341E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2 * ((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() + ((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue() + 1.727064438341E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2356, "3 * CommitLog.instance.executor.lastSyncedAt - 235990082 * CommitLog.instance.executor.pending - 323383571 * CommitLog.instance.executor.written - 2.68068783577765E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (3 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 235990082 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - 323383571 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() - 2.68068783577765E14 == 0);
			}
		});
		invariants2796.add(new Invariant(2357, "CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.id + cfsInstance.readOrdering.current.id + 1.731353224487E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() + ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.id"))).intValue() + 1.731353224487E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2358, "CommitLog.instance.executor.pending + CommitLog.instance.segmentManager.allocatingFrom.id + daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.73135322449E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() + ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() + daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0]))) - 1.73135322449E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2359, "CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.availableSegment.id + cfsInstance.readOrdering.current.id + 1.731353224488E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() + ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.id"))).intValue() + 1.731353224488E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2360, "CommitLog.instance.executor.pending + CommitLog.instance.segmentManager.availableSegment.id + daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224491E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() + ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() + daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0]))) - 1.731353224491E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2361, "CommitLog.instance.segmentManager.allocatingFrom.fd + 37 * cfsInstance.fileIndexGenerator + 37 * cfsInstance.metadata.resource.hash - 7.9342543989E10 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() + 37 * ((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue() + 37 * ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() - 7.9342543989E10 == 0);
			}
		});
		invariants2796.add(new Invariant(2362, "5242880 * CommitLog.instance.segmentManager.allocatingFrom.id - CommitLog.instance.segmentManager.size - 10485760 * cfsInstance.metadata.resource.hash - 9.0547916024787763E18 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (5242880 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.size"))).intValue() - 10485760 * ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() - 9.0547916024787763E18 == 0);
			}
		});
		invariants2796.add(new Invariant(2363, "CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.fileIndexGenerator - 2 * cfsInstance.metadata.resource.hash - 1.72706443834E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() - ((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue() - 2 * ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() - 1.72706443834E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2364, "CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.readOrdering.current.id - daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224487E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() - ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.id"))).intValue() - daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0]))) - 1.731353224487E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2365, "5242880 * CommitLog.instance.segmentManager.allocatingFrom.nextId - CommitLog.instance.segmentManager.size - 10485760 * cfsInstance.metadata.resource.hash + 2.248559103049728E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (5242880 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.nextId"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.size"))).intValue() - 10485760 * ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() + 2.248559103049728E16 == 0);
			}
		});
		invariants2796.add(new Invariant(2366, "CommitLog.instance.segmentManager.allocatingFrom.nextId - cfsInstance.fileIndexGenerator - 2 * cfsInstance.metadata.resource.hash + 4.28878613E9 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.nextId"))).intValue() - ((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue() - 2 * ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() + 4.28878613E9 == 0);
			}
		});
		invariants2796.add(new Invariant(2367, "5242880 * CommitLog.instance.segmentManager.availableSegment.fd + 37 * CommitLog.instance.segmentManager.size + 193986560 * cfsInstance.metadata.resource.hash - 4.1598343722303488E17 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (5242880 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() + 37 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.size"))).intValue() + 193986560 * ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() - 4.1598343722303488E17 == 0);
			}
		});
		invariants2796.add(new Invariant(2368, "5242880 * CommitLog.instance.segmentManager.availableSegment.id - CommitLog.instance.segmentManager.size - 10485760 * cfsInstance.metadata.resource.hash - 9.0547916024840192E18 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (5242880 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.size"))).intValue() - 10485760 * ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() - 9.0547916024840192E18 == 0);
			}
		});
		invariants2796.add(new Invariant(2369, "CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.fileIndexGenerator - 2 * cfsInstance.metadata.resource.hash - 1.727064438341E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() - ((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue() - 2 * ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() - 1.727064438341E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2370, "CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.readOrdering.current.id - daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224488E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() - ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.id"))).intValue() - daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0]))) - 1.731353224488E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2371, "CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK == CFMetadataInstance.partitionColumns.regulars.complexIdx"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK"))).intValue() == ((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.regulars.complexIdx"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2372, "CFMetadataInstance.resource.hash == 2144393071 || CFMetadataInstance.resource.hash == 2144393072"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() == 2144393071 || ((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() == 2144393072);
			}
		});
		invariants2796.add(new Invariant(2373, "CommitLog.instance.segmentManager.allocatingFrom.fd == 179 || CommitLog.instance.segmentManager.allocatingFrom.fd == 180 || CommitLog.instance.segmentManager.allocatingFrom.fd == 202"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() == 179 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() == 180 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() == 202);
			}
		});
		invariants2796.add(new Invariant(2374, "CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224483L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224484L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224485L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() == 1731353224483L || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() == 1731353224484L || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() == 1731353224485L);
			}
		});
		invariants2796.add(new Invariant(2375, "CommitLog.instance.segmentManager.allocatingFrom.nextId == 13 || CommitLog.instance.segmentManager.allocatingFrom.nextId == 14 || CommitLog.instance.segmentManager.allocatingFrom.nextId == 15"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.nextId"))).intValue() == 13 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.nextId"))).intValue() == 14 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.nextId"))).intValue() == 15);
			}
		});
		invariants2796.add(new Invariant(2376, "CommitLog.instance.segmentManager.availableSegment.fd == 177 || CommitLog.instance.segmentManager.availableSegment.fd == 180 || CommitLog.instance.segmentManager.availableSegment.fd == 202"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() == 177 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() == 180 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() == 202);
			}
		});
		invariants2796.add(new Invariant(2377, "CommitLog.instance.segmentManager.availableSegment.id == 1731353224484L || CommitLog.instance.segmentManager.availableSegment.id == 1731353224485L || CommitLog.instance.segmentManager.availableSegment.id == 1731353224486L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() == 1731353224484L || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() == 1731353224485L || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() == 1731353224486L);
			}
		});
		invariants2796.add(new Invariant(2378, "cfsInstance.metadata.resource.hash == 2144393071 || cfsInstance.metadata.resource.hash == 2144393072"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() == 2144393071 || ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() == 2144393072);
			}
		});
		invariants2796.add(new Invariant(2379, "CommitLog.instance.executor.written != CommitLog.instance.segmentManager.availableSegment.fd"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() != ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2380, "CFMetadataInstance.resource.hash + CommitLog.instance.executor.pending - cfsInstance.readOrdering.current.id - 2144393070 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() + ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.id"))).intValue() - 2144393070 == 0);
			}
		});
		invariants2796.add(new Invariant(2381, "CFMetadataInstance.resource.hash + CommitLog.instance.executor.pending + daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 2144393072 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() + ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() + daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0]))) - 2144393072 == 0);
			}
		});
		invariants2796.add(new Invariant(2382, "120586240 * CFMetadataInstance.resource.hash - 5242880 * CommitLog.instance.segmentManager.allocatingFrom.fd + 23 * CommitLog.instance.segmentManager.size - 2.5858429681664E17 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (120586240 * ((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() - 5242880 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() + 23 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.size"))).intValue() - 2.5858429681664E17 == 0);
			}
		});
		invariants2796.add(new Invariant(2383, "5242880 * CFMetadataInstance.resource.hash - 5242880 * CommitLog.instance.segmentManager.allocatingFrom.id + CommitLog.instance.segmentManager.size + 9.0660343980228608E18 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (5242880 * ((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() - 5242880 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() + ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.size"))).intValue() + 9.0660343980228608E18 == 0);
			}
		});
		invariants2796.add(new Invariant(2384, "3 * CFMetadataInstance.resource.hash - 2 * CommitLog.instance.segmentManager.allocatingFrom.id + cfsInstance.fileIndexGenerator + 3.456273269752E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (3 * ((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() - 2 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() + ((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue() + 3.456273269752E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2385, "5242880 * CFMetadataInstance.resource.hash - 5242880 * CommitLog.instance.segmentManager.allocatingFrom.nextId + CommitLog.instance.segmentManager.size - 1.12427954864128E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (5242880 * ((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() - 5242880 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.nextId"))).intValue() + ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.size"))).intValue() - 1.12427954864128E16 == 0);
			}
		});
		invariants2796.add(new Invariant(2386, "3 * CFMetadataInstance.resource.hash - 2 * CommitLog.instance.segmentManager.allocatingFrom.nextId + cfsInstance.fileIndexGenerator - 6.433179188E9 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (3 * ((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() - 2 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.nextId"))).intValue() + ((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue() - 6.433179188E9 == 0);
			}
		});
		invariants2796.add(new Invariant(2387, "115343360 * CFMetadataInstance.resource.hash + 5242880 * CommitLog.instance.segmentManager.availableSegment.fd + 3 * CommitLog.instance.segmentManager.size - 2.473415030603776E17 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (115343360 * ((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() + 5242880 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() + 3 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.size"))).intValue() - 2.473415030603776E17 == 0);
			}
		});
		invariants2796.add(new Invariant(2388, "47 * CFMetadataInstance.resource.hash + 2 * CommitLog.instance.segmentManager.availableSegment.fd + 3 * cfsInstance.fileIndexGenerator - 1.00786474744E11 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (47 * ((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() + 2 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() + 3 * ((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue() - 1.00786474744E11 == 0);
			}
		});
		invariants2796.add(new Invariant(2389, "5242880 * CFMetadataInstance.resource.hash - 5242880 * CommitLog.instance.segmentManager.availableSegment.id + CommitLog.instance.segmentManager.size + 9.0660343980281037E18 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (5242880 * ((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() - 5242880 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() + ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.size"))).intValue() + 9.0660343980281037E18 == 0);
			}
		});
		invariants2796.add(new Invariant(2390, "3 * CFMetadataInstance.resource.hash - 2 * CommitLog.instance.segmentManager.availableSegment.id + cfsInstance.fileIndexGenerator + 3.456273269754E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (3 * ((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() - 2 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() + ((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue() + 3.456273269754E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2391, "2621440 * CFMetadataInstance.resource.hash - CommitLog.instance.segmentManager.size + 2621440 * cfsInstance.fileIndexGenerator - 5.62139776417792E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2621440 * ((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.size"))).intValue() + 2621440 * ((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue() - 5.62139776417792E15 == 0);
			}
		});
		invariants2796.add(new Invariant(2392, "CommitLog.instance.executor.lastSyncedAt - 101712267 * CommitLog.instance.executor.written - 547379969 * daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 8.9347679234646E13 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 101712267 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() - 547379969 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0]))) - 8.9347679234646E13 == 0);
			}
		});
		invariants2796.add(new Invariant(2393, "CommitLog.instance.executor.lastSyncedAt - 101712267 * CommitLog.instance.executor.written - 547379969 * daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1 - 8.9348226614615E13 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 101712267 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() - 547379969 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0])))-1 - 8.9348226614615E13 == 0);
			}
		});
		invariants2796.add(new Invariant(2394, "45 * CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.fd + 23 * CommitLog.instance.segmentManager.allocatingFrom.id - 3.9821124162975E13 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (45 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() + 23 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() - 3.9821124162975E13 == 0);
			}
		});
		invariants2796.add(new Invariant(2395, "45 * CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.fd + 23 * CommitLog.instance.segmentManager.availableSegment.id - 3.9821124162998E13 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (45 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() + 23 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() - 3.9821124162998E13 == 0);
			}
		});
		invariants2796.add(new Invariant(2396, "CommitLog.instance.executor.pending + CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.readOrdering.current.id - 1.731353224482E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() + ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() - ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.id"))).intValue() - 1.731353224482E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2397, "CommitLog.instance.executor.pending + CommitLog.instance.segmentManager.allocatingFrom.id + daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224484E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() + ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() + daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0]))) - 1.731353224484E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2398, "CommitLog.instance.executor.pending + CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.readOrdering.current.id - 1.731353224483E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() + ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() - ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.id"))).intValue() - 1.731353224483E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2399, "CommitLog.instance.executor.pending + CommitLog.instance.segmentManager.availableSegment.id + daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224485E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() + ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() + daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0]))) - 1.731353224485E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2400, "5242880 * CommitLog.instance.segmentManager.allocatingFrom.fd - 23 * CommitLog.instance.segmentManager.size - 120586240 * cfsInstance.metadata.resource.hash + 2.5858429681664E17 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (5242880 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() - 23 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.size"))).intValue() - 120586240 * ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() + 2.5858429681664E17 == 0);
			}
		});
		invariants2796.add(new Invariant(2401, "5242880 * CommitLog.instance.segmentManager.allocatingFrom.id - 3 * CommitLog.instance.segmentManager.size + 5242880 * cfsInstance.fileIndexGenerator - 9.0772771935512166E18 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (5242880 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() - 3 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.size"))).intValue() + 5242880 * ((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue() - 9.0772771935512166E18 == 0);
			}
		});
		invariants2796.add(new Invariant(2402, "5242880 * CommitLog.instance.segmentManager.allocatingFrom.id - CommitLog.instance.segmentManager.size - 5242880 * cfsInstance.metadata.resource.hash - 9.0660343980228608E18 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (5242880 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.size"))).intValue() - 5242880 * ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() - 9.0660343980228608E18 == 0);
			}
		});
		invariants2796.add(new Invariant(2403, "2 * CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.fileIndexGenerator - 3 * cfsInstance.metadata.resource.hash - 3.456273269752E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() - ((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue() - 3 * ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() - 3.456273269752E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2404, "CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.readOrdering.current.id - daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224481E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() - ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.id"))).intValue() - daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0]))) - 1.731353224481E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2405, "5242880 * CommitLog.instance.segmentManager.allocatingFrom.nextId - CommitLog.instance.segmentManager.size - 5242880 * cfsInstance.metadata.resource.hash + 1.12427954864128E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (5242880 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.nextId"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.size"))).intValue() - 5242880 * ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() + 1.12427954864128E16 == 0);
			}
		});
		invariants2796.add(new Invariant(2406, "2 * CommitLog.instance.segmentManager.allocatingFrom.nextId - cfsInstance.fileIndexGenerator - 3 * cfsInstance.metadata.resource.hash + 6.433179188E9 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.nextId"))).intValue() - ((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue() - 3 * ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() + 6.433179188E9 == 0);
			}
		});
		invariants2796.add(new Invariant(2407, "5242880 * CommitLog.instance.segmentManager.availableSegment.fd + 3 * CommitLog.instance.segmentManager.size + 115343360 * cfsInstance.metadata.resource.hash - 2.473415030603776E17 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (5242880 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() + 3 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.size"))).intValue() + 115343360 * ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() - 2.473415030603776E17 == 0);
			}
		});
		invariants2796.add(new Invariant(2408, "2 * CommitLog.instance.segmentManager.availableSegment.fd + 3 * cfsInstance.fileIndexGenerator + 47 * cfsInstance.metadata.resource.hash - 1.00786474744E11 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() + 3 * ((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue() + 47 * ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() - 1.00786474744E11 == 0);
			}
		});
		invariants2796.add(new Invariant(2409, "5242880 * CommitLog.instance.segmentManager.availableSegment.id - 3 * CommitLog.instance.segmentManager.size + 5242880 * cfsInstance.fileIndexGenerator - 9.0772771935564595E18 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (5242880 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() - 3 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.size"))).intValue() + 5242880 * ((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue() - 9.0772771935564595E18 == 0);
			}
		});
		invariants2796.add(new Invariant(2410, "5242880 * CommitLog.instance.segmentManager.availableSegment.id - CommitLog.instance.segmentManager.size - 5242880 * cfsInstance.metadata.resource.hash - 9.0660343980281037E18 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (5242880 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.size"))).intValue() - 5242880 * ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() - 9.0660343980281037E18 == 0);
			}
		});
		invariants2796.add(new Invariant(2411, "2 * CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.fileIndexGenerator - 3 * cfsInstance.metadata.resource.hash - 3.456273269754E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() - ((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue() - 3 * ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() - 3.456273269754E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2412, "CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.readOrdering.current.id - daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224482E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() - ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.id"))).intValue() - daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0]))) - 1.731353224482E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2413, "CommitLog.instance.segmentManager.size - 2621440 * cfsInstance.fileIndexGenerator - 2621440 * cfsInstance.metadata.resource.hash + 5.62139776417792E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.size"))).intValue() - 2621440 * ((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue() - 2621440 * ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() + 5.62139776417792E15 == 0);
			}
		});
		invariants2796.add(new Invariant(2414, "CFMetadataInstance.resource.hash == 2144393072 || CFMetadataInstance.resource.hash == 2144393073"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() == 2144393072 || ((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() == 2144393073);
			}
		});
		invariants2796.add(new Invariant(2415, "CommitLog.instance.segmentManager.allocatingFrom.fd == 177 || CommitLog.instance.segmentManager.allocatingFrom.fd == 178 || CommitLog.instance.segmentManager.allocatingFrom.fd == 180"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() == 177 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() == 178 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() == 180);
			}
		});
		invariants2796.add(new Invariant(2416, "CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224485L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224486L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224487L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() == 1731353224485L || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() == 1731353224486L || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() == 1731353224487L);
			}
		});
		invariants2796.add(new Invariant(2417, "CommitLog.instance.segmentManager.allocatingFrom.nextId == 15 || CommitLog.instance.segmentManager.allocatingFrom.nextId == 16 || CommitLog.instance.segmentManager.allocatingFrom.nextId == 17"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.nextId"))).intValue() == 15 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.nextId"))).intValue() == 16 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.nextId"))).intValue() == 17);
			}
		});
		invariants2796.add(new Invariant(2418, "CommitLog.instance.segmentManager.availableSegment.id == 1731353224486L || CommitLog.instance.segmentManager.availableSegment.id == 1731353224487L || CommitLog.instance.segmentManager.availableSegment.id == 1731353224488L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() == 1731353224486L || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() == 1731353224487L || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() == 1731353224488L);
			}
		});
		invariants2796.add(new Invariant(2419, "cfsInstance.metadata.resource.hash == 2144393072 || cfsInstance.metadata.resource.hash == 2144393073"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() == 2144393072 || ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() == 2144393073);
			}
		});
		invariants2796.add(new Invariant(2420, "5 * CFMetadataInstance.resource.hash - 4 * CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.availableSegment.fd - 1.0721965183E10 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (5 * ((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() - 4 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() - 1.0721965183E10 == 0);
			}
		});
		invariants2796.add(new Invariant(2421, "2 * CFMetadataInstance.resource.hash - 2 * CommitLog.instance.executor.pending + cfsInstance.fileIndexGenerator - 4.288786146E9 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2 * ((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() - 2 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() + ((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue() - 4.288786146E9 == 0);
			}
		});
		invariants2796.add(new Invariant(2422, "3 * CFMetadataInstance.resource.hash - 3 * CommitLog.instance.executor.pending + cfsInstance.readOrdering.current.id - 6.433179219E9 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (3 * ((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() - 3 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() + ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.id"))).intValue() - 6.433179219E9 == 0);
			}
		});
		invariants2796.add(new Invariant(2423, "CFMetadataInstance.resource.hash - CommitLog.instance.executor.pending - daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 2144393072 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0]))) - 2144393072 == 0);
			}
		});
		invariants2796.add(new Invariant(2424, "15728640 * CFMetadataInstance.resource.hash + 5242880 * CommitLog.instance.segmentManager.allocatingFrom.fd - CommitLog.instance.segmentManager.size - 3.372838758121472E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (15728640 * ((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() + 5242880 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.size"))).intValue() - 3.372838758121472E16 == 0);
			}
		});
		invariants2796.add(new Invariant(2425, "3 * CommitLog.instance.executor.pending + CommitLog.instance.segmentManager.allocatingFrom.fd + 3 * cfsInstance.metadata.resource.hash - 6.433179396E9 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (3 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() + ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() + 3 * ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() - 6.433179396E9 == 0);
			}
		});
		invariants2796.add(new Invariant(2426, "2 * CommitLog.instance.executor.pending - 2 * CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.fileIndexGenerator + 3.462706448972E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - 2 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() - ((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue() + 3.462706448972E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2427, "3 * CommitLog.instance.executor.pending - 3 * CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.readOrdering.current.id + 5.194059673458E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (3 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - 3 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() - ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.id"))).intValue() + 5.194059673458E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2428, "CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.availableSegment.fd + 5 * cfsInstance.metadata.resource.hash - 1.0721965183E10 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() + 5 * ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() - 1.0721965183E10 == 0);
			}
		});
		invariants2796.add(new Invariant(2429, "2 * CommitLog.instance.executor.pending - 2 * CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.fileIndexGenerator + 3.462706448974E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - 2 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() - ((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue() + 3.462706448974E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2430, "3 * CommitLog.instance.executor.pending - 3 * CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.readOrdering.current.id + 5.194059673461E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (3 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - 3 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() - ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.id"))).intValue() + 5.194059673461E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2431, "CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 239 * CommitLog.instance.segmentManager.allocatingFrom.id - CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset + 4.13793420651907E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() - 239 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() + 4.13793420651907E14 == 0);
			}
		});
		invariants2796.add(new Invariant(2432, "CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 239 * CommitLog.instance.segmentManager.availableSegment.id + 4.13793420652146E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() - 239 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() + 4.13793420652146E14 == 0);
			}
		});
		invariants2796.add(new Invariant(2433, "CommitLog.instance.segmentManager.allocatingFrom.fd + CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.fileIndexGenerator - 1.731353224663E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() + ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() - ((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue() - 1.731353224663E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2434, "CommitLog.instance.segmentManager.allocatingFrom.fd + CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.fileIndexGenerator - 1.731353224664E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() + ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() - ((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue() - 1.731353224664E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2435, "5242880 * CommitLog.instance.segmentManager.allocatingFrom.fd - CommitLog.instance.segmentManager.size + 15728640 * cfsInstance.metadata.resource.hash - 3.372838758121472E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (5242880 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.size"))).intValue() + 15728640 * ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() - 3.372838758121472E16 == 0);
			}
		});
		invariants2796.add(new Invariant(2436, "10 * CommitLog.instance.segmentManager.allocatingFrom.id - 4 * CommitLog.instance.segmentManager.availableSegment.fd + 3 * cfsInstance.fileIndexGenerator - 1.7313532244148E13 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (10 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() - 4 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() + 3 * ((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue() - 1.7313532244148E13 == 0);
			}
		});
		invariants2796.add(new Invariant(2437, "2 * CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.fileIndexGenerator - 4 * cfsInstance.metadata.resource.hash - 3.45412887668E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() - ((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue() - 4 * ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() - 3.45412887668E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2438, "CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.readOrdering.current.id - daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224482E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() - ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.id"))).intValue() - daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0]))) - 1.731353224482E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2439, "CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 239 * CommitLog.instance.segmentManager.availableSegment.id + 4.13793420652154E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() - 239 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() + 4.13793420652154E14 == 0);
			}
		});
		invariants2796.add(new Invariant(2440, "2 * CommitLog.instance.segmentManager.allocatingFrom.nextId - cfsInstance.fileIndexGenerator - 4 * cfsInstance.metadata.resource.hash + 8.57757226E9 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.nextId"))).intValue() - ((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue() - 4 * ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() + 8.57757226E9 == 0);
			}
		});
		invariants2796.add(new Invariant(2441, "4 * CommitLog.instance.segmentManager.availableSegment.fd - 10 * CommitLog.instance.segmentManager.availableSegment.id - 3 * cfsInstance.fileIndexGenerator + 1.7313532244158E13 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (4 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() - 10 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() - 3 * ((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue() + 1.7313532244158E13 == 0);
			}
		});
		invariants2796.add(new Invariant(2442, "CommitLog.instance.segmentManager.availableSegment.fd - 2 * cfsInstance.fileIndexGenerator - 5 * cfsInstance.metadata.resource.hash + 1.0721965187E10 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() - 2 * ((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue() - 5 * ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() + 1.0721965187E10 == 0);
			}
		});
		invariants2796.add(new Invariant(2443, "2 * CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.fileIndexGenerator - 4 * cfsInstance.metadata.resource.hash - 3.454128876682E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() - ((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue() - 4 * ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() - 3.454128876682E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2444, "CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.readOrdering.current.id - daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224483E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() - ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.id"))).intValue() - daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0]))) - 1.731353224483E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2445, "CommitLog.instance.segmentManager.size - 2621440 * cfsInstance.fileIndexGenerator - 5242880 * cfsInstance.metadata.resource.hash + 1.124279554408448E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.size"))).intValue() - 2621440 * ((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue() - 5242880 * ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() + 1.124279554408448E16 == 0);
			}
		});
		invariants2796.add(new Invariant(2446, "CFMetadataInstance.resource.hash == 2144393073 || CFMetadataInstance.resource.hash == 2144393074"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() == 2144393073 || ((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() == 2144393074);
			}
		});
		invariants2796.add(new Invariant(2447, "CommitLog.instance.segmentManager.allocatingFrom.fd == 178 || CommitLog.instance.segmentManager.allocatingFrom.fd == 180 || CommitLog.instance.segmentManager.allocatingFrom.fd == 182"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() == 178 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() == 180 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() == 182);
			}
		});
		invariants2796.add(new Invariant(2448, "CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224487L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224488L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224489L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() == 1731353224487L || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() == 1731353224488L || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() == 1731353224489L);
			}
		});
		invariants2796.add(new Invariant(2449, "CommitLog.instance.segmentManager.allocatingFrom.nextId == 17 || CommitLog.instance.segmentManager.allocatingFrom.nextId == 18 || CommitLog.instance.segmentManager.allocatingFrom.nextId == 19"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.nextId"))).intValue() == 17 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.nextId"))).intValue() == 18 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.nextId"))).intValue() == 19);
			}
		});
		invariants2796.add(new Invariant(2450, "CommitLog.instance.segmentManager.availableSegment.fd == 180 || CommitLog.instance.segmentManager.availableSegment.fd == 182 || CommitLog.instance.segmentManager.availableSegment.fd == 214"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() == 180 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() == 182 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() == 214);
			}
		});
		invariants2796.add(new Invariant(2451, "CommitLog.instance.segmentManager.availableSegment.id == 1731353224488L || CommitLog.instance.segmentManager.availableSegment.id == 1731353224489L || CommitLog.instance.segmentManager.availableSegment.id == 1731353224490L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() == 1731353224488L || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() == 1731353224489L || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() == 1731353224490L);
			}
		});
		invariants2796.add(new Invariant(2452, "cfsInstance.metadata.resource.hash == 2144393073 || cfsInstance.metadata.resource.hash == 2144393074"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() == 2144393073 || ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() == 2144393074);
			}
		});
		invariants2796.add(new Invariant(2453, "CommitLog.instance.segmentManager.allocatingFrom.fd % CFMetadataInstance.partitionColumns.regulars.complexIdx == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() % ((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.regulars.complexIdx"))).intValue() == 0);
			}
		});
		invariants2796.add(new Invariant(2454, "CommitLog.instance.segmentManager.availableSegment.fd % CFMetadataInstance.partitionColumns.regulars.complexIdx == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() % ((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.regulars.complexIdx"))).intValue() == 0);
			}
		});
		invariants2796.add(new Invariant(2455, "CFMetadataInstance.partitionColumns.regulars.complexIdx + CommitLog.instance.executor.pending + CommitLog.instance.segmentManager.allocatingFrom.id - 1.73135322449E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.regulars.complexIdx"))).intValue() + ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() + ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() - 1.73135322449E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2456, "CFMetadataInstance.partitionColumns.regulars.complexIdx + CommitLog.instance.executor.pending + CommitLog.instance.segmentManager.availableSegment.id - 1.731353224491E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.regulars.complexIdx"))).intValue() + ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() + ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() - 1.731353224491E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2457, "CFMetadataInstance.partitionColumns.regulars.complexIdx + CommitLog.instance.segmentManager.allocatingFrom.nextId - cfsInstance.metadata.resource.hash + 2144393054 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.regulars.complexIdx"))).intValue() + ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.nextId"))).intValue() - ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() + 2144393054 == 0);
			}
		});
		invariants2796.add(new Invariant(2458, "4 * CFMetadataInstance.resource.hash - 4 * CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.fd - 8.57757211E9 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (4 * ((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() - 4 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() - 8.57757211E9 == 0);
			}
		});
		invariants2796.add(new Invariant(2459, "CFMetadataInstance.resource.hash - CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.id + 1.729208831415E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() + 1.729208831415E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2460, "CFMetadataInstance.resource.hash - CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.nextId - 2144393055 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.nextId"))).intValue() - 2144393055 == 0);
			}
		});
		invariants2796.add(new Invariant(2461, "2 * CFMetadataInstance.resource.hash - 2 * CommitLog.instance.executor.pending + CommitLog.instance.segmentManager.availableSegment.fd - 4.288786326E9 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2 * ((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() - 2 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() + ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() - 4.288786326E9 == 0);
			}
		});
		invariants2796.add(new Invariant(2462, "CFMetadataInstance.resource.hash - CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.availableSegment.id + 1.729208831416E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() + 1.729208831416E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2463, "CFMetadataInstance.resource.hash - CommitLog.instance.executor.pending - cfsInstance.readOrdering.current.id - 2144393070 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.id"))).intValue() - 2144393070 == 0);
			}
		});
		invariants2796.add(new Invariant(2464, "CFMetadataInstance.resource.hash + CommitLog.instance.executor.pending + daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 2144393074 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() + ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() + daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0]))) - 2144393074 == 0);
			}
		});
		invariants2796.add(new Invariant(2465, "10485760 * CFMetadataInstance.resource.hash - 2621440 * CommitLog.instance.segmentManager.allocatingFrom.fd - CommitLog.instance.segmentManager.size - 2.24855906320384E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (10485760 * ((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() - 2621440 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.size"))).intValue() - 2.24855906320384E16 == 0);
			}
		});
		invariants2796.add(new Invariant(2466, "2 * CommitLog.instance.executor.lastSyncedAt - 56318797 * resultSetInstance.metadata.columnCount + 454675910 * daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.78757592078153E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 56318797 * ((Number)(InvariantChecker.getValue("resultSetInstance.metadata.columnCount"))).intValue() + 454675910 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0]))) - 1.78757592078153E14 == 0);
			}
		});
		invariants2796.add(new Invariant(2467, "2 * CommitLog.instance.executor.lastSyncedAt - 56318797 * resultSetInstance.metadata.columnCount + 454675910 * daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1 - 1.78757137402243E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 56318797 * ((Number)(InvariantChecker.getValue("resultSetInstance.metadata.columnCount"))).intValue() + 454675910 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0])))-1 - 1.78757137402243E14 == 0);
			}
		});
		invariants2796.add(new Invariant(2468, "6 * CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.fd + 4 * CommitLog.instance.segmentManager.allocatingFrom.id - 6.925412897776E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (6 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() + 4 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() - 6.925412897776E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2469, "6 * CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.fd + 4 * CommitLog.instance.segmentManager.availableSegment.id - 6.92541289778E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (6 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() + 4 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() - 6.92541289778E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2470, "CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.id + cfsInstance.readOrdering.current.id + 1.731353224484E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() + ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.id"))).intValue() + 1.731353224484E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2471, "CommitLog.instance.executor.pending + CommitLog.instance.segmentManager.allocatingFrom.id + daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224488E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() + ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() + daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0]))) - 1.731353224488E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2472, "CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.availableSegment.id + cfsInstance.readOrdering.current.id + 1.731353224485E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() + ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.id"))).intValue() + 1.731353224485E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2473, "CommitLog.instance.executor.pending + CommitLog.instance.segmentManager.availableSegment.id + daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224489E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() + ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() + daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0]))) - 1.731353224489E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2474, "2621440 * CommitLog.instance.segmentManager.allocatingFrom.fd + CommitLog.instance.segmentManager.size - 10485760 * cfsInstance.metadata.resource.hash + 2.24855906320384E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2621440 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() + ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.size"))).intValue() - 10485760 * ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() + 2.24855906320384E16 == 0);
			}
		});
		invariants2796.add(new Invariant(2475, "CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.fileIndexGenerator - 3 * cfsInstance.metadata.resource.hash - 1.724920045266E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() - ((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue() - 3 * ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() - 1.724920045266E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2476, "CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.readOrdering.current.id - daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224484E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() - ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.id"))).intValue() - daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0]))) - 1.731353224484E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2477, "CommitLog.instance.segmentManager.allocatingFrom.nextId - cfsInstance.fileIndexGenerator - 3 * cfsInstance.metadata.resource.hash + 6.433179204E9 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.nextId"))).intValue() - ((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue() - 3 * ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() + 6.433179204E9 == 0);
			}
		});
		invariants2796.add(new Invariant(2478, "CommitLog.instance.segmentManager.availableSegment.fd - 34 * cfsInstance.fileIndexGenerator - 68 * cfsInstance.metadata.resource.hash + 1.45818728852E11 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() - 34 * ((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue() - 68 * ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() + 1.45818728852E11 == 0);
			}
		});
		invariants2796.add(new Invariant(2479, "CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.fileIndexGenerator - 3 * cfsInstance.metadata.resource.hash - 1.724920045267E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() - ((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue() - 3 * ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() - 1.724920045267E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2480, "CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.readOrdering.current.id - daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224485E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() - ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.id"))).intValue() - daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0]))) - 1.731353224485E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2481, "CFMetadataInstance.resource.hash == 2144393070 || CFMetadataInstance.resource.hash == 2144393071"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() == 2144393070 || ((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() == 2144393071);
			}
		});
		invariants2796.add(new Invariant(2482, "CommitLog.instance.segmentManager.allocatingFrom.fd == 178 || CommitLog.instance.segmentManager.allocatingFrom.fd == 179 || CommitLog.instance.segmentManager.allocatingFrom.fd == 229"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() == 178 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() == 179 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() == 229);
			}
		});
		invariants2796.add(new Invariant(2483, "CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224481L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224482L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353224483L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() == 1731353224481L || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() == 1731353224482L || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() == 1731353224483L);
			}
		});
		invariants2796.add(new Invariant(2484, "CommitLog.instance.segmentManager.allocatingFrom.nextId == 11 || CommitLog.instance.segmentManager.allocatingFrom.nextId == 12 || CommitLog.instance.segmentManager.allocatingFrom.nextId == 13"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.nextId"))).intValue() == 11 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.nextId"))).intValue() == 12 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.nextId"))).intValue() == 13);
			}
		});
		invariants2796.add(new Invariant(2485, "CommitLog.instance.segmentManager.availableSegment.fd == 178 || CommitLog.instance.segmentManager.availableSegment.fd == 179 || CommitLog.instance.segmentManager.availableSegment.fd == 202"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() == 178 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() == 179 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() == 202);
			}
		});
		invariants2796.add(new Invariant(2486, "CommitLog.instance.segmentManager.availableSegment.id == 1731353224482L || CommitLog.instance.segmentManager.availableSegment.id == 1731353224483L || CommitLog.instance.segmentManager.availableSegment.id == 1731353224484L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() == 1731353224482L || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() == 1731353224483L || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() == 1731353224484L);
			}
		});
		invariants2796.add(new Invariant(2487, "cfsInstance.metadata.resource.hash == 2144393070 || cfsInstance.metadata.resource.hash == 2144393071"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() == 2144393070 || ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() == 2144393071);
			}
		});
		invariants2796.add(new Invariant(2488, "CFMetadataInstance.partitionColumns.regulars.complexIdx != cfsInstance.readOrdering.current.id"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.regulars.complexIdx"))).intValue() != ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.id"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2489, "CFMetadataInstance.partitionColumns.regulars.complexIdx + CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.id + 1.73135322448E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.regulars.complexIdx"))).intValue() + ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() + 1.73135322448E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2490, "CFMetadataInstance.partitionColumns.regulars.complexIdx + CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.availableSegment.id + 1.731353224481E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.regulars.complexIdx"))).intValue() + ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() + 1.731353224481E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2491, "CFMetadataInstance.partitionColumns.regulars.complexIdx - CommitLog.instance.segmentManager.allocatingFrom.nextId + cfsInstance.metadata.resource.hash - 2144393060 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.regulars.complexIdx"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.nextId"))).intValue() + ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() - 2144393060 == 0);
			}
		});
		invariants2796.add(new Invariant(2492, "51 * CFMetadataInstance.resource.hash + 51 * CommitLog.instance.executor.pending + CommitLog.instance.segmentManager.allocatingFrom.fd - 1.09364046799E11 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (51 * ((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() + 51 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() + ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() - 1.09364046799E11 == 0);
			}
		});
		invariants2796.add(new Invariant(2493, "CFMetadataInstance.resource.hash + CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.id + 1.729208831411E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() + ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() + 1.729208831411E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2494, "CFMetadataInstance.resource.hash + CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.nextId - 2144393059 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() + ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.nextId"))).intValue() - 2144393059 == 0);
			}
		});
		invariants2796.add(new Invariant(2495, "CFMetadataInstance.resource.hash + CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.availableSegment.fd - 2144392892 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() + ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() - 2144392892 == 0);
			}
		});
		invariants2796.add(new Invariant(2496, "CFMetadataInstance.resource.hash + CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.availableSegment.id + 1.729208831412E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() + ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() + 1.729208831412E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2497, "CFMetadataInstance.resource.hash + CommitLog.instance.executor.pending - cfsInstance.readOrdering.current.id - 2144393068 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() + ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.id"))).intValue() - 2144393068 == 0);
			}
		});
		invariants2796.add(new Invariant(2498, "CFMetadataInstance.resource.hash + CommitLog.instance.executor.pending + daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 2144393071 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() + ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() + daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0]))) - 2144393071 == 0);
			}
		});
		invariants2796.add(new Invariant(2499, "267386880 * CFMetadataInstance.resource.hash + 5242880 * CommitLog.instance.segmentManager.allocatingFrom.fd - CommitLog.instance.segmentManager.size - 5.7338257367105536E17 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (267386880 * ((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() + 5242880 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.size"))).intValue() - 5.7338257367105536E17 == 0);
			}
		});
		invariants2796.add(new Invariant(2500, "2 * CommitLog.instance.executor.lastSyncedAt - 59506425 * resultSetInstance.metadata.columnCount + 481006666 * daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.78707059219029E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 59506425 * ((Number)(InvariantChecker.getValue("resultSetInstance.metadata.columnCount"))).intValue() + 481006666 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0]))) - 1.78707059219029E14 == 0);
			}
		});
		invariants2796.add(new Invariant(2501, "2 * CommitLog.instance.executor.lastSyncedAt - 59506425 * resultSetInstance.metadata.columnCount + 481006666 * daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1 - 1.78706578212363E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 59506425 * ((Number)(InvariantChecker.getValue("resultSetInstance.metadata.columnCount"))).intValue() + 481006666 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0])))-1 - 1.78706578212363E14 == 0);
			}
		});
		invariants2796.add(new Invariant(2502, "51 * CommitLog.instance.executor.pending + CommitLog.instance.segmentManager.allocatingFrom.fd + 51 * cfsInstance.metadata.resource.hash - 1.09364046799E11 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (51 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() + ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() + 51 * ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() - 1.09364046799E11 == 0);
			}
		});
		invariants2796.add(new Invariant(2503, "2 * CommitLog.instance.executor.pending - 2 * CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.fileIndexGenerator + 3.462706448964E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - 2 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() - ((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue() + 3.462706448964E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2504, "3 * CommitLog.instance.executor.pending - 3 * CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.readOrdering.current.id + 5.194059673446E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (3 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - 3 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() - ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.id"))).intValue() + 5.194059673446E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2505, "CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.nextId + cfsInstance.metadata.resource.hash - 2144393059 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.nextId"))).intValue() + ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() - 2144393059 == 0);
			}
		});
		invariants2796.add(new Invariant(2506, "CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.availableSegment.fd + cfsInstance.metadata.resource.hash - 2144392892 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() + ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() - 2144392892 == 0);
			}
		});
		invariants2796.add(new Invariant(2507, "2 * CommitLog.instance.executor.pending - 2 * CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.fileIndexGenerator + 3.462706448966E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - 2 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() - ((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue() + 3.462706448966E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2508, "3 * CommitLog.instance.executor.pending - 3 * CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.readOrdering.current.id + 5.194059673449E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (3 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - 3 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() - ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.id"))).intValue() + 5.194059673449E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2509, "CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 94 * CommitLog.instance.segmentManager.allocatingFrom.id - CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset + 1.62747203101206E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() - 94 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() + 1.62747203101206E14 == 0);
			}
		});
		invariants2796.add(new Invariant(2510, "CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 94 * CommitLog.instance.segmentManager.availableSegment.id + 1.627472031013E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() - 94 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() + 1.627472031013E14 == 0);
			}
		});
		invariants2796.add(new Invariant(2511, "5242880 * CommitLog.instance.segmentManager.allocatingFrom.fd - CommitLog.instance.segmentManager.size + 267386880 * cfsInstance.metadata.resource.hash - 5.7338257367105536E17 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (5242880 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.size"))).intValue() + 267386880 * ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() - 5.7338257367105536E17 == 0);
			}
		});
		invariants2796.add(new Invariant(2512, "47 * CommitLog.instance.segmentManager.allocatingFrom.id - 3 * CommitLog.instance.segmentManager.availableSegment.fd + 22 * cfsInstance.fileIndexGenerator - 8.1373601550117E13 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (47 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() - 3 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() + 22 * ((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue() - 8.1373601550117E13 == 0);
			}
		});
		invariants2796.add(new Invariant(2513, "CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.fileIndexGenerator - 3 * cfsInstance.metadata.resource.hash - 1.724920045269E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() - ((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue() - 3 * ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() - 1.724920045269E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2514, "CommitLog.instance.segmentManager.allocatingFrom.id - cfsInstance.readOrdering.current.id - daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224478E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() - ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.id"))).intValue() - daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0]))) - 1.731353224478E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2515, "CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 94 * CommitLog.instance.segmentManager.availableSegment.id + 1.62747203101308E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() - 94 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() + 1.62747203101308E14 == 0);
			}
		});
		invariants2796.add(new Invariant(2516, "CommitLog.instance.segmentManager.allocatingFrom.nextId - cfsInstance.fileIndexGenerator - 3 * cfsInstance.metadata.resource.hash + 6.433179201E9 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.nextId"))).intValue() - ((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue() - 3 * ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() + 6.433179201E9 == 0);
			}
		});
		invariants2796.add(new Invariant(2517, "3 * CommitLog.instance.segmentManager.availableSegment.fd - 47 * CommitLog.instance.segmentManager.availableSegment.id - 22 * cfsInstance.fileIndexGenerator + 8.1373601550164E13 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (3 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() - 47 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() - 22 * ((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue() + 8.1373601550164E13 == 0);
			}
		});
		invariants2796.add(new Invariant(2518, "CommitLog.instance.segmentManager.availableSegment.fd - 23 * cfsInstance.fileIndexGenerator - 47 * cfsInstance.metadata.resource.hash + 1.00786474158E11 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() - 23 * ((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue() - 47 * ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() + 1.00786474158E11 == 0);
			}
		});
		invariants2796.add(new Invariant(2519, "CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.fileIndexGenerator - 3 * cfsInstance.metadata.resource.hash - 1.72492004527E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() - ((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue() - 3 * ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() - 1.72492004527E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2520, "CommitLog.instance.segmentManager.availableSegment.id - cfsInstance.readOrdering.current.id - daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 1.731353224479E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() - ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.id"))).intValue() - daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0]))) - 1.731353224479E12 == 0);
			}
		});
		invariants2796.add(new Invariant(2521, "CFMetadataInstance.resource.hash == -1436612841 || CFMetadataInstance.resource.hash == -779129010"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() == -1436612841 || ((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() == -779129010);
			}
		});
		invariants2796.add(new Invariant(2522, "CommitLog.instance.segmentManager.allocatingFrom.fd == 178 || CommitLog.instance.segmentManager.allocatingFrom.fd == 183 || CommitLog.instance.segmentManager.allocatingFrom.fd == 211"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() == 178 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() == 183 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() == 211);
			}
		});
		invariants2796.add(new Invariant(2523, "CommitLog.instance.segmentManager.allocatingFrom.id == 1731353002759L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353002760L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353002761L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() == 1731353002759L || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() == 1731353002760L || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() == 1731353002761L);
			}
		});
		invariants2796.add(new Invariant(2524, "CommitLog.instance.segmentManager.allocatingFrom.idBase == 1731353002754L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.idBase"))).intValue() == 1731353002754L);
			}
		});
		invariants2796.add(new Invariant(2525, "CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == 1731353002757L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.replayLimitId"))).intValue() == 1731353002757L);
			}
		});
		invariants2796.add(new Invariant(2526, "CommitLog.instance.segmentManager.availableSegment.fd == 180 || CommitLog.instance.segmentManager.availableSegment.fd == 183 || CommitLog.instance.segmentManager.availableSegment.fd == 211"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() == 180 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() == 183 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() == 211);
			}
		});
		invariants2796.add(new Invariant(2527, "CommitLog.instance.segmentManager.availableSegment.id == 1731353002760L || CommitLog.instance.segmentManager.availableSegment.id == 1731353002761L || CommitLog.instance.segmentManager.availableSegment.id == 1731353002762L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() == 1731353002760L || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() == 1731353002761L || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() == 1731353002762L);
			}
		});
		invariants2796.add(new Invariant(2528, "cfsInstance.metadata.resource.hash == -900852050 || cfsInstance.metadata.resource.hash == -779129010"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() == -900852050 || ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() == -779129010);
			}
		});
		invariants2796.add(new Invariant(2529, "cfsInstance.readOrdering.current.running == 0 || cfsInstance.readOrdering.current.running == 1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.running"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.running"))).intValue() == 1);
			}
		});
		invariants2796.add(new Invariant(2530, "CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK >= cfsInstance.readOrdering.current.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK"))).intValue() >= ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.running"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2531, "CFMetadataInstance.partitionColumns.statics.complexIdx <= cfsInstance.readOrdering.current.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.statics.complexIdx"))).intValue() <= ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.running"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2532, "CFMetadataInstance.resource.hash < cfsInstance.readOrdering.current.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() < ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.running"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2533, "cfsInstance.sampleLatencyNanos % CommitLog.instance.segmentManager.allocatingFrom.nextId == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.sampleLatencyNanos"))).intValue() % ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.nextId"))).intValue() == 0);
			}
		});
		invariants2796.add(new Invariant(2534, "cfsInstance.metadata.resource.hash < cfsInstance.readOrdering.current.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() < ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.running"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2535, "cfsInstance.readOrdering.current.running <= cfsInstance.sampleLatencyNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.running"))).intValue() <= ((Number)(InvariantChecker.getValue("cfsInstance.sampleLatencyNanos"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2536, "cfsInstance.readOrdering.current.running % resultSetInstance.metadata.columnCount == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.running"))).intValue() % ((Number)(InvariantChecker.getValue("resultSetInstance.metadata.columnCount"))).intValue() == 0);
			}
		});
		invariants2796.add(new Invariant(2537, "cfsInstance.readOrdering.current.running <= resultSetInstance.metadata.columnCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.running"))).intValue() <= ((Number)(InvariantChecker.getValue("resultSetInstance.metadata.columnCount"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2538, "CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 90 * CommitLog.instance.segmentManager.allocatingFrom.id - CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset + 1.55821770248302E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() - 90 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() + 1.55821770248302E14 == 0);
			}
		});
		invariants2796.add(new Invariant(2539, "CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 90 * CommitLog.instance.segmentManager.availableSegment.id + 1.55821770248392E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() - 90 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() + 1.55821770248392E14 == 0);
			}
		});
		invariants2796.add(new Invariant(2540, "CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 90 * CommitLog.instance.segmentManager.availableSegment.id + 1.558217702484E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() - 90 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() + 1.558217702484E14 == 0);
			}
		});
		invariants2796.add(new Invariant(2541, "CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.fileIndexGenerator"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.statics.complexIdx"))).intValue() == ((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2542, "CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.readOrdering.current.id"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.statics.complexIdx"))).intValue() == ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.id"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2543, "CFMetadataInstance.resource.hash == -1436612841 || CFMetadataInstance.resource.hash == -431813198"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() == -1436612841 || ((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() == -431813198);
			}
		});
		invariants2796.add(new Invariant(2544, "CommitLog.instance.segmentManager.allocatingFrom.id == 1731353002758L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353002759L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() == 1731353002758L || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() == 1731353002759L);
			}
		});
		invariants2796.add(new Invariant(2545, "CommitLog.instance.segmentManager.availableSegment.id == 1731353002759L || CommitLog.instance.segmentManager.availableSegment.id == 1731353002760L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() == 1731353002759L || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() == 1731353002760L);
			}
		});
		invariants2796.add(new Invariant(2546, "CommitLog.instance.executor.written != CommitLog.instance.segmentManager.allocatingFrom.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() != ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.nextId"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2547, "CommitLog.instance.executor.written >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0]))));
			}
		});
		invariants2796.add(new Invariant(2548, "CFMetadataInstance.resource.hash == -352258403 || CFMetadataInstance.resource.hash == -66092372 || CFMetadataInstance.resource.hash == -66092341"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() == -352258403 || ((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() == -66092372 || ((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() == -66092341);
			}
		});
		invariants2796.add(new Invariant(2549, "CommitLog.instance.segmentManager.allocatingFrom.id == 1731353131540L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353131541L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() == 1731353131540L || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() == 1731353131541L);
			}
		});
		invariants2796.add(new Invariant(2550, "CommitLog.instance.segmentManager.allocatingFrom.idBase == 1731353131536L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.idBase"))).intValue() == 1731353131536L);
			}
		});
		invariants2796.add(new Invariant(2551, "CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == 1731353131539L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.replayLimitId"))).intValue() == 1731353131539L);
			}
		});
		invariants2796.add(new Invariant(2552, "CommitLog.instance.segmentManager.availableSegment.fd == 178 || CommitLog.instance.segmentManager.availableSegment.fd == 221"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() == 178 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() == 221);
			}
		});
		invariants2796.add(new Invariant(2553, "CommitLog.instance.segmentManager.availableSegment.id == 1731353131541L || CommitLog.instance.segmentManager.availableSegment.id == 1731353131542L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() == 1731353131541L || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() == 1731353131542L);
			}
		});
		invariants2796.add(new Invariant(2554, "CFMetadataInstance.partitionColumns.regulars.complexIdx >= cfsInstance.readOrdering.current.id"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.regulars.complexIdx"))).intValue() >= ((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.id"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2555, "cfsInstance.readOrdering.current.id % resultSetInstance.metadata.columnCount == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.readOrdering.current.id"))).intValue() % ((Number)(InvariantChecker.getValue("resultSetInstance.metadata.columnCount"))).intValue() == 0);
			}
		});
		invariants2796.add(new Invariant(2556, "CommitLog.instance.executor.lastSyncedAt - 32423626 * resultSetInstance.metadata.columnCount + 241326977 * daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 8.9239153222928E13 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 32423626 * ((Number)(InvariantChecker.getValue("resultSetInstance.metadata.columnCount"))).intValue() + 241326977 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0]))) - 8.9239153222928E13 == 0);
			}
		});
		invariants2796.add(new Invariant(2557, "CommitLog.instance.executor.lastSyncedAt - 32423626 * resultSetInstance.metadata.columnCount + 241326977 * daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1 - 8.9238911895951E13 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 32423626 * ((Number)(InvariantChecker.getValue("resultSetInstance.metadata.columnCount"))).intValue() + 241326977 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0])))-1 - 8.9238911895951E13 == 0);
			}
		});
		invariants2796.add(new Invariant(2558, "241 * CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.allocatePosition + CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset + 8 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (241 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() + ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() + 8 == 0);
			}
		});
		invariants2796.add(new Invariant(2559, "241 * CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset + CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (241 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() + ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() == 0);
			}
		});
		invariants2796.add(new Invariant(2560, "CFMetadataInstance.isCounter == cfsInstance.compactionStrategyManager.partitionSSTablesByTokenRange"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("CFMetadataInstance.isCounter"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("cfsInstance.compactionStrategyManager.partitionSSTablesByTokenRange"))).booleanValue());
			}
		});
		invariants2796.add(new Invariant(2561, "CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.executor.pending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.statics.complexIdx"))).intValue() == ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2562, "CFMetadataInstance.partitionColumns.statics.complexIdx == cfsInstance.sampleLatencyNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.statics.complexIdx"))).intValue() == ((Number)(InvariantChecker.getValue("cfsInstance.sampleLatencyNanos"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2563, "CFMetadataInstance.partitionColumns.statics.complexIdx == daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.statics.complexIdx"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0]))));
			}
		});
		invariants2796.add(new Invariant(2564, "CFMetadataInstance.partitioner.EMPTY_SIZE == StorageService.instance.tokenMetadata.partitioner.EMPTY_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitioner.EMPTY_SIZE"))).intValue() == ((Number)(InvariantChecker.getValue("StorageService.instance.tokenMetadata.partitioner.EMPTY_SIZE"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2565, "CFMetadataInstance.partitioner.EMPTY_SIZE == StorageService.instance.valueFactory.partitioner.EMPTY_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitioner.EMPTY_SIZE"))).intValue() == ((Number)(InvariantChecker.getValue("StorageService.instance.valueFactory.partitioner.EMPTY_SIZE"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2566, "CommitLog.instance.executor.syncComplete.CANCELLED == cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.syncComplete.CANCELLED"))).intValue() == ((Number)(InvariantChecker.getValue("cfsInstance.compactionStrategyManager.currentBoundaries.ringVersion"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2567, "CommitLog.instance.executor.syncComplete.CANCELLED == daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.syncComplete.CANCELLED"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0])))-1);
			}
		});
		invariants2796.add(new Invariant(2568, "CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset == CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() == ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2569, "daikon.Quant.pairwiseEqual(QueryProcessor.instance.thriftPreparedStatements_FOR_ENCLOSING_USE, resultSetInstance.rows_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.pairwiseEqual((Set.class.cast(InvariantChecker.getValue("QueryProcessor.instance.thriftPreparedStatements")).toArray(new Object[0])), (Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0]))));
			}
		});
		invariants2796.add(new Invariant(2570, "CFMetadataInstance.partitioner.EMPTY_SIZE == 24"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitioner.EMPTY_SIZE"))).intValue() == 24);
			}
		});
		invariants2796.add(new Invariant(2571, "CFMetadataInstance.resource.hash == 493049612"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() == 493049612);
			}
		});
		invariants2796.add(new Invariant(2572, "CommitLog.instance.executor.written == 46 || CommitLog.instance.executor.written == 48"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() == 46 || ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() == 48);
			}
		});
		invariants2796.add(new Invariant(2573, "CommitLog.instance.segmentManager.allocatingFrom.allocatePosition == 6971 || CommitLog.instance.segmentManager.allocatingFrom.allocatePosition == 7320"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() == 6971 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() == 7320);
			}
		});
		invariants2796.add(new Invariant(2574, "CommitLog.instance.segmentManager.allocatingFrom.fd == 177"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() == 177);
			}
		});
		invariants2796.add(new Invariant(2575, "CommitLog.instance.segmentManager.allocatingFrom.id == 1731353097680L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() == 1731353097680L);
			}
		});
		invariants2796.add(new Invariant(2576, "CommitLog.instance.segmentManager.allocatingFrom.idBase == 1731353097676L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.idBase"))).intValue() == 1731353097676L);
			}
		});
		invariants2796.add(new Invariant(2577, "CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset == 6963 || CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset == 7312"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() == 6963 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() == 7312);
			}
		});
		invariants2796.add(new Invariant(2578, "CommitLog.instance.segmentManager.allocatingFrom.nextId == 6"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.nextId"))).intValue() == 6);
			}
		});
		invariants2796.add(new Invariant(2579, "CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == 1731353097679L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.replayLimitId"))).intValue() == 1731353097679L);
			}
		});
		invariants2796.add(new Invariant(2580, "CommitLog.instance.segmentManager.availableSegment.fd == 178"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() == 178);
			}
		});
		invariants2796.add(new Invariant(2581, "CommitLog.instance.segmentManager.availableSegment.id == 1731353097681L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() == 1731353097681L);
			}
		});
		invariants2796.add(new Invariant(2582, "cfsInstance.metadata.resource.hash == 752961001"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() == 752961001);
			}
		});
		invariants2796.add(new Invariant(2583, "resultSetInstance.metadata.columnCount == 5"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("resultSetInstance.metadata.columnCount"))).intValue() == 5);
			}
		});
		invariants2796.add(new Invariant(2584, "104 * CommitLog.instance.executor.written - CommitLog.instance.segmentManager.allocatingFrom.allocatePosition + 2328 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (104 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() + 2328 == 0);
			}
		});
		invariants2796.add(new Invariant(2585, "104 * CommitLog.instance.executor.written - CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset + 2320 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (104 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() + 2320 == 0);
			}
		});
		invariants2796.add(new Invariant(2586, "3 * CommitLog.instance.executor.lastSyncedAt - 97264940 * CommitLog.instance.executor.pending - 206712755 * CommitLog.instance.executor.written - 2.67645422000265E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (3 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 97264940 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - 206712755 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() - 2.67645422000265E14 == 0);
			}
		});
		invariants2796.add(new Invariant(2587, "243 * CommitLog.instance.executor.lastSyncedAt + 8.865273015E9 * CommitLog.instance.executor.pending - 206712755 * CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 2.1678398172259656E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (243 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() + 8.865273015E9 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - 206712755 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() - 2.1678398172259656E16 == 0);
			}
		});
		invariants2796.add(new Invariant(2588, "243 * CommitLog.instance.executor.lastSyncedAt + 8.865273015E9 * CommitLog.instance.executor.pending - 206712755 * CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 2.1678399825961696E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (243 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() + 8.865273015E9 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - 206712755 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() - 2.1678399825961696E16 == 0);
			}
		});
		invariants2796.add(new Invariant(2589, "377 * CommitLog.instance.executor.lastSyncedAt - 3.068930024E10 * CommitLog.instance.executor.pending - 206712755 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 3.3633865764017776E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (377 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 3.068930024E10 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - 206712755 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() - 3.3633865764017776E16 == 0);
			}
		});
		invariants2796.add(new Invariant(2590, "243 * CommitLog.instance.executor.lastSyncedAt - 8.865273015E9 * CommitLog.instance.executor.written - 97264940 * CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 2.1678864638847184E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (243 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 8.865273015E9 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() - 97264940 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() - 2.1678864638847184E16 == 0);
			}
		});
		invariants2796.add(new Invariant(2591, "243 * CommitLog.instance.executor.lastSyncedAt - 8.865273015E9 * CommitLog.instance.executor.written - 97264940 * CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 2.1678865416966704E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (243 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 8.865273015E9 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() - 97264940 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() - 2.1678865416966704E16 == 0);
			}
		});
		invariants2796.add(new Invariant(2592, "67 * CommitLog.instance.executor.lastSyncedAt - 7.67232506E9 * CommitLog.instance.executor.written + 24316235 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 5.977442923300005E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (67 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 7.67232506E9 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() + 24316235 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() - 5.977442923300005E15 == 0);
			}
		});
		invariants2796.add(new Invariant(2593, "10449 * CommitLog.instance.executor.lastSyncedAt - 6.137860048E9 * CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 1773054603 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 9.3218076724740365E17 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (10449 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 6.137860048E9 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() - 1773054603 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() - 9.3218076724740365E17 == 0);
			}
		});
		invariants2796.add(new Invariant(2594, "10449 * CommitLog.instance.executor.lastSyncedAt - 6.137860048E9 * CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 1773054603 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 9.3218081635028416E17 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (10449 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 6.137860048E9 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() - 1773054603 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() - 9.3218081635028416E17 == 0);
			}
		});
		invariants2796.add(new Invariant(2595, "81 * CommitLog.instance.executor.pending + 81 * CommitLog.instance.executor.written - CommitLog.instance.segmentManager.allocatingFrom.allocatePosition + 4262 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (81 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() + 81 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() + 4262 == 0);
			}
		});
		invariants2796.add(new Invariant(2596, "81 * CommitLog.instance.executor.pending + 81 * CommitLog.instance.executor.written - CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset + 4254 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (81 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() + 81 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() + 4254 == 0);
			}
		});
		invariants2796.add(new Invariant(2597, "35 * CommitLog.instance.executor.lastSyncedAt - 6.1125445733E10 * CommitLog.instance.executor.written + 564102292 * CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 3.123418570579843E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (35 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 6.1125445733E10 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() + 564102292 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() - 3.123418570579843E15 == 0);
			}
		});
		invariants2796.add(new Invariant(2598, "35 * CommitLog.instance.executor.lastSyncedAt - 6.1125445733E10 * CommitLog.instance.executor.written + 564102292 * CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 3.123414057761507E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (35 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 6.1125445733E10 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() + 564102292 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() - 3.123414057761507E15 == 0);
			}
		});
		invariants2796.add(new Invariant(2599, "35 * CommitLog.instance.executor.lastSyncedAt - 6.1125445733E10 * CommitLog.instance.executor.written + 564102292 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 3.123414057761507E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (35 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 6.1125445733E10 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() + 564102292 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() - 3.123414057761507E15 == 0);
			}
		});
		invariants2796.add(new Invariant(2600, "253 * CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.allocatePosition + CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset + 8 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (253 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() + ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() + 8 == 0);
			}
		});
		invariants2796.add(new Invariant(2601, "253 * CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset + CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (253 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() + ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() == 0);
			}
		});
		invariants2796.add(new Invariant(2602, "95 * CommitLog.instance.executor.lastSyncedAt - 3.9180313029E10 * CommitLog.instance.executor.written + 53673502 * CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 8.474015504782629E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (95 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 3.9180313029E10 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() + 53673502 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() - 8.474015504782629E15 == 0);
			}
		});
		invariants2796.add(new Invariant(2603, "95 * CommitLog.instance.executor.lastSyncedAt - 3.9180313029E10 * CommitLog.instance.executor.written + 53673502 * CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 8.474015075394613E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (95 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 3.9180313029E10 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() + 53673502 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() - 8.474015075394613E15 == 0);
			}
		});
		invariants2796.add(new Invariant(2604, "552 * CommitLog.instance.executor.lastSyncedAt + 711797936 * CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 3.561846639E9 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 4.9227824972284544E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (552 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() + 711797936 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() - 3.561846639E9 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() - 4.9227824972284544E16 == 0);
			}
		});
		invariants2796.add(new Invariant(2605, "552 * CommitLog.instance.executor.lastSyncedAt + 711797936 * CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 3.561846639E9 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 4.9227819277901064E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (552 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() + 711797936 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() - 3.561846639E9 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() - 4.9227819277901064E16 == 0);
			}
		});
		invariants2796.add(new Invariant(2606, "CommitLog.instance.segmentManager.allocatingFrom.allocatePosition == 4494 || CommitLog.instance.segmentManager.allocatingFrom.allocatePosition == 4577 || CommitLog.instance.segmentManager.allocatingFrom.allocatePosition == 4934"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() == 4494 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() == 4577 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() == 4934);
			}
		});
		invariants2796.add(new Invariant(2607, "CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset == 4486 || CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset == 4569 || CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset == 4926"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() == 4486 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() == 4569 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() == 4926);
			}
		});
		invariants2796.add(new Invariant(2608, "137 * CommitLog.instance.executor.lastSyncedAt - 1.06782666533E11 * CommitLog.instance.executor.written + 190769681 * CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 1.2219779267542508E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (137 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 1.06782666533E11 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() + 190769681 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() - 1.2219779267542508E16 == 0);
			}
		});
		invariants2796.add(new Invariant(2609, "137 * CommitLog.instance.executor.lastSyncedAt - 1.06782666533E11 * CommitLog.instance.executor.written + 190769681 * CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 1.221977774138506E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (137 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 1.06782666533E11 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() + 190769681 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() - 1.221977774138506E16 == 0);
			}
		});
		invariants2796.add(new Invariant(2610, "85 * CommitLog.instance.executor.lastSyncedAt - 7.2261960573E10 * CommitLog.instance.executor.written + 190769681 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 7.581770475243407E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (85 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 7.2261960573E10 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() + 190769681 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() - 7.581770475243407E15 == 0);
			}
		});
		invariants2796.add(new Invariant(2611, "52 * CommitLog.instance.executor.lastSyncedAt + 870626031 * CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 1286538151 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 4.63711502914646E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (52 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() + 870626031 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() - 1286538151 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() - 4.63711502914646E15 == 0);
			}
		});
		invariants2796.add(new Invariant(2612, "52 * CommitLog.instance.executor.lastSyncedAt + 870626031 * CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 1286538151 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 4.637108064138212E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (52 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() + 870626031 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() - 1286538151 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() - 4.637108064138212E15 == 0);
			}
		});
		invariants2796.add(new Invariant(2613, "CommitLog.instance.executor.written == 65 || CommitLog.instance.executor.written == 66 || CommitLog.instance.executor.written == 67"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() == 65 || ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() == 66 || ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() == 67);
			}
		});
		invariants2796.add(new Invariant(2614, "CommitLog.instance.segmentManager.allocatingFrom.allocatePosition == 9340 || CommitLog.instance.segmentManager.allocatingFrom.allocatePosition == 9451 || CommitLog.instance.segmentManager.allocatingFrom.allocatePosition == 9555"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() == 9340 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() == 9451 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() == 9555);
			}
		});
		invariants2796.add(new Invariant(2615, "CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset == 9332 || CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset == 9443 || CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset == 9547"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() == 9332 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() == 9443 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() == 9547);
			}
		});
		invariants2796.add(new Invariant(2616, "104 * CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.allocatePosition + CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset + 8 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (104 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() + ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() + 8 == 0);
			}
		});
		invariants2796.add(new Invariant(2617, "104 * CommitLog.instance.executor.pending - CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset + CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (104 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() + ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() == 0);
			}
		});
		invariants2796.add(new Invariant(2618, "28 * CommitLog.instance.executor.lastSyncedAt - 3.5872812582E10 * CommitLog.instance.executor.written + 326559207 * CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 2.498718516631973E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (28 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 3.5872812582E10 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() + 326559207 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() - 2.498718516631973E15 == 0);
			}
		});
		invariants2796.add(new Invariant(2619, "28 * CommitLog.instance.executor.lastSyncedAt - 3.5872812582E10 * CommitLog.instance.executor.written + 326559207 * CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 2.498715904158317E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (28 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 3.5872812582E10 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() + 326559207 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() - 2.498715904158317E15 == 0);
			}
		});
		invariants2796.add(new Invariant(2620, "CommitLog.instance.segmentManager.allocatingFrom.allocatePosition == 1317 || CommitLog.instance.segmentManager.allocatingFrom.allocatePosition == 1384 || CommitLog.instance.segmentManager.allocatingFrom.allocatePosition == 1726"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() == 1317 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() == 1384 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() == 1726);
			}
		});
		invariants2796.add(new Invariant(2621, "CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset == 1309 || CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset == 1376 || CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset == 1718"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() == 1309 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() == 1376 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() == 1718);
			}
		});
		invariants2796.add(new Invariant(2622, "resultSetInstance.metadata.columnCount == 5 || resultSetInstance.metadata.columnCount == 8"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("resultSetInstance.metadata.columnCount"))).intValue() == 5 || ((Number)(InvariantChecker.getValue("resultSetInstance.metadata.columnCount"))).intValue() == 8);
			}
		});
		invariants2796.add(new Invariant(2623, "409 * CommitLog.instance.executor.lastSyncedAt - 2.15430649451E11 * CommitLog.instance.executor.pending - 959639658 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 3.6484296124014304E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (409 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 2.15430649451E11 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - 959639658 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() - 3.6484296124014304E16 == 0);
			}
		});
		invariants2796.add(new Invariant(2624, "208 * CommitLog.instance.executor.lastSyncedAt - 2.35661701999E11 * CommitLog.instance.executor.written + 1240538037 * CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 1.8556162163977868E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (208 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 2.35661701999E11 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() + 1240538037 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() - 1.8556162163977868E16 == 0);
			}
		});
		invariants2796.add(new Invariant(2625, "208 * CommitLog.instance.executor.lastSyncedAt - 2.35661701999E11 * CommitLog.instance.executor.written + 1240538037 * CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 1.8556152239673572E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (208 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 2.35661701999E11 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() + 1240538037 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() - 1.8556152239673572E16 == 0);
			}
		});
		invariants2796.add(new Invariant(2626, "5 * CommitLog.instance.executor.lastSyncedAt - 3.531649991E9 * CommitLog.instance.executor.written + 14172987 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 4.46045135745461E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (5 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 3.531649991E9 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() + 14172987 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() - 4.46045135745461E14 == 0);
			}
		});
		invariants2796.add(new Invariant(2627, "2 * CommitLog.instance.executor.lastSyncedAt - 503788985 * CommitLog.instance.executor.written + 135970787 * resultSetInstance.metadata.columnCount - 1.7841353883051E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 503788985 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() + 135970787 * ((Number)(InvariantChecker.getValue("resultSetInstance.metadata.columnCount"))).intValue() - 1.7841353883051E14 == 0);
			}
		});
		invariants2796.add(new Invariant(2628, "97342 * CommitLog.instance.executor.lastSyncedAt - 2.15430649451E11 * CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 1.2963589153E10 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 8.6832607540702095E18 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (97342 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 2.15430649451E11 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() - 1.2963589153E10 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() - 8.6832607540702095E18 == 0);
			}
		});
		invariants2796.add(new Invariant(2629, "1026 * CommitLog.instance.executor.lastSyncedAt - 678741279 * CommitLog.instance.segmentManager.allocatingFrom.allocatePosition + 2.35661701999E11 * resultSetInstance.metadata.columnCount - 9.1527095674791936E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (1026 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 678741279 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() + 2.35661701999E11 * ((Number)(InvariantChecker.getValue("resultSetInstance.metadata.columnCount"))).intValue() - 9.1527095674791936E16 == 0);
			}
		});
		invariants2796.add(new Invariant(2630, "97342 * CommitLog.instance.executor.lastSyncedAt - 2.15430649451E11 * CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 1.2963589153E10 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 8.6832624775154053E18 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (97342 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 2.15430649451E11 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() - 1.2963589153E10 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() - 8.6832624775154053E18 == 0);
			}
		});
		invariants2796.add(new Invariant(2631, "1026 * CommitLog.instance.executor.lastSyncedAt - 678741279 * CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset + 2.35661701999E11 * resultSetInstance.metadata.columnCount - 9.1527101104722176E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (1026 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 678741279 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() + 2.35661701999E11 * ((Number)(InvariantChecker.getValue("resultSetInstance.metadata.columnCount"))).intValue() - 9.1527101104722176E16 == 0);
			}
		});
		invariants2796.add(new Invariant(2632, "714 * CommitLog.instance.executor.lastSyncedAt - 95087451 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset + 2.15430649451E11 * resultSetInstance.metadata.columnCount - 6.3695203710981936E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (714 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 95087451 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() + 2.15430649451E11 * ((Number)(InvariantChecker.getValue("resultSetInstance.metadata.columnCount"))).intValue() - 6.3695203710981936E16 == 0);
			}
		});
		invariants2796.add(new Invariant(2633, "CommitLog.instance.segmentManager.allocatingFrom.allocatePosition == 1941 || CommitLog.instance.segmentManager.allocatingFrom.allocatePosition == 2086 || CommitLog.instance.segmentManager.allocatingFrom.allocatePosition == 2428"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() == 1941 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() == 2086 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() == 2428);
			}
		});
		invariants2796.add(new Invariant(2634, "CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset == 1933 || CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset == 2078 || CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset == 2420"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() == 1933 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() == 2078 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() == 2420);
			}
		});
		invariants2796.add(new Invariant(2635, "539 * CommitLog.instance.executor.lastSyncedAt - 2.24037702617E11 * CommitLog.instance.executor.written + 410838266 * CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 4.8082256918869176E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (539 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 2.24037702617E11 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() + 410838266 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() - 4.8082256918869176E16 == 0);
			}
		});
		invariants2796.add(new Invariant(2636, "539 * CommitLog.instance.executor.lastSyncedAt - 2.24037702617E11 * CommitLog.instance.executor.written + 410838266 * CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 4.8082253632163048E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (539 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 2.24037702617E11 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() + 410838266 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() - 4.8082253632163048E16 == 0);
			}
		});
		invariants2796.add(new Invariant(2637, "331 * CommitLog.instance.executor.lastSyncedAt - 1.49075919513E11 * CommitLog.instance.executor.written + 410838266 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 2.9527546878358424E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (331 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 1.49075919513E11 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() + 410838266 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() - 2.9527546878358424E16 == 0);
			}
		});
		invariants2796.add(new Invariant(2638, "15080 * CommitLog.instance.executor.lastSyncedAt + 1.49075919513E11 * CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 2.24037702617E11 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 1.34511057423637658E18 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (15080 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() + 1.49075919513E11 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() - 2.24037702617E11 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() - 1.34511057423637658E18 == 0);
			}
		});
		invariants2796.add(new Invariant(2639, "15080 * CommitLog.instance.executor.lastSyncedAt + 1.49075919513E11 * CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 2.24037702617E11 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 1.34510938162902042E18 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (15080 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() + 1.49075919513E11 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() - 2.24037702617E11 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() - 1.34510938162902042E18 == 0);
			}
		});
		invariants2796.add(new Invariant(2640, "CommitLog.instance.segmentManager.allocatingFrom.allocatePosition == 2643 || CommitLog.instance.segmentManager.allocatingFrom.allocatePosition == 2730 || CommitLog.instance.segmentManager.allocatingFrom.allocatePosition == 3072"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() == 2643 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() == 2730 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() == 3072);
			}
		});
		invariants2796.add(new Invariant(2641, "CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset == 2635 || CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset == 2722 || CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset == 3064"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() == 2635 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() == 2722 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() == 3064);
			}
		});
		invariants2796.add(new Invariant(2642, "3 * CommitLog.instance.executor.lastSyncedAt - 801017318 * CommitLog.instance.executor.pending - 853745441 * CommitLog.instance.executor.written - 2.67615592987558E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (3 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 801017318 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - 853745441 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() - 2.67615592987558E14 == 0);
			}
		});
		invariants2796.add(new Invariant(2643, "429 * CommitLog.instance.executor.lastSyncedAt + 2.14826483871E11 * CommitLog.instance.executor.pending - 853745441 * CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 3.8268567747157328E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (429 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() + 2.14826483871E11 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - 853745441 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() - 3.8268567747157328E16 == 0);
			}
		});
		invariants2796.add(new Invariant(2644, "429 * CommitLog.instance.executor.lastSyncedAt + 2.14826483871E11 * CommitLog.instance.executor.pending - 853745441 * CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 3.8268574577120864E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (429 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() + 2.14826483871E11 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - 853745441 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() - 3.8268574577120864E16 == 0);
			}
		});
		invariants2796.add(new Invariant(2645, "429 * CommitLog.instance.executor.lastSyncedAt - 8.1249404275E10 * CommitLog.instance.executor.pending - 853745441 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 3.8268367290758576E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (429 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 8.1249404275E10 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - 853745441 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() - 3.8268367290758576E16 == 0);
			}
		});
		invariants2796.add(new Invariant(2646, "597 * CommitLog.instance.executor.lastSyncedAt - 2.14826483871E11 * CommitLog.instance.executor.written + 314203784 * CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 5.3255953673878096E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (597 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 2.14826483871E11 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() + 314203784 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() - 5.3255953673878096E16 == 0);
			}
		});
		invariants2796.add(new Invariant(2647, "597 * CommitLog.instance.executor.lastSyncedAt - 2.14826483871E11 * CommitLog.instance.executor.written + 314203784 * CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 5.3255951160247824E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (597 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 2.14826483871E11 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() + 314203784 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() - 5.3255951160247824E16 == 0);
			}
		});
		invariants2796.add(new Invariant(2648, "117 * CommitLog.instance.executor.lastSyncedAt + 8.1249404275E10 * CommitLog.instance.executor.written - 801017318 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 1.0436386537075994E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (117 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() + 8.1249404275E10 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() - 801017318 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() - 1.0436386537075994E16 == 0);
			}
		});
		invariants2796.add(new Invariant(2649, "44616 * CommitLog.instance.executor.lastSyncedAt + 1.26036958007E11 * CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 2.14826483871E11 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 3.9799327643162337E18 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (44616 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() + 1.26036958007E11 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() - 2.14826483871E11 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() - 3.9799327643162337E18 == 0);
			}
		});
		invariants2796.add(new Invariant(2650, "44616 * CommitLog.instance.executor.lastSyncedAt + 1.26036958007E11 * CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 2.14826483871E11 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 3.9799317560205696E18 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (44616 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() + 1.26036958007E11 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() - 2.14826483871E11 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() - 3.9799317560205696E18 == 0);
			}
		});
		invariants2796.add(new Invariant(2651, "4 * CommitLog.instance.executor.lastSyncedAt - 709653791 * CommitLog.instance.executor.pending - 768449891 * CommitLog.instance.executor.written - 3.56825796842802E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (4 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 709653791 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - 768449891 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() - 3.56825796842802E14 == 0);
			}
		});
		invariants2796.add(new Invariant(2652, "296 * CommitLog.instance.executor.lastSyncedAt + 1.32751088359E11 * CommitLog.instance.executor.pending - 224628097 * CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 2.640552258924428E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (296 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() + 1.32751088359E11 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - 224628097 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() - 2.640552258924428E16 == 0);
			}
		});
		invariants2796.add(new Invariant(2653, "296 * CommitLog.instance.executor.lastSyncedAt + 1.32751088359E11 * CommitLog.instance.executor.pending - 224628097 * CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 2.6405524386269056E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (296 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() + 1.32751088359E11 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - 224628097 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() - 2.6405524386269056E16 == 0);
			}
		});
		invariants2796.add(new Invariant(2654, "441 * CommitLog.instance.executor.lastSyncedAt - 7.3436518639E10 * CommitLog.instance.executor.pending - 768449891 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 3.9339049343535024E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (441 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 7.3436518639E10 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() - 768449891 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() - 3.9339049343535024E16 == 0);
			}
		});
		invariants2796.add(new Invariant(2655, "598 * CommitLog.instance.executor.lastSyncedAt - 1.32751088359E11 * CommitLog.instance.executor.written + 443157347 * CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 5.3346715626336112E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (598 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 1.32751088359E11 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() + 443157347 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() - 5.3346715626336112E16 == 0);
			}
		});
		invariants2796.add(new Invariant(2656, "598 * CommitLog.instance.executor.lastSyncedAt - 1.32751088359E11 * CommitLog.instance.executor.written + 443157347 * CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 5.3346712081077344E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (598 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 1.32751088359E11 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() + 443157347 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() - 5.3346712081077344E16 == 0);
			}
		});
		invariants2796.add(new Invariant(2657, "25 * CommitLog.instance.executor.lastSyncedAt + 7.3436518639E10 * CommitLog.instance.executor.written - 709653791 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 2.229242583435063E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (25 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() + 7.3436518639E10 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() - 709653791 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() - 2.229242583435063E15 == 0);
			}
		});
		invariants2796.add(new Invariant(2658, "45864 * CommitLog.instance.executor.lastSyncedAt - 7.3436518639E10 * CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 6.482270025E9 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 4.0912605442354929E18 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (45864 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 7.3436518639E10 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() - 6.482270025E9 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() - 4.0912605442354929E18 == 0);
			}
		});
		invariants2796.add(new Invariant(2659, "45864 * CommitLog.instance.executor.lastSyncedAt - 7.3436518639E10 * CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - 6.482270025E9 * CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 4.0912611317276421E18 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (45864 * ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 7.3436518639E10 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() - 6.482270025E9 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() - 4.0912611317276421E18 == 0);
			}
		});
		invariants2796.add(new Invariant(2660, "CFMetadataInstance.resource.hash == -1882274597 || CFMetadataInstance.resource.hash == 1407893056"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() == -1882274597 || ((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() == 1407893056);
			}
		});
		invariants2796.add(new Invariant(2661, "CommitLog.instance.segmentManager.allocatingFrom.fd == 177 || CommitLog.instance.segmentManager.allocatingFrom.fd == 180"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() == 177 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() == 180);
			}
		});
		invariants2796.add(new Invariant(2662, "CommitLog.instance.segmentManager.allocatingFrom.id == 1731353206874L || CommitLog.instance.segmentManager.allocatingFrom.id == 1731353206875L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() == 1731353206874L || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() == 1731353206875L);
			}
		});
		invariants2796.add(new Invariant(2663, "CommitLog.instance.segmentManager.allocatingFrom.idBase == 1731353206870L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.idBase"))).intValue() == 1731353206870L);
			}
		});
		invariants2796.add(new Invariant(2664, "CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == 1731353206873L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.replayLimitId"))).intValue() == 1731353206873L);
			}
		});
		invariants2796.add(new Invariant(2665, "CommitLog.instance.segmentManager.availableSegment.fd == 180 || CommitLog.instance.segmentManager.availableSegment.fd == 226"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() == 180 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() == 226);
			}
		});
		invariants2796.add(new Invariant(2666, "CommitLog.instance.segmentManager.availableSegment.id == 1731353206875L || CommitLog.instance.segmentManager.availableSegment.id == 1731353206876L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() == 1731353206875L || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() == 1731353206876L);
			}
		});
		invariants2796.add(new Invariant(2667, "cfsInstance.metadata.resource.hash == -584417373 || cfsInstance.metadata.resource.hash == 1407893056 || cfsInstance.metadata.resource.hash == 1943653847"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() == -584417373 || ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() == 1407893056 || ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() == 1943653847);
			}
		});
		invariants2796.add(new Invariant(2668, "CommitLog.instance.executor.written < CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() < ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2669, "CommitLog.instance.executor.written != cfsInstance.compactionStrategyManager.fanout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() != ((Number)(InvariantChecker.getValue("cfsInstance.compactionStrategyManager.fanout"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2670, "cfsInstance.sampleLatencyNanos >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.sampleLatencyNanos"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0]))));
			}
		});
		invariants2796.add(new Invariant(2671, "CommitLog.instance.executor.lastSyncedAt - 33659783 * resultSetInstance.metadata.columnCount + 253514569 * daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE) - 8.9314982931667E13 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 33659783 * ((Number)(InvariantChecker.getValue("resultSetInstance.metadata.columnCount"))).intValue() + 253514569 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0]))) - 8.9314982931667E13 == 0);
			}
		});
		invariants2796.add(new Invariant(2672, "CommitLog.instance.executor.lastSyncedAt - 33659783 * resultSetInstance.metadata.columnCount + 253514569 * daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1 - 8.9314729417098E13 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() - 33659783 * ((Number)(InvariantChecker.getValue("resultSetInstance.metadata.columnCount"))).intValue() + 253514569 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0])))-1 - 8.9314729417098E13 == 0);
			}
		});
		invariants2796.add(new Invariant(2673, "CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - 92 * CommitLog.instance.segmentManager.allocatingFrom.id - CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset + 1.592844950324E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() - 92 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() + 1.592844950324E14 == 0);
			}
		});
		invariants2796.add(new Invariant(2674, "CommitLog.instance.segmentManager.allocatingFrom.allocatePosition - CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 92 * CommitLog.instance.segmentManager.availableSegment.id + 1.59284495032492E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() - 92 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() + 1.59284495032492E14 == 0);
			}
		});
		invariants2796.add(new Invariant(2675, "92 * CommitLog.instance.segmentManager.allocatingFrom.id - CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset + CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 1.59284495032408E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (92 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() + ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() - 1.59284495032408E14 == 0);
			}
		});
		invariants2796.add(new Invariant(2676, "CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset - CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset - 92 * CommitLog.instance.segmentManager.availableSegment.id + 1.592844950325E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() - ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() - 92 * ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() + 1.592844950325E14 == 0);
			}
		});
		invariants2796.add(new Invariant(2677, "CFMetadataInstance.keyValidator.STATIC_MARKER == cfsInstance.metadata.keyValidator.STATIC_MARKER"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.keyValidator.STATIC_MARKER"))).intValue() == ((Number)(InvariantChecker.getValue("cfsInstance.metadata.keyValidator.STATIC_MARKER"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2678, "CFMetadataInstance.keyValidator.STATIC_MARKER == 65535"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.keyValidator.STATIC_MARKER"))).intValue() == 65535);
			}
		});
		invariants2796.add(new Invariant(2679, "CFMetadataInstance.partitionColumns.regulars.complexIdx >= 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.regulars.complexIdx"))).intValue() >= 0);
			}
		});
		invariants2796.add(new Invariant(2680, "CommitLog.instance.segmentManager.allocatingFrom.id == 1731353054455L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() == 1731353054455L);
			}
		});
		invariants2796.add(new Invariant(2681, "CommitLog.instance.segmentManager.allocatingFrom.idBase == 1731353054451L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.idBase"))).intValue() == 1731353054451L);
			}
		});
		invariants2796.add(new Invariant(2682, "CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == 1731353054454L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.replayLimitId"))).intValue() == 1731353054454L);
			}
		});
		invariants2796.add(new Invariant(2683, "CommitLog.instance.segmentManager.availableSegment.id == 1731353054456L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() == 1731353054456L);
			}
		});
		invariants2796.add(new Invariant(2684, "StorageService.instance.tokenMetadata.ringVersion == 0 || StorageService.instance.tokenMetadata.ringVersion == 1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("StorageService.instance.tokenMetadata.ringVersion"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("StorageService.instance.tokenMetadata.ringVersion"))).intValue() == 1);
			}
		});
		invariants2796.add(new Invariant(2685, "cfsInstance.metadata.keyValidator.STATIC_MARKER == 65535"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.metadata.keyValidator.STATIC_MARKER"))).intValue() == 65535);
			}
		});
		invariants2796.add(new Invariant(2686, "CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK != CFMetadataInstance.partitionColumns.regulars.complexIdx"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK"))).intValue() != ((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.regulars.complexIdx"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2687, "CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK > StorageService.instance.tokenMetadata.ringVersion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.allColumnFilter.serializer.HAS_QUERIED_MASK"))).intValue() > ((Number)(InvariantChecker.getValue("StorageService.instance.tokenMetadata.ringVersion"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2688, "CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK > StorageService.instance.tokenMetadata.ringVersion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK"))).intValue() > ((Number)(InvariantChecker.getValue("StorageService.instance.tokenMetadata.ringVersion"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2689, "CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK >= StorageService.instance.tokenMetadata.ringVersion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK"))).intValue() >= ((Number)(InvariantChecker.getValue("StorageService.instance.tokenMetadata.ringVersion"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2690, "CFMetadataInstance.keyValidator.STATIC_MARKER > CFMetadataInstance.partitionColumns.regulars.complexIdx"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.keyValidator.STATIC_MARKER"))).intValue() > ((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.regulars.complexIdx"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2691, "CFMetadataInstance.keyValidator.STATIC_MARKER > CFMetadataInstance.resource.hash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.keyValidator.STATIC_MARKER"))).intValue() > ((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2692, "CFMetadataInstance.keyValidator.STATIC_MARKER < CommitLog.instance.executor.lastSyncedAt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.keyValidator.STATIC_MARKER"))).intValue() < ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2693, "CFMetadataInstance.keyValidator.STATIC_MARKER > CommitLog.instance.executor.pending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.keyValidator.STATIC_MARKER"))).intValue() > ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2694, "CFMetadataInstance.keyValidator.STATIC_MARKER > CommitLog.instance.executor.written"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.keyValidator.STATIC_MARKER"))).intValue() > ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2695, "CFMetadataInstance.keyValidator.STATIC_MARKER > CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.keyValidator.STATIC_MARKER"))).intValue() > ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2696, "CFMetadataInstance.keyValidator.STATIC_MARKER > CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.keyValidator.STATIC_MARKER"))).intValue() > ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2697, "CFMetadataInstance.keyValidator.STATIC_MARKER > CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.keyValidator.STATIC_MARKER"))).intValue() > ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2698, "CFMetadataInstance.keyValidator.STATIC_MARKER > StorageService.instance.tokenMetadata.ringVersion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.keyValidator.STATIC_MARKER"))).intValue() > ((Number)(InvariantChecker.getValue("StorageService.instance.tokenMetadata.ringVersion"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2699, "CFMetadataInstance.keyValidator.STATIC_MARKER > cfsInstance.metadata.resource.hash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.keyValidator.STATIC_MARKER"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2700, "CFMetadataInstance.keyValidator.STATIC_MARKER > resultSetInstance.metadata.columnCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.keyValidator.STATIC_MARKER"))).intValue() > ((Number)(InvariantChecker.getValue("resultSetInstance.metadata.columnCount"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2701, "CFMetadataInstance.keyValidator.STATIC_MARKER > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.keyValidator.STATIC_MARKER"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0]))));
			}
		});
		invariants2796.add(new Invariant(2702, "CFMetadataInstance.partitionColumns.regulars.complexIdx != CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.regulars.complexIdx"))).intValue() != ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2703, "CFMetadataInstance.partitionColumns.regulars.complexIdx != StorageService.instance.tokenMetadata.ringVersion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.regulars.complexIdx"))).intValue() != ((Number)(InvariantChecker.getValue("StorageService.instance.tokenMetadata.ringVersion"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2704, "CFMetadataInstance.partitionColumns.regulars.complexIdx < cfsInstance.metadata.keyValidator.STATIC_MARKER"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.regulars.complexIdx"))).intValue() < ((Number)(InvariantChecker.getValue("cfsInstance.metadata.keyValidator.STATIC_MARKER"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2705, "CFMetadataInstance.partitionColumns.statics.complexIdx <= StorageService.instance.tokenMetadata.ringVersion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.statics.complexIdx"))).intValue() <= ((Number)(InvariantChecker.getValue("StorageService.instance.tokenMetadata.ringVersion"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2706, "CFMetadataInstance.partitioner.EMPTY_SIZE != CFMetadataInstance.resource.hash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitioner.EMPTY_SIZE"))).intValue() != ((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2707, "CFMetadataInstance.partitioner.EMPTY_SIZE > StorageService.instance.tokenMetadata.ringVersion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitioner.EMPTY_SIZE"))).intValue() > ((Number)(InvariantChecker.getValue("StorageService.instance.tokenMetadata.ringVersion"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2708, "CFMetadataInstance.partitioner.EMPTY_SIZE > cfsInstance.metadata.resource.hash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitioner.EMPTY_SIZE"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2709, "CFMetadataInstance.resource.hash != StorageService.instance.tokenMetadata.ringVersion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() != ((Number)(InvariantChecker.getValue("StorageService.instance.tokenMetadata.ringVersion"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2710, "CFMetadataInstance.resource.hash != cfsInstance.metadata.keyValidator.STATIC_MARKER"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() != ((Number)(InvariantChecker.getValue("cfsInstance.metadata.keyValidator.STATIC_MARKER"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2711, "CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE > StorageService.instance.tokenMetadata.ringVersion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.serializers.latestVersionIndexSerializer.WIDTH_BASE"))).intValue() > ((Number)(InvariantChecker.getValue("StorageService.instance.tokenMetadata.ringVersion"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2712, "CommitLog.instance.MAX_MUTATION_SIZE > StorageService.instance.tokenMetadata.ringVersion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.MAX_MUTATION_SIZE"))).intValue() > ((Number)(InvariantChecker.getValue("StorageService.instance.tokenMetadata.ringVersion"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2713, "CommitLog.instance.archiver.restorePointInTime > StorageService.instance.tokenMetadata.ringVersion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.archiver.restorePointInTime"))).intValue() > ((Number)(InvariantChecker.getValue("StorageService.instance.tokenMetadata.ringVersion"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2714, "CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS > StorageService.instance.tokenMetadata.ringVersion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.DEFAULT_MARKER_INTERVAL_MILLIS"))).intValue() > ((Number)(InvariantChecker.getValue("StorageService.instance.tokenMetadata.ringVersion"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2715, "CommitLog.instance.executor.lastSyncedAt > StorageService.instance.tokenMetadata.ringVersion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() > ((Number)(InvariantChecker.getValue("StorageService.instance.tokenMetadata.ringVersion"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2716, "CommitLog.instance.executor.lastSyncedAt > cfsInstance.metadata.keyValidator.STATIC_MARKER"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.metadata.keyValidator.STATIC_MARKER"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2717, "CommitLog.instance.executor.markerIntervalNanos > StorageService.instance.tokenMetadata.ringVersion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.markerIntervalNanos"))).intValue() > ((Number)(InvariantChecker.getValue("StorageService.instance.tokenMetadata.ringVersion"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2718, "CommitLog.instance.executor.pending < cfsInstance.metadata.keyValidator.STATIC_MARKER"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.pending"))).intValue() < ((Number)(InvariantChecker.getValue("cfsInstance.metadata.keyValidator.STATIC_MARKER"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2719, "CommitLog.instance.executor.written > StorageService.instance.tokenMetadata.ringVersion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() > ((Number)(InvariantChecker.getValue("StorageService.instance.tokenMetadata.ringVersion"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2720, "CommitLog.instance.executor.written < cfsInstance.metadata.keyValidator.STATIC_MARKER"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() < ((Number)(InvariantChecker.getValue("cfsInstance.metadata.keyValidator.STATIC_MARKER"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2721, "CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE > StorageService.instance.tokenMetadata.ringVersion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE"))).intValue() > ((Number)(InvariantChecker.getValue("StorageService.instance.tokenMetadata.ringVersion"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2722, "CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE >= daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.ENTRY_OVERHEAD_SIZE"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0])))-1);
			}
		});
		invariants2796.add(new Invariant(2723, "CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE > StorageService.instance.tokenMetadata.ringVersion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.SYNC_MARKER_SIZE"))).intValue() > ((Number)(InvariantChecker.getValue("StorageService.instance.tokenMetadata.ringVersion"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2724, "CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > StorageService.instance.RING_DELAY"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() > ((Number)(InvariantChecker.getValue("StorageService.instance.RING_DELAY"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2725, "CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > StorageService.instance.tokenMetadata.ringVersion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() > ((Number)(InvariantChecker.getValue("StorageService.instance.tokenMetadata.ringVersion"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2726, "CommitLog.instance.segmentManager.allocatingFrom.allocatePosition > cfsInstance.indexManager.DEFAULT_PAGE_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.indexManager.DEFAULT_PAGE_SIZE"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2727, "CommitLog.instance.segmentManager.allocatingFrom.allocatePosition < cfsInstance.metadata.keyValidator.STATIC_MARKER"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() < ((Number)(InvariantChecker.getValue("cfsInstance.metadata.keyValidator.STATIC_MARKER"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2728, "CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer > StorageService.instance.tokenMetadata.ringVersion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.endOfBuffer"))).intValue() > ((Number)(InvariantChecker.getValue("StorageService.instance.tokenMetadata.ringVersion"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2729, "CommitLog.instance.segmentManager.allocatingFrom.fd > StorageService.instance.tokenMetadata.ringVersion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() > ((Number)(InvariantChecker.getValue("StorageService.instance.tokenMetadata.ringVersion"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2730, "CommitLog.instance.segmentManager.allocatingFrom.id > StorageService.instance.tokenMetadata.ringVersion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() > ((Number)(InvariantChecker.getValue("StorageService.instance.tokenMetadata.ringVersion"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2731, "CommitLog.instance.segmentManager.allocatingFrom.idBase > StorageService.instance.tokenMetadata.ringVersion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.idBase"))).intValue() > ((Number)(InvariantChecker.getValue("StorageService.instance.tokenMetadata.ringVersion"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2732, "CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > StorageService.instance.RING_DELAY"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() > ((Number)(InvariantChecker.getValue("StorageService.instance.RING_DELAY"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2733, "CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > StorageService.instance.tokenMetadata.ringVersion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() > ((Number)(InvariantChecker.getValue("StorageService.instance.tokenMetadata.ringVersion"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2734, "CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset > cfsInstance.indexManager.DEFAULT_PAGE_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.indexManager.DEFAULT_PAGE_SIZE"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2735, "CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset < cfsInstance.metadata.keyValidator.STATIC_MARKER"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() < ((Number)(InvariantChecker.getValue("cfsInstance.metadata.keyValidator.STATIC_MARKER"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2736, "CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > StorageService.instance.RING_DELAY"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() > ((Number)(InvariantChecker.getValue("StorageService.instance.RING_DELAY"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2737, "CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > StorageService.instance.tokenMetadata.ringVersion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() > ((Number)(InvariantChecker.getValue("StorageService.instance.tokenMetadata.ringVersion"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2738, "CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset > cfsInstance.indexManager.DEFAULT_PAGE_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.indexManager.DEFAULT_PAGE_SIZE"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2739, "CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset < cfsInstance.metadata.keyValidator.STATIC_MARKER"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastSyncedOffset"))).intValue() < ((Number)(InvariantChecker.getValue("cfsInstance.metadata.keyValidator.STATIC_MARKER"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2740, "CommitLog.instance.segmentManager.allocatingFrom.nextId > StorageService.instance.tokenMetadata.ringVersion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.nextId"))).intValue() > ((Number)(InvariantChecker.getValue("StorageService.instance.tokenMetadata.ringVersion"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2741, "CommitLog.instance.segmentManager.allocatingFrom.replayLimitId > StorageService.instance.tokenMetadata.ringVersion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.replayLimitId"))).intValue() > ((Number)(InvariantChecker.getValue("StorageService.instance.tokenMetadata.ringVersion"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2742, "CommitLog.instance.segmentManager.availableSegment.allocatePosition > StorageService.instance.tokenMetadata.ringVersion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.allocatePosition"))).intValue() > ((Number)(InvariantChecker.getValue("StorageService.instance.tokenMetadata.ringVersion"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2743, "CommitLog.instance.segmentManager.availableSegment.fd > StorageService.instance.tokenMetadata.ringVersion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() > ((Number)(InvariantChecker.getValue("StorageService.instance.tokenMetadata.ringVersion"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2744, "CommitLog.instance.segmentManager.availableSegment.id > StorageService.instance.tokenMetadata.ringVersion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() > ((Number)(InvariantChecker.getValue("StorageService.instance.tokenMetadata.ringVersion"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2745, "CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset > StorageService.instance.tokenMetadata.ringVersion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset"))).intValue() > ((Number)(InvariantChecker.getValue("StorageService.instance.tokenMetadata.ringVersion"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2746, "CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize > StorageService.instance.tokenMetadata.ringVersion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize"))).intValue() > ((Number)(InvariantChecker.getValue("StorageService.instance.tokenMetadata.ringVersion"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2747, "CommitLog.instance.segmentManager.size > StorageService.instance.tokenMetadata.ringVersion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.size"))).intValue() > ((Number)(InvariantChecker.getValue("StorageService.instance.tokenMetadata.ringVersion"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2748, "StorageService.instance.RING_DELAY > StorageService.instance.tokenMetadata.ringVersion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("StorageService.instance.RING_DELAY"))).intValue() > ((Number)(InvariantChecker.getValue("StorageService.instance.tokenMetadata.ringVersion"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2749, "StorageService.instance.tokenMetadata.ringVersion < cfsInstance.compactionStrategyManager.fanout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("StorageService.instance.tokenMetadata.ringVersion"))).intValue() < ((Number)(InvariantChecker.getValue("cfsInstance.compactionStrategyManager.fanout"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2750, "StorageService.instance.tokenMetadata.ringVersion < cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("StorageService.instance.tokenMetadata.ringVersion"))).intValue() < ((Number)(InvariantChecker.getValue("cfsInstance.compactionStrategyManager.schemaCompactionParams.DEFAULT_MAX_THRESHOLD"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2751, "StorageService.instance.tokenMetadata.ringVersion < cfsInstance.indexManager.DEFAULT_PAGE_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("StorageService.instance.tokenMetadata.ringVersion"))).intValue() < ((Number)(InvariantChecker.getValue("cfsInstance.indexManager.DEFAULT_PAGE_SIZE"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2752, "StorageService.instance.tokenMetadata.ringVersion < cfsInstance.metadata.keyValidator.STATIC_MARKER"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("StorageService.instance.tokenMetadata.ringVersion"))).intValue() < ((Number)(InvariantChecker.getValue("cfsInstance.metadata.keyValidator.STATIC_MARKER"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2753, "StorageService.instance.tokenMetadata.ringVersion > cfsInstance.metadata.resource.hash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("StorageService.instance.tokenMetadata.ringVersion"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2754, "StorageService.instance.tokenMetadata.ringVersion < cfsInstance.sampleLatencyNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("StorageService.instance.tokenMetadata.ringVersion"))).intValue() < ((Number)(InvariantChecker.getValue("cfsInstance.sampleLatencyNanos"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2755, "StorageService.instance.tokenMetadata.ringVersion <= resultSetInstance.metadata.columnCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("StorageService.instance.tokenMetadata.ringVersion"))).intValue() <= ((Number)(InvariantChecker.getValue("resultSetInstance.metadata.columnCount"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2756, "cfsInstance.metadata.keyValidator.STATIC_MARKER > cfsInstance.metadata.resource.hash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.metadata.keyValidator.STATIC_MARKER"))).intValue() > ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2757, "cfsInstance.metadata.keyValidator.STATIC_MARKER > resultSetInstance.metadata.columnCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.metadata.keyValidator.STATIC_MARKER"))).intValue() > ((Number)(InvariantChecker.getValue("resultSetInstance.metadata.columnCount"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2758, "cfsInstance.metadata.keyValidator.STATIC_MARKER > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.metadata.keyValidator.STATIC_MARKER"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0]))));
			}
		});
		invariants2796.add(new Invariant(2759, "CFMetadataInstance.resource.hash == 1457797880"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() == 1457797880);
			}
		});
		invariants2796.add(new Invariant(2760, "CommitLog.instance.executor.lastSyncedAt == 89153476901547L || CommitLog.instance.executor.lastSyncedAt == 89153754398678L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() == 89153476901547L || ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() == 89153754398678L);
			}
		});
		invariants2796.add(new Invariant(2761, "CommitLog.instance.executor.written == 4 || CommitLog.instance.executor.written == 5"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() == 4 || ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() == 5);
			}
		});
		invariants2796.add(new Invariant(2762, "CommitLog.instance.segmentManager.allocatingFrom.allocatePosition == 1407 || CommitLog.instance.segmentManager.allocatingFrom.allocatePosition == 1480"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() == 1407 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() == 1480);
			}
		});
		invariants2796.add(new Invariant(2763, "CommitLog.instance.segmentManager.allocatingFrom.id == 1731353043378L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() == 1731353043378L);
			}
		});
		invariants2796.add(new Invariant(2764, "CommitLog.instance.segmentManager.allocatingFrom.idBase == 1731353043374L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.idBase"))).intValue() == 1731353043374L);
			}
		});
		invariants2796.add(new Invariant(2765, "CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset == 1399 || CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset == 1472"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() == 1399 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() == 1472);
			}
		});
		invariants2796.add(new Invariant(2766, "CommitLog.instance.segmentManager.allocatingFrom.replayLimitId == 1731353043377L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.replayLimitId"))).intValue() == 1731353043377L);
			}
		});
		invariants2796.add(new Invariant(2767, "CommitLog.instance.segmentManager.availableSegment.id == 1731353043379L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() == 1731353043379L);
			}
		});
		invariants2796.add(new Invariant(2768, "CommitLog.instance.executor.lastSyncedAt == 89152776367715L || CommitLog.instance.executor.lastSyncedAt == 89153089179030L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() == 89152776367715L || ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.lastSyncedAt"))).intValue() == 89153089179030L);
			}
		});
		invariants2796.add(new Invariant(2769, "CommitLog.instance.executor.written == 2 || CommitLog.instance.executor.written == 3"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() == 2 || ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue() == 3);
			}
		});
		invariants2796.add(new Invariant(2770, "CommitLog.instance.segmentManager.allocatingFrom.allocatePosition == 1261 || CommitLog.instance.segmentManager.allocatingFrom.allocatePosition == 1334"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() == 1261 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() == 1334);
			}
		});
		invariants2796.add(new Invariant(2771, "CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset == 1253 || CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset == 1326"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() == 1253 || ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() == 1326);
			}
		});
		invariants2796.add(new Invariant(2772, "CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK == cfsInstance.fileIndexGenerator"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.allColumnFilter.serializer.IS_FETCH_ALL_MASK"))).intValue() == ((Number)(InvariantChecker.getValue("cfsInstance.fileIndexGenerator"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2773, "CFMetadataInstance.isCounter == cfsInstance.keyspace.initialized"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("CFMetadataInstance.isCounter"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("cfsInstance.keyspace.initialized"))).booleanValue());
			}
		});
		invariants2796.add(new Invariant(2774, "CFMetadataInstance.partitionColumns.statics.complexIdx == CommitLog.instance.executor.written"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.statics.complexIdx"))).intValue() == ((Number)(InvariantChecker.getValue("CommitLog.instance.executor.written"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2775, "CommitLog.instance.segmentManager.allocatingFrom.allocatePosition == CommitLog.instance.segmentManager.availableSegment.allocatePosition"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() == ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.allocatePosition"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2776, "CommitLog.instance.segmentManager.allocatingFrom.idBase == CommitLog.instance.segmentManager.allocatingFrom.replayLimitId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.idBase"))).intValue() == ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.replayLimitId"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2777, "CommitLog.instance.segmentManager.allocatingFrom.idBase == CommitLog.instance.segmentManager.availableSegment.replayLimitId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.idBase"))).intValue() == ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.replayLimitId"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2778, "CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset == CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() == ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.lastMarkerOffset"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2779, "CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset == CommitLog.instance.segmentManager.availableSegment.lastSyncedOffset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() == ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.lastSyncedOffset"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2780, "CommitLog.instance.segmentManager.allocatingFrom.nextId == CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.nextId"))).intValue() == ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.bufferPool.maxBufferPoolSize"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2781, "CFMetadataInstance.partitionColumns.regulars.complexIdx == 1 || CFMetadataInstance.partitionColumns.regulars.complexIdx == 5"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.regulars.complexIdx"))).intValue() == 1 || ((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.regulars.complexIdx"))).intValue() == 5);
			}
		});
		invariants2796.add(new Invariant(2782, "CFMetadataInstance.resource.hash == -1782923776 || CFMetadataInstance.resource.hash == 1976282729"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() == -1782923776 || ((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() == 1976282729);
			}
		});
		invariants2796.add(new Invariant(2783, "CommitLog.instance.segmentManager.allocatingFrom.allocatePosition == 28"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.allocatePosition"))).intValue() == 28);
			}
		});
		invariants2796.add(new Invariant(2784, "CommitLog.instance.segmentManager.allocatingFrom.fd == 200"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.fd"))).intValue() == 200);
			}
		});
		invariants2796.add(new Invariant(2785, "CommitLog.instance.segmentManager.allocatingFrom.id == 1731353221708L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.id"))).intValue() == 1731353221708L);
			}
		});
		invariants2796.add(new Invariant(2786, "CommitLog.instance.segmentManager.allocatingFrom.idBase == 1731353221707L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.idBase"))).intValue() == 1731353221707L);
			}
		});
		invariants2796.add(new Invariant(2787, "CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset == 20"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() == 20);
			}
		});
		invariants2796.add(new Invariant(2788, "CommitLog.instance.segmentManager.allocatingFrom.nextId == 3"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.nextId"))).intValue() == 3);
			}
		});
		invariants2796.add(new Invariant(2789, "CommitLog.instance.segmentManager.availableSegment.fd == 201"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.fd"))).intValue() == 201);
			}
		});
		invariants2796.add(new Invariant(2790, "CommitLog.instance.segmentManager.availableSegment.id == 1731353221709L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.availableSegment.id"))).intValue() == 1731353221709L);
			}
		});
		invariants2796.add(new Invariant(2791, "cfsInstance.metadata.resource.hash == -16027700"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue() == -16027700);
			}
		});
		invariants2796.add(new Invariant(2792, "CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK != CFMetadataInstance.partitionColumns.regulars.complexIdx"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.allColumnFilter.serializer.HAS_SUB_SELECTIONS_MASK"))).intValue() != ((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.regulars.complexIdx"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2793, "CFMetadataInstance.partitionColumns.regulars.complexIdx != CommitLog.instance.segmentManager.allocatingFrom.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.regulars.complexIdx"))).intValue() != ((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.nextId"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2794, "CFMetadataInstance.partitionColumns.regulars.complexIdx > daikon.Quant.size(resultSetInstance.rows_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.partitionColumns.regulars.complexIdx"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("resultSetInstance.rows")).toArray(new Object[0]))));
			}
		});
		invariants2796.add(new Invariant(2795, "CFMetadataInstance.resource.hash != cfsInstance.metadata.resource.hash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CFMetadataInstance.resource.hash"))).intValue() != ((Number)(InvariantChecker.getValue("cfsInstance.metadata.resource.hash"))).intValue());
			}
		});
		invariants2796.add(new Invariant(2796, "CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset >= resultSetInstance.metadata.columnCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("CommitLog.instance.segmentManager.allocatingFrom.lastMarkerOffset"))).intValue() >= ((Number)(InvariantChecker.getValue("resultSetInstance.metadata.columnCount"))).intValue());
			}
		});
	}
	static {
installInv2796();	}
}
