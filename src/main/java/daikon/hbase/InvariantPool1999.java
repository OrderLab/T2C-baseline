package daikon.hbase;
import daikon.*;
import java.util.Set;
import java.util.ArrayList;
import java.util.List;
//this class is automatically generated by our scripts
public class InvariantPool1999{

	public static List<Invariant> invariants1999 = new ArrayList<>();

	public static void installInv1999(){
		invariants1999.add(new Invariant(1000, "HMasterInstance.activeMasterManager.activeMasterServerName.startcode > HMasterInstance.procedureExecutor.scheduler.nullPollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.startcode"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.nullPollCalls"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1001, "HMasterInstance.activeMasterManager.activeMasterServerName.startcode > HMasterInstance.procedureExecutor.scheduler.pollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.startcode"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.pollCalls"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1002, "HMasterInstance.activeMasterManager.activeMasterServerName.startcode > HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.startcode"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1003, "HMasterInstance.activeMasterManager.activeMasterServerName.startcode != HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.startcode"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1004, "HMasterInstance.activeMasterManager.activeMasterServerName.startcode < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.startcode"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1005, "HMasterInstance.activeMasterManager.activeMasterServerName.startcode > HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.startcode"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1006, "HMasterInstance.activeMasterManager.activeMasterServerName.startcode > HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.startcode"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1007, "HMasterInstance.activeMasterManager.activeMasterServerName.startcode > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.startcode"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1008, "HMasterInstance.activeMasterManager.activeMasterServerName.startcode > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.startcode"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1009, "HMasterInstance.activeMasterManager.activeMasterServerName.startcode > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.startcode"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1010, "HMasterInstance.activeMasterManager.activeMasterServerName.startcode > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.startcode"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1011, "HMasterInstance.activeMasterManager.activeMasterServerName.startcode > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.startcode"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1012, "HMasterInstance.activeMasterManager.activeMasterServerName.startcode > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.startcode"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1013, "HMasterInstance.activeMasterManager.master.compactionCheckFrequency != HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.compactionCheckFrequency"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1014, "HMasterInstance.activeMasterManager.master.compactionCheckFrequency != HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.compactionCheckFrequency"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1015, "HMasterInstance.activeMasterManager.master.compactionCheckFrequency != HMasterInstance.assignmentManager.ritChore.lastUpdate"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.compactionCheckFrequency"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1016, "HMasterInstance.activeMasterManager.master.compactionCheckFrequency > HMasterInstance.catalogJanitorChore.lastReport.count"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.compactionCheckFrequency"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.count"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1017, "HMasterInstance.activeMasterManager.master.compactionCheckFrequency < HMasterInstance.catalogJanitorChore.lastReport.now"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.compactionCheckFrequency"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.now"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1018, "HMasterInstance.activeMasterManager.master.compactionCheckFrequency > HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.compactionCheckFrequency"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1019, "HMasterInstance.activeMasterManager.master.compactionCheckFrequency < HMasterInstance.clusterStatusChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.compactionCheckFrequency"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1020, "HMasterInstance.activeMasterManager.master.compactionCheckFrequency < HMasterInstance.clusterStatusChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.compactionCheckFrequency"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1021, "HMasterInstance.activeMasterManager.master.compactionCheckFrequency > HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.compactionCheckFrequency"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1022, "HMasterInstance.activeMasterManager.master.compactionCheckFrequency != HMasterInstance.csm.splitLogManagerCoordination.timeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.compactionCheckFrequency"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1023, "HMasterInstance.activeMasterManager.master.compactionCheckFrequency > HMasterInstance.procedureExecutor.activeExecutorCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.compactionCheckFrequency"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1024, "HMasterInstance.activeMasterManager.master.compactionCheckFrequency != HMasterInstance.procedureExecutor.lastProcId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.compactionCheckFrequency"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.lastProcId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1025, "HMasterInstance.activeMasterManager.master.compactionCheckFrequency > HMasterInstance.procedureExecutor.scheduler.nullPollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.compactionCheckFrequency"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.nullPollCalls"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1026, "HMasterInstance.activeMasterManager.master.compactionCheckFrequency != HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.compactionCheckFrequency"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1027, "HMasterInstance.activeMasterManager.master.compactionCheckFrequency != HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.compactionCheckFrequency"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1028, "HMasterInstance.activeMasterManager.master.compactionCheckFrequency < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.compactionCheckFrequency"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1029, "HMasterInstance.activeMasterManager.master.compactionCheckFrequency != HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.compactionCheckFrequency"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1030, "HMasterInstance.activeMasterManager.master.compactionCheckFrequency != HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.compactionCheckFrequency"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1031, "HMasterInstance.activeMasterManager.master.compactionCheckFrequency > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.compactionCheckFrequency"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1032, "HMasterInstance.activeMasterManager.master.compactionCheckFrequency > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.compactionCheckFrequency"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1033, "HMasterInstance.activeMasterManager.master.compactionCheckFrequency > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.compactionCheckFrequency"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1034, "HMasterInstance.activeMasterManager.master.compactionCheckFrequency > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.compactionCheckFrequency"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1035, "HMasterInstance.activeMasterManager.master.compactionCheckFrequency > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.compactionCheckFrequency"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1036, "HMasterInstance.activeMasterManager.master.compactionCheckFrequency > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.compactionCheckFrequency"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1037, "HMasterInstance.activeMasterManager.master.masterActiveTime != HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterActiveTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1038, "HMasterInstance.activeMasterManager.master.masterActiveTime != HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterActiveTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1039, "HMasterInstance.activeMasterManager.master.masterActiveTime != HMasterInstance.assignmentManager.ritChore.lastUpdate"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterActiveTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1040, "HMasterInstance.activeMasterManager.master.masterActiveTime > HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterActiveTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1041, "HMasterInstance.activeMasterManager.master.masterActiveTime > HMasterInstance.catalogJanitorChore.lastReport.count"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterActiveTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.count"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1042, "HMasterInstance.activeMasterManager.master.masterActiveTime < HMasterInstance.catalogJanitorChore.lastReport.now"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterActiveTime"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.now"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1043, "HMasterInstance.activeMasterManager.master.masterActiveTime > HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterActiveTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1044, "HMasterInstance.activeMasterManager.master.masterActiveTime < HMasterInstance.clusterStatusChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterActiveTime"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1045, "HMasterInstance.activeMasterManager.master.masterActiveTime < HMasterInstance.clusterStatusChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterActiveTime"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1046, "HMasterInstance.activeMasterManager.master.masterActiveTime > HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterActiveTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1047, "HMasterInstance.activeMasterManager.master.masterActiveTime > HMasterInstance.csm.splitLogManagerCoordination.timeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterActiveTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1048, "HMasterInstance.activeMasterManager.master.masterActiveTime > HMasterInstance.procedureExecutor.activeExecutorCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterActiveTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1049, "HMasterInstance.activeMasterManager.master.masterActiveTime > HMasterInstance.procedureExecutor.lastProcId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterActiveTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.lastProcId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1050, "HMasterInstance.activeMasterManager.master.masterActiveTime > HMasterInstance.procedureExecutor.scheduler.nullPollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterActiveTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.nullPollCalls"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1051, "HMasterInstance.activeMasterManager.master.masterActiveTime > HMasterInstance.procedureExecutor.scheduler.pollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterActiveTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.pollCalls"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1052, "HMasterInstance.activeMasterManager.master.masterActiveTime > HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterActiveTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1053, "HMasterInstance.activeMasterManager.master.masterActiveTime != HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterActiveTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1054, "HMasterInstance.activeMasterManager.master.masterActiveTime < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterActiveTime"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1055, "HMasterInstance.activeMasterManager.master.masterActiveTime > HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterActiveTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1056, "HMasterInstance.activeMasterManager.master.masterActiveTime > HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterActiveTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1057, "HMasterInstance.activeMasterManager.master.masterActiveTime > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterActiveTime"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1058, "HMasterInstance.activeMasterManager.master.masterActiveTime > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterActiveTime"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1059, "HMasterInstance.activeMasterManager.master.masterActiveTime > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterActiveTime"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1060, "HMasterInstance.activeMasterManager.master.masterActiveTime > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterActiveTime"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1061, "HMasterInstance.activeMasterManager.master.masterActiveTime > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterActiveTime"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1062, "HMasterInstance.activeMasterManager.master.masterActiveTime > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterActiveTime"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1063, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.activeMasterManager.master.maxBalancingTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.maxBalancingTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1064, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime >= HMasterInstance.activeMasterManager.master.mergePlanCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1065, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.activeMasterManager.master.shortOperationTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.shortOperationTimeout"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1066, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime > HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1067, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime >= HMasterInstance.assignmentManager.deadMetricChore.childrenLatch"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.childrenLatch"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1068, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.asyncClusterConnection.connConf.maxKeyValueSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.maxKeyValueSize"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1069, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.asyncClusterConnection.connConf.maxRetries"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.maxRetries"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1070, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.asyncClusterConnection.connConf.metaOperationTimeoutNs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.metaOperationTimeoutNs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1071, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.asyncClusterConnection.connConf.metaScannerCaching"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.metaScannerCaching"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1072, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.asyncClusterConnection.connConf.pauseForCQTBENs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.pauseForCQTBENs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1073, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.asyncClusterConnection.connConf.primaryCallTimeoutNs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.primaryCallTimeoutNs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1074, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.asyncClusterConnection.connConf.primaryMetaScanTimeoutNs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.primaryMetaScanTimeoutNs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1075, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime < HMasterInstance.asyncClusterConnection.connConf.readRpcTimeoutNs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.readRpcTimeoutNs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1076, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.asyncClusterConnection.connConf.rpcTimeoutNs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.rpcTimeoutNs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1077, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.asyncClusterConnection.connConf.scannerCaching"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.scannerCaching"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1078, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.asyncClusterConnection.connConf.scannerMaxResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.scannerMaxResultSize"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1079, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime >= HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1080, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime > HMasterInstance.asyncClusterConnection.nonceGenerator.clientId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.nonceGenerator.clientId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1081, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.asyncClusterConnection.rpcClient.connectTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.connectTO"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1082, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.asyncClusterConnection.rpcClient.minIdleTimeBeforeClose"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.minIdleTimeBeforeClose"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1083, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.asyncClusterConnection.rpcClient.readTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.readTO"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1084, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.asyncClusterConnection.rpcClient.writeTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.writeTO"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1085, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime >= HMasterInstance.balancer.clusterStatus.masterInfoPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.balancer.clusterStatus.masterInfoPort"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1086, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.balancer.internalBalancer.MIN_SERVER_BALANCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.MIN_SERVER_BALANCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1087, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.balancer.internalBalancer.maxRunningTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.maxRunningTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1088, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.balancer.internalBalancer.maxSteps"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.maxSteps"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1089, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.balancer.internalBalancer.numRegionLoadsToRemember"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.numRegionLoadsToRemember"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1090, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.balancer.internalBalancer.stepsPerRegion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.stepsPerRegion"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1091, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime > HMasterInstance.balancerChore.FIVE_MINUTES_IN_NANOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.FIVE_MINUTES_IN_NANOS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1092, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime > HMasterInstance.balancerChore.choreServicer.MIN_CORE_POOL_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1093, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime < HMasterInstance.balancerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.lastLog"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1094, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime > HMasterInstance.balancerChore.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.period"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1095, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime > HMasterInstance.balancerChore.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1096, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime > HMasterInstance.balancerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1097, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime < HMasterInstance.catalogJanitorChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastLog"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1098, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime > HMasterInstance.catalogJanitorChore.lastReport.count"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.count"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1099, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.catalogJanitorChore.lastReport.now"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.now"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1100, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime > HMasterInstance.catalogJanitorChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1101, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.choreService.MIN_CORE_POOL_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.choreService.MIN_CORE_POOL_SIZE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1102, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime >= HMasterInstance.cleanerPool.cleanerLatch"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.cleanerPool.cleanerLatch"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1103, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.cleanerPool.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.cleanerPool.size"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1104, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime < HMasterInstance.clusterStatusChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.lastLog"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1105, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime > HMasterInstance.clusterStatusChore.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.period"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1106, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime > HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1107, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.clusterStatusChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1108, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.clusterStatusChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1109, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.csm.splitLogWorkerCoordination.checkInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.checkInterval"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1110, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime > HMasterInstance.dataFs.unspecifiedStoragePolicyId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.dataFs.unspecifiedStoragePolicyId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1111, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime < HMasterInstance.hbckChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.hbckChore.lastLog"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1112, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime > HMasterInstance.hbckChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.hbckChore.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1113, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.hfileCleaner.AVAIL_PROCESSORS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.AVAIL_PROCESSORS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1114, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.hfileCleaner.FIVE_MINUTES_IN_NANOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.FIVE_MINUTES_IN_NANOS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1115, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime > HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1116, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime < HMasterInstance.hfileCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1117, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.hfileCleaner.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.period"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1118, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.hfileCleaner.pool.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.pool.size"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1119, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime > HMasterInstance.hfileCleaner.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1120, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.hfileCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1121, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime < HMasterInstance.logCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1122, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.logCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1123, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1124, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1125, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime > HMasterInstance.mobFileCleanerChore.initialDelay"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.initialDelay"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1126, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime < HMasterInstance.mobFileCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1127, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime < HMasterInstance.mobFileCleanerChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1128, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime > HMasterInstance.mobFileCompactionChore.initialDelay"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.initialDelay"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1129, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime < HMasterInstance.mobFileCompactionChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1130, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime < HMasterInstance.mobFileCompactionChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1131, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.nonceManager.conflictWaitIterationMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.conflictWaitIterationMs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1132, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.nonceManager.deleteNonceGracePeriod"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.deleteNonceGracePeriod"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1133, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1134, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.normalizer.masterRpcServices.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.rpcTimeout"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1135, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.normalizer.minRegionCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.minRegionCount"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1136, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime < HMasterInstance.normalizerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1137, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.procedureExecutor.corePoolSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.corePoolSize"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1138, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.procedureExecutor.maxPoolSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.maxPoolSize"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1139, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime >= HMasterInstance.procedureExecutor.scheduler.nullPollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.nullPollCalls"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1140, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.procedureExecutor.store.REGION_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.REGION_ID"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1141, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.procedureStore.REGION_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.REGION_ID"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1142, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.procedureStore.TABLE_NAME.hashCode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.TABLE_NAME.hashCode"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1143, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1144, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1145, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime < HMasterInstance.procedureStore.cleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1146, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.procedureStore.cleaner.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.period"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1147, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.procedureStore.cleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1148, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.procedureStore.cleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1149, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime >= HMasterInstance.procedureStore.cleanerPool.cleanerLatch"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1150, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.procedureStore.cleanerPool.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.size"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1151, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1152, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.procedureStore.numThreads"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.numThreads"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1153, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.procedureStore.region.DEEP_OVERHEAD"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.DEEP_OVERHEAD"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1154, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.procedureStore.region.FIXED_OVERHEAD"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.FIXED_OVERHEAD"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1155, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1156, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1157, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.procedureStore.region.blockingMemStoreSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.blockingMemStoreSize"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1158, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime > HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1159, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1160, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime >= HMasterInstance.procedureStore.region.majorInProgress"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1161, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.procedureStore.region.maxBusyWaitDuration"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitDuration"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1162, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1163, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime < HMasterInstance.procedureStore.region.timestampSlop"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.timestampSlop"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1164, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.procedureStore.walFactory.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walFactory.timeoutMillis"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1165, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1166, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1167, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.procedureStore.walRoller.threadWakeFrequency"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.threadWakeFrequency"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1168, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.regionServerAccounting.globalMemStoreLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimit"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1169, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1170, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1171, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1172, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1173, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime > HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1174, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime > HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1175, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime > HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1176, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime > HMasterInstance.rpcClient.connectTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connectTO"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1177, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime > HMasterInstance.rpcClient.connections.poolMaxSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1178, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime > HMasterInstance.rpcClient.failedServers.latestExpiry"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1179, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime > HMasterInstance.rpcClient.failedServers.recheckServersTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.recheckServersTimeout"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1180, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime > HMasterInstance.rpcClient.failureSleep"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failureSleep"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1181, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime > HMasterInstance.rpcClient.maxConcurrentCallsPerServer"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.maxConcurrentCallsPerServer"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1182, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime > HMasterInstance.rpcClient.minIdleTimeBeforeClose"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.minIdleTimeBeforeClose"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1183, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime > HMasterInstance.rpcClient.readTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.readTO"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1184, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime > HMasterInstance.rpcClient.writeTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.writeTO"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1185, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.rpcServices.maxScannerResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.maxScannerResultSize"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1186, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1187, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.rpcServices.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcTimeout"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1188, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime > HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1189, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.rsFatals.maxSizeBytes"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.maxSizeBytes"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1190, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1191, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime > HMasterInstance.serverManager.flushedSeqIdFlusher.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.period"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1192, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime > HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1193, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1194, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.serverManager.maxSkew"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.maxSkew"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1195, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1196, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.snapshotCleanerChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1197, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.snapshotManager.coordinator.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotManager.coordinator.timeoutMillis"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1198, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1199, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1200, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1201, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime >= daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1202, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime >= daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])))-1);
			}
		});
		invariants1999.add(new Invariant(1203, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime >= daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1204, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime >= daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0])))-1);
			}
		});
		invariants1999.add(new Invariant(1205, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0])))-1);
			}
		});
		invariants1999.add(new Invariant(1206, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime >= daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0])))-1);
			}
		});
		invariants1999.add(new Invariant(1207, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime != daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1208, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime >= daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])))-1);
			}
		});
		invariants1999.add(new Invariant(1209, "HMasterInstance.activeMasterManager.master.maxBalancingTime != HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.maxBalancingTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1210, "HMasterInstance.activeMasterManager.master.maxBalancingTime != HMasterInstance.assignmentManager.ritChore.lastUpdate"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.maxBalancingTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1211, "HMasterInstance.activeMasterManager.master.maxBalancingTime > HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.maxBalancingTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1212, "HMasterInstance.activeMasterManager.master.maxBalancingTime > HMasterInstance.catalogJanitorChore.lastReport.count"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.maxBalancingTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.count"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1213, "HMasterInstance.activeMasterManager.master.maxBalancingTime < HMasterInstance.catalogJanitorChore.lastReport.now"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.maxBalancingTime"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.now"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1214, "HMasterInstance.activeMasterManager.master.maxBalancingTime > HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.maxBalancingTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1215, "HMasterInstance.activeMasterManager.master.maxBalancingTime < HMasterInstance.clusterStatusChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.maxBalancingTime"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1216, "HMasterInstance.activeMasterManager.master.maxBalancingTime < HMasterInstance.clusterStatusChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.maxBalancingTime"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1217, "HMasterInstance.activeMasterManager.master.maxBalancingTime > HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.maxBalancingTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1218, "HMasterInstance.activeMasterManager.master.maxBalancingTime > HMasterInstance.csm.splitLogManagerCoordination.timeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.maxBalancingTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1219, "HMasterInstance.activeMasterManager.master.maxBalancingTime > HMasterInstance.procedureExecutor.activeExecutorCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.maxBalancingTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1220, "HMasterInstance.activeMasterManager.master.maxBalancingTime > HMasterInstance.procedureExecutor.lastProcId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.maxBalancingTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.lastProcId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1221, "HMasterInstance.activeMasterManager.master.maxBalancingTime > HMasterInstance.procedureExecutor.scheduler.nullPollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.maxBalancingTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.nullPollCalls"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1222, "HMasterInstance.activeMasterManager.master.maxBalancingTime > HMasterInstance.procedureExecutor.scheduler.pollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.maxBalancingTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.pollCalls"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1223, "HMasterInstance.activeMasterManager.master.maxBalancingTime > HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.maxBalancingTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1224, "HMasterInstance.activeMasterManager.master.maxBalancingTime != HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.maxBalancingTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1225, "HMasterInstance.activeMasterManager.master.maxBalancingTime < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.maxBalancingTime"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1226, "HMasterInstance.activeMasterManager.master.maxBalancingTime > HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.maxBalancingTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1227, "HMasterInstance.activeMasterManager.master.maxBalancingTime > HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.maxBalancingTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1228, "HMasterInstance.activeMasterManager.master.maxBalancingTime > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.maxBalancingTime"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1229, "HMasterInstance.activeMasterManager.master.maxBalancingTime > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.maxBalancingTime"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1230, "HMasterInstance.activeMasterManager.master.maxBalancingTime > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.maxBalancingTime"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1231, "HMasterInstance.activeMasterManager.master.maxBalancingTime > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.maxBalancingTime"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1232, "HMasterInstance.activeMasterManager.master.maxBalancingTime > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.maxBalancingTime"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1233, "HMasterInstance.activeMasterManager.master.maxBalancingTime > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.maxBalancingTime"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1234, "HMasterInstance.activeMasterManager.master.mergePlanCount <= HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1235, "HMasterInstance.activeMasterManager.master.mergePlanCount <= HMasterInstance.assignmentManager.ritChore.lastUpdate"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1236, "HMasterInstance.activeMasterManager.master.mergePlanCount <= HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1237, "HMasterInstance.activeMasterManager.master.mergePlanCount <= HMasterInstance.catalogJanitorChore.lastReport.count"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.count"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1238, "HMasterInstance.activeMasterManager.master.mergePlanCount < HMasterInstance.catalogJanitorChore.lastReport.now"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.now"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1239, "HMasterInstance.activeMasterManager.master.mergePlanCount < HMasterInstance.clusterStatusChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1240, "HMasterInstance.activeMasterManager.master.mergePlanCount < HMasterInstance.clusterStatusChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1241, "HMasterInstance.activeMasterManager.master.mergePlanCount <= HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1242, "HMasterInstance.activeMasterManager.master.mergePlanCount <= HMasterInstance.csm.splitLogManagerCoordination.timeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1243, "HMasterInstance.activeMasterManager.master.mergePlanCount <= HMasterInstance.procedureExecutor.activeExecutorCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1244, "HMasterInstance.activeMasterManager.master.mergePlanCount <= HMasterInstance.procedureExecutor.scheduler.nullPollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.nullPollCalls"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1245, "HMasterInstance.activeMasterManager.master.mergePlanCount <= HMasterInstance.procedureExecutor.scheduler.pollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.pollCalls"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1246, "HMasterInstance.activeMasterManager.master.mergePlanCount <= HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1247, "HMasterInstance.activeMasterManager.master.mergePlanCount != HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1248, "HMasterInstance.activeMasterManager.master.mergePlanCount < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1249, "HMasterInstance.activeMasterManager.master.mergePlanCount <= HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1250, "HMasterInstance.activeMasterManager.master.mergePlanCount <= HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1251, "HMasterInstance.activeMasterManager.master.mergePlanCount <= daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1252, "HMasterInstance.activeMasterManager.master.mergePlanCount >= daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])))-1);
			}
		});
		invariants1999.add(new Invariant(1253, "HMasterInstance.activeMasterManager.master.mergePlanCount <= daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1254, "HMasterInstance.activeMasterManager.master.mergePlanCount <= daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1255, "HMasterInstance.activeMasterManager.master.mergePlanCount <= daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1256, "HMasterInstance.activeMasterManager.master.mergePlanCount <= daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1257, "HMasterInstance.activeMasterManager.master.mergePlanCount >= daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0])))-1);
			}
		});
		invariants1999.add(new Invariant(1258, "HMasterInstance.activeMasterManager.master.shortOperationTimeout != HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.shortOperationTimeout"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1259, "HMasterInstance.activeMasterManager.master.shortOperationTimeout != HMasterInstance.assignmentManager.ritChore.lastUpdate"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.shortOperationTimeout"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1260, "HMasterInstance.activeMasterManager.master.shortOperationTimeout > HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.shortOperationTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1261, "HMasterInstance.activeMasterManager.master.shortOperationTimeout > HMasterInstance.catalogJanitorChore.lastReport.count"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.shortOperationTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.count"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1262, "HMasterInstance.activeMasterManager.master.shortOperationTimeout < HMasterInstance.catalogJanitorChore.lastReport.now"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.shortOperationTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.now"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1263, "HMasterInstance.activeMasterManager.master.shortOperationTimeout > HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.shortOperationTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1264, "HMasterInstance.activeMasterManager.master.shortOperationTimeout < HMasterInstance.clusterStatusChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.shortOperationTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1265, "HMasterInstance.activeMasterManager.master.shortOperationTimeout < HMasterInstance.clusterStatusChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.shortOperationTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1266, "HMasterInstance.activeMasterManager.master.shortOperationTimeout > HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.shortOperationTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1267, "HMasterInstance.activeMasterManager.master.shortOperationTimeout != HMasterInstance.csm.splitLogManagerCoordination.timeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.shortOperationTimeout"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1268, "HMasterInstance.activeMasterManager.master.shortOperationTimeout > HMasterInstance.procedureExecutor.activeExecutorCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.shortOperationTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1269, "HMasterInstance.activeMasterManager.master.shortOperationTimeout > HMasterInstance.procedureExecutor.lastProcId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.shortOperationTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.lastProcId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1270, "HMasterInstance.activeMasterManager.master.shortOperationTimeout > HMasterInstance.procedureExecutor.scheduler.nullPollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.shortOperationTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.nullPollCalls"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1271, "HMasterInstance.activeMasterManager.master.shortOperationTimeout > HMasterInstance.procedureExecutor.scheduler.pollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.shortOperationTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.pollCalls"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1272, "HMasterInstance.activeMasterManager.master.shortOperationTimeout > HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.shortOperationTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1273, "HMasterInstance.activeMasterManager.master.shortOperationTimeout != HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.shortOperationTimeout"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1274, "HMasterInstance.activeMasterManager.master.shortOperationTimeout < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.shortOperationTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1275, "HMasterInstance.activeMasterManager.master.shortOperationTimeout > HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.shortOperationTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1276, "HMasterInstance.activeMasterManager.master.shortOperationTimeout > HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.shortOperationTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1277, "HMasterInstance.activeMasterManager.master.shortOperationTimeout > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.shortOperationTimeout"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1278, "HMasterInstance.activeMasterManager.master.shortOperationTimeout > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.shortOperationTimeout"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1279, "HMasterInstance.activeMasterManager.master.shortOperationTimeout > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.shortOperationTimeout"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1280, "HMasterInstance.activeMasterManager.master.shortOperationTimeout > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.shortOperationTimeout"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1281, "HMasterInstance.activeMasterManager.master.shortOperationTimeout > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.shortOperationTimeout"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1282, "HMasterInstance.activeMasterManager.master.shortOperationTimeout > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.shortOperationTimeout"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1283, "daikon.Quant.subsetOf(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE, HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.subsetOf((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0])), (Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1284, "daikon.Quant.subsetOf(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE, HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.subsetOf((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0])), (Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1285, "daikon.Quant.subsetOf(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE, HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.subsetOf((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0])), (Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1286, "daikon.Quant.subsetOf(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE, HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.subsetOf((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0])), (Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1287, "daikon.Quant.subsetOf(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE, HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.subsetOf((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0])), (Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1288, "daikon.Quant.subsetOf(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE, HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.subsetOf((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0])), (Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1289, "HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID < HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1290, "HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID < HMasterInstance.assignmentManager.ritChore.lastUpdate"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1291, "HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID < HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1292, "HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID < HMasterInstance.catalogJanitorChore.lastReport.count"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.count"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1293, "HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID < HMasterInstance.catalogJanitorChore.lastReport.now"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.now"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1294, "HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID <= HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1295, "HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID < HMasterInstance.clusterStatusChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1296, "HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID < HMasterInstance.clusterStatusChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1297, "HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID < HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1298, "HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID < HMasterInstance.csm.splitLogManagerCoordination.timeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1299, "HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID < HMasterInstance.procedureExecutor.activeExecutorCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1300, "HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID < HMasterInstance.procedureExecutor.lastProcId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.lastProcId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1301, "HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID < HMasterInstance.procedureExecutor.scheduler.nullPollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.nullPollCalls"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1302, "HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID < HMasterInstance.procedureExecutor.scheduler.pollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.pollCalls"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1303, "HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID < HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1304, "HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID <= HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1305, "HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1306, "HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID < HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1307, "HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID < HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1308, "HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID <= daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])))-1);
			}
		});
		invariants1999.add(new Invariant(1309, "HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID <= daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1);
			}
		});
		invariants1999.add(new Invariant(1310, "HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID <= daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0])))-1);
			}
		});
		invariants1999.add(new Invariant(1311, "HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID <= daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0])))-1);
			}
		});
		invariants1999.add(new Invariant(1312, "HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID <= daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0])))-1);
			}
		});
		invariants1999.add(new Invariant(1313, "HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID < daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID"))).intValue() < daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])))-1);
			}
		});
		invariants1999.add(new Invariant(1314, "HMasterInstance.assignmentManager.deadMetricChore.childrenLatch <= HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.childrenLatch"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1315, "HMasterInstance.assignmentManager.deadMetricChore.childrenLatch <= HMasterInstance.assignmentManager.ritChore.lastUpdate"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.childrenLatch"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1316, "HMasterInstance.assignmentManager.deadMetricChore.childrenLatch <= HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.childrenLatch"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1317, "HMasterInstance.assignmentManager.deadMetricChore.childrenLatch <= HMasterInstance.catalogJanitorChore.lastReport.count"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.childrenLatch"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.count"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1318, "HMasterInstance.assignmentManager.deadMetricChore.childrenLatch < HMasterInstance.catalogJanitorChore.lastReport.now"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.childrenLatch"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.now"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1319, "HMasterInstance.assignmentManager.deadMetricChore.childrenLatch < HMasterInstance.clusterStatusChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.childrenLatch"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1320, "HMasterInstance.assignmentManager.deadMetricChore.childrenLatch < HMasterInstance.clusterStatusChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.childrenLatch"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1321, "HMasterInstance.assignmentManager.deadMetricChore.childrenLatch < HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.childrenLatch"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1322, "HMasterInstance.assignmentManager.deadMetricChore.childrenLatch < HMasterInstance.csm.splitLogManagerCoordination.timeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.childrenLatch"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1323, "HMasterInstance.assignmentManager.deadMetricChore.childrenLatch <= HMasterInstance.procedureExecutor.activeExecutorCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.childrenLatch"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1324, "HMasterInstance.assignmentManager.deadMetricChore.childrenLatch <= HMasterInstance.procedureExecutor.lastProcId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.childrenLatch"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.lastProcId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1325, "HMasterInstance.assignmentManager.deadMetricChore.childrenLatch <= HMasterInstance.procedureExecutor.scheduler.nullPollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.childrenLatch"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.nullPollCalls"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1326, "HMasterInstance.assignmentManager.deadMetricChore.childrenLatch <= HMasterInstance.procedureExecutor.scheduler.pollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.childrenLatch"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.pollCalls"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1327, "HMasterInstance.assignmentManager.deadMetricChore.childrenLatch <= HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.childrenLatch"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1328, "HMasterInstance.assignmentManager.deadMetricChore.childrenLatch != HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.childrenLatch"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1329, "HMasterInstance.assignmentManager.deadMetricChore.childrenLatch < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.childrenLatch"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1330, "HMasterInstance.assignmentManager.deadMetricChore.childrenLatch <= HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.childrenLatch"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1331, "HMasterInstance.assignmentManager.deadMetricChore.childrenLatch % HMasterInstance.tableDescriptors.invocations == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.childrenLatch"))).intValue() % ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue() == 0);
			}
		});
		invariants1999.add(new Invariant(1332, "HMasterInstance.assignmentManager.deadMetricChore.childrenLatch < HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.childrenLatch"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1333, "HMasterInstance.assignmentManager.deadMetricChore.childrenLatch <= daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.childrenLatch"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1334, "HMasterInstance.assignmentManager.deadMetricChore.childrenLatch >= daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.childrenLatch"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])))-1);
			}
		});
		invariants1999.add(new Invariant(1335, "HMasterInstance.assignmentManager.deadMetricChore.childrenLatch <= daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.childrenLatch"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1336, "HMasterInstance.assignmentManager.deadMetricChore.childrenLatch <= daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.childrenLatch"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1337, "HMasterInstance.assignmentManager.deadMetricChore.childrenLatch <= daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.childrenLatch"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1338, "HMasterInstance.assignmentManager.deadMetricChore.childrenLatch <= daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.childrenLatch"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1339, "HMasterInstance.assignmentManager.deadMetricChore.childrenLatch >= daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.childrenLatch"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0])))-1);
			}
		});
		invariants1999.add(new Invariant(1340, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate <= HMasterInstance.assignmentManager.ritChore.lastUpdate"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1341, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.asyncClusterConnection.connConf.maxKeyValueSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.maxKeyValueSize"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1342, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.asyncClusterConnection.connConf.maxRetries"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.maxRetries"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1343, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.asyncClusterConnection.connConf.metaOperationTimeoutNs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.metaOperationTimeoutNs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1344, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.asyncClusterConnection.connConf.metaScannerCaching"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.metaScannerCaching"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1345, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.asyncClusterConnection.connConf.pauseForCQTBENs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.pauseForCQTBENs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1346, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.asyncClusterConnection.connConf.primaryCallTimeoutNs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.primaryCallTimeoutNs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1347, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.asyncClusterConnection.connConf.primaryMetaScanTimeoutNs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.primaryMetaScanTimeoutNs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1348, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate < HMasterInstance.asyncClusterConnection.connConf.readRpcTimeoutNs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.readRpcTimeoutNs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1349, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.asyncClusterConnection.connConf.rpcTimeoutNs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.rpcTimeoutNs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1350, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.asyncClusterConnection.connConf.scannerCaching"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.scannerCaching"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1351, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.asyncClusterConnection.connConf.scannerMaxResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.scannerMaxResultSize"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1352, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate >= HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1353, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate > HMasterInstance.asyncClusterConnection.nonceGenerator.clientId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.nonceGenerator.clientId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1354, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.asyncClusterConnection.rpcClient.connectTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.connectTO"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1355, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.asyncClusterConnection.rpcClient.minIdleTimeBeforeClose"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.minIdleTimeBeforeClose"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1356, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.asyncClusterConnection.rpcClient.readTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.readTO"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1357, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.asyncClusterConnection.rpcClient.writeTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.writeTO"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1358, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate >= HMasterInstance.balancer.clusterStatus.masterInfoPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.balancer.clusterStatus.masterInfoPort"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1359, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.balancer.internalBalancer.MIN_SERVER_BALANCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.MIN_SERVER_BALANCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1360, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.balancer.internalBalancer.maxRunningTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.maxRunningTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1361, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.balancer.internalBalancer.maxSteps"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.maxSteps"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1362, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.balancer.internalBalancer.numRegionLoadsToRemember"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.numRegionLoadsToRemember"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1363, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.balancer.internalBalancer.stepsPerRegion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.stepsPerRegion"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1364, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate > HMasterInstance.balancerChore.FIVE_MINUTES_IN_NANOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.FIVE_MINUTES_IN_NANOS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1365, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate > HMasterInstance.balancerChore.choreServicer.MIN_CORE_POOL_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1366, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate < HMasterInstance.balancerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.lastLog"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1367, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate > HMasterInstance.balancerChore.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.period"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1368, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate > HMasterInstance.balancerChore.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1369, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.balancerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1370, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate < HMasterInstance.catalogJanitorChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastLog"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1371, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate > HMasterInstance.catalogJanitorChore.lastReport.count"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.count"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1372, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.catalogJanitorChore.lastReport.now"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.now"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1373, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.catalogJanitorChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1374, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.choreService.MIN_CORE_POOL_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.choreService.MIN_CORE_POOL_SIZE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1375, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate >= HMasterInstance.cleanerPool.cleanerLatch"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.cleanerPool.cleanerLatch"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1376, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.cleanerPool.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.cleanerPool.size"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1377, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate < HMasterInstance.clusterStatusChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.lastLog"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1378, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate > HMasterInstance.clusterStatusChore.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.period"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1379, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate > HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1380, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.clusterStatusChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1381, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.clusterStatusChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1382, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1383, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.csm.splitLogManagerCoordination.timeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1384, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.csm.splitLogWorkerCoordination.checkInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.checkInterval"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1385, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate > HMasterInstance.dataFs.unspecifiedStoragePolicyId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.dataFs.unspecifiedStoragePolicyId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1386, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate < HMasterInstance.hbckChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.hbckChore.lastLog"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1387, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.hbckChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.hbckChore.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1388, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.hfileCleaner.AVAIL_PROCESSORS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.AVAIL_PROCESSORS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1389, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.hfileCleaner.FIVE_MINUTES_IN_NANOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.FIVE_MINUTES_IN_NANOS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1390, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate > HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1391, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate < HMasterInstance.hfileCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1392, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.hfileCleaner.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.period"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1393, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.hfileCleaner.pool.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.pool.size"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1394, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate > HMasterInstance.hfileCleaner.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1395, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.hfileCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1396, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate < HMasterInstance.logCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1397, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.logCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1398, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1399, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1400, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate > HMasterInstance.mobFileCleanerChore.initialDelay"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.initialDelay"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1401, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate < HMasterInstance.mobFileCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1402, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.mobFileCleanerChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1403, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate > HMasterInstance.mobFileCompactionChore.initialDelay"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.initialDelay"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1404, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate < HMasterInstance.mobFileCompactionChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1405, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.mobFileCompactionChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1406, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.nonceManager.conflictWaitIterationMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.conflictWaitIterationMs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1407, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.nonceManager.deleteNonceGracePeriod"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.deleteNonceGracePeriod"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1408, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1409, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.normalizer.masterRpcServices.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.rpcTimeout"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1410, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.normalizer.minRegionCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.minRegionCount"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1411, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate < HMasterInstance.normalizerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1412, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.procedureExecutor.corePoolSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.corePoolSize"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1413, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.procedureExecutor.maxPoolSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.maxPoolSize"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1414, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate >= HMasterInstance.procedureExecutor.scheduler.nullPollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.nullPollCalls"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1415, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.procedureExecutor.store.REGION_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.REGION_ID"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1416, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.procedureStore.REGION_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.REGION_ID"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1417, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.procedureStore.TABLE_NAME.hashCode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.TABLE_NAME.hashCode"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1418, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1419, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1420, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate < HMasterInstance.procedureStore.cleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1421, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.procedureStore.cleaner.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.period"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1422, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.procedureStore.cleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1423, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.procedureStore.cleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1424, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate >= HMasterInstance.procedureStore.cleanerPool.cleanerLatch"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1425, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.procedureStore.cleanerPool.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.size"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1426, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1427, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.procedureStore.numThreads"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.numThreads"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1428, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.procedureStore.region.DEEP_OVERHEAD"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.DEEP_OVERHEAD"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1429, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.procedureStore.region.FIXED_OVERHEAD"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.FIXED_OVERHEAD"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1430, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1431, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1432, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.procedureStore.region.blockingMemStoreSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.blockingMemStoreSize"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1433, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate > HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1434, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1435, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate >= HMasterInstance.procedureStore.region.majorInProgress"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1436, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.procedureStore.region.maxBusyWaitDuration"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitDuration"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1437, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1438, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate < HMasterInstance.procedureStore.region.timestampSlop"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.timestampSlop"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1439, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.procedureStore.walFactory.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walFactory.timeoutMillis"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1440, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1441, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1442, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.procedureStore.walRoller.threadWakeFrequency"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.threadWakeFrequency"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1443, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.regionServerAccounting.globalMemStoreLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimit"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1444, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1445, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1446, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1447, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1448, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate > HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1449, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate > HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1450, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate > HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1451, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate > HMasterInstance.rpcClient.connectTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connectTO"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1452, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate > HMasterInstance.rpcClient.connections.poolMaxSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1453, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate > HMasterInstance.rpcClient.failedServers.latestExpiry"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1454, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate > HMasterInstance.rpcClient.failedServers.recheckServersTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.recheckServersTimeout"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1455, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate > HMasterInstance.rpcClient.failureSleep"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failureSleep"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1456, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate > HMasterInstance.rpcClient.maxConcurrentCallsPerServer"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.maxConcurrentCallsPerServer"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1457, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate > HMasterInstance.rpcClient.minIdleTimeBeforeClose"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.minIdleTimeBeforeClose"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1458, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate > HMasterInstance.rpcClient.readTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.readTO"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1459, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate > HMasterInstance.rpcClient.writeTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.writeTO"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1460, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.rpcServices.maxScannerResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.maxScannerResultSize"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1461, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1462, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.rpcServices.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcTimeout"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1463, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate > HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1464, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.rsFatals.maxSizeBytes"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.maxSizeBytes"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1465, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1466, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate > HMasterInstance.serverManager.flushedSeqIdFlusher.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.period"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1467, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1468, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1469, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.serverManager.maxSkew"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.maxSkew"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1470, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1471, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.snapshotCleanerChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1472, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.snapshotManager.coordinator.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotManager.coordinator.timeoutMillis"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1473, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1474, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1475, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1476, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1477, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate >= daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1478, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate >= daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])))-1);
			}
		});
		invariants1999.add(new Invariant(1479, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate >= daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1480, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate >= daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0])))-1);
			}
		});
		invariants1999.add(new Invariant(1481, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0])))-1);
			}
		});
		invariants1999.add(new Invariant(1482, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate >= daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0])))-1);
			}
		});
		invariants1999.add(new Invariant(1483, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate != daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1484, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate % daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE) == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() % daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))) == 0);
			}
		});
		invariants1999.add(new Invariant(1485, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate >= daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])))-1);
			}
		});
		invariants1999.add(new Invariant(1486, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.asyncClusterConnection.connConf.maxKeyValueSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.maxKeyValueSize"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1487, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.asyncClusterConnection.connConf.maxRetries"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.maxRetries"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1488, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.asyncClusterConnection.connConf.metaOperationTimeoutNs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.metaOperationTimeoutNs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1489, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.asyncClusterConnection.connConf.metaScannerCaching"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.metaScannerCaching"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1490, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.asyncClusterConnection.connConf.pauseForCQTBENs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.pauseForCQTBENs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1491, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.asyncClusterConnection.connConf.primaryCallTimeoutNs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.primaryCallTimeoutNs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1492, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.asyncClusterConnection.connConf.primaryMetaScanTimeoutNs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.primaryMetaScanTimeoutNs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1493, "HMasterInstance.assignmentManager.ritChore.lastUpdate < HMasterInstance.asyncClusterConnection.connConf.readRpcTimeoutNs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.readRpcTimeoutNs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1494, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.asyncClusterConnection.connConf.rpcTimeoutNs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.rpcTimeoutNs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1495, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.asyncClusterConnection.connConf.scannerCaching"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.scannerCaching"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1496, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.asyncClusterConnection.connConf.scannerMaxResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.scannerMaxResultSize"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1497, "HMasterInstance.assignmentManager.ritChore.lastUpdate >= HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1498, "HMasterInstance.assignmentManager.ritChore.lastUpdate > HMasterInstance.asyncClusterConnection.nonceGenerator.clientId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.nonceGenerator.clientId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1499, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.asyncClusterConnection.rpcClient.connectTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.connectTO"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1500, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.asyncClusterConnection.rpcClient.minIdleTimeBeforeClose"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.minIdleTimeBeforeClose"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1501, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.asyncClusterConnection.rpcClient.readTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.readTO"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1502, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.asyncClusterConnection.rpcClient.writeTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.writeTO"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1503, "HMasterInstance.assignmentManager.ritChore.lastUpdate >= HMasterInstance.balancer.clusterStatus.masterInfoPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.balancer.clusterStatus.masterInfoPort"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1504, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.balancer.internalBalancer.MIN_SERVER_BALANCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.MIN_SERVER_BALANCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1505, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.balancer.internalBalancer.maxRunningTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.maxRunningTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1506, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.balancer.internalBalancer.maxSteps"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.maxSteps"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1507, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.balancer.internalBalancer.numRegionLoadsToRemember"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.numRegionLoadsToRemember"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1508, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.balancer.internalBalancer.stepsPerRegion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.stepsPerRegion"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1509, "HMasterInstance.assignmentManager.ritChore.lastUpdate > HMasterInstance.balancerChore.FIVE_MINUTES_IN_NANOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.FIVE_MINUTES_IN_NANOS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1510, "HMasterInstance.assignmentManager.ritChore.lastUpdate > HMasterInstance.balancerChore.choreServicer.MIN_CORE_POOL_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1511, "HMasterInstance.assignmentManager.ritChore.lastUpdate < HMasterInstance.balancerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.lastLog"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1512, "HMasterInstance.assignmentManager.ritChore.lastUpdate > HMasterInstance.balancerChore.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.period"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1513, "HMasterInstance.assignmentManager.ritChore.lastUpdate > HMasterInstance.balancerChore.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1514, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.balancerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1515, "HMasterInstance.assignmentManager.ritChore.lastUpdate < HMasterInstance.catalogJanitorChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastLog"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1516, "HMasterInstance.assignmentManager.ritChore.lastUpdate > HMasterInstance.catalogJanitorChore.lastReport.count"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.count"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1517, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.catalogJanitorChore.lastReport.now"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.now"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1518, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.catalogJanitorChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1519, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.choreService.MIN_CORE_POOL_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.choreService.MIN_CORE_POOL_SIZE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1520, "HMasterInstance.assignmentManager.ritChore.lastUpdate >= HMasterInstance.cleanerPool.cleanerLatch"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.cleanerPool.cleanerLatch"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1521, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.cleanerPool.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.cleanerPool.size"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1522, "HMasterInstance.assignmentManager.ritChore.lastUpdate < HMasterInstance.clusterStatusChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.lastLog"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1523, "HMasterInstance.assignmentManager.ritChore.lastUpdate > HMasterInstance.clusterStatusChore.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.period"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1524, "HMasterInstance.assignmentManager.ritChore.lastUpdate > HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1525, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.clusterStatusChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1526, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.clusterStatusChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1527, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1528, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.csm.splitLogManagerCoordination.timeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1529, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.csm.splitLogWorkerCoordination.checkInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.checkInterval"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1530, "HMasterInstance.assignmentManager.ritChore.lastUpdate > HMasterInstance.dataFs.unspecifiedStoragePolicyId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.dataFs.unspecifiedStoragePolicyId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1531, "HMasterInstance.assignmentManager.ritChore.lastUpdate < HMasterInstance.hbckChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.hbckChore.lastLog"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1532, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.hbckChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.hbckChore.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1533, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.hfileCleaner.AVAIL_PROCESSORS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.AVAIL_PROCESSORS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1534, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.hfileCleaner.FIVE_MINUTES_IN_NANOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.FIVE_MINUTES_IN_NANOS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1535, "HMasterInstance.assignmentManager.ritChore.lastUpdate > HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1536, "HMasterInstance.assignmentManager.ritChore.lastUpdate < HMasterInstance.hfileCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1537, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.hfileCleaner.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.period"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1538, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.hfileCleaner.pool.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.pool.size"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1539, "HMasterInstance.assignmentManager.ritChore.lastUpdate > HMasterInstance.hfileCleaner.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1540, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.hfileCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1541, "HMasterInstance.assignmentManager.ritChore.lastUpdate < HMasterInstance.logCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1542, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.logCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1543, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1544, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1545, "HMasterInstance.assignmentManager.ritChore.lastUpdate > HMasterInstance.mobFileCleanerChore.initialDelay"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.initialDelay"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1546, "HMasterInstance.assignmentManager.ritChore.lastUpdate < HMasterInstance.mobFileCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1547, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.mobFileCleanerChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1548, "HMasterInstance.assignmentManager.ritChore.lastUpdate > HMasterInstance.mobFileCompactionChore.initialDelay"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.initialDelay"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1549, "HMasterInstance.assignmentManager.ritChore.lastUpdate < HMasterInstance.mobFileCompactionChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1550, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.mobFileCompactionChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1551, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.nonceManager.conflictWaitIterationMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.conflictWaitIterationMs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1552, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.nonceManager.deleteNonceGracePeriod"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.deleteNonceGracePeriod"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1553, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1554, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.normalizer.masterRpcServices.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.rpcTimeout"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1555, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.normalizer.minRegionCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.minRegionCount"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1556, "HMasterInstance.assignmentManager.ritChore.lastUpdate < HMasterInstance.normalizerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1557, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.procedureExecutor.corePoolSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.corePoolSize"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1558, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.procedureExecutor.maxPoolSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.maxPoolSize"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1559, "HMasterInstance.assignmentManager.ritChore.lastUpdate >= HMasterInstance.procedureExecutor.scheduler.nullPollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.nullPollCalls"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1560, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.procedureExecutor.store.REGION_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.REGION_ID"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1561, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.procedureStore.REGION_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.REGION_ID"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1562, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.procedureStore.TABLE_NAME.hashCode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.TABLE_NAME.hashCode"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1563, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1564, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1565, "HMasterInstance.assignmentManager.ritChore.lastUpdate < HMasterInstance.procedureStore.cleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1566, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.procedureStore.cleaner.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.period"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1567, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.procedureStore.cleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1568, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.procedureStore.cleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1569, "HMasterInstance.assignmentManager.ritChore.lastUpdate >= HMasterInstance.procedureStore.cleanerPool.cleanerLatch"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1570, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.procedureStore.cleanerPool.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.size"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1571, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1572, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.procedureStore.numThreads"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.numThreads"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1573, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.procedureStore.region.DEEP_OVERHEAD"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.DEEP_OVERHEAD"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1574, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.procedureStore.region.FIXED_OVERHEAD"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.FIXED_OVERHEAD"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1575, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1576, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1577, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.procedureStore.region.blockingMemStoreSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.blockingMemStoreSize"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1578, "HMasterInstance.assignmentManager.ritChore.lastUpdate > HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1579, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1580, "HMasterInstance.assignmentManager.ritChore.lastUpdate >= HMasterInstance.procedureStore.region.majorInProgress"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1581, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.procedureStore.region.maxBusyWaitDuration"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitDuration"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1582, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1583, "HMasterInstance.assignmentManager.ritChore.lastUpdate < HMasterInstance.procedureStore.region.timestampSlop"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.timestampSlop"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1584, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.procedureStore.walFactory.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walFactory.timeoutMillis"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1585, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1586, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1587, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.procedureStore.walRoller.threadWakeFrequency"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.threadWakeFrequency"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1588, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.regionServerAccounting.globalMemStoreLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimit"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1589, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1590, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1591, "HMasterInstance.assignmentManager.ritChore.lastUpdate < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1592, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1593, "HMasterInstance.assignmentManager.ritChore.lastUpdate > HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1594, "HMasterInstance.assignmentManager.ritChore.lastUpdate > HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1595, "HMasterInstance.assignmentManager.ritChore.lastUpdate > HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1596, "HMasterInstance.assignmentManager.ritChore.lastUpdate > HMasterInstance.rpcClient.connectTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connectTO"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1597, "HMasterInstance.assignmentManager.ritChore.lastUpdate > HMasterInstance.rpcClient.connections.poolMaxSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1598, "HMasterInstance.assignmentManager.ritChore.lastUpdate > HMasterInstance.rpcClient.failedServers.latestExpiry"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1599, "HMasterInstance.assignmentManager.ritChore.lastUpdate > HMasterInstance.rpcClient.failedServers.recheckServersTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.recheckServersTimeout"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1600, "HMasterInstance.assignmentManager.ritChore.lastUpdate > HMasterInstance.rpcClient.failureSleep"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failureSleep"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1601, "HMasterInstance.assignmentManager.ritChore.lastUpdate > HMasterInstance.rpcClient.maxConcurrentCallsPerServer"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.maxConcurrentCallsPerServer"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1602, "HMasterInstance.assignmentManager.ritChore.lastUpdate > HMasterInstance.rpcClient.minIdleTimeBeforeClose"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.minIdleTimeBeforeClose"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1603, "HMasterInstance.assignmentManager.ritChore.lastUpdate > HMasterInstance.rpcClient.readTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.readTO"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1604, "HMasterInstance.assignmentManager.ritChore.lastUpdate > HMasterInstance.rpcClient.writeTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.writeTO"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1605, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.rpcServices.maxScannerResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.maxScannerResultSize"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1606, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1607, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.rpcServices.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcTimeout"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1608, "HMasterInstance.assignmentManager.ritChore.lastUpdate > HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1609, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.rsFatals.maxSizeBytes"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.maxSizeBytes"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1610, "HMasterInstance.assignmentManager.ritChore.lastUpdate < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1611, "HMasterInstance.assignmentManager.ritChore.lastUpdate > HMasterInstance.serverManager.flushedSeqIdFlusher.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.period"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1612, "HMasterInstance.assignmentManager.ritChore.lastUpdate > HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1613, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1614, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.serverManager.maxSkew"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.maxSkew"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1615, "HMasterInstance.assignmentManager.ritChore.lastUpdate < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1616, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.snapshotCleanerChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1617, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.snapshotManager.coordinator.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotManager.coordinator.timeoutMillis"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1618, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1619, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1620, "HMasterInstance.assignmentManager.ritChore.lastUpdate < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1621, "HMasterInstance.assignmentManager.ritChore.lastUpdate != HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1622, "HMasterInstance.assignmentManager.ritChore.lastUpdate >= daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1623, "HMasterInstance.assignmentManager.ritChore.lastUpdate >= daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])))-1);
			}
		});
		invariants1999.add(new Invariant(1624, "HMasterInstance.assignmentManager.ritChore.lastUpdate >= daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1625, "HMasterInstance.assignmentManager.ritChore.lastUpdate >= daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0])))-1);
			}
		});
		invariants1999.add(new Invariant(1626, "HMasterInstance.assignmentManager.ritChore.lastUpdate != daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0])))-1);
			}
		});
		invariants1999.add(new Invariant(1627, "HMasterInstance.assignmentManager.ritChore.lastUpdate >= daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0])))-1);
			}
		});
		invariants1999.add(new Invariant(1628, "HMasterInstance.assignmentManager.ritChore.lastUpdate != daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1629, "HMasterInstance.assignmentManager.ritChore.lastUpdate % daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE) == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() % daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))) == 0);
			}
		});
		invariants1999.add(new Invariant(1630, "HMasterInstance.assignmentManager.ritChore.lastUpdate >= daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])))-1);
			}
		});
		invariants1999.add(new Invariant(1631, "HMasterInstance.asyncClusterConnection.connConf.maxKeyValueSize > HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.maxKeyValueSize"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1632, "HMasterInstance.asyncClusterConnection.connConf.maxKeyValueSize > HMasterInstance.catalogJanitorChore.lastReport.count"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.maxKeyValueSize"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.count"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1633, "HMasterInstance.asyncClusterConnection.connConf.maxKeyValueSize < HMasterInstance.catalogJanitorChore.lastReport.now"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.maxKeyValueSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.now"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1634, "HMasterInstance.asyncClusterConnection.connConf.maxKeyValueSize > HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.maxKeyValueSize"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1635, "HMasterInstance.asyncClusterConnection.connConf.maxKeyValueSize < HMasterInstance.clusterStatusChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.maxKeyValueSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1636, "HMasterInstance.asyncClusterConnection.connConf.maxKeyValueSize < HMasterInstance.clusterStatusChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.maxKeyValueSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1637, "HMasterInstance.asyncClusterConnection.connConf.maxKeyValueSize > HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.maxKeyValueSize"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1638, "HMasterInstance.asyncClusterConnection.connConf.maxKeyValueSize > HMasterInstance.csm.splitLogManagerCoordination.timeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.maxKeyValueSize"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1639, "HMasterInstance.asyncClusterConnection.connConf.maxKeyValueSize > HMasterInstance.procedureExecutor.activeExecutorCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.maxKeyValueSize"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1640, "HMasterInstance.asyncClusterConnection.connConf.maxKeyValueSize > HMasterInstance.procedureExecutor.lastProcId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.maxKeyValueSize"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.lastProcId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1641, "HMasterInstance.asyncClusterConnection.connConf.maxKeyValueSize > HMasterInstance.procedureExecutor.scheduler.nullPollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.maxKeyValueSize"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.nullPollCalls"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1642, "HMasterInstance.asyncClusterConnection.connConf.maxKeyValueSize > HMasterInstance.procedureExecutor.scheduler.pollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.maxKeyValueSize"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.pollCalls"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1643, "HMasterInstance.asyncClusterConnection.connConf.maxKeyValueSize > HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.maxKeyValueSize"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1644, "HMasterInstance.asyncClusterConnection.connConf.maxKeyValueSize != HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.maxKeyValueSize"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1645, "HMasterInstance.asyncClusterConnection.connConf.maxKeyValueSize < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.maxKeyValueSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1646, "HMasterInstance.asyncClusterConnection.connConf.maxKeyValueSize > HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.maxKeyValueSize"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1647, "HMasterInstance.asyncClusterConnection.connConf.maxKeyValueSize > HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.maxKeyValueSize"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1648, "HMasterInstance.asyncClusterConnection.connConf.maxKeyValueSize > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.maxKeyValueSize"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1649, "HMasterInstance.asyncClusterConnection.connConf.maxKeyValueSize > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.maxKeyValueSize"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1650, "HMasterInstance.asyncClusterConnection.connConf.maxKeyValueSize > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.maxKeyValueSize"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1651, "HMasterInstance.asyncClusterConnection.connConf.maxKeyValueSize > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.maxKeyValueSize"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1652, "HMasterInstance.asyncClusterConnection.connConf.maxKeyValueSize > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.maxKeyValueSize"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1653, "HMasterInstance.asyncClusterConnection.connConf.maxKeyValueSize > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.maxKeyValueSize"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1654, "HMasterInstance.asyncClusterConnection.connConf.maxRetries != HMasterInstance.catalogJanitorChore.lastReport.count"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.maxRetries"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.count"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1655, "HMasterInstance.asyncClusterConnection.connConf.maxRetries < HMasterInstance.catalogJanitorChore.lastReport.now"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.maxRetries"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.now"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1656, "HMasterInstance.asyncClusterConnection.connConf.maxRetries > HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.maxRetries"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1657, "HMasterInstance.asyncClusterConnection.connConf.maxRetries < HMasterInstance.clusterStatusChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.maxRetries"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1658, "HMasterInstance.asyncClusterConnection.connConf.maxRetries < HMasterInstance.clusterStatusChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.maxRetries"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1659, "HMasterInstance.asyncClusterConnection.connConf.maxRetries > HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.maxRetries"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1660, "HMasterInstance.asyncClusterConnection.connConf.maxRetries < HMasterInstance.csm.splitLogManagerCoordination.timeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.maxRetries"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1661, "HMasterInstance.asyncClusterConnection.connConf.maxRetries > HMasterInstance.procedureExecutor.activeExecutorCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.maxRetries"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1662, "HMasterInstance.asyncClusterConnection.connConf.maxRetries != HMasterInstance.procedureExecutor.lastProcId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.maxRetries"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.lastProcId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1663, "HMasterInstance.asyncClusterConnection.connConf.maxRetries > HMasterInstance.procedureExecutor.scheduler.nullPollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.maxRetries"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.nullPollCalls"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1664, "HMasterInstance.asyncClusterConnection.connConf.maxRetries != HMasterInstance.procedureExecutor.scheduler.pollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.maxRetries"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.pollCalls"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1665, "HMasterInstance.asyncClusterConnection.connConf.maxRetries != HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.maxRetries"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1666, "HMasterInstance.asyncClusterConnection.connConf.maxRetries != HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.maxRetries"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1667, "HMasterInstance.asyncClusterConnection.connConf.maxRetries < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.maxRetries"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1668, "HMasterInstance.asyncClusterConnection.connConf.maxRetries != HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.maxRetries"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1669, "HMasterInstance.asyncClusterConnection.connConf.maxRetries != HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.maxRetries"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1670, "HMasterInstance.asyncClusterConnection.connConf.maxRetries > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.maxRetries"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1671, "HMasterInstance.asyncClusterConnection.connConf.maxRetries > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.maxRetries"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1672, "HMasterInstance.asyncClusterConnection.connConf.maxRetries > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.maxRetries"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1673, "HMasterInstance.asyncClusterConnection.connConf.maxRetries != daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.maxRetries"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1674, "HMasterInstance.asyncClusterConnection.connConf.maxRetries != daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.maxRetries"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0])))-1);
			}
		});
		invariants1999.add(new Invariant(1675, "HMasterInstance.asyncClusterConnection.connConf.maxRetries > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.maxRetries"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1676, "HMasterInstance.asyncClusterConnection.connConf.maxRetries > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.maxRetries"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1677, "HMasterInstance.asyncClusterConnection.connConf.metaOperationTimeoutNs > HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.metaOperationTimeoutNs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1678, "HMasterInstance.asyncClusterConnection.connConf.metaOperationTimeoutNs > HMasterInstance.catalogJanitorChore.lastReport.count"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.metaOperationTimeoutNs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.count"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1679, "HMasterInstance.asyncClusterConnection.connConf.metaOperationTimeoutNs < HMasterInstance.catalogJanitorChore.lastReport.now"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.metaOperationTimeoutNs"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.now"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1680, "HMasterInstance.asyncClusterConnection.connConf.metaOperationTimeoutNs > HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.metaOperationTimeoutNs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1681, "HMasterInstance.asyncClusterConnection.connConf.metaOperationTimeoutNs < HMasterInstance.clusterStatusChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.metaOperationTimeoutNs"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1682, "HMasterInstance.asyncClusterConnection.connConf.metaOperationTimeoutNs < HMasterInstance.clusterStatusChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.metaOperationTimeoutNs"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1683, "HMasterInstance.asyncClusterConnection.connConf.metaOperationTimeoutNs > HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.metaOperationTimeoutNs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1684, "HMasterInstance.asyncClusterConnection.connConf.metaOperationTimeoutNs > HMasterInstance.csm.splitLogManagerCoordination.timeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.metaOperationTimeoutNs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1685, "HMasterInstance.asyncClusterConnection.connConf.metaOperationTimeoutNs > HMasterInstance.procedureExecutor.activeExecutorCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.metaOperationTimeoutNs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1686, "HMasterInstance.asyncClusterConnection.connConf.metaOperationTimeoutNs > HMasterInstance.procedureExecutor.lastProcId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.metaOperationTimeoutNs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.lastProcId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1687, "HMasterInstance.asyncClusterConnection.connConf.metaOperationTimeoutNs > HMasterInstance.procedureExecutor.scheduler.nullPollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.metaOperationTimeoutNs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.nullPollCalls"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1688, "HMasterInstance.asyncClusterConnection.connConf.metaOperationTimeoutNs > HMasterInstance.procedureExecutor.scheduler.pollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.metaOperationTimeoutNs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.pollCalls"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1689, "HMasterInstance.asyncClusterConnection.connConf.metaOperationTimeoutNs > HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.metaOperationTimeoutNs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1690, "HMasterInstance.asyncClusterConnection.connConf.metaOperationTimeoutNs != HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.metaOperationTimeoutNs"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1691, "HMasterInstance.asyncClusterConnection.connConf.metaOperationTimeoutNs < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.metaOperationTimeoutNs"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1692, "HMasterInstance.asyncClusterConnection.connConf.metaOperationTimeoutNs > HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.metaOperationTimeoutNs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1693, "HMasterInstance.asyncClusterConnection.connConf.metaOperationTimeoutNs > HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.metaOperationTimeoutNs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1694, "HMasterInstance.asyncClusterConnection.connConf.metaOperationTimeoutNs > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.metaOperationTimeoutNs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1695, "HMasterInstance.asyncClusterConnection.connConf.metaOperationTimeoutNs > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.metaOperationTimeoutNs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1696, "HMasterInstance.asyncClusterConnection.connConf.metaOperationTimeoutNs > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.metaOperationTimeoutNs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1697, "HMasterInstance.asyncClusterConnection.connConf.metaOperationTimeoutNs > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.metaOperationTimeoutNs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1698, "HMasterInstance.asyncClusterConnection.connConf.metaOperationTimeoutNs > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.metaOperationTimeoutNs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1699, "HMasterInstance.asyncClusterConnection.connConf.metaOperationTimeoutNs > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.metaOperationTimeoutNs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1700, "HMasterInstance.asyncClusterConnection.connConf.metaScannerCaching > HMasterInstance.catalogJanitorChore.lastReport.count"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.metaScannerCaching"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.count"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1701, "HMasterInstance.asyncClusterConnection.connConf.metaScannerCaching < HMasterInstance.catalogJanitorChore.lastReport.now"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.metaScannerCaching"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.now"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1702, "HMasterInstance.asyncClusterConnection.connConf.metaScannerCaching > HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.metaScannerCaching"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1703, "HMasterInstance.asyncClusterConnection.connConf.metaScannerCaching < HMasterInstance.clusterStatusChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.metaScannerCaching"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1704, "HMasterInstance.asyncClusterConnection.connConf.metaScannerCaching < HMasterInstance.clusterStatusChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.metaScannerCaching"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1705, "HMasterInstance.asyncClusterConnection.connConf.metaScannerCaching > HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.metaScannerCaching"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1706, "HMasterInstance.asyncClusterConnection.connConf.metaScannerCaching < HMasterInstance.csm.splitLogManagerCoordination.timeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.metaScannerCaching"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1707, "HMasterInstance.asyncClusterConnection.connConf.metaScannerCaching > HMasterInstance.procedureExecutor.activeExecutorCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.metaScannerCaching"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1708, "HMasterInstance.asyncClusterConnection.connConf.metaScannerCaching != HMasterInstance.procedureExecutor.lastProcId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.metaScannerCaching"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.lastProcId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1709, "HMasterInstance.asyncClusterConnection.connConf.metaScannerCaching > HMasterInstance.procedureExecutor.scheduler.nullPollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.metaScannerCaching"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.nullPollCalls"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1710, "HMasterInstance.asyncClusterConnection.connConf.metaScannerCaching != HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.metaScannerCaching"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1711, "HMasterInstance.asyncClusterConnection.connConf.metaScannerCaching != HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.metaScannerCaching"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1712, "HMasterInstance.asyncClusterConnection.connConf.metaScannerCaching < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.metaScannerCaching"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1713, "HMasterInstance.asyncClusterConnection.connConf.metaScannerCaching != HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.metaScannerCaching"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1714, "HMasterInstance.asyncClusterConnection.connConf.metaScannerCaching != HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.metaScannerCaching"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1715, "HMasterInstance.asyncClusterConnection.connConf.metaScannerCaching > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.metaScannerCaching"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1716, "HMasterInstance.asyncClusterConnection.connConf.metaScannerCaching > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.metaScannerCaching"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1717, "HMasterInstance.asyncClusterConnection.connConf.metaScannerCaching > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.metaScannerCaching"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1718, "HMasterInstance.asyncClusterConnection.connConf.metaScannerCaching > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.metaScannerCaching"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1719, "HMasterInstance.asyncClusterConnection.connConf.metaScannerCaching > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.metaScannerCaching"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1720, "HMasterInstance.asyncClusterConnection.connConf.metaScannerCaching > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.metaScannerCaching"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1721, "HMasterInstance.asyncClusterConnection.connConf.pauseForCQTBENs > HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.pauseForCQTBENs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1722, "HMasterInstance.asyncClusterConnection.connConf.pauseForCQTBENs > HMasterInstance.catalogJanitorChore.lastReport.count"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.pauseForCQTBENs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.count"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1723, "HMasterInstance.asyncClusterConnection.connConf.pauseForCQTBENs < HMasterInstance.catalogJanitorChore.lastReport.now"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.pauseForCQTBENs"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.now"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1724, "HMasterInstance.asyncClusterConnection.connConf.pauseForCQTBENs > HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.pauseForCQTBENs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1725, "HMasterInstance.asyncClusterConnection.connConf.pauseForCQTBENs < HMasterInstance.clusterStatusChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.pauseForCQTBENs"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1726, "HMasterInstance.asyncClusterConnection.connConf.pauseForCQTBENs < HMasterInstance.clusterStatusChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.pauseForCQTBENs"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1727, "HMasterInstance.asyncClusterConnection.connConf.pauseForCQTBENs > HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.pauseForCQTBENs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1728, "HMasterInstance.asyncClusterConnection.connConf.pauseForCQTBENs > HMasterInstance.csm.splitLogManagerCoordination.timeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.pauseForCQTBENs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1729, "HMasterInstance.asyncClusterConnection.connConf.pauseForCQTBENs > HMasterInstance.procedureExecutor.activeExecutorCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.pauseForCQTBENs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1730, "HMasterInstance.asyncClusterConnection.connConf.pauseForCQTBENs > HMasterInstance.procedureExecutor.lastProcId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.pauseForCQTBENs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.lastProcId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1731, "HMasterInstance.asyncClusterConnection.connConf.pauseForCQTBENs > HMasterInstance.procedureExecutor.scheduler.nullPollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.pauseForCQTBENs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.nullPollCalls"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1732, "HMasterInstance.asyncClusterConnection.connConf.pauseForCQTBENs > HMasterInstance.procedureExecutor.scheduler.pollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.pauseForCQTBENs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.pollCalls"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1733, "HMasterInstance.asyncClusterConnection.connConf.pauseForCQTBENs > HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.pauseForCQTBENs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1734, "HMasterInstance.asyncClusterConnection.connConf.pauseForCQTBENs != HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.pauseForCQTBENs"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1735, "HMasterInstance.asyncClusterConnection.connConf.pauseForCQTBENs < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.pauseForCQTBENs"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1736, "HMasterInstance.asyncClusterConnection.connConf.pauseForCQTBENs > HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.pauseForCQTBENs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1737, "HMasterInstance.asyncClusterConnection.connConf.pauseForCQTBENs > HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.pauseForCQTBENs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1738, "HMasterInstance.asyncClusterConnection.connConf.pauseForCQTBENs > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.pauseForCQTBENs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1739, "HMasterInstance.asyncClusterConnection.connConf.pauseForCQTBENs > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.pauseForCQTBENs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1740, "HMasterInstance.asyncClusterConnection.connConf.pauseForCQTBENs > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.pauseForCQTBENs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1741, "HMasterInstance.asyncClusterConnection.connConf.pauseForCQTBENs > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.pauseForCQTBENs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1742, "HMasterInstance.asyncClusterConnection.connConf.pauseForCQTBENs > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.pauseForCQTBENs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1743, "HMasterInstance.asyncClusterConnection.connConf.pauseForCQTBENs > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.pauseForCQTBENs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1744, "HMasterInstance.asyncClusterConnection.connConf.primaryCallTimeoutNs > HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.primaryCallTimeoutNs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1745, "HMasterInstance.asyncClusterConnection.connConf.primaryCallTimeoutNs > HMasterInstance.catalogJanitorChore.lastReport.count"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.primaryCallTimeoutNs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.count"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1746, "HMasterInstance.asyncClusterConnection.connConf.primaryCallTimeoutNs < HMasterInstance.catalogJanitorChore.lastReport.now"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.primaryCallTimeoutNs"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.now"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1747, "HMasterInstance.asyncClusterConnection.connConf.primaryCallTimeoutNs > HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.primaryCallTimeoutNs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1748, "HMasterInstance.asyncClusterConnection.connConf.primaryCallTimeoutNs < HMasterInstance.clusterStatusChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.primaryCallTimeoutNs"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1749, "HMasterInstance.asyncClusterConnection.connConf.primaryCallTimeoutNs < HMasterInstance.clusterStatusChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.primaryCallTimeoutNs"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1750, "HMasterInstance.asyncClusterConnection.connConf.primaryCallTimeoutNs > HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.primaryCallTimeoutNs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1751, "HMasterInstance.asyncClusterConnection.connConf.primaryCallTimeoutNs > HMasterInstance.csm.splitLogManagerCoordination.timeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.primaryCallTimeoutNs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1752, "HMasterInstance.asyncClusterConnection.connConf.primaryCallTimeoutNs > HMasterInstance.procedureExecutor.activeExecutorCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.primaryCallTimeoutNs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1753, "HMasterInstance.asyncClusterConnection.connConf.primaryCallTimeoutNs > HMasterInstance.procedureExecutor.lastProcId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.primaryCallTimeoutNs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.lastProcId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1754, "HMasterInstance.asyncClusterConnection.connConf.primaryCallTimeoutNs > HMasterInstance.procedureExecutor.scheduler.nullPollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.primaryCallTimeoutNs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.nullPollCalls"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1755, "HMasterInstance.asyncClusterConnection.connConf.primaryCallTimeoutNs > HMasterInstance.procedureExecutor.scheduler.pollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.primaryCallTimeoutNs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.pollCalls"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1756, "HMasterInstance.asyncClusterConnection.connConf.primaryCallTimeoutNs > HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.primaryCallTimeoutNs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1757, "HMasterInstance.asyncClusterConnection.connConf.primaryCallTimeoutNs != HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.primaryCallTimeoutNs"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1758, "HMasterInstance.asyncClusterConnection.connConf.primaryCallTimeoutNs < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.primaryCallTimeoutNs"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1759, "HMasterInstance.asyncClusterConnection.connConf.primaryCallTimeoutNs > HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.primaryCallTimeoutNs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1760, "HMasterInstance.asyncClusterConnection.connConf.primaryCallTimeoutNs > HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.primaryCallTimeoutNs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1761, "HMasterInstance.asyncClusterConnection.connConf.primaryCallTimeoutNs > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.primaryCallTimeoutNs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1762, "HMasterInstance.asyncClusterConnection.connConf.primaryCallTimeoutNs > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.primaryCallTimeoutNs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1763, "HMasterInstance.asyncClusterConnection.connConf.primaryCallTimeoutNs > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.primaryCallTimeoutNs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1764, "HMasterInstance.asyncClusterConnection.connConf.primaryCallTimeoutNs > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.primaryCallTimeoutNs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1765, "HMasterInstance.asyncClusterConnection.connConf.primaryCallTimeoutNs > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.primaryCallTimeoutNs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1766, "HMasterInstance.asyncClusterConnection.connConf.primaryCallTimeoutNs > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.primaryCallTimeoutNs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1767, "HMasterInstance.asyncClusterConnection.connConf.primaryMetaScanTimeoutNs > HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.primaryMetaScanTimeoutNs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1768, "HMasterInstance.asyncClusterConnection.connConf.primaryMetaScanTimeoutNs > HMasterInstance.catalogJanitorChore.lastReport.count"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.primaryMetaScanTimeoutNs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.count"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1769, "HMasterInstance.asyncClusterConnection.connConf.primaryMetaScanTimeoutNs < HMasterInstance.catalogJanitorChore.lastReport.now"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.primaryMetaScanTimeoutNs"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.now"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1770, "HMasterInstance.asyncClusterConnection.connConf.primaryMetaScanTimeoutNs > HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.primaryMetaScanTimeoutNs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1771, "HMasterInstance.asyncClusterConnection.connConf.primaryMetaScanTimeoutNs < HMasterInstance.clusterStatusChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.primaryMetaScanTimeoutNs"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1772, "HMasterInstance.asyncClusterConnection.connConf.primaryMetaScanTimeoutNs < HMasterInstance.clusterStatusChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.primaryMetaScanTimeoutNs"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1773, "HMasterInstance.asyncClusterConnection.connConf.primaryMetaScanTimeoutNs > HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.primaryMetaScanTimeoutNs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1774, "HMasterInstance.asyncClusterConnection.connConf.primaryMetaScanTimeoutNs > HMasterInstance.csm.splitLogManagerCoordination.timeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.primaryMetaScanTimeoutNs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1775, "HMasterInstance.asyncClusterConnection.connConf.primaryMetaScanTimeoutNs > HMasterInstance.procedureExecutor.activeExecutorCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.primaryMetaScanTimeoutNs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1776, "HMasterInstance.asyncClusterConnection.connConf.primaryMetaScanTimeoutNs > HMasterInstance.procedureExecutor.lastProcId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.primaryMetaScanTimeoutNs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.lastProcId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1777, "HMasterInstance.asyncClusterConnection.connConf.primaryMetaScanTimeoutNs > HMasterInstance.procedureExecutor.scheduler.nullPollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.primaryMetaScanTimeoutNs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.nullPollCalls"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1778, "HMasterInstance.asyncClusterConnection.connConf.primaryMetaScanTimeoutNs > HMasterInstance.procedureExecutor.scheduler.pollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.primaryMetaScanTimeoutNs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.pollCalls"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1779, "HMasterInstance.asyncClusterConnection.connConf.primaryMetaScanTimeoutNs > HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.primaryMetaScanTimeoutNs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1780, "HMasterInstance.asyncClusterConnection.connConf.primaryMetaScanTimeoutNs != HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.primaryMetaScanTimeoutNs"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1781, "HMasterInstance.asyncClusterConnection.connConf.primaryMetaScanTimeoutNs < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.primaryMetaScanTimeoutNs"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1782, "HMasterInstance.asyncClusterConnection.connConf.primaryMetaScanTimeoutNs > HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.primaryMetaScanTimeoutNs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1783, "HMasterInstance.asyncClusterConnection.connConf.primaryMetaScanTimeoutNs > HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.primaryMetaScanTimeoutNs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1784, "HMasterInstance.asyncClusterConnection.connConf.primaryMetaScanTimeoutNs > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.primaryMetaScanTimeoutNs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1785, "HMasterInstance.asyncClusterConnection.connConf.primaryMetaScanTimeoutNs > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.primaryMetaScanTimeoutNs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1786, "HMasterInstance.asyncClusterConnection.connConf.primaryMetaScanTimeoutNs > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.primaryMetaScanTimeoutNs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1787, "HMasterInstance.asyncClusterConnection.connConf.primaryMetaScanTimeoutNs > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.primaryMetaScanTimeoutNs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1788, "HMasterInstance.asyncClusterConnection.connConf.primaryMetaScanTimeoutNs > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.primaryMetaScanTimeoutNs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1789, "HMasterInstance.asyncClusterConnection.connConf.primaryMetaScanTimeoutNs > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.primaryMetaScanTimeoutNs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1790, "HMasterInstance.asyncClusterConnection.connConf.readRpcTimeoutNs > HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.readRpcTimeoutNs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1791, "HMasterInstance.asyncClusterConnection.connConf.readRpcTimeoutNs > HMasterInstance.catalogJanitorChore.lastReport.count"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.readRpcTimeoutNs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.count"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1792, "HMasterInstance.asyncClusterConnection.connConf.readRpcTimeoutNs > HMasterInstance.catalogJanitorChore.lastReport.now"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.readRpcTimeoutNs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.now"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1793, "HMasterInstance.asyncClusterConnection.connConf.readRpcTimeoutNs > HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.readRpcTimeoutNs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1794, "HMasterInstance.asyncClusterConnection.connConf.readRpcTimeoutNs > HMasterInstance.clusterStatusChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.readRpcTimeoutNs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1795, "HMasterInstance.asyncClusterConnection.connConf.readRpcTimeoutNs > HMasterInstance.clusterStatusChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.readRpcTimeoutNs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1796, "HMasterInstance.asyncClusterConnection.connConf.readRpcTimeoutNs > HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.readRpcTimeoutNs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1797, "HMasterInstance.asyncClusterConnection.connConf.readRpcTimeoutNs > HMasterInstance.csm.splitLogManagerCoordination.timeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.readRpcTimeoutNs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1798, "HMasterInstance.asyncClusterConnection.connConf.readRpcTimeoutNs > HMasterInstance.procedureExecutor.activeExecutorCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.readRpcTimeoutNs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1799, "HMasterInstance.asyncClusterConnection.connConf.readRpcTimeoutNs > HMasterInstance.procedureExecutor.lastProcId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.readRpcTimeoutNs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.lastProcId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1800, "HMasterInstance.asyncClusterConnection.connConf.readRpcTimeoutNs > HMasterInstance.procedureExecutor.scheduler.nullPollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.readRpcTimeoutNs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.nullPollCalls"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1801, "HMasterInstance.asyncClusterConnection.connConf.readRpcTimeoutNs > HMasterInstance.procedureExecutor.scheduler.pollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.readRpcTimeoutNs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.pollCalls"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1802, "HMasterInstance.asyncClusterConnection.connConf.readRpcTimeoutNs > HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.readRpcTimeoutNs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1803, "HMasterInstance.asyncClusterConnection.connConf.readRpcTimeoutNs > HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.readRpcTimeoutNs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1804, "HMasterInstance.asyncClusterConnection.connConf.readRpcTimeoutNs > HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.readRpcTimeoutNs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1805, "HMasterInstance.asyncClusterConnection.connConf.readRpcTimeoutNs > HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.readRpcTimeoutNs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1806, "HMasterInstance.asyncClusterConnection.connConf.readRpcTimeoutNs > HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.readRpcTimeoutNs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1807, "HMasterInstance.asyncClusterConnection.connConf.readRpcTimeoutNs > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.readRpcTimeoutNs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1808, "HMasterInstance.asyncClusterConnection.connConf.readRpcTimeoutNs > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.readRpcTimeoutNs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1809, "HMasterInstance.asyncClusterConnection.connConf.readRpcTimeoutNs > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.readRpcTimeoutNs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1810, "HMasterInstance.asyncClusterConnection.connConf.readRpcTimeoutNs > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.readRpcTimeoutNs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1811, "HMasterInstance.asyncClusterConnection.connConf.readRpcTimeoutNs > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.readRpcTimeoutNs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1812, "HMasterInstance.asyncClusterConnection.connConf.readRpcTimeoutNs > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.readRpcTimeoutNs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1813, "HMasterInstance.asyncClusterConnection.connConf.rpcTimeoutNs > HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.rpcTimeoutNs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1814, "HMasterInstance.asyncClusterConnection.connConf.rpcTimeoutNs > HMasterInstance.catalogJanitorChore.lastReport.count"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.rpcTimeoutNs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.count"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1815, "HMasterInstance.asyncClusterConnection.connConf.rpcTimeoutNs < HMasterInstance.catalogJanitorChore.lastReport.now"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.rpcTimeoutNs"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.now"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1816, "HMasterInstance.asyncClusterConnection.connConf.rpcTimeoutNs > HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.rpcTimeoutNs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1817, "HMasterInstance.asyncClusterConnection.connConf.rpcTimeoutNs < HMasterInstance.clusterStatusChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.rpcTimeoutNs"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1818, "HMasterInstance.asyncClusterConnection.connConf.rpcTimeoutNs < HMasterInstance.clusterStatusChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.rpcTimeoutNs"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1819, "HMasterInstance.asyncClusterConnection.connConf.rpcTimeoutNs > HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.rpcTimeoutNs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1820, "HMasterInstance.asyncClusterConnection.connConf.rpcTimeoutNs > HMasterInstance.csm.splitLogManagerCoordination.timeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.rpcTimeoutNs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1821, "HMasterInstance.asyncClusterConnection.connConf.rpcTimeoutNs > HMasterInstance.procedureExecutor.activeExecutorCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.rpcTimeoutNs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1822, "HMasterInstance.asyncClusterConnection.connConf.rpcTimeoutNs > HMasterInstance.procedureExecutor.lastProcId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.rpcTimeoutNs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.lastProcId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1823, "HMasterInstance.asyncClusterConnection.connConf.rpcTimeoutNs > HMasterInstance.procedureExecutor.scheduler.nullPollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.rpcTimeoutNs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.nullPollCalls"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1824, "HMasterInstance.asyncClusterConnection.connConf.rpcTimeoutNs > HMasterInstance.procedureExecutor.scheduler.pollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.rpcTimeoutNs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.pollCalls"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1825, "HMasterInstance.asyncClusterConnection.connConf.rpcTimeoutNs > HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.rpcTimeoutNs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1826, "HMasterInstance.asyncClusterConnection.connConf.rpcTimeoutNs != HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.rpcTimeoutNs"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1827, "HMasterInstance.asyncClusterConnection.connConf.rpcTimeoutNs < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.rpcTimeoutNs"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1828, "HMasterInstance.asyncClusterConnection.connConf.rpcTimeoutNs > HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.rpcTimeoutNs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1829, "HMasterInstance.asyncClusterConnection.connConf.rpcTimeoutNs > HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.rpcTimeoutNs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1830, "HMasterInstance.asyncClusterConnection.connConf.rpcTimeoutNs > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.rpcTimeoutNs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1831, "HMasterInstance.asyncClusterConnection.connConf.rpcTimeoutNs > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.rpcTimeoutNs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1832, "HMasterInstance.asyncClusterConnection.connConf.rpcTimeoutNs > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.rpcTimeoutNs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1833, "HMasterInstance.asyncClusterConnection.connConf.rpcTimeoutNs > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.rpcTimeoutNs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1834, "HMasterInstance.asyncClusterConnection.connConf.rpcTimeoutNs > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.rpcTimeoutNs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1835, "HMasterInstance.asyncClusterConnection.connConf.rpcTimeoutNs > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.rpcTimeoutNs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1836, "HMasterInstance.asyncClusterConnection.connConf.scannerCaching > HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.scannerCaching"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1837, "HMasterInstance.asyncClusterConnection.connConf.scannerCaching > HMasterInstance.catalogJanitorChore.lastReport.count"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.scannerCaching"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.count"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1838, "HMasterInstance.asyncClusterConnection.connConf.scannerCaching < HMasterInstance.catalogJanitorChore.lastReport.now"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.scannerCaching"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.now"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1839, "HMasterInstance.asyncClusterConnection.connConf.scannerCaching > HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.scannerCaching"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1840, "HMasterInstance.asyncClusterConnection.connConf.scannerCaching < HMasterInstance.clusterStatusChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.scannerCaching"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1841, "HMasterInstance.asyncClusterConnection.connConf.scannerCaching < HMasterInstance.clusterStatusChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.scannerCaching"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1842, "HMasterInstance.asyncClusterConnection.connConf.scannerCaching > HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.scannerCaching"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1843, "HMasterInstance.asyncClusterConnection.connConf.scannerCaching > HMasterInstance.csm.splitLogManagerCoordination.timeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.scannerCaching"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1844, "HMasterInstance.asyncClusterConnection.connConf.scannerCaching > HMasterInstance.procedureExecutor.activeExecutorCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.scannerCaching"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1845, "HMasterInstance.asyncClusterConnection.connConf.scannerCaching > HMasterInstance.procedureExecutor.lastProcId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.scannerCaching"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.lastProcId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1846, "HMasterInstance.asyncClusterConnection.connConf.scannerCaching > HMasterInstance.procedureExecutor.scheduler.nullPollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.scannerCaching"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.nullPollCalls"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1847, "HMasterInstance.asyncClusterConnection.connConf.scannerCaching > HMasterInstance.procedureExecutor.scheduler.pollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.scannerCaching"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.pollCalls"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1848, "HMasterInstance.asyncClusterConnection.connConf.scannerCaching > HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.scannerCaching"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1849, "HMasterInstance.asyncClusterConnection.connConf.scannerCaching != HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.scannerCaching"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1850, "HMasterInstance.asyncClusterConnection.connConf.scannerCaching < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.scannerCaching"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1851, "HMasterInstance.asyncClusterConnection.connConf.scannerCaching > HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.scannerCaching"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1852, "HMasterInstance.asyncClusterConnection.connConf.scannerCaching > HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.scannerCaching"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1853, "HMasterInstance.asyncClusterConnection.connConf.scannerCaching > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.scannerCaching"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1854, "HMasterInstance.asyncClusterConnection.connConf.scannerCaching > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.scannerCaching"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1855, "HMasterInstance.asyncClusterConnection.connConf.scannerCaching > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.scannerCaching"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1856, "HMasterInstance.asyncClusterConnection.connConf.scannerCaching > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.scannerCaching"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1857, "HMasterInstance.asyncClusterConnection.connConf.scannerCaching > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.scannerCaching"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1858, "HMasterInstance.asyncClusterConnection.connConf.scannerCaching > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.scannerCaching"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1859, "HMasterInstance.asyncClusterConnection.connConf.scannerMaxResultSize > HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.scannerMaxResultSize"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1860, "HMasterInstance.asyncClusterConnection.connConf.scannerMaxResultSize > HMasterInstance.catalogJanitorChore.lastReport.count"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.scannerMaxResultSize"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.count"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1861, "HMasterInstance.asyncClusterConnection.connConf.scannerMaxResultSize < HMasterInstance.catalogJanitorChore.lastReport.now"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.scannerMaxResultSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.now"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1862, "HMasterInstance.asyncClusterConnection.connConf.scannerMaxResultSize > HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.scannerMaxResultSize"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1863, "HMasterInstance.asyncClusterConnection.connConf.scannerMaxResultSize < HMasterInstance.clusterStatusChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.scannerMaxResultSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1864, "HMasterInstance.asyncClusterConnection.connConf.scannerMaxResultSize < HMasterInstance.clusterStatusChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.scannerMaxResultSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1865, "HMasterInstance.asyncClusterConnection.connConf.scannerMaxResultSize > HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.scannerMaxResultSize"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1866, "HMasterInstance.asyncClusterConnection.connConf.scannerMaxResultSize > HMasterInstance.csm.splitLogManagerCoordination.timeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.scannerMaxResultSize"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1867, "HMasterInstance.asyncClusterConnection.connConf.scannerMaxResultSize > HMasterInstance.procedureExecutor.activeExecutorCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.scannerMaxResultSize"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1868, "HMasterInstance.asyncClusterConnection.connConf.scannerMaxResultSize > HMasterInstance.procedureExecutor.lastProcId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.scannerMaxResultSize"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.lastProcId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1869, "HMasterInstance.asyncClusterConnection.connConf.scannerMaxResultSize > HMasterInstance.procedureExecutor.scheduler.nullPollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.scannerMaxResultSize"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.nullPollCalls"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1870, "HMasterInstance.asyncClusterConnection.connConf.scannerMaxResultSize > HMasterInstance.procedureExecutor.scheduler.pollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.scannerMaxResultSize"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.pollCalls"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1871, "HMasterInstance.asyncClusterConnection.connConf.scannerMaxResultSize > HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.scannerMaxResultSize"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1872, "HMasterInstance.asyncClusterConnection.connConf.scannerMaxResultSize != HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.scannerMaxResultSize"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1873, "HMasterInstance.asyncClusterConnection.connConf.scannerMaxResultSize < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.scannerMaxResultSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1874, "HMasterInstance.asyncClusterConnection.connConf.scannerMaxResultSize > HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.scannerMaxResultSize"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1875, "HMasterInstance.asyncClusterConnection.connConf.scannerMaxResultSize > HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.scannerMaxResultSize"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1876, "HMasterInstance.asyncClusterConnection.connConf.scannerMaxResultSize > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.scannerMaxResultSize"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1877, "HMasterInstance.asyncClusterConnection.connConf.scannerMaxResultSize > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.scannerMaxResultSize"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1878, "HMasterInstance.asyncClusterConnection.connConf.scannerMaxResultSize > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.scannerMaxResultSize"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1879, "HMasterInstance.asyncClusterConnection.connConf.scannerMaxResultSize > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.scannerMaxResultSize"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1880, "HMasterInstance.asyncClusterConnection.connConf.scannerMaxResultSize > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.scannerMaxResultSize"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1881, "HMasterInstance.asyncClusterConnection.connConf.scannerMaxResultSize > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.scannerMaxResultSize"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1882, "HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs <= HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1883, "HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs <= HMasterInstance.catalogJanitorChore.lastReport.count"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.count"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1884, "HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs < HMasterInstance.catalogJanitorChore.lastReport.now"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.now"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1885, "HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs < HMasterInstance.clusterStatusChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1886, "HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs < HMasterInstance.clusterStatusChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1887, "HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs < HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1888, "HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs < HMasterInstance.csm.splitLogManagerCoordination.timeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1889, "HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs <= HMasterInstance.procedureExecutor.activeExecutorCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1890, "HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs <= HMasterInstance.procedureExecutor.scheduler.nullPollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.nullPollCalls"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1891, "HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs <= HMasterInstance.procedureExecutor.scheduler.pollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.pollCalls"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1892, "HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs <= HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1893, "HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs != HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1894, "HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1895, "HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs <= HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1896, "HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs % HMasterInstance.tableDescriptors.invocations == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs"))).intValue() % ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue() == 0);
			}
		});
		invariants1999.add(new Invariant(1897, "HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs < HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1898, "HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs <= daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1899, "HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs >= daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])))-1);
			}
		});
		invariants1999.add(new Invariant(1900, "HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs <= daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1901, "HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs <= daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1902, "HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs <= daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1903, "HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs <= daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1904, "HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs >= daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0])))-1);
			}
		});
		invariants1999.add(new Invariant(1905, "HMasterInstance.asyncClusterConnection.nonceGenerator.clientId < HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.nonceGenerator.clientId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1906, "HMasterInstance.asyncClusterConnection.nonceGenerator.clientId < HMasterInstance.catalogJanitorChore.lastReport.count"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.nonceGenerator.clientId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.count"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1907, "HMasterInstance.asyncClusterConnection.nonceGenerator.clientId < HMasterInstance.catalogJanitorChore.lastReport.now"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.nonceGenerator.clientId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.now"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1908, "HMasterInstance.asyncClusterConnection.nonceGenerator.clientId < HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.nonceGenerator.clientId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1909, "HMasterInstance.asyncClusterConnection.nonceGenerator.clientId < HMasterInstance.clusterStatusChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.nonceGenerator.clientId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1910, "HMasterInstance.asyncClusterConnection.nonceGenerator.clientId < HMasterInstance.clusterStatusChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.nonceGenerator.clientId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1911, "HMasterInstance.asyncClusterConnection.nonceGenerator.clientId < HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.nonceGenerator.clientId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1912, "HMasterInstance.asyncClusterConnection.nonceGenerator.clientId < HMasterInstance.csm.splitLogManagerCoordination.timeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.nonceGenerator.clientId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1913, "HMasterInstance.asyncClusterConnection.nonceGenerator.clientId < HMasterInstance.procedureExecutor.activeExecutorCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.nonceGenerator.clientId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1914, "HMasterInstance.asyncClusterConnection.nonceGenerator.clientId < HMasterInstance.procedureExecutor.lastProcId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.nonceGenerator.clientId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.lastProcId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1915, "HMasterInstance.asyncClusterConnection.nonceGenerator.clientId < HMasterInstance.procedureExecutor.scheduler.nullPollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.nonceGenerator.clientId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.nullPollCalls"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1916, "HMasterInstance.asyncClusterConnection.nonceGenerator.clientId < HMasterInstance.procedureExecutor.scheduler.pollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.nonceGenerator.clientId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.pollCalls"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1917, "HMasterInstance.asyncClusterConnection.nonceGenerator.clientId < HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.nonceGenerator.clientId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1918, "HMasterInstance.asyncClusterConnection.nonceGenerator.clientId < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.nonceGenerator.clientId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1919, "HMasterInstance.asyncClusterConnection.nonceGenerator.clientId < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.nonceGenerator.clientId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1920, "HMasterInstance.asyncClusterConnection.nonceGenerator.clientId < HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.nonceGenerator.clientId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1921, "HMasterInstance.asyncClusterConnection.nonceGenerator.clientId < HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.nonceGenerator.clientId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1922, "HMasterInstance.asyncClusterConnection.nonceGenerator.clientId < daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.nonceGenerator.clientId"))).intValue() < daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])))-1);
			}
		});
		invariants1999.add(new Invariant(1923, "HMasterInstance.asyncClusterConnection.nonceGenerator.clientId < daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.nonceGenerator.clientId"))).intValue() < daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1);
			}
		});
		invariants1999.add(new Invariant(1924, "HMasterInstance.asyncClusterConnection.nonceGenerator.clientId < daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.nonceGenerator.clientId"))).intValue() < daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0])))-1);
			}
		});
		invariants1999.add(new Invariant(1925, "HMasterInstance.asyncClusterConnection.nonceGenerator.clientId < daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.nonceGenerator.clientId"))).intValue() < daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0])))-1);
			}
		});
		invariants1999.add(new Invariant(1926, "HMasterInstance.asyncClusterConnection.nonceGenerator.clientId < daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.nonceGenerator.clientId"))).intValue() < daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0])))-1);
			}
		});
		invariants1999.add(new Invariant(1927, "HMasterInstance.asyncClusterConnection.nonceGenerator.clientId < daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.nonceGenerator.clientId"))).intValue() < daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])))-1);
			}
		});
		invariants1999.add(new Invariant(1928, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt < HMasterInstance.asyncClusterConnection.rpcClient.connectTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.connectTO"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1929, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt < HMasterInstance.asyncClusterConnection.rpcClient.minIdleTimeBeforeClose"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.minIdleTimeBeforeClose"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1930, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt < HMasterInstance.asyncClusterConnection.rpcClient.readTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.readTO"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1931, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt < HMasterInstance.asyncClusterConnection.rpcClient.writeTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.writeTO"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1932, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt >= HMasterInstance.balancer.clusterStatus.masterInfoPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.balancer.clusterStatus.masterInfoPort"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1933, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt != HMasterInstance.balancer.internalBalancer.MIN_SERVER_BALANCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.MIN_SERVER_BALANCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1934, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt < HMasterInstance.balancer.internalBalancer.maxRunningTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.maxRunningTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1935, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt < HMasterInstance.balancer.internalBalancer.maxSteps"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.maxSteps"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1936, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt != HMasterInstance.balancer.internalBalancer.numRegionLoadsToRemember"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.numRegionLoadsToRemember"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1937, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt < HMasterInstance.balancer.internalBalancer.stepsPerRegion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.stepsPerRegion"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1938, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt < HMasterInstance.balancerChore.FIVE_MINUTES_IN_NANOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.FIVE_MINUTES_IN_NANOS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1939, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt > HMasterInstance.balancerChore.choreServicer.MIN_CORE_POOL_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1940, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt < HMasterInstance.balancerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.lastLog"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1941, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt < HMasterInstance.balancerChore.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.period"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1942, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt > HMasterInstance.balancerChore.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1943, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt < HMasterInstance.balancerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1944, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt < HMasterInstance.catalogJanitorChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastLog"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1945, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt > HMasterInstance.catalogJanitorChore.lastReport.count"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.count"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1946, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt < HMasterInstance.catalogJanitorChore.lastReport.now"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.now"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1947, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt < HMasterInstance.catalogJanitorChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1948, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt >= HMasterInstance.cleanerPool.cleanerLatch"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.cleanerPool.cleanerLatch"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1949, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt != HMasterInstance.cleanerPool.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.cleanerPool.size"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1950, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt < HMasterInstance.clusterStatusChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.lastLog"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1951, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt < HMasterInstance.clusterStatusChore.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.period"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1952, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt > HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1953, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt < HMasterInstance.clusterStatusChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1954, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt < HMasterInstance.clusterStatusChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1955, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt != HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1956, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt < HMasterInstance.csm.splitLogManagerCoordination.timeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1957, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt < HMasterInstance.csm.splitLogWorkerCoordination.checkInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.checkInterval"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1958, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt > HMasterInstance.dataFs.unspecifiedStoragePolicyId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.dataFs.unspecifiedStoragePolicyId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1959, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt < HMasterInstance.hbckChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.hbckChore.lastLog"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1960, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt < HMasterInstance.hbckChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.hbckChore.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1961, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt != HMasterInstance.hfileCleaner.AVAIL_PROCESSORS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.AVAIL_PROCESSORS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1962, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt < HMasterInstance.hfileCleaner.FIVE_MINUTES_IN_NANOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.FIVE_MINUTES_IN_NANOS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1963, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt > HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1964, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt < HMasterInstance.hfileCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1965, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt < HMasterInstance.hfileCleaner.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.period"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1966, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt != HMasterInstance.hfileCleaner.pool.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.pool.size"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1967, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt > HMasterInstance.hfileCleaner.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1968, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt < HMasterInstance.hfileCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1969, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt < HMasterInstance.logCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1970, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt < HMasterInstance.logCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1971, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt < HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1972, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt < HMasterInstance.mobFileCleanerChore.initialDelay"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.initialDelay"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1973, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt < HMasterInstance.mobFileCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1974, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt < HMasterInstance.mobFileCleanerChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1975, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt < HMasterInstance.mobFileCompactionChore.initialDelay"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.initialDelay"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1976, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt < HMasterInstance.mobFileCompactionChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1977, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt < HMasterInstance.mobFileCompactionChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1978, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt < HMasterInstance.nonceManager.conflictWaitIterationMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.conflictWaitIterationMs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1979, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt < HMasterInstance.nonceManager.deleteNonceGracePeriod"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.deleteNonceGracePeriod"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1980, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt < HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1981, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt < HMasterInstance.normalizer.masterRpcServices.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.rpcTimeout"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1982, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt != HMasterInstance.normalizer.minRegionCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.minRegionCount"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1983, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt < HMasterInstance.normalizerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1984, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt >= HMasterInstance.procedureExecutor.activeExecutorCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1985, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt != HMasterInstance.procedureExecutor.corePoolSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.corePoolSize"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1986, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt >= HMasterInstance.procedureExecutor.scheduler.nullPollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.nullPollCalls"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1987, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt < HMasterInstance.procedureStore.TABLE_NAME.hashCode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.TABLE_NAME.hashCode"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1988, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt != HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1989, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt < HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1990, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt < HMasterInstance.procedureStore.cleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1991, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt < HMasterInstance.procedureStore.cleaner.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.period"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1992, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt < HMasterInstance.procedureStore.cleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1993, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt < HMasterInstance.procedureStore.cleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1994, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt >= HMasterInstance.procedureStore.cleanerPool.cleanerLatch"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1995, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt != HMasterInstance.procedureStore.cleanerPool.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.size"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1996, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt <= HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1997, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt < HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1998, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt != HMasterInstance.procedureStore.numThreads"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.numThreads"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1999, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt < HMasterInstance.procedureStore.region.DEEP_OVERHEAD"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.DEEP_OVERHEAD"))).intValue());
			}
		});
	}
	static {
installInv1999();	}
}
