package daikon.hbase;
import daikon.*;
import java.util.Set;
import java.util.ArrayList;
import java.util.List;
//this class is automatically generated by our scripts
public class InvariantPool{

	public static List<Invariant> invariants = new ArrayList<>();

	static {
		invariants.addAll(InvariantPool999.invariants999);
		invariants.addAll(InvariantPool1999.invariants1999);
		invariants.addAll(InvariantPool2999.invariants2999);
		invariants.addAll(InvariantPool3999.invariants3999);
		invariants.addAll(InvariantPool4999.invariants4999);
		invariants.addAll(InvariantPool5999.invariants5999);
		invariants.addAll(InvariantPool6999.invariants6999);
		invariants.addAll(InvariantPool7999.invariants7999);
		invariants.addAll(InvariantPool8999.invariants8999);
		invariants.addAll(InvariantPool9999.invariants9999);
		invariants.addAll(InvariantPool10999.invariants10999);
		invariants.addAll(InvariantPool11999.invariants11999);
		invariants.addAll(InvariantPool12999.invariants12999);
		invariants.addAll(InvariantPool13999.invariants13999);
		invariants.addAll(InvariantPool14999.invariants14999);
		invariants.addAll(InvariantPool15999.invariants15999);
		invariants.addAll(InvariantPool16999.invariants16999);
		invariants.addAll(InvariantPool17999.invariants17999);
		invariants.addAll(InvariantPool18999.invariants18999);
		invariants.addAll(InvariantPool19999.invariants19999);
		invariants.addAll(InvariantPool20999.invariants20999);
		invariants.addAll(InvariantPool21999.invariants21999);
		invariants.addAll(InvariantPool22999.invariants22999);
		invariants.addAll(InvariantPool23999.invariants23999);
		invariants.addAll(InvariantPool24999.invariants24999);
		invariants.addAll(InvariantPool25999.invariants25999);
		invariants.addAll(InvariantPool26999.invariants26999);
		invariants.addAll(InvariantPool27999.invariants27999);
		invariants.addAll(InvariantPool28999.invariants28999);
		invariants.addAll(InvariantPool29999.invariants29999);
		invariants.addAll(InvariantPool30999.invariants30999);
		invariants.addAll(InvariantPool31999.invariants31999);
		invariants.addAll(InvariantPool32999.invariants32999);
		invariants.addAll(InvariantPool33999.invariants33999);
		invariants.addAll(InvariantPool34999.invariants34999);
		invariants.addAll(InvariantPool35999.invariants35999);
		invariants.addAll(InvariantPool36999.invariants36999);
		invariants.addAll(InvariantPool37999.invariants37999);
		invariants.addAll(InvariantPool38999.invariants38999);
		invariants.addAll(InvariantPool39999.invariants39999);
		invariants.addAll(InvariantPool40999.invariants40999);
		invariants.addAll(InvariantPool41999.invariants41999);
		invariants.addAll(InvariantPool42999.invariants42999);
		invariants.addAll(InvariantPool43999.invariants43999);
		invariants.addAll(InvariantPool44999.invariants44999);
		invariants.addAll(InvariantPool45999.invariants45999);
		invariants.addAll(InvariantPool46999.invariants46999);
		invariants.addAll(InvariantPool47999.invariants47999);
		invariants.addAll(InvariantPool48999.invariants48999);
		invariants.addAll(InvariantPool49999.invariants49999);
		invariants.addAll(InvariantPool50999.invariants50999);
		invariants.addAll(InvariantPool51999.invariants51999);
		invariants.addAll(InvariantPool52999.invariants52999);
		invariants.addAll(InvariantPool53999.invariants53999);
		invariants.addAll(InvariantPool54999.invariants54999);
		invariants.addAll(InvariantPool55999.invariants55999);
		invariants.addAll(InvariantPool56999.invariants56999);
		invariants.addAll(InvariantPool57999.invariants57999);
		invariants.addAll(InvariantPool58999.invariants58999);
		invariants.addAll(InvariantPool59999.invariants59999);
		invariants.addAll(InvariantPool60999.invariants60999);
		invariants.addAll(InvariantPool61999.invariants61999);
		invariants.addAll(InvariantPool62999.invariants62999);
		invariants.addAll(InvariantPool63999.invariants63999);
		invariants.addAll(InvariantPool64734.invariants64734);
	}
}
