package daikon.hbase;
import daikon.*;
import java.util.Set;
import java.util.ArrayList;
import java.util.List;
//this class is automatically generated by our scripts
public class InvariantPool4999{

	public static List<Invariant> invariants4999 = new ArrayList<>();

	public static void installInv4999(){
		invariants4999.add(new Invariant(4000, "HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4001, "HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS != HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4002, "HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS != HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4003, "HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4004, "HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4005, "HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4006, "HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS != daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4007, "HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS != daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4008, "HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4009, "HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4010, "HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS > HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4011, "HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS != HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4012, "HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4013, "HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS > HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4014, "HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS > HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4015, "HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4016, "HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4017, "HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4018, "HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4019, "HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4020, "HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4021, "HMasterInstance.procedureStore.cleaner.lastLog > HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4022, "HMasterInstance.procedureStore.cleaner.lastLog > HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4023, "HMasterInstance.procedureStore.cleaner.lastLog > HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4024, "HMasterInstance.procedureStore.cleaner.lastLog > HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4025, "HMasterInstance.procedureStore.cleaner.lastLog > HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4026, "HMasterInstance.procedureStore.cleaner.lastLog > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4027, "HMasterInstance.procedureStore.cleaner.lastLog > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4028, "HMasterInstance.procedureStore.cleaner.lastLog > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4029, "HMasterInstance.procedureStore.cleaner.lastLog > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4030, "HMasterInstance.procedureStore.cleaner.lastLog > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4031, "HMasterInstance.procedureStore.cleaner.lastLog > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4032, "HMasterInstance.procedureStore.cleaner.period > HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.period"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4033, "HMasterInstance.procedureStore.cleaner.period != HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.period"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4034, "HMasterInstance.procedureStore.cleaner.period < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.period"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4035, "HMasterInstance.procedureStore.cleaner.period > HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.period"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4036, "HMasterInstance.procedureStore.cleaner.period > HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.period"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4037, "HMasterInstance.procedureStore.cleaner.period > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.period"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4038, "HMasterInstance.procedureStore.cleaner.period > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.period"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4039, "HMasterInstance.procedureStore.cleaner.period > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.period"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4040, "HMasterInstance.procedureStore.cleaner.period > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.period"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4041, "HMasterInstance.procedureStore.cleaner.period > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.period"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4042, "HMasterInstance.procedureStore.cleaner.period > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.period"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4043, "HMasterInstance.procedureStore.cleaner.timeOfLastRun > HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4044, "HMasterInstance.procedureStore.cleaner.timeOfLastRun != HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4045, "HMasterInstance.procedureStore.cleaner.timeOfLastRun < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4046, "HMasterInstance.procedureStore.cleaner.timeOfLastRun > HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4047, "HMasterInstance.procedureStore.cleaner.timeOfLastRun > HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4048, "HMasterInstance.procedureStore.cleaner.timeOfLastRun > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4049, "HMasterInstance.procedureStore.cleaner.timeOfLastRun > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4050, "HMasterInstance.procedureStore.cleaner.timeOfLastRun > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4051, "HMasterInstance.procedureStore.cleaner.timeOfLastRun > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4052, "HMasterInstance.procedureStore.cleaner.timeOfLastRun > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4053, "HMasterInstance.procedureStore.cleaner.timeOfLastRun > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4054, "HMasterInstance.procedureStore.cleaner.timeOfThisRun > HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4055, "HMasterInstance.procedureStore.cleaner.timeOfThisRun != HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4056, "HMasterInstance.procedureStore.cleaner.timeOfThisRun < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4057, "HMasterInstance.procedureStore.cleaner.timeOfThisRun > HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4058, "HMasterInstance.procedureStore.cleaner.timeOfThisRun > HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4059, "HMasterInstance.procedureStore.cleaner.timeOfThisRun > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4060, "HMasterInstance.procedureStore.cleaner.timeOfThisRun > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4061, "HMasterInstance.procedureStore.cleaner.timeOfThisRun > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4062, "HMasterInstance.procedureStore.cleaner.timeOfThisRun > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4063, "HMasterInstance.procedureStore.cleaner.timeOfThisRun > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4064, "HMasterInstance.procedureStore.cleaner.timeOfThisRun > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4065, "HMasterInstance.procedureStore.cleanerPool.cleanerLatch <= HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4066, "HMasterInstance.procedureStore.cleanerPool.cleanerLatch != HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4067, "HMasterInstance.procedureStore.cleanerPool.cleanerLatch < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4068, "HMasterInstance.procedureStore.cleanerPool.cleanerLatch <= HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4069, "HMasterInstance.procedureStore.cleanerPool.cleanerLatch % HMasterInstance.tableDescriptors.invocations == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue() % ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue() == 0);
			}
		});
		invariants4999.add(new Invariant(4070, "HMasterInstance.procedureStore.cleanerPool.cleanerLatch < HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4071, "HMasterInstance.procedureStore.cleanerPool.cleanerLatch <= daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4072, "HMasterInstance.procedureStore.cleanerPool.cleanerLatch >= daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4073, "HMasterInstance.procedureStore.cleanerPool.cleanerLatch <= daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4074, "HMasterInstance.procedureStore.cleanerPool.cleanerLatch <= daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4075, "HMasterInstance.procedureStore.cleanerPool.cleanerLatch <= daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4076, "HMasterInstance.procedureStore.cleanerPool.cleanerLatch <= daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4077, "HMasterInstance.procedureStore.cleanerPool.cleanerLatch >= daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4078, "HMasterInstance.procedureStore.cleanerPool.size != HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.size"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4079, "HMasterInstance.procedureStore.cleanerPool.size != HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.size"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4080, "HMasterInstance.procedureStore.cleanerPool.size < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.size"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4081, "HMasterInstance.procedureStore.cleanerPool.size != HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.size"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4082, "HMasterInstance.procedureStore.cleanerPool.size > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.size"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4083, "HMasterInstance.procedureStore.cleanerPool.size >= daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.size"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4084, "HMasterInstance.procedureStore.cleanerPool.size != daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.size"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4085, "HMasterInstance.procedureStore.cleanerPool.size >= daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.size"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4086, "HMasterInstance.procedureStore.cleanerPool.size != daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.size"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4087, "HMasterInstance.procedureStore.cleanerPool.size != daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.size"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4088, "HMasterInstance.procedureStore.cleanerPool.size > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.size"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4089, "HMasterInstance.procedureStore.cleanerPool.size > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.size"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4090, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush < HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4091, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush != HMasterInstance.procedureStore.numThreads"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.numThreads"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4092, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush < HMasterInstance.procedureStore.region.DEEP_OVERHEAD"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.DEEP_OVERHEAD"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4093, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush != HMasterInstance.procedureStore.region.FIXED_OVERHEAD"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.FIXED_OVERHEAD"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4094, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush < HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4095, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush < HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4096, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush < HMasterInstance.procedureStore.region.blockingMemStoreSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.blockingMemStoreSize"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4097, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush > HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4098, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush != HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4099, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush >= HMasterInstance.procedureStore.region.majorInProgress"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4100, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush < HMasterInstance.procedureStore.region.maxBusyWaitDuration"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitDuration"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4101, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush != HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4102, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush < HMasterInstance.procedureStore.region.timestampSlop"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.timestampSlop"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4103, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush < HMasterInstance.procedureStore.walFactory.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walFactory.timeoutMillis"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4104, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush < HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4105, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush < HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4106, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush != HMasterInstance.procedureStore.walRoller.threadWakeFrequency"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.threadWakeFrequency"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4107, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush < HMasterInstance.regionServerAccounting.globalMemStoreLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimit"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4108, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush < HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4109, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush < HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4110, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4111, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush < HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4112, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush > HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4113, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush < HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4114, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush % HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() % ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"))).intValue() == 0);
			}
		});
		invariants4999.add(new Invariant(4115, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush > HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4116, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush < HMasterInstance.rpcClient.connectTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connectTO"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4117, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush > HMasterInstance.rpcClient.connections.poolMaxSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4118, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush > HMasterInstance.rpcClient.failedServers.latestExpiry"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4119, "HMasterInstance.rpcClient.failedServers.latestExpiry % HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue() % ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() == 0);
			}
		});
		invariants4999.add(new Invariant(4120, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush < HMasterInstance.rpcClient.failedServers.recheckServersTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.recheckServersTimeout"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4121, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush > HMasterInstance.rpcClient.failureSleep"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failureSleep"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4122, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush < HMasterInstance.rpcClient.maxConcurrentCallsPerServer"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.maxConcurrentCallsPerServer"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4123, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush < HMasterInstance.rpcClient.minIdleTimeBeforeClose"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.minIdleTimeBeforeClose"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4124, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush < HMasterInstance.rpcClient.readTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.readTO"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4125, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush < HMasterInstance.rpcClient.writeTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.writeTO"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4126, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush < HMasterInstance.rpcServices.maxScannerResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.maxScannerResultSize"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4127, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush < HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4128, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush < HMasterInstance.rpcServices.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcTimeout"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4129, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush > HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4130, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush < HMasterInstance.rsFatals.maxSizeBytes"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.maxSizeBytes"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4131, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4132, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush < HMasterInstance.serverManager.flushedSeqIdFlusher.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.period"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4133, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush != HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4134, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4135, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush < HMasterInstance.serverManager.maxSkew"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.maxSkew"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4136, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4137, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush < HMasterInstance.snapshotCleanerChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfThisRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4138, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush < HMasterInstance.snapshotManager.coordinator.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotManager.coordinator.timeoutMillis"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4139, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush >= HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4140, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush != HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4141, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush != HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4142, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4143, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush < HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4144, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush >= daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4145, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush >= daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4146, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush >= daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4147, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush >= daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4148, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush >= daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4149, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush >= daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4150, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush != daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4151, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush % daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE) == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() % daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))) == 0);
			}
		});
		invariants4999.add(new Invariant(4152, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush >= daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4153, "HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime != HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4154, "HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4155, "HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime > HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4156, "HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime > HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4157, "HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4158, "HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4159, "HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4160, "HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4161, "HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4162, "HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4163, "HMasterInstance.procedureStore.numThreads != HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.numThreads"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4164, "HMasterInstance.procedureStore.numThreads < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.numThreads"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4165, "HMasterInstance.procedureStore.numThreads != HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.numThreads"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4166, "HMasterInstance.procedureStore.numThreads != HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.numThreads"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4167, "HMasterInstance.procedureStore.numThreads > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.numThreads"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4168, "HMasterInstance.procedureStore.numThreads > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.numThreads"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4169, "HMasterInstance.procedureStore.numThreads >= daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.numThreads"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4170, "HMasterInstance.procedureStore.numThreads != daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.numThreads"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4171, "HMasterInstance.procedureStore.numThreads != daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.numThreads"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4172, "HMasterInstance.procedureStore.numThreads > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.numThreads"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4173, "HMasterInstance.procedureStore.numThreads > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.numThreads"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4174, "HMasterInstance.procedureStore.region.DEEP_OVERHEAD != HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.DEEP_OVERHEAD"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4175, "HMasterInstance.procedureStore.region.DEEP_OVERHEAD < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.DEEP_OVERHEAD"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4176, "HMasterInstance.procedureStore.region.DEEP_OVERHEAD > HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.DEEP_OVERHEAD"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4177, "HMasterInstance.procedureStore.region.DEEP_OVERHEAD > HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.DEEP_OVERHEAD"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4178, "HMasterInstance.procedureStore.region.DEEP_OVERHEAD > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.DEEP_OVERHEAD"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4179, "HMasterInstance.procedureStore.region.DEEP_OVERHEAD > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.DEEP_OVERHEAD"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4180, "HMasterInstance.procedureStore.region.DEEP_OVERHEAD > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.DEEP_OVERHEAD"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4181, "HMasterInstance.procedureStore.region.DEEP_OVERHEAD > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.DEEP_OVERHEAD"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4182, "HMasterInstance.procedureStore.region.DEEP_OVERHEAD > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.DEEP_OVERHEAD"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4183, "HMasterInstance.procedureStore.region.DEEP_OVERHEAD > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.DEEP_OVERHEAD"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4184, "HMasterInstance.procedureStore.region.FIXED_OVERHEAD != HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.FIXED_OVERHEAD"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4185, "HMasterInstance.procedureStore.region.FIXED_OVERHEAD < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.FIXED_OVERHEAD"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4186, "HMasterInstance.procedureStore.region.FIXED_OVERHEAD > HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.FIXED_OVERHEAD"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4187, "HMasterInstance.procedureStore.region.FIXED_OVERHEAD > HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.FIXED_OVERHEAD"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4188, "HMasterInstance.procedureStore.region.FIXED_OVERHEAD > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.FIXED_OVERHEAD"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4189, "HMasterInstance.procedureStore.region.FIXED_OVERHEAD > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.FIXED_OVERHEAD"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4190, "HMasterInstance.procedureStore.region.FIXED_OVERHEAD > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.FIXED_OVERHEAD"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4191, "HMasterInstance.procedureStore.region.FIXED_OVERHEAD > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.FIXED_OVERHEAD"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4192, "HMasterInstance.procedureStore.region.FIXED_OVERHEAD > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.FIXED_OVERHEAD"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4193, "HMasterInstance.procedureStore.region.FIXED_OVERHEAD > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.FIXED_OVERHEAD"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4194, "HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES != HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4195, "HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4196, "HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES > HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4197, "HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES > HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4198, "HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4199, "HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4200, "HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4201, "HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4202, "HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4203, "HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4204, "HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL != HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4205, "HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4206, "HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL > HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4207, "HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL > HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4208, "HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4209, "HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4210, "HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4211, "HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4212, "HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4213, "HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4214, "HMasterInstance.procedureStore.region.blockingMemStoreSize != HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.blockingMemStoreSize"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4215, "HMasterInstance.procedureStore.region.blockingMemStoreSize < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.blockingMemStoreSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4216, "HMasterInstance.procedureStore.region.blockingMemStoreSize > HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.blockingMemStoreSize"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4217, "HMasterInstance.procedureStore.region.blockingMemStoreSize > HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.blockingMemStoreSize"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4218, "HMasterInstance.procedureStore.region.blockingMemStoreSize > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.blockingMemStoreSize"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4219, "HMasterInstance.procedureStore.region.blockingMemStoreSize > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.blockingMemStoreSize"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4220, "HMasterInstance.procedureStore.region.blockingMemStoreSize > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.blockingMemStoreSize"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4221, "HMasterInstance.procedureStore.region.blockingMemStoreSize > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.blockingMemStoreSize"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4222, "HMasterInstance.procedureStore.region.blockingMemStoreSize > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.blockingMemStoreSize"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4223, "HMasterInstance.procedureStore.region.blockingMemStoreSize > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.blockingMemStoreSize"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4224, "HMasterInstance.procedureStore.region.lastFlushOpSeqId <= HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4225, "HMasterInstance.procedureStore.region.lastFlushOpSeqId < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4226, "HMasterInstance.procedureStore.region.lastFlushOpSeqId < HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4227, "HMasterInstance.procedureStore.region.lastFlushOpSeqId < HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4228, "HMasterInstance.procedureStore.region.lastFlushOpSeqId <= daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4229, "HMasterInstance.procedureStore.region.lastFlushOpSeqId <= daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4230, "HMasterInstance.procedureStore.region.lastFlushOpSeqId <= daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4231, "HMasterInstance.procedureStore.region.lastFlushOpSeqId <= daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4232, "HMasterInstance.procedureStore.region.lastFlushOpSeqId <= daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4233, "HMasterInstance.procedureStore.region.lastFlushOpSeqId < daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() < daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4234, "HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId != HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4235, "HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4236, "HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId <= HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4237, "HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId >= daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4238, "HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId >= daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4239, "HMasterInstance.procedureStore.region.majorInProgress != HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4240, "HMasterInstance.procedureStore.region.majorInProgress < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4241, "HMasterInstance.procedureStore.region.majorInProgress <= HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4242, "HMasterInstance.procedureStore.region.majorInProgress % HMasterInstance.tableDescriptors.invocations == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue() % ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue() == 0);
			}
		});
		invariants4999.add(new Invariant(4243, "HMasterInstance.procedureStore.region.majorInProgress < HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4244, "HMasterInstance.procedureStore.region.majorInProgress <= daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4245, "HMasterInstance.procedureStore.region.majorInProgress >= daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4246, "HMasterInstance.procedureStore.region.majorInProgress <= daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4247, "HMasterInstance.procedureStore.region.majorInProgress <= daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4248, "HMasterInstance.procedureStore.region.majorInProgress <= daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4249, "HMasterInstance.procedureStore.region.majorInProgress <= daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4250, "HMasterInstance.procedureStore.region.majorInProgress >= daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4251, "HMasterInstance.procedureStore.region.maxBusyWaitDuration != HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitDuration"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4252, "HMasterInstance.procedureStore.region.maxBusyWaitDuration < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitDuration"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4253, "HMasterInstance.procedureStore.region.maxBusyWaitDuration > HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitDuration"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4254, "HMasterInstance.procedureStore.region.maxBusyWaitDuration > HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitDuration"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4255, "HMasterInstance.procedureStore.region.maxBusyWaitDuration > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitDuration"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4256, "HMasterInstance.procedureStore.region.maxBusyWaitDuration > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitDuration"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4257, "HMasterInstance.procedureStore.region.maxBusyWaitDuration > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitDuration"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4258, "HMasterInstance.procedureStore.region.maxBusyWaitDuration > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitDuration"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4259, "HMasterInstance.procedureStore.region.maxBusyWaitDuration > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitDuration"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4260, "HMasterInstance.procedureStore.region.maxBusyWaitDuration > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitDuration"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4261, "HMasterInstance.procedureStore.region.maxBusyWaitMultiplier != HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4262, "HMasterInstance.procedureStore.region.maxBusyWaitMultiplier < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4263, "HMasterInstance.procedureStore.region.maxBusyWaitMultiplier > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4264, "HMasterInstance.procedureStore.region.maxBusyWaitMultiplier != daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4265, "HMasterInstance.procedureStore.region.maxBusyWaitMultiplier > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4266, "HMasterInstance.procedureStore.region.maxBusyWaitMultiplier > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4267, "HMasterInstance.procedureStore.region.timestampSlop > HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.timestampSlop"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4268, "HMasterInstance.procedureStore.region.timestampSlop > HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.timestampSlop"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4269, "HMasterInstance.procedureStore.region.timestampSlop > HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.timestampSlop"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4270, "HMasterInstance.procedureStore.region.timestampSlop > HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.timestampSlop"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4271, "HMasterInstance.procedureStore.region.timestampSlop > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.timestampSlop"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4272, "HMasterInstance.procedureStore.region.timestampSlop > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.timestampSlop"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4273, "HMasterInstance.procedureStore.region.timestampSlop > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.timestampSlop"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4274, "HMasterInstance.procedureStore.region.timestampSlop > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.timestampSlop"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4275, "HMasterInstance.procedureStore.region.timestampSlop > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.timestampSlop"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4276, "HMasterInstance.procedureStore.region.timestampSlop > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.timestampSlop"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4277, "HMasterInstance.procedureStore.walFactory.timeoutMillis != HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walFactory.timeoutMillis"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4278, "HMasterInstance.procedureStore.walFactory.timeoutMillis < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walFactory.timeoutMillis"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4279, "HMasterInstance.procedureStore.walFactory.timeoutMillis > HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walFactory.timeoutMillis"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4280, "HMasterInstance.procedureStore.walFactory.timeoutMillis > HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walFactory.timeoutMillis"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4281, "HMasterInstance.procedureStore.walFactory.timeoutMillis > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walFactory.timeoutMillis"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4282, "HMasterInstance.procedureStore.walFactory.timeoutMillis > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walFactory.timeoutMillis"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4283, "HMasterInstance.procedureStore.walFactory.timeoutMillis > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walFactory.timeoutMillis"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4284, "HMasterInstance.procedureStore.walFactory.timeoutMillis > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walFactory.timeoutMillis"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4285, "HMasterInstance.procedureStore.walFactory.timeoutMillis > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walFactory.timeoutMillis"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4286, "HMasterInstance.procedureStore.walFactory.timeoutMillis > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walFactory.timeoutMillis"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4287, "HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval != HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4288, "HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4289, "HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval > HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4290, "HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval > HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4291, "HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4292, "HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4293, "HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4294, "HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4295, "HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4296, "HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4297, "HMasterInstance.procedureStore.walRoller.lastRollTime != HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4298, "HMasterInstance.procedureStore.walRoller.lastRollTime < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4299, "HMasterInstance.procedureStore.walRoller.lastRollTime > HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4300, "HMasterInstance.procedureStore.walRoller.lastRollTime > HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4301, "HMasterInstance.procedureStore.walRoller.lastRollTime > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4302, "HMasterInstance.procedureStore.walRoller.lastRollTime > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4303, "HMasterInstance.procedureStore.walRoller.lastRollTime > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4304, "HMasterInstance.procedureStore.walRoller.lastRollTime > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4305, "HMasterInstance.procedureStore.walRoller.lastRollTime > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4306, "HMasterInstance.procedureStore.walRoller.lastRollTime > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4307, "HMasterInstance.procedureStore.walRoller.threadWakeFrequency != HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.threadWakeFrequency"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4308, "HMasterInstance.procedureStore.walRoller.threadWakeFrequency < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.threadWakeFrequency"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4309, "HMasterInstance.procedureStore.walRoller.threadWakeFrequency != HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.threadWakeFrequency"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4310, "HMasterInstance.procedureStore.walRoller.threadWakeFrequency != HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.threadWakeFrequency"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4311, "HMasterInstance.procedureStore.walRoller.threadWakeFrequency > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.threadWakeFrequency"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4312, "HMasterInstance.procedureStore.walRoller.threadWakeFrequency > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.threadWakeFrequency"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4313, "HMasterInstance.procedureStore.walRoller.threadWakeFrequency > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.threadWakeFrequency"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4314, "HMasterInstance.procedureStore.walRoller.threadWakeFrequency > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.threadWakeFrequency"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4315, "HMasterInstance.procedureStore.walRoller.threadWakeFrequency > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.threadWakeFrequency"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4316, "HMasterInstance.procedureStore.walRoller.threadWakeFrequency > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.threadWakeFrequency"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4317, "HMasterInstance.regionServerAccounting.globalMemStoreLimit != HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimit"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4318, "HMasterInstance.regionServerAccounting.globalMemStoreLimit < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimit"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4319, "HMasterInstance.regionServerAccounting.globalMemStoreLimit > HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimit"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4320, "HMasterInstance.regionServerAccounting.globalMemStoreLimit > HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimit"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4321, "HMasterInstance.regionServerAccounting.globalMemStoreLimit > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimit"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4322, "HMasterInstance.regionServerAccounting.globalMemStoreLimit > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimit"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4323, "HMasterInstance.regionServerAccounting.globalMemStoreLimit > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimit"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4324, "HMasterInstance.regionServerAccounting.globalMemStoreLimit > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimit"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4325, "HMasterInstance.regionServerAccounting.globalMemStoreLimit > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimit"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4326, "HMasterInstance.regionServerAccounting.globalMemStoreLimit > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimit"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4327, "HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark != HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4328, "HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4329, "HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark > HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4330, "HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark > HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4331, "HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4332, "HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4333, "HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4334, "HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4335, "HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4336, "HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4337, "HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval != HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4338, "HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4339, "HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval > HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4340, "HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval > HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4341, "HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4342, "HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4343, "HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4344, "HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4345, "HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4346, "HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4347, "HMasterInstance.replicationBarrierCleaner.lastLog > HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4348, "HMasterInstance.replicationBarrierCleaner.lastLog > HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4349, "HMasterInstance.replicationBarrierCleaner.lastLog > HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4350, "HMasterInstance.replicationBarrierCleaner.lastLog > HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4351, "HMasterInstance.replicationBarrierCleaner.lastLog > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4352, "HMasterInstance.replicationBarrierCleaner.lastLog > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4353, "HMasterInstance.replicationBarrierCleaner.lastLog > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4354, "HMasterInstance.replicationBarrierCleaner.lastLog > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4355, "HMasterInstance.replicationBarrierCleaner.lastLog > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4356, "HMasterInstance.replicationBarrierCleaner.lastLog > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4357, "HMasterInstance.replicationBarrierCleaner.timeOfLastRun != HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4358, "HMasterInstance.replicationBarrierCleaner.timeOfLastRun < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4359, "HMasterInstance.replicationBarrierCleaner.timeOfLastRun > HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4360, "HMasterInstance.replicationBarrierCleaner.timeOfLastRun > HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4361, "HMasterInstance.replicationBarrierCleaner.timeOfLastRun > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4362, "HMasterInstance.replicationBarrierCleaner.timeOfLastRun > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4363, "HMasterInstance.replicationBarrierCleaner.timeOfLastRun > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4364, "HMasterInstance.replicationBarrierCleaner.timeOfLastRun > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4365, "HMasterInstance.replicationBarrierCleaner.timeOfLastRun > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4366, "HMasterInstance.replicationBarrierCleaner.timeOfLastRun > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4367, "HMasterInstance.rpcClient.callIdCnt < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4368, "HMasterInstance.rpcClient.callIdCnt < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4369, "HMasterInstance.rpcClient.callIdCnt < HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4370, "HMasterInstance.rpcClient.callIdCnt < HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4371, "HMasterInstance.rpcClient.callIdCnt > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4372, "HMasterInstance.rpcClient.callIdCnt > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4373, "HMasterInstance.rpcClient.callIdCnt > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4374, "HMasterInstance.rpcClient.callIdCnt > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4375, "daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE) % HMasterInstance.rpcClient.callIdCnt == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))) % ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue() == 0);
			}
		});
		invariants4999.add(new Invariant(4376, "HMasterInstance.rpcClient.callIdCnt % daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)-1 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue() % daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0])))-1 == 0);
			}
		});
		invariants4999.add(new Invariant(4377, "HMasterInstance.rpcClient.callIdCnt > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4378, "HMasterInstance.rpcClient.callIdCnt > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4379, "HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4380, "HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4381, "HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize > HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4382, "HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize > HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4383, "HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4384, "HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4385, "HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4386, "HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4387, "daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE) % HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))) % ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"))).intValue() == 0);
			}
		});
		invariants4999.add(new Invariant(4388, "HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize % daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)-1 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"))).intValue() % daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0])))-1 == 0);
			}
		});
		invariants4999.add(new Invariant(4389, "HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4390, "HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4391, "HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4392, "HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4393, "HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier < HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4394, "HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier < HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4395, "HMasterInstance.tableDescriptors.invocations % HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue() % ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"))).intValue() == 0);
			}
		});
		invariants4999.add(new Invariant(4396, "HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4397, "HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier != daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4398, "HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier % daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"))).intValue() % daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1 == 0);
			}
		});
		invariants4999.add(new Invariant(4399, "HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier >= daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4400, "HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4401, "HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4402, "daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE) % HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))) % ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"))).intValue() == 0);
			}
		});
		invariants4999.add(new Invariant(4403, "HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier % daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)-1 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"))).intValue() % daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0])))-1 == 0);
			}
		});
		invariants4999.add(new Invariant(4404, "HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4405, "HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4406, "HMasterInstance.rpcClient.connectTO < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connectTO"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4407, "HMasterInstance.rpcClient.connectTO < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connectTO"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4408, "HMasterInstance.rpcClient.connectTO > HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connectTO"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4409, "HMasterInstance.rpcClient.connectTO > HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connectTO"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4410, "HMasterInstance.rpcClient.connectTO > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connectTO"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4411, "HMasterInstance.rpcClient.connectTO > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connectTO"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4412, "HMasterInstance.rpcClient.connectTO > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connectTO"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4413, "HMasterInstance.rpcClient.connectTO > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connectTO"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4414, "daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE) % HMasterInstance.rpcClient.connectTO == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))) % ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connectTO"))).intValue() == 0);
			}
		});
		invariants4999.add(new Invariant(4415, "HMasterInstance.rpcClient.connectTO % daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)-1 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connectTO"))).intValue() % daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0])))-1 == 0);
			}
		});
		invariants4999.add(new Invariant(4416, "HMasterInstance.rpcClient.connectTO > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connectTO"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4417, "HMasterInstance.rpcClient.connectTO > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connectTO"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4418, "HMasterInstance.rpcClient.connections.poolMaxSize < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4419, "HMasterInstance.rpcClient.connections.poolMaxSize < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4420, "HMasterInstance.rpcClient.connections.poolMaxSize < HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4421, "HMasterInstance.rpcClient.connections.poolMaxSize < HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4422, "HMasterInstance.rpcClient.connections.poolMaxSize != daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4423, "HMasterInstance.rpcClient.connections.poolMaxSize != daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4424, "HMasterInstance.rpcClient.connections.poolMaxSize > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4425, "HMasterInstance.rpcClient.connections.poolMaxSize > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4426, "HMasterInstance.rpcClient.connections.poolMaxSize % daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)-1 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue() % daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0])))-1 == 0);
			}
		});
		invariants4999.add(new Invariant(4427, "HMasterInstance.rpcClient.connections.poolMaxSize == daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)-1*daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0])))-1*daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4428, "HMasterInstance.rpcClient.connections.poolMaxSize > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4429, "HMasterInstance.rpcClient.failedServers.latestExpiry < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4430, "HMasterInstance.rpcClient.failedServers.latestExpiry < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4431, "HMasterInstance.rpcClient.failedServers.latestExpiry % HMasterInstance.tableDescriptors.cachehits == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue() % ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue() == 0);
			}
		});
		invariants4999.add(new Invariant(4432, "HMasterInstance.rpcClient.failedServers.latestExpiry < HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4433, "HMasterInstance.rpcClient.failedServers.latestExpiry % HMasterInstance.tableDescriptors.invocations == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue() % ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue() == 0);
			}
		});
		invariants4999.add(new Invariant(4434, "HMasterInstance.rpcClient.failedServers.latestExpiry < HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4435, "HMasterInstance.rpcClient.failedServers.latestExpiry <= daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4436, "HMasterInstance.rpcClient.failedServers.latestExpiry != daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4437, "HMasterInstance.rpcClient.failedServers.latestExpiry % daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue() % daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1 == 0);
			}
		});
		invariants4999.add(new Invariant(4438, "HMasterInstance.rpcClient.failedServers.latestExpiry == daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)*daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0])))*daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4439, "daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE) == HMasterInstance.rpcClient.failedServers.latestExpiry*HMasterInstance.rpcClient.failedServers.latestExpiry"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))) == ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue()*((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4440, "HMasterInstance.rpcClient.failedServers.latestExpiry % daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)-1 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue() % daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0])))-1 == 0);
			}
		});
		invariants4999.add(new Invariant(4441, "HMasterInstance.rpcClient.failedServers.recheckServersTimeout < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.recheckServersTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4442, "HMasterInstance.rpcClient.failedServers.recheckServersTimeout < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.recheckServersTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4443, "HMasterInstance.rpcClient.failedServers.recheckServersTimeout > HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.recheckServersTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4444, "HMasterInstance.rpcClient.failedServers.recheckServersTimeout > HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.recheckServersTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4445, "HMasterInstance.rpcClient.failedServers.recheckServersTimeout > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.recheckServersTimeout"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4446, "HMasterInstance.rpcClient.failedServers.recheckServersTimeout > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.recheckServersTimeout"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4447, "HMasterInstance.rpcClient.failedServers.recheckServersTimeout > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.recheckServersTimeout"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4448, "HMasterInstance.rpcClient.failedServers.recheckServersTimeout > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.recheckServersTimeout"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4449, "daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE) % HMasterInstance.rpcClient.failedServers.recheckServersTimeout == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))) % ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.recheckServersTimeout"))).intValue() == 0);
			}
		});
		invariants4999.add(new Invariant(4450, "HMasterInstance.rpcClient.failedServers.recheckServersTimeout % daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)-1 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.recheckServersTimeout"))).intValue() % daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0])))-1 == 0);
			}
		});
		invariants4999.add(new Invariant(4451, "HMasterInstance.rpcClient.failedServers.recheckServersTimeout > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.recheckServersTimeout"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4452, "HMasterInstance.rpcClient.failedServers.recheckServersTimeout > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.recheckServersTimeout"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4453, "HMasterInstance.rpcClient.failureSleep < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failureSleep"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4454, "HMasterInstance.rpcClient.failureSleep < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failureSleep"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4455, "HMasterInstance.rpcClient.failureSleep < HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failureSleep"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4456, "HMasterInstance.rpcClient.failureSleep < HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failureSleep"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4457, "HMasterInstance.rpcClient.failureSleep > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failureSleep"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4458, "HMasterInstance.rpcClient.failureSleep > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failureSleep"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4459, "HMasterInstance.rpcClient.failureSleep > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failureSleep"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4460, "HMasterInstance.rpcClient.failureSleep > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failureSleep"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4461, "daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE) % HMasterInstance.rpcClient.failureSleep == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))) % ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failureSleep"))).intValue() == 0);
			}
		});
		invariants4999.add(new Invariant(4462, "HMasterInstance.rpcClient.failureSleep % daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)-1 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failureSleep"))).intValue() % daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0])))-1 == 0);
			}
		});
		invariants4999.add(new Invariant(4463, "HMasterInstance.rpcClient.failureSleep > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failureSleep"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4464, "HMasterInstance.rpcClient.failureSleep > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failureSleep"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4465, "HMasterInstance.rpcClient.maxConcurrentCallsPerServer < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.maxConcurrentCallsPerServer"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4466, "HMasterInstance.rpcClient.maxConcurrentCallsPerServer < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.maxConcurrentCallsPerServer"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4467, "HMasterInstance.rpcClient.maxConcurrentCallsPerServer > HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.maxConcurrentCallsPerServer"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4468, "HMasterInstance.rpcClient.maxConcurrentCallsPerServer > HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.maxConcurrentCallsPerServer"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4469, "HMasterInstance.rpcClient.maxConcurrentCallsPerServer > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.maxConcurrentCallsPerServer"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4470, "HMasterInstance.rpcClient.maxConcurrentCallsPerServer > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.maxConcurrentCallsPerServer"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4471, "HMasterInstance.rpcClient.maxConcurrentCallsPerServer > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.maxConcurrentCallsPerServer"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4472, "HMasterInstance.rpcClient.maxConcurrentCallsPerServer > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.maxConcurrentCallsPerServer"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4473, "daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE) % HMasterInstance.rpcClient.maxConcurrentCallsPerServer == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))) % ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.maxConcurrentCallsPerServer"))).intValue() == 0);
			}
		});
		invariants4999.add(new Invariant(4474, "HMasterInstance.rpcClient.maxConcurrentCallsPerServer % daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)-1 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.maxConcurrentCallsPerServer"))).intValue() % daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0])))-1 == 0);
			}
		});
		invariants4999.add(new Invariant(4475, "HMasterInstance.rpcClient.maxConcurrentCallsPerServer > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.maxConcurrentCallsPerServer"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4476, "HMasterInstance.rpcClient.maxConcurrentCallsPerServer > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.maxConcurrentCallsPerServer"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4477, "HMasterInstance.rpcClient.minIdleTimeBeforeClose < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.minIdleTimeBeforeClose"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4478, "HMasterInstance.rpcClient.minIdleTimeBeforeClose < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.minIdleTimeBeforeClose"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4479, "HMasterInstance.rpcClient.minIdleTimeBeforeClose > HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.minIdleTimeBeforeClose"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4480, "HMasterInstance.rpcClient.minIdleTimeBeforeClose % HMasterInstance.tableDescriptors.invocations == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.minIdleTimeBeforeClose"))).intValue() % ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue() == 0);
			}
		});
		invariants4999.add(new Invariant(4481, "HMasterInstance.rpcClient.minIdleTimeBeforeClose > HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.minIdleTimeBeforeClose"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4482, "HMasterInstance.rpcClient.minIdleTimeBeforeClose > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.minIdleTimeBeforeClose"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4483, "HMasterInstance.rpcClient.minIdleTimeBeforeClose > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.minIdleTimeBeforeClose"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4484, "HMasterInstance.rpcClient.minIdleTimeBeforeClose % daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.minIdleTimeBeforeClose"))).intValue() % daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1 == 0);
			}
		});
		invariants4999.add(new Invariant(4485, "HMasterInstance.rpcClient.minIdleTimeBeforeClose > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.minIdleTimeBeforeClose"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4486, "HMasterInstance.rpcClient.minIdleTimeBeforeClose > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.minIdleTimeBeforeClose"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4487, "daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE) % HMasterInstance.rpcClient.minIdleTimeBeforeClose == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))) % ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.minIdleTimeBeforeClose"))).intValue() == 0);
			}
		});
		invariants4999.add(new Invariant(4488, "HMasterInstance.rpcClient.minIdleTimeBeforeClose % daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)-1 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.minIdleTimeBeforeClose"))).intValue() % daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0])))-1 == 0);
			}
		});
		invariants4999.add(new Invariant(4489, "HMasterInstance.rpcClient.minIdleTimeBeforeClose > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.minIdleTimeBeforeClose"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4490, "HMasterInstance.rpcClient.minIdleTimeBeforeClose > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.minIdleTimeBeforeClose"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4491, "HMasterInstance.rpcClient.readTO < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.readTO"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4492, "HMasterInstance.rpcClient.readTO < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.readTO"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4493, "HMasterInstance.rpcClient.readTO > HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.readTO"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4494, "HMasterInstance.rpcClient.readTO > HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.readTO"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4495, "HMasterInstance.rpcClient.readTO > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.readTO"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4496, "HMasterInstance.rpcClient.readTO > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.readTO"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4497, "HMasterInstance.rpcClient.readTO > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.readTO"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4498, "HMasterInstance.rpcClient.readTO > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.readTO"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4499, "daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE) % HMasterInstance.rpcClient.readTO == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))) % ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.readTO"))).intValue() == 0);
			}
		});
		invariants4999.add(new Invariant(4500, "HMasterInstance.rpcClient.readTO % daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)-1 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.readTO"))).intValue() % daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0])))-1 == 0);
			}
		});
		invariants4999.add(new Invariant(4501, "HMasterInstance.rpcClient.readTO > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.readTO"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4502, "HMasterInstance.rpcClient.readTO > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.readTO"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4503, "HMasterInstance.rpcClient.writeTO < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.writeTO"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4504, "HMasterInstance.rpcClient.writeTO < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.writeTO"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4505, "HMasterInstance.rpcClient.writeTO > HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.writeTO"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4506, "HMasterInstance.rpcClient.writeTO % HMasterInstance.tableDescriptors.invocations == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.writeTO"))).intValue() % ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue() == 0);
			}
		});
		invariants4999.add(new Invariant(4507, "HMasterInstance.rpcClient.writeTO > HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.writeTO"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4508, "HMasterInstance.rpcClient.writeTO > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.writeTO"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4509, "HMasterInstance.rpcClient.writeTO > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.writeTO"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4510, "HMasterInstance.rpcClient.writeTO % daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.writeTO"))).intValue() % daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1 == 0);
			}
		});
		invariants4999.add(new Invariant(4511, "HMasterInstance.rpcClient.writeTO > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.writeTO"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4512, "HMasterInstance.rpcClient.writeTO > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.writeTO"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4513, "daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE) % HMasterInstance.rpcClient.writeTO == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))) % ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.writeTO"))).intValue() == 0);
			}
		});
		invariants4999.add(new Invariant(4514, "HMasterInstance.rpcClient.writeTO % daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)-1 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.writeTO"))).intValue() % daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0])))-1 == 0);
			}
		});
		invariants4999.add(new Invariant(4515, "HMasterInstance.rpcClient.writeTO > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.writeTO"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4516, "HMasterInstance.rpcClient.writeTO > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.writeTO"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4517, "HMasterInstance.rpcServices.maxScannerResultSize != HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.maxScannerResultSize"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4518, "HMasterInstance.rpcServices.maxScannerResultSize < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.maxScannerResultSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4519, "HMasterInstance.rpcServices.maxScannerResultSize > HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.maxScannerResultSize"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4520, "HMasterInstance.rpcServices.maxScannerResultSize > HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.maxScannerResultSize"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4521, "HMasterInstance.rpcServices.maxScannerResultSize > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.maxScannerResultSize"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4522, "HMasterInstance.rpcServices.maxScannerResultSize > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.maxScannerResultSize"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4523, "HMasterInstance.rpcServices.maxScannerResultSize > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.maxScannerResultSize"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4524, "HMasterInstance.rpcServices.maxScannerResultSize > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.maxScannerResultSize"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4525, "HMasterInstance.rpcServices.maxScannerResultSize > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.maxScannerResultSize"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4526, "HMasterInstance.rpcServices.maxScannerResultSize > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.maxScannerResultSize"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4527, "HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT != HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4528, "HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4529, "HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT > HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4530, "HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT > HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4531, "HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4532, "HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4533, "HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4534, "HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4535, "HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4536, "HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4537, "HMasterInstance.rpcServices.rpcTimeout != HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcTimeout"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4538, "HMasterInstance.rpcServices.rpcTimeout < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4539, "HMasterInstance.rpcServices.rpcTimeout > HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4540, "HMasterInstance.rpcServices.rpcTimeout > HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4541, "HMasterInstance.rpcServices.rpcTimeout > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcTimeout"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4542, "HMasterInstance.rpcServices.rpcTimeout > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcTimeout"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4543, "HMasterInstance.rpcServices.rpcTimeout > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcTimeout"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4544, "HMasterInstance.rpcServices.rpcTimeout > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcTimeout"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4545, "HMasterInstance.rpcServices.rpcTimeout > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcTimeout"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4546, "HMasterInstance.rpcServices.rpcTimeout > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcTimeout"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4547, "HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4548, "HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4549, "HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash < HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4550, "HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash < HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4551, "HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash < daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue() < daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4552, "HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash < daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue() < daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4553, "HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash < daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue() < daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4554, "HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash < daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue() < daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4555, "HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash < daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue() < daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4556, "HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash < daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue() < daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4557, "HMasterInstance.rsFatals.maxSizeBytes != HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.maxSizeBytes"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4558, "HMasterInstance.rsFatals.maxSizeBytes < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.maxSizeBytes"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4559, "HMasterInstance.rsFatals.maxSizeBytes > HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.maxSizeBytes"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4560, "HMasterInstance.rsFatals.maxSizeBytes > HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.maxSizeBytes"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4561, "HMasterInstance.rsFatals.maxSizeBytes > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.maxSizeBytes"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4562, "HMasterInstance.rsFatals.maxSizeBytes > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.maxSizeBytes"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4563, "HMasterInstance.rsFatals.maxSizeBytes > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.maxSizeBytes"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4564, "HMasterInstance.rsFatals.maxSizeBytes > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.maxSizeBytes"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4565, "HMasterInstance.rsFatals.maxSizeBytes > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.maxSizeBytes"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4566, "HMasterInstance.rsFatals.maxSizeBytes > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.maxSizeBytes"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4567, "HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog > HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4568, "HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog > HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4569, "HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog > HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4570, "HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog > HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4571, "HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4572, "HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4573, "HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4574, "HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4575, "HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4576, "HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4577, "HMasterInstance.serverManager.flushedSeqIdFlusher.period != HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.period"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4578, "HMasterInstance.serverManager.flushedSeqIdFlusher.period < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.period"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4579, "HMasterInstance.serverManager.flushedSeqIdFlusher.period > HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.period"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4580, "HMasterInstance.serverManager.flushedSeqIdFlusher.period > HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.period"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4581, "HMasterInstance.serverManager.flushedSeqIdFlusher.period > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.period"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4582, "HMasterInstance.serverManager.flushedSeqIdFlusher.period > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.period"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4583, "HMasterInstance.serverManager.flushedSeqIdFlusher.period > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.period"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4584, "HMasterInstance.serverManager.flushedSeqIdFlusher.period > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.period"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4585, "HMasterInstance.serverManager.flushedSeqIdFlusher.period > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.period"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4586, "HMasterInstance.serverManager.flushedSeqIdFlusher.period > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.period"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4587, "HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4588, "HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun != HMasterInstance.serverManager.maxSkew"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.maxSkew"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4589, "HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4590, "HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun != HMasterInstance.snapshotCleanerChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfThisRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4591, "HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun != HMasterInstance.snapshotManager.coordinator.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotManager.coordinator.timeoutMillis"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4592, "HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun != HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4593, "HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun != HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4594, "HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun != HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4595, "HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4596, "HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun != HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4597, "HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun != daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4598, "HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun >= daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4599, "HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun != daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4600, "HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun != daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4601, "HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun != daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4602, "HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun != daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4603, "HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun != daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4604, "HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun != daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4605, "HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun != daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4606, "HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun != daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4607, "HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun != daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4608, "HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun > HMasterInstance.serverManager.maxSkew"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.maxSkew"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4609, "HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4610, "HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun > HMasterInstance.snapshotCleanerChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfThisRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4611, "HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun > HMasterInstance.snapshotManager.coordinator.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotManager.coordinator.timeoutMillis"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4612, "HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun > HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4613, "HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun > HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4614, "HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun > HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4615, "HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4616, "HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun > HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4617, "HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun > daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4618, "HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4619, "HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4620, "HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4621, "HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4622, "HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4623, "HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4624, "HMasterInstance.serverManager.maxSkew > HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.maxSkew"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4625, "HMasterInstance.serverManager.maxSkew > HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.maxSkew"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4626, "HMasterInstance.serverManager.maxSkew > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.maxSkew"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4627, "HMasterInstance.serverManager.maxSkew > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.maxSkew"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4628, "HMasterInstance.serverManager.maxSkew > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.maxSkew"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4629, "HMasterInstance.serverManager.maxSkew > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.maxSkew"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4630, "HMasterInstance.serverManager.maxSkew > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.maxSkew"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4631, "HMasterInstance.serverManager.maxSkew > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.maxSkew"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4632, "HMasterInstance.snapshotCleanerChore.lastLog > HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4633, "HMasterInstance.snapshotCleanerChore.lastLog > HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4634, "HMasterInstance.snapshotCleanerChore.lastLog > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4635, "HMasterInstance.snapshotCleanerChore.lastLog > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4636, "HMasterInstance.snapshotCleanerChore.lastLog > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4637, "HMasterInstance.snapshotCleanerChore.lastLog > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4638, "HMasterInstance.snapshotCleanerChore.lastLog > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4639, "HMasterInstance.snapshotCleanerChore.lastLog > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4640, "HMasterInstance.snapshotCleanerChore.timeOfThisRun > HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4641, "HMasterInstance.snapshotCleanerChore.timeOfThisRun > HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4642, "HMasterInstance.snapshotCleanerChore.timeOfThisRun > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfThisRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4643, "HMasterInstance.snapshotCleanerChore.timeOfThisRun > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfThisRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4644, "HMasterInstance.snapshotCleanerChore.timeOfThisRun > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfThisRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4645, "HMasterInstance.snapshotCleanerChore.timeOfThisRun > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfThisRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4646, "HMasterInstance.snapshotCleanerChore.timeOfThisRun > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfThisRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4647, "HMasterInstance.snapshotCleanerChore.timeOfThisRun > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfThisRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4648, "HMasterInstance.snapshotManager.coordinator.timeoutMillis > HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.snapshotManager.coordinator.timeoutMillis"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4649, "HMasterInstance.snapshotManager.coordinator.timeoutMillis > HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.snapshotManager.coordinator.timeoutMillis"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4650, "HMasterInstance.snapshotManager.coordinator.timeoutMillis > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.snapshotManager.coordinator.timeoutMillis"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4651, "HMasterInstance.snapshotManager.coordinator.timeoutMillis > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.snapshotManager.coordinator.timeoutMillis"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4652, "HMasterInstance.snapshotManager.coordinator.timeoutMillis > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.snapshotManager.coordinator.timeoutMillis"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4653, "HMasterInstance.snapshotManager.coordinator.timeoutMillis > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.snapshotManager.coordinator.timeoutMillis"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4654, "HMasterInstance.snapshotManager.coordinator.timeoutMillis > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.snapshotManager.coordinator.timeoutMillis"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4655, "HMasterInstance.snapshotManager.coordinator.timeoutMillis > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.snapshotManager.coordinator.timeoutMillis"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4656, "HMasterInstance.tableDescriptors.cachehits <= HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4657, "HMasterInstance.tableDescriptors.cachehits < HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4658, "HMasterInstance.tableDescriptors.cachehits < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4659, "HMasterInstance.tableDescriptors.cachehits < HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4660, "HMasterInstance.tableDescriptors.cachehits >= daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4661, "HMasterInstance.tableDescriptors.cachehits >= daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4662, "HMasterInstance.tableDescriptors.cachehits >= daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4663, "HMasterInstance.tableDescriptors.cachehits >= daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4664, "HMasterInstance.tableDescriptors.cachehits != daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4665, "HMasterInstance.tableDescriptors.cachehits >= daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4666, "HMasterInstance.tableDescriptors.cachehits % daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE) == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue() % daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))) == 0);
			}
		});
		invariants4999.add(new Invariant(4667, "HMasterInstance.tableDescriptors.cachehits >= daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4668, "HMasterInstance.tableDescriptors.invocations < HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4669, "HMasterInstance.tableDescriptors.invocations < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4670, "HMasterInstance.tableDescriptors.invocations < HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4671, "HMasterInstance.tableDescriptors.invocations >= daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4672, "HMasterInstance.tableDescriptors.invocations >= daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4673, "HMasterInstance.tableDescriptors.invocations >= daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4674, "HMasterInstance.tableDescriptors.invocations >= daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4675, "HMasterInstance.tableDescriptors.invocations >= daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4676, "HMasterInstance.tableDescriptors.invocations >= daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4677, "HMasterInstance.tableDescriptors.invocations % daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE) == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue() % daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))) == 0);
			}
		});
		invariants4999.add(new Invariant(4678, "HMasterInstance.tableDescriptors.invocations >= daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4679, "HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4680, "HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4681, "HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4682, "HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4683, "HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4684, "HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4685, "HMasterInstance.walManager.splitLogManager.lastTaskCreateTime > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4686, "HMasterInstance.walManager.splitLogManager.lastTaskCreateTime > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4687, "HMasterInstance.walManager.splitLogManager.lastTaskCreateTime > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4688, "HMasterInstance.walManager.splitLogManager.lastTaskCreateTime > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4689, "HMasterInstance.walManager.splitLogManager.lastTaskCreateTime > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4690, "HMasterInstance.walManager.splitLogManager.lastTaskCreateTime > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4691, "HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4692, "HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4693, "HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4694, "HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4695, "HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4696, "HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4697, "daikon.Quant.eltsEqual(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.activeMasterManager.master.mergePlanCount))"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.eltsEqual((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue())));
			}
		});
		invariants4999.add(new Invariant(4698, "daikon.Quant.eltsEqual(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.assignmentManager.deadMetricChore.childrenLatch))"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.eltsEqual((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.childrenLatch"))).intValue())));
			}
		});
		invariants4999.add(new Invariant(4699, "daikon.Quant.eltsEqual(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs))"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.eltsEqual((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs"))).intValue())));
			}
		});
		invariants4999.add(new Invariant(4700, "daikon.Quant.eltsEqual(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.balancer.clusterStatus.masterInfoPort))"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.eltsEqual((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.balancer.clusterStatus.masterInfoPort"))).intValue())));
			}
		});
		invariants4999.add(new Invariant(4701, "daikon.Quant.eltsEqual(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.cleanerPool.cleanerLatch))"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.eltsEqual((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.cleanerPool.cleanerLatch"))).intValue())));
			}
		});
		invariants4999.add(new Invariant(4702, "daikon.Quant.eltsEqual(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, daikon.Quant.getElement_Object(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE, HMasterInstance.rpcClient.failedServers.latestExpiry))"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.eltsEqual((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue())));
			}
		});
		invariants4999.add(new Invariant(4703, "daikon.Quant.eltsEqual(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.procedureExecutor.store.REGION_ID-1))"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.eltsEqual((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.REGION_ID"))).intValue()-1)));
			}
		});
		invariants4999.add(new Invariant(4704, "daikon.Quant.eltsEqual(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.procedureStore.cleanerPool.cleanerLatch))"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.eltsEqual((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue())));
			}
		});
		invariants4999.add(new Invariant(4705, "daikon.Quant.eltsEqual(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.procedureStore.region.majorInProgress))"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.eltsEqual((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue())));
			}
		});
		invariants4999.add(new Invariant(4706, "daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE) <= daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0]))) <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4707, "daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE) >= daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0]))) >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4708, "daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE) <= daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0]))) <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4709, "daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE) <= daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0]))) <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4710, "daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE) <= daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0]))) <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4711, "daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE) <= daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0]))) <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4712, "daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE) >= daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0]))) >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4713, "daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE) <= daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0]))) <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4714, "daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE) >= daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0]))) >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4715, "daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)-1 <= daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0])))-1 <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4716, "daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)-1 <= daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0])))-1 <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4717, "daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)-1 <= daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0])))-1 <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4718, "daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)-1 <= daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0])))-1 <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4719, "daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)-1 <= daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0])))-1 <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4720, "daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)-1 <= daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0])))-1 <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4721, "daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE) != daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))) != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4722, "daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE) >= daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))) >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4723, "daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE) <= daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))) <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4724, "daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE) >= daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))) >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4725, "daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)-1 <= daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])))-1 <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4726, "daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)-1 <= daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])))-1 <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4727, "daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)-1 <= daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])))-1 <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4728, "daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)-1 <= daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])))-1 <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4729, "daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)-1 <= daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])))-1 <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4730, "daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE) != daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))) != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4731, "daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE) >= daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))) >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4732, "daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE) >= daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))) >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4733, "daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE) <= daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))) <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4734, "daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE) != daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))) != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4735, "daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE) >= daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))) >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4736, "daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE) >= daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))) >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4737, "daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)-1 <= daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0])))-1 <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4738, "daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE) >= daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))) >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4739, "daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE) >= daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))) >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4740, "daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)-1 >= daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0])))-1 >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4741, "daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE) <= daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))) <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4742, "daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE) >= daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))) >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4743, "daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)-1 <= daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0])))-1 <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4744, "81763 * HMasterInstance.assignmentManager.deadMetricChore.lastUpdate - 141766 * HMasterInstance.assignmentManager.ritChore.lastUpdate + 4.253192649E9 * HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent + 1.01571030073148784E17 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (81763 * ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() - 141766 * ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() + 4.253192649E9 * ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent"))).intValue() + 1.01571030073148784E17 == 0);
			}
		});
		invariants4999.add(new Invariant(4745, "158 * HMasterInstance.assignmentManager.deadMetricChore.lastUpdate - 212649 * HMasterInstance.catalogJanitorChore.lastReport.count + 5599757 * daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE) - 2.67457000742551E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (158 * ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() - 212649 * ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.count"))).intValue() + 5599757 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))) - 2.67457000742551E14 == 0);
			}
		});
		invariants4999.add(new Invariant(4746, "158 * HMasterInstance.assignmentManager.deadMetricChore.lastUpdate - 212649 * HMasterInstance.catalogJanitorChore.lastReport.count + 5599757 * daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1 - 2.67456995142794E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (158 * ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() - 212649 * ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.count"))).intValue() + 5599757 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1 - 2.67456995142794E14 == 0);
			}
		});
		invariants4999.add(new Invariant(4747, "77776 * HMasterInstance.assignmentManager.deadMetricChore.lastUpdate - 70883 * HMasterInstance.catalogJanitorChore.lastReport.now + 2.756498104E9 * daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE) - 1.1668237359207546E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (77776 * ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() - 70883 * ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.now"))).intValue() + 2.756498104E9 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))) - 1.1668237359207546E16 == 0);
			}
		});
		invariants4999.add(new Invariant(4748, "77776 * HMasterInstance.assignmentManager.deadMetricChore.lastUpdate - 70883 * HMasterInstance.catalogJanitorChore.lastReport.now + 2.756498104E9 * daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1 - 1.1668234602709442E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (77776 * ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() - 70883 * ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.now"))).intValue() + 2.756498104E9 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1 - 1.1668234602709442E16 == 0);
			}
		});
		invariants4999.add(new Invariant(4749, "31112 * HMasterInstance.assignmentManager.deadMetricChore.lastUpdate - 70883 * HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun + 4.410623792E9 * daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE) + 6.7322988317114224E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (31112 * ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() - 70883 * ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue() + 4.410623792E9 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))) + 6.7322988317114224E16 == 0);
			}
		});
		invariants4999.add(new Invariant(4750, "31112 * HMasterInstance.assignmentManager.deadMetricChore.lastUpdate - 70883 * HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun + 4.410623792E9 * daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)-1 + 6.7322992727738016E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (31112 * ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() - 70883 * ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue() + 4.410623792E9 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0])))-1 + 6.7322992727738016E16 == 0);
			}
		});
		invariants4999.add(new Invariant(4751, "4915696 * HMasterInstance.assignmentManager.ritChore.lastUpdate - 5.087620912E9 * HMasterInstance.catalogJanitorChore.lastReport.count - 4740237 * HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun - 2.9701099298756678E17 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (4915696 * ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() - 5.087620912E9 * ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.count"))).intValue() - 4740237 * ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue() - 2.9701099298756678E17 == 0);
			}
		});
		invariants4999.add(new Invariant(4752, "79 * HMasterInstance.assignmentManager.ritChore.lastUpdate + 120006 * HMasterInstance.catalogJanitorChore.lastReport.count - 4740237 * daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE) - 1.3372849283116E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (79 * ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() + 120006 * ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.count"))).intValue() - 4740237 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))) - 1.3372849283116E14 == 0);
			}
		});
		invariants4999.add(new Invariant(4753, "79 * HMasterInstance.assignmentManager.ritChore.lastUpdate + 120006 * HMasterInstance.catalogJanitorChore.lastReport.count - 4740237 * daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1 - 1.33728497571397E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (79 * ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() + 120006 * ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.count"))).intValue() - 4740237 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1 - 1.33728497571397E14 == 0);
			}
		});
		invariants4999.add(new Invariant(4754, "77776 * HMasterInstance.assignmentManager.ritChore.lastUpdate + 20001 * HMasterInstance.catalogJanitorChore.lastReport.now - 2.333396664E9 * daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE) - 1.65513558515711776E17 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (77776 * ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() + 20001 * ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.now"))).intValue() - 2.333396664E9 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))) - 1.65513558515711776E17 == 0);
			}
		});
		invariants4999.add(new Invariant(4755, "77776 * HMasterInstance.assignmentManager.ritChore.lastUpdate + 20001 * HMasterInstance.catalogJanitorChore.lastReport.now - 2.333396664E9 * daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1 - 1.65513560849108448E17 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (77776 * ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() + 20001 * ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.now"))).intValue() - 2.333396664E9 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1 - 1.65513560849108448E17 == 0);
			}
		});
		invariants4999.add(new Invariant(4756, "HMasterInstance.assignmentManager.ritChore.lastUpdate + 60003 * HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent - 60003 * daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE) - 1.692765672037E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() + 60003 * ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent"))).intValue() - 60003 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))) - 1.692765672037E12 == 0);
			}
		});
		invariants4999.add(new Invariant(4757, "HMasterInstance.assignmentManager.ritChore.lastUpdate + 60003 * HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent - 60003 * daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1 - 1.69276573204E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() + 60003 * ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent"))).intValue() - 60003 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1 - 1.69276573204E12 == 0);
			}
		});
		invariants4999.add(new Invariant(4758, "HMasterInstance.assignmentManager.ritChore.lastUpdate + 60003 * HMasterInstance.clusterStatusChore.timeOfLastRun - 60003 * daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE) - 1.01572718586948224E17 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() + 60003 * ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfLastRun"))).intValue() - 60003 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))) - 1.01572718586948224E17 == 0);
			}
		});
		invariants4999.add(new Invariant(4759, "HMasterInstance.assignmentManager.ritChore.lastUpdate + 60003 * HMasterInstance.clusterStatusChore.timeOfLastRun - 60003 * daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1 - 1.0157271858700824E17 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() + 60003 * ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfLastRun"))).intValue() - 60003 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1 - 1.0157271858700824E17 == 0);
			}
		});
		invariants4999.add(new Invariant(4760, "20741 * HMasterInstance.assignmentManager.ritChore.lastUpdate + 20001 * HMasterInstance.clusterStatusChore.timeOfThisRun - 1244522223 * daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE) - 6.8966662655333704E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (20741 * ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() + 20001 * ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfThisRun"))).intValue() - 1244522223 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))) - 6.8966662655333704E16 == 0);
			}
		});
		invariants4999.add(new Invariant(4761, "20741 * HMasterInstance.assignmentManager.ritChore.lastUpdate + 20001 * HMasterInstance.clusterStatusChore.timeOfThisRun - 1244522223 * daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1 - 6.8966663899855928E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (20741 * ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() + 20001 * ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfThisRun"))).intValue() - 1244522223 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1 - 6.8966663899855928E16 == 0);
			}
		});
		invariants4999.add(new Invariant(4762, "20741 * HMasterInstance.assignmentManager.ritChore.lastUpdate - 20001 * HMasterInstance.clusterStatusChore.timeOfThisRun - 1244522223 * daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE) - 1.252646685671798E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (20741 * ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() - 20001 * ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfThisRun"))).intValue() - 1244522223 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))) - 1.252646685671798E15 == 0);
			}
		});
		invariants4999.add(new Invariant(4763, "20741 * HMasterInstance.assignmentManager.ritChore.lastUpdate - 20001 * HMasterInstance.clusterStatusChore.timeOfThisRun - 1244522223 * daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)-1 - 1.252647930194021E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (20741 * ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() - 20001 * ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfThisRun"))).intValue() - 1244522223 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0])))-1 - 1.252647930194021E15 == 0);
			}
		});
		invariants4999.add(new Invariant(4764, "62224 * HMasterInstance.assignmentManager.ritChore.lastUpdate + 60003 * HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun - 3.733626672E9 * daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE) - 2.06901680731913152E17 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (62224 * ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() + 60003 * ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue() - 3.733626672E9 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))) - 2.06901680731913152E17 == 0);
			}
		});
		invariants4999.add(new Invariant(4765, "62224 * HMasterInstance.assignmentManager.ritChore.lastUpdate + 60003 * HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun - 3.733626672E9 * daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1 - 2.0690168446553984E17 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (62224 * ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() + 60003 * ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue() - 3.733626672E9 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1 - 2.0690168446553984E17 == 0);
			}
		});
		invariants4999.add(new Invariant(4766, "62224 * HMasterInstance.assignmentManager.ritChore.lastUpdate - 60003 * HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun - 3.733626672E9 * daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE) - 3.759632822627428E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (62224 * ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() - 60003 * ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue() - 3.733626672E9 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))) - 3.759632822627428E15 == 0);
			}
		});
		invariants4999.add(new Invariant(4767, "62224 * HMasterInstance.assignmentManager.ritChore.lastUpdate - 60003 * HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun - 3.733626672E9 * daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)-1 - 3.7596365562541E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (62224 * ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() - 60003 * ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue() - 3.733626672E9 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0])))-1 - 3.7596365562541E15 == 0);
			}
		});
		invariants4999.add(new Invariant(4768, "HMasterInstance.catalogJanitorChore.lastReport.count + 158 * HMasterInstance.clusterStatusChore.timeOfLastRun - 79 * daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE) - 2.67456995146033E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.count"))).intValue() + 158 * ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfLastRun"))).intValue() - 79 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))) - 2.67456995146033E14 == 0);
			}
		});
		invariants4999.add(new Invariant(4769, "HMasterInstance.catalogJanitorChore.lastReport.count + 158 * HMasterInstance.clusterStatusChore.timeOfLastRun - 79 * daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1 - 2.67456995146112E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.count"))).intValue() + 158 * ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfLastRun"))).intValue() - 79 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1 - 2.67456995146112E14 == 0);
			}
		});
		invariants4999.add(new Invariant(4770, "124446 * HMasterInstance.catalogJanitorChore.lastReport.count + 79 * HMasterInstance.clusterStatusChore.timeOfThisRun - 4915617 * daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE) - 1.33728492657518E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (124446 * ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.count"))).intValue() + 79 * ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfThisRun"))).intValue() - 4915617 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))) - 1.33728492657518E14 == 0);
			}
		});
		invariants4999.add(new Invariant(4771, "124446 * HMasterInstance.catalogJanitorChore.lastReport.count + 79 * HMasterInstance.clusterStatusChore.timeOfThisRun - 4915617 * daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1 - 1.33728497573135E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (124446 * ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.count"))).intValue() + 79 * ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfThisRun"))).intValue() - 4915617 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1 - 1.33728497573135E14 == 0);
			}
		});
		invariants4999.add(new Invariant(4772, "124448 * HMasterInstance.catalogJanitorChore.lastReport.count + 79 * HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun - 4915696 * daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE) - 1.33728492657676E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (124448 * ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.count"))).intValue() + 79 * ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue() - 4915696 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))) - 1.33728492657676E14 == 0);
			}
		});
		invariants4999.add(new Invariant(4773, "124448 * HMasterInstance.catalogJanitorChore.lastReport.count + 79 * HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun - 4915696 * daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1 - 1.33728497573372E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (124448 * ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.count"))).intValue() + 79 * ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue() - 4915696 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1 - 1.33728497573372E14 == 0);
			}
		});
		invariants4999.add(new Invariant(4774, "HMasterInstance.catalogJanitorChore.lastReport.now + 233328 * HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent - 116664 * daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE) - 1.692765442077E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.now"))).intValue() + 233328 * ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent"))).intValue() - 116664 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))) - 1.692765442077E12 == 0);
			}
		});
		invariants4999.add(new Invariant(4775, "HMasterInstance.catalogJanitorChore.lastReport.now + 233328 * HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent - 116664 * daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1 - 1.692765558741E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.now"))).intValue() + 233328 * ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent"))).intValue() - 116664 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1 - 1.692765558741E12 == 0);
			}
		});
		invariants4999.add(new Invariant(4776, "HMasterInstance.catalogJanitorChore.lastReport.now - 58332 * HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent + 58332 * daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE) - 1.692765850401E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.now"))).intValue() - 58332 * ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent"))).intValue() + 58332 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))) - 1.692765850401E12 == 0);
			}
		});
		invariants4999.add(new Invariant(4777, "HMasterInstance.catalogJanitorChore.lastReport.now - 58332 * HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent + 58332 * daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)-1 - 1.692765792069E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.now"))).intValue() - 58332 * ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent"))).intValue() + 58332 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0])))-1 - 1.692765792069E12 == 0);
			}
		});
		invariants4999.add(new Invariant(4778, "HMasterInstance.catalogJanitorChore.lastReport.now + 233328 * HMasterInstance.clusterStatusChore.timeOfLastRun - 116664 * daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE) - 3.9497134949638438E17 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.now"))).intValue() + 233328 * ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfLastRun"))).intValue() - 116664 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))) - 3.9497134949638438E17 == 0);
			}
		});
		invariants4999.add(new Invariant(4779, "HMasterInstance.catalogJanitorChore.lastReport.now + 233328 * HMasterInstance.clusterStatusChore.timeOfLastRun - 116664 * daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1 - 3.9497134949650106E17 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.now"))).intValue() + 233328 * ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfLastRun"))).intValue() - 116664 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1 - 3.9497134949650106E17 == 0);
			}
		});
		invariants4999.add(new Invariant(4780, "20741 * HMasterInstance.catalogJanitorChore.lastReport.now + 77776 * HMasterInstance.clusterStatusChore.timeOfThisRun - 2.419728024E9 * daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE) - 1.6676620511722256E17 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (20741 * ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.now"))).intValue() + 77776 * ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfThisRun"))).intValue() - 2.419728024E9 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))) - 1.6676620511722256E17 == 0);
			}
		});
		invariants4999.add(new Invariant(4781, "20741 * HMasterInstance.catalogJanitorChore.lastReport.now + 77776 * HMasterInstance.clusterStatusChore.timeOfThisRun - 2.419728024E9 * daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1 - 1.6676620753695056E17 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (20741 * ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.now"))).intValue() + 77776 * ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfThisRun"))).intValue() - 2.419728024E9 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1 - 1.6676620753695056E17 == 0);
			}
		});
		invariants4999.add(new Invariant(4782, "41177 * HMasterInstance.catalogJanitorChore.lastReport.now - 38888 * HMasterInstance.clusterStatusChore.timeOfThisRun + 2.419728024E9 * daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE) - 3.8747408982014935E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (41177 * ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.now"))).intValue() - 38888 * ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfThisRun"))).intValue() + 2.419728024E9 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))) - 3.8747408982014935E15 == 0);
			}
		});
		invariants4999.add(new Invariant(4783, "41177 * HMasterInstance.catalogJanitorChore.lastReport.now - 38888 * HMasterInstance.clusterStatusChore.timeOfThisRun + 2.419728024E9 * daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)-1 - 3.8747384784734695E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (41177 * ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.now"))).intValue() - 38888 * ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfThisRun"))).intValue() + 2.419728024E9 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0])))-1 - 3.8747384784734695E15 == 0);
			}
		});
		invariants4999.add(new Invariant(4784, "3889 * HMasterInstance.catalogJanitorChore.lastReport.now + 14583 * HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun - 453706296 * daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE) - 3.1268769257377688E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (3889 * ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.now"))).intValue() + 14583 * ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue() - 453706296 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))) - 3.1268769257377688E16 == 0);
			}
		});
		invariants4999.add(new Invariant(4785, "3889 * HMasterInstance.catalogJanitorChore.lastReport.now + 14583 * HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun - 453706296 * daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1 - 3.1268769711083984E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (3889 * ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.now"))).intValue() + 14583 * ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue() - 453706296 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1 - 3.1268769711083984E16 == 0);
			}
		});
		invariants4999.add(new Invariant(4786, "HMasterInstance.catalogJanitorChore.lastReport.now - 38888 * daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE) + 77776 * daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE) - 1.692765753181E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.now"))).intValue() - 38888 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))) + 77776 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))) - 1.692765753181E12 == 0);
			}
		});
		invariants4999.add(new Invariant(4787, "HMasterInstance.catalogJanitorChore.lastReport.now - 38888 * daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE) + 77776 * daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)-1 - 1.692765675405E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.now"))).intValue() - 38888 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))) + 77776 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0])))-1 - 1.692765675405E12 == 0);
			}
		});
		invariants4999.add(new Invariant(4788, "HMasterInstance.catalogJanitorChore.lastReport.now - 38888 * daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1 + 77776 * daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE) - 1.692765792069E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.now"))).intValue() - 38888 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1 + 77776 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))) - 1.692765792069E12 == 0);
			}
		});
		invariants4999.add(new Invariant(4789, "HMasterInstance.catalogJanitorChore.lastReport.now - 38888 * daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1 + 77776 * daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)-1 - 1.692765714293E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.now"))).intValue() - 38888 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1 + 77776 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0])))-1 - 1.692765714293E12 == 0);
			}
		});
		invariants4999.add(new Invariant(4790, "31112 * HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent - HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun + 31112 * daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE) + 1.69276582318E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (31112 * ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent"))).intValue() - ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue() + 31112 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))) + 1.69276582318E12 == 0);
			}
		});
		invariants4999.add(new Invariant(4791, "31112 * HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent - HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun + 31112 * daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)-1 + 1.692765854292E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (31112 * ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent"))).intValue() - ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue() + 31112 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0])))-1 + 1.692765854292E12 == 0);
			}
		});
		invariants4999.add(new Invariant(4792, "123531 * HMasterInstance.clusterStatusChore.timeOfLastRun - 62224 * HMasterInstance.clusterStatusChore.timeOfThisRun + 3.871640421E9 * daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE) - 1.03778392414005424E17 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (123531 * ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfLastRun"))).intValue() - 62224 * ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfThisRun"))).intValue() + 3.871640421E9 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))) - 1.03778392414005424E17 == 0);
			}
		});
		invariants4999.add(new Invariant(4793, "123531 * HMasterInstance.clusterStatusChore.timeOfLastRun - 62224 * HMasterInstance.clusterStatusChore.timeOfThisRun + 3.871640421E9 * daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)-1 - 1.03778388542365008E17 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (123531 * ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfLastRun"))).intValue() - 62224 * ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfThisRun"))).intValue() + 3.871640421E9 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0])))-1 - 1.03778388542365008E17 == 0);
			}
		});
		invariants4999.add(new Invariant(4794, "62224 * HMasterInstance.clusterStatusChore.timeOfThisRun - 123531 * HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun + 3.814828992E9 * daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE) + 1.03778392414499552E17 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (62224 * ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfThisRun"))).intValue() - 123531 * ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue() + 3.814828992E9 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))) + 1.03778392414499552E17 == 0);
			}
		});
		invariants4999.add(new Invariant(4795, "62224 * HMasterInstance.clusterStatusChore.timeOfThisRun - 123531 * HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun + 3.814828992E9 * daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)-1 + 1.03778396229328544E17 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (62224 * ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfThisRun"))).intValue() - 123531 * ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue() + 3.814828992E9 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0])))-1 + 1.03778396229328544E17 == 0);
			}
		});
		invariants4999.add(new Invariant(4796, "HMasterInstance.clusterStatusChore.timeOfThisRun - 62223 * daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE) + 62223 * daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE) - 1.692765729842E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfThisRun"))).intValue() - 62223 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))) + 62223 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))) - 1.692765729842E12 == 0);
			}
		});
		invariants4999.add(new Invariant(4797, "HMasterInstance.clusterStatusChore.timeOfThisRun - 62223 * daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE) + 62223 * daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)-1 - 1.692765667619E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfThisRun"))).intValue() - 62223 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))) + 62223 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0])))-1 - 1.692765667619E12 == 0);
			}
		});
		invariants4999.add(new Invariant(4798, "HMasterInstance.clusterStatusChore.timeOfThisRun - 62223 * daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1 + 62223 * daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE) - 1.692765792065E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfThisRun"))).intValue() - 62223 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1 + 62223 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))) - 1.692765792065E12 == 0);
			}
		});
		invariants4999.add(new Invariant(4799, "HMasterInstance.clusterStatusChore.timeOfThisRun - 62223 * daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1 + 62223 * daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)-1 - 1.692765729842E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfThisRun"))).intValue() - 62223 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1 + 62223 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0])))-1 - 1.692765729842E12 == 0);
			}
		});
		invariants4999.add(new Invariant(4800, "HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun - 62224 * daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE) + 62224 * daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE) - 1.692765729844E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue() - 62224 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))) + 62224 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))) - 1.692765729844E12 == 0);
			}
		});
		invariants4999.add(new Invariant(4801, "HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun - 62224 * daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE) + 62224 * daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)-1 - 1.69276566762E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue() - 62224 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))) + 62224 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0])))-1 - 1.69276566762E12 == 0);
			}
		});
		invariants4999.add(new Invariant(4802, "HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun - 62224 * daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1 + 62224 * daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE) - 1.692765792068E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue() - 62224 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1 + 62224 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))) - 1.692765792068E12 == 0);
			}
		});
		invariants4999.add(new Invariant(4803, "HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun - 62224 * daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1 + 62224 * daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)-1 - 1.692765729844E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue() - 62224 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1 + 62224 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0])))-1 - 1.692765729844E12 == 0);
			}
		});
		invariants4999.add(new Invariant(4804, "HMasterInstance.$assertionsDisabled == HMasterInstance.balancer.internalBalancer.isByTable"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.isByTable"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4805, "HMasterInstance.$assertionsDisabled == HMasterInstance.mobFileCleanerChore.initialChoreComplete"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.initialChoreComplete"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4806, "HMasterInstance.abortRequested == HMasterInstance.activeMasterManager.master.abortRequested"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.abortRequested"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.abortRequested"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4807, "HMasterInstance.abortRequested == HMasterInstance.cleanerPool.reconfigNotification"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.abortRequested"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.cleanerPool.reconfigNotification"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4808, "HMasterInstance.abortRequested == HMasterInstance.rpcServices.regionServer.abortRequested"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.abortRequested"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcServices.regionServer.abortRequested"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4809, "HMasterInstance.abortRequested == HMasterInstance.sleeper.triggerWake"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.abortRequested"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.sleeper.triggerWake"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4810, "HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE == HMasterInstance.logCleaner.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4811, "HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE == HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4812, "HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE == HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4813, "HMasterInstance.activeMasterManager.clusterHasActiveMaster == HMasterInstance.hfileCleaner.enabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.clusterHasActiveMaster"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.enabled"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4814, "HMasterInstance.activeMasterManager.master.serviceStarted == HMasterInstance.balancerChore.initialChoreComplete"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.serviceStarted"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.balancerChore.initialChoreComplete"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4815, "HMasterInstance.activeMasterManager.master.serviceStarted == HMasterInstance.hfileCleaner.enabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.serviceStarted"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.enabled"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4816, "HMasterInstance.activeMasterManager.master.serviceStarted == HMasterInstance.rpcClient.fallbackAllowed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.serviceStarted"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcClient.fallbackAllowed"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4817, "HMasterInstance.assignmentManager.$assertionsDisabled == HMasterInstance.balancer.internalBalancer.isByTable"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.assignmentManager.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.isByTable"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4818, "HMasterInstance.assignmentManager.$assertionsDisabled == HMasterInstance.mobFileCleanerChore.initialChoreComplete"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.assignmentManager.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.initialChoreComplete"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4819, "HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID == HMasterInstance.logCleaner.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4820, "HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID == HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4821, "HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID == HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4822, "HMasterInstance.assignmentManager.deadMetricChore.persist == HMasterInstance.hfileCleaner.enabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.persist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.enabled"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4823, "HMasterInstance.asyncClusterConnection.conn.aborted == HMasterInstance.mobFileCleanerChore.initialChoreComplete"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.conn.aborted"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.initialChoreComplete"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4824, "HMasterInstance.asyncClusterConnection.hostnameCanChange == HMasterInstance.hfileCleaner.enabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.hostnameCanChange"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.enabled"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4825, "HMasterInstance.asyncClusterConnection.rpcClient.shutdownGroupWhenClose == HMasterInstance.balancer.internalBalancer.isByTable"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.shutdownGroupWhenClose"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.isByTable"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4826, "HMasterInstance.asyncClusterConnection.rpcClient.shutdownGroupWhenClose == HMasterInstance.mobFileCleanerChore.initialChoreComplete"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.shutdownGroupWhenClose"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.initialChoreComplete"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4827, "HMasterInstance.balancer.internalBalancer.isByTable == HMasterInstance.balancer.internalBalancer.maintenanceMode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.isByTable"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.maintenanceMode"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4828, "HMasterInstance.balancer.internalBalancer.isByTable == HMasterInstance.balancer.internalBalancer.onlySystemTablesOnMaster"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.isByTable"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.onlySystemTablesOnMaster"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4829, "HMasterInstance.balancer.internalBalancer.isByTable == HMasterInstance.balancer.internalBalancer.runMaxSteps"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.isByTable"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.runMaxSteps"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4830, "HMasterInstance.balancer.internalBalancer.isByTable == HMasterInstance.balancer.internalBalancer.stopped"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.isByTable"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.stopped"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4831, "HMasterInstance.balancer.internalBalancer.isByTable == HMasterInstance.balancerChore.timeMeasurement.oneRound"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.isByTable"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeMeasurement.oneRound"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4832, "HMasterInstance.balancer.internalBalancer.isByTable == HMasterInstance.cleanerPool.reconfigNotification"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.isByTable"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.cleanerPool.reconfigNotification"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4833, "HMasterInstance.balancer.internalBalancer.isByTable == HMasterInstance.cpHost.$assertionsDisabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.isByTable"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.cpHost.$assertionsDisabled"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4834, "HMasterInstance.balancer.internalBalancer.isByTable == HMasterInstance.drainingServerTracker.watcher.aborted"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.isByTable"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.drainingServerTracker.watcher.aborted"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4835, "HMasterInstance.balancer.internalBalancer.isByTable == HMasterInstance.fileSystemManager.isSecurityEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.isByTable"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.fileSystemManager.isSecurityEnabled"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4836, "HMasterInstance.balancer.internalBalancer.isByTable == HMasterInstance.logCleaner.pool.reconfigNotification"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.isByTable"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.logCleaner.pool.reconfigNotification"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4837, "HMasterInstance.balancer.internalBalancer.isByTable == HMasterInstance.logCleaner.timeMeasurement.oneRound"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.isByTable"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeMeasurement.oneRound"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4838, "HMasterInstance.balancer.internalBalancer.isByTable == HMasterInstance.mobFileCleanerChore.initialChoreComplete"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.isByTable"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.initialChoreComplete"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4839, "HMasterInstance.balancer.internalBalancer.isByTable == HMasterInstance.procedureExecutor.$assertionsDisabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.isByTable"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.$assertionsDisabled"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4840, "HMasterInstance.balancer.internalBalancer.isByTable == HMasterInstance.procedureStore.TABLE_NAME.systemTable"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.isByTable"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.TABLE_NAME.systemTable"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4841, "HMasterInstance.balancer.internalBalancer.isByTable == HMasterInstance.procedureStore.flusherAndCompactor.$assertionsDisabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.isByTable"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.$assertionsDisabled"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4842, "HMasterInstance.balancer.internalBalancer.isByTable == HMasterInstance.rpcClient.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.isByTable"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcClient.running"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4843, "HMasterInstance.balancer.internalBalancer.useRegionFinder == HMasterInstance.rpcServices.regionServer.serviceStarted"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.useRegionFinder"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcServices.regionServer.serviceStarted"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4844, "HMasterInstance.balancerChore.FIVE_MINUTES_IN_NANOS == HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.FIVE_MINUTES_IN_NANOS"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4845, "HMasterInstance.balancerChore.choreServicer.MIN_CORE_POOL_SIZE == HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4846, "HMasterInstance.balancerChore.initialChoreComplete == HMasterInstance.hfileCleaner.enabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancerChore.initialChoreComplete"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.enabled"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4847, "HMasterInstance.balancerChore.initialChoreComplete == HMasterInstance.rpcServices.regionServer.serviceStarted"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancerChore.initialChoreComplete"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcServices.regionServer.serviceStarted"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4848, "HMasterInstance.balancerChore.timeMeasurement.mostRecent == HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeMeasurement.mostRecent"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4849, "HMasterInstance.balancerChore.timeMeasurement.mostRecent == HMasterInstance.logCleaner.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeMeasurement.mostRecent"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4850, "HMasterInstance.balancerChore.timeMeasurement.mostRecent == HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeMeasurement.mostRecent"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4851, "HMasterInstance.balancerChore.timeMeasurement.mostRecent == HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeMeasurement.mostRecent"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4852, "HMasterInstance.balancerChore.timeMeasurement.oneRound == HMasterInstance.serverManager.flushedSeqIdFlusher.initialChoreComplete"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeMeasurement.oneRound"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.initialChoreComplete"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4853, "HMasterInstance.balancerChore.timeOfLastRun == HMasterInstance.clusterStatusChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeOfLastRun"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfLastRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4854, "HMasterInstance.balancerChore.timeOfLastRun == HMasterInstance.clusterStatusChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeOfLastRun"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfThisRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4855, "HMasterInstance.catalogJanitorChore.alreadyRunning == HMasterInstance.mobFileCleanerChore.initialChoreComplete"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.alreadyRunning"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.initialChoreComplete"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4856, "HMasterInstance.catalogJanitorChore.alreadyRunning == HMasterInstance.rpcClient.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.alreadyRunning"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcClient.running"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4857, "HMasterInstance.catalogJanitorChore.initialChoreComplete == HMasterInstance.rpcClient.fallbackAllowed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.initialChoreComplete"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcClient.fallbackAllowed"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4858, "HMasterInstance.catalogJanitorChore.timeOfThisRun == HMasterInstance.hbckChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.timeOfThisRun"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.hbckChore.timeOfLastRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4859, "HMasterInstance.choreService.MIN_CORE_POOL_SIZE == HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.choreService.MIN_CORE_POOL_SIZE"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4860, "HMasterInstance.choreService.MIN_CORE_POOL_SIZE == HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.choreService.MIN_CORE_POOL_SIZE"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4861, "HMasterInstance.cleanerPool.cleanerLatch == HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.cleanerPool.cleanerLatch"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4862, "HMasterInstance.cleanerPool.reconfigNotification == HMasterInstance.mobFileCleanerChore.initialChoreComplete"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.cleanerPool.reconfigNotification"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.initialChoreComplete"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4863, "HMasterInstance.cleanerPool.size == HMasterInstance.logCleaner.pool.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.cleanerPool.size"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.pool.size"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4864, "HMasterInstance.drainingServerTracker.watcher.aborted == HMasterInstance.mobFileCleanerChore.initialChoreComplete"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.drainingServerTracker.watcher.aborted"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.initialChoreComplete"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4865, "HMasterInstance.fileSystemManager.isSecurityEnabled == HMasterInstance.mobFileCleanerChore.initialChoreComplete"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.fileSystemManager.isSecurityEnabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.initialChoreComplete"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4866, "HMasterInstance.hfileCleaner.FIVE_MINUTES_IN_NANOS == HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4867, "HMasterInstance.hfileCleaner.enabled == HMasterInstance.hfileCleaner.initialChoreComplete"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.enabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.initialChoreComplete"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4868, "HMasterInstance.hfileCleaner.enabled == HMasterInstance.hfileCleaner.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.enabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.running"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4869, "HMasterInstance.hfileCleaner.enabled == HMasterInstance.procedureExecutor.store.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.enabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.running"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4870, "HMasterInstance.hfileCleaner.enabled == HMasterInstance.procedureStore.cleaner.enabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.enabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.enabled"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4871, "HMasterInstance.hfileCleaner.enabled == HMasterInstance.procedureStore.walRoller.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.enabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.running"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4872, "HMasterInstance.hfileCleaner.enabled == HMasterInstance.replicationBarrierCleaner.initialChoreComplete"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.enabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.initialChoreComplete"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4873, "HMasterInstance.hfileCleaner.enabled == HMasterInstance.rpcClient.fallbackAllowed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.enabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcClient.fallbackAllowed"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4874, "HMasterInstance.hfileCleaner.enabled == HMasterInstance.rpcServices.regionServer.serviceStarted"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.enabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcServices.regionServer.serviceStarted"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4875, "HMasterInstance.hfileCleaner.enabled == HMasterInstance.snapshotCleanerChore.initialChoreComplete"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.enabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.initialChoreComplete"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4876, "HMasterInstance.hfileCleaner.enabled == HMasterInstance.snapshotCleanerChore.snapshotManager.isSnapshotSupported"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.enabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.snapshotManager.isSnapshotSupported"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4877, "HMasterInstance.hfileCleaner.enabled == HMasterInstance.snapshotManager.isSnapshotSupported"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.enabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.snapshotManager.isSnapshotSupported"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4878, "HMasterInstance.hfileCleaner.enabled == HMasterInstance.tableDescriptors.fsvisited"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.enabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.fsvisited"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4879, "HMasterInstance.hfileCleaner.enabled == HMasterInstance.tableDescriptors.usecache"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.enabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.usecache"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4880, "HMasterInstance.hfileCleaner.enabled == HMasterInstance.walManager.fsOk"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.enabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.walManager.fsOk"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4881, "HMasterInstance.hfileCleaner.timeMeasurement.mostRecent == HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeMeasurement.mostRecent"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4882, "HMasterInstance.hfileCleaner.timeMeasurement.mostRecent == HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeMeasurement.mostRecent"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4883, "HMasterInstance.logCleaner.AVAIL_PROCESSORS == HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.AVAIL_PROCESSORS"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4884, "HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS == HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4885, "HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS == HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4886, "HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE == HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4887, "HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE == HMasterInstance.procedureExecutor.store.REGION_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.REGION_ID"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4888, "HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE == HMasterInstance.procedureStore.REGION_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.REGION_ID"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4889, "HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE == HMasterInstance.rpcClient.connections.poolMaxSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4890, "HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE == daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4891, "HMasterInstance.logCleaner.period == HMasterInstance.procedureStore.cleaner.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.period"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.period"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4892, "HMasterInstance.logCleaner.pool.size == HMasterInstance.procedureStore.cleanerPool.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.pool.size"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.size"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4893, "HMasterInstance.logCleaner.timeMeasurement.mostRecent == HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeMeasurement.mostRecent"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4894, "HMasterInstance.logCleaner.timeMeasurement.mostRecent == HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeMeasurement.mostRecent"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4895, "HMasterInstance.logCleaner.timeMeasurement.mostRecent == daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeMeasurement.mostRecent"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4896, "HMasterInstance.masterFinishedInitializationTime == HMasterInstance.rpcServices.regionServer.masterFinishedInitializationTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.regionServer.masterFinishedInitializationTime"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4897, "HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS == HMasterInstance.mobFileCompactionChore.FIVE_MINUTES_IN_NANOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.FIVE_MINUTES_IN_NANOS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4898, "HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS == HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4899, "HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE == HMasterInstance.mobFileCompactionChore.choreServicer.MIN_CORE_POOL_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4900, "HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE == HMasterInstance.procedureExecutor.store.REGION_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.REGION_ID"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4901, "HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE == HMasterInstance.procedureStore.REGION_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.REGION_ID"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4902, "HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE == HMasterInstance.rpcClient.connections.poolMaxSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4903, "HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE == daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4904, "HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE == daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4905, "HMasterInstance.mobFileCleanerChore.initialChoreComplete == HMasterInstance.mobFileCleanerChore.timeMeasurement.oneRound"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.initialChoreComplete"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeMeasurement.oneRound"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4906, "HMasterInstance.mobFileCleanerChore.initialChoreComplete == HMasterInstance.mobFileCompactionChore.initialChoreComplete"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.initialChoreComplete"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.initialChoreComplete"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4907, "HMasterInstance.mobFileCleanerChore.initialChoreComplete == HMasterInstance.mobFileCompactionChore.timeMeasurement.oneRound"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.initialChoreComplete"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeMeasurement.oneRound"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4908, "HMasterInstance.mobFileCleanerChore.initialChoreComplete == HMasterInstance.procedureExecutor.$assertionsDisabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.initialChoreComplete"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.$assertionsDisabled"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4909, "HMasterInstance.mobFileCleanerChore.initialChoreComplete == HMasterInstance.procedureStore.TABLE_NAME.systemTable"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.initialChoreComplete"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.TABLE_NAME.systemTable"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4910, "HMasterInstance.mobFileCleanerChore.initialChoreComplete == HMasterInstance.procedureStore.flusherAndCompactor.$assertionsDisabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.initialChoreComplete"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.$assertionsDisabled"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4911, "HMasterInstance.mobFileCleanerChore.initialChoreComplete == HMasterInstance.quotaManager.$assertionsDisabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.initialChoreComplete"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.quotaManager.$assertionsDisabled"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4912, "HMasterInstance.mobFileCleanerChore.initialChoreComplete == HMasterInstance.quotaManager.initialized"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.initialChoreComplete"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.quotaManager.initialized"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4913, "HMasterInstance.mobFileCleanerChore.initialChoreComplete == HMasterInstance.rpcClient.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.initialChoreComplete"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcClient.running"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4914, "HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent == HMasterInstance.mobFileCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4915, "HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent == HMasterInstance.mobFileCompactionChore.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4916, "HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent == HMasterInstance.mobFileCompactionChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfLastRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4917, "HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent == HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4918, "HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent == daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4919, "HMasterInstance.normalizerChore.timeOfLastRun == HMasterInstance.normalizerChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfThisRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4920, "HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId == daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4921, "HMasterInstance.rpcClient.fallbackAllowed == HMasterInstance.rpcServices.regionServer.serviceStarted"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcClient.fallbackAllowed"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcServices.regionServer.serviceStarted"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4922, "HMasterInstance.rpcClient.fallbackAllowed == HMasterInstance.spanReceiverHost.closed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcClient.fallbackAllowed"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.spanReceiverHost.closed"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4923, "HMasterInstance.rpcServices.regionServer.serviceStarted == HMasterInstance.serviceStarted"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcServices.regionServer.serviceStarted"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.serviceStarted"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4924, "HMasterInstance.snapshotCleanerChore.timeOfLastRun == HMasterInstance.snapshotCleanerChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfThisRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4925, "HMasterInstance.activeMasterManager.activeMasterServerName.startcode == 1692770319080L || HMasterInstance.activeMasterManager.activeMasterServerName.startcode == 1692770365688L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.startcode"))).intValue() == 1692770319080L || ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.startcode"))).intValue() == 1692770365688L);
			}
		});
		invariants4999.add(new Invariant(4926, "HMasterInstance.activeMasterManager.master.masterActiveTime == 1692770321005L || HMasterInstance.activeMasterManager.master.masterActiveTime == 1692770366616L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterActiveTime"))).intValue() == 1692770321005L || ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterActiveTime"))).intValue() == 1692770366616L);
			}
		});
		invariants4999.add(new Invariant(4927, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime == 0 || HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime == 1692770327302L || HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime == 1692770388981L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() == 1692770327302L || ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() == 1692770388981L);
			}
		});
		invariants4999.add(new Invariant(4928, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate >= 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() >= 0);
			}
		});
		invariants4999.add(new Invariant(4929, "HMasterInstance.asyncClusterConnection.nonceGenerator.clientId == 4140664547661222533L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.nonceGenerator.clientId"))).intValue() == 4140664547661222533L);
			}
		});
		invariants4999.add(new Invariant(4930, "HMasterInstance.balancer.internalBalancer.isByTable == false"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.isByTable"))).booleanValue() == false);
			}
		});
		invariants4999.add(new Invariant(4931, "HMasterInstance.balancerChore.lastLog == 24594585163604L || HMasterInstance.balancerChore.lastLog == 24656182251397L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.lastLog"))).intValue() == 24594585163604L || ((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.lastLog"))).intValue() == 24656182251397L);
			}
		});
		invariants4999.add(new Invariant(4932, "HMasterInstance.balancerChore.timeOfLastRun == 1692770327221L || HMasterInstance.balancerChore.timeOfLastRun == 1692770388818L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeOfLastRun"))).intValue() == 1692770327221L || ((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeOfLastRun"))).intValue() == 1692770388818L);
			}
		});
		invariants4999.add(new Invariant(4933, "HMasterInstance.catalogJanitorChore.lastLog == 24594590208108L || HMasterInstance.catalogJanitorChore.lastLog == 24656182514668L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastLog"))).intValue() == 24594590208108L || ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastLog"))).intValue() == 24656182514668L);
			}
		});
		invariants4999.add(new Invariant(4934, "HMasterInstance.catalogJanitorChore.lastReport.count == 0 || HMasterInstance.catalogJanitorChore.lastReport.count == 26"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.count"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.count"))).intValue() == 26);
			}
		});
		invariants4999.add(new Invariant(4935, "HMasterInstance.catalogJanitorChore.lastReport.now == 1692770327229L || HMasterInstance.catalogJanitorChore.lastReport.now == 1692770388819L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.now"))).intValue() == 1692770327229L || ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.now"))).intValue() == 1692770388819L);
			}
		});
		invariants4999.add(new Invariant(4936, "HMasterInstance.catalogJanitorChore.timeOfLastRun == 1692770327226L || HMasterInstance.catalogJanitorChore.timeOfLastRun == 1692770388819L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.timeOfLastRun"))).intValue() == 1692770327226L || ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.timeOfLastRun"))).intValue() == 1692770388819L);
			}
		});
		invariants4999.add(new Invariant(4937, "HMasterInstance.catalogJanitorChore.timeOfThisRun == 1692770327227L || HMasterInstance.catalogJanitorChore.timeOfThisRun == 1692770388819L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.timeOfThisRun"))).intValue() == 1692770327227L || ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.timeOfThisRun"))).intValue() == 1692770388819L);
			}
		});
		invariants4999.add(new Invariant(4938, "HMasterInstance.clusterStatusChore.lastLog == 24594584500884L || HMasterInstance.clusterStatusChore.lastLog == 24656181968509L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.lastLog"))).intValue() == 24594584500884L || ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.lastLog"))).intValue() == 24656181968509L);
			}
		});
		invariants4999.add(new Invariant(4939, "HMasterInstance.hbckChore.lastLog == 24594591088342L || HMasterInstance.hbckChore.lastLog == 24656182604098L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hbckChore.lastLog"))).intValue() == 24594591088342L || ((Number)(InvariantChecker.getValue("HMasterInstance.hbckChore.lastLog"))).intValue() == 24656182604098L);
			}
		});
		invariants4999.add(new Invariant(4940, "HMasterInstance.hbckChore.timeOfThisRun == 1692770327239L || HMasterInstance.hbckChore.timeOfThisRun == 1692770388842L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hbckChore.timeOfThisRun"))).intValue() == 1692770327239L || ((Number)(InvariantChecker.getValue("HMasterInstance.hbckChore.timeOfThisRun"))).intValue() == 1692770388842L);
			}
		});
		invariants4999.add(new Invariant(4941, "HMasterInstance.hfileCleaner.enabled == true"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.enabled"))).booleanValue() == true);
			}
		});
		invariants4999.add(new Invariant(4942, "HMasterInstance.hfileCleaner.lastLog == 24592090226485L || HMasterInstance.hfileCleaner.lastLog == 24640177786013L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() == 24592090226485L || ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() == 24640177786013L);
			}
		});
		invariants4999.add(new Invariant(4943, "HMasterInstance.hfileCleaner.timeOfLastRun == 1692770324732L || HMasterInstance.hfileCleaner.timeOfLastRun == 1692770372837L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() == 1692770324732L || ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() == 1692770372837L);
			}
		});
		invariants4999.add(new Invariant(4944, "HMasterInstance.logCleaner.AVAIL_PROCESSORS == 16"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.AVAIL_PROCESSORS"))).intValue() == 16);
			}
		});
		invariants4999.add(new Invariant(4945, "HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS == 300000000000L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() == 300000000000L);
			}
		});
		invariants4999.add(new Invariant(4946, "HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE == 1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() == 1);
			}
		});
		invariants4999.add(new Invariant(4947, "HMasterInstance.logCleaner.lastLog == 24592078650628L || HMasterInstance.logCleaner.lastLog == 24640171485442L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() == 24592078650628L || ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() == 24640171485442L);
			}
		});
		invariants4999.add(new Invariant(4948, "HMasterInstance.logCleaner.period == 600000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.period"))).intValue() == 600000);
			}
		});
		invariants4999.add(new Invariant(4949, "HMasterInstance.logCleaner.pool.size == 4"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.pool.size"))).intValue() == 4);
			}
		});
		invariants4999.add(new Invariant(4950, "HMasterInstance.logCleaner.timeMeasurement.mostRecent == -1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeMeasurement.mostRecent"))).intValue() == -1);
			}
		});
		invariants4999.add(new Invariant(4951, "HMasterInstance.logCleaner.timeOfLastRun == 1692770324726L || HMasterInstance.logCleaner.timeOfLastRun == 1692770372813L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() == 1692770324726L || ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() == 1692770372813L);
			}
		});
		invariants4999.add(new Invariant(4952, "HMasterInstance.logCleaner.timeOfThisRun == 1692770324726L || HMasterInstance.logCleaner.timeOfThisRun == 1692770372814L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() == 1692770324726L || ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() == 1692770372814L);
			}
		});
		invariants4999.add(new Invariant(4953, "HMasterInstance.masterFinishedInitializationTime == 0 || HMasterInstance.masterFinishedInitializationTime == 1692770327302L || HMasterInstance.masterFinishedInitializationTime == 1692770388981L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() == 1692770327302L || ((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() == 1692770388981L);
			}
		});
		invariants4999.add(new Invariant(4954, "HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS == 300000000000L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS"))).intValue() == 300000000000L);
			}
		});
		invariants4999.add(new Invariant(4955, "HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE == 1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() == 1);
			}
		});
		invariants4999.add(new Invariant(4956, "HMasterInstance.mobFileCleanerChore.initialChoreComplete == false"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.initialChoreComplete"))).booleanValue() == false);
			}
		});
		invariants4999.add(new Invariant(4957, "HMasterInstance.mobFileCleanerChore.lastLog == 24594675882534L || HMasterInstance.mobFileCleanerChore.lastLog == 24656345414477L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() == 24594675882534L || ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() == 24656345414477L);
			}
		});
		invariants4999.add(new Invariant(4958, "HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent == -1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"))).intValue() == -1);
			}
		});
		invariants4999.add(new Invariant(4959, "HMasterInstance.mobFileCleanerChore.timeOfThisRun == 1692770327313L || HMasterInstance.mobFileCleanerChore.timeOfThisRun == 1692770388982L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() == 1692770327313L || ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() == 1692770388982L);
			}
		});
		invariants4999.add(new Invariant(4960, "HMasterInstance.mobFileCompactionChore.lastLog == 24594677604811L || HMasterInstance.mobFileCompactionChore.lastLog == 24656345668390L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() == 24594677604811L || ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() == 24656345668390L);
			}
		});
		invariants4999.add(new Invariant(4961, "HMasterInstance.mobFileCompactionChore.timeOfThisRun == 1692770327314L || HMasterInstance.mobFileCompactionChore.timeOfThisRun == 1692770388982L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() == 1692770327314L || ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() == 1692770388982L);
			}
		});
		invariants4999.add(new Invariant(4962, "HMasterInstance.normalizerChore.lastLog == 24594585744840L || HMasterInstance.normalizerChore.lastLog == 24656182372277L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() == 24594585744840L || ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() == 24656182372277L);
			}
		});
		invariants4999.add(new Invariant(4963, "HMasterInstance.normalizerChore.timeOfLastRun == 1692770327222L || HMasterInstance.normalizerChore.timeOfLastRun == 1692770388818L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() == 1692770327222L || ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() == 1692770388818L);
			}
		});
		invariants4999.add(new Invariant(4964, "HMasterInstance.procedureStore.cleaner.lastLog == 24591207698698L || HMasterInstance.procedureStore.cleaner.lastLog == 24639088641702L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() == 24591207698698L || ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() == 24639088641702L);
			}
		});
		invariants4999.add(new Invariant(4965, "HMasterInstance.procedureStore.cleaner.timeOfLastRun == 1692770323850L || HMasterInstance.procedureStore.cleaner.timeOfLastRun == 1692770371726L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() == 1692770323850L || ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() == 1692770371726L);
			}
		});
		invariants4999.add(new Invariant(4966, "HMasterInstance.procedureStore.cleaner.timeOfThisRun == 1692770323851L || HMasterInstance.procedureStore.cleaner.timeOfThisRun == 1692770371727L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() == 1692770323851L || ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() == 1692770371727L);
			}
		});
		invariants4999.add(new Invariant(4967, "HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime == 1692770323820L || HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime == 1692770371696L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue() == 1692770323820L || ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue() == 1692770371696L);
			}
		});
		invariants4999.add(new Invariant(4968, "HMasterInstance.procedureStore.region.lastFlushOpSeqId == -1 || HMasterInstance.procedureStore.region.lastFlushOpSeqId == 426"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() == -1 || ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() == 426);
			}
		});
		invariants4999.add(new Invariant(4969, "HMasterInstance.procedureStore.region.lastFlushOpSeqId != 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() != 0);
			}
		});
		invariants4999.add(new Invariant(4970, "HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId == -1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"))).intValue() == -1);
			}
		});
		invariants4999.add(new Invariant(4971, "HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId == 1 || HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId == 426"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue() == 1 || ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue() == 426);
			}
		});
		invariants4999.add(new Invariant(4972, "HMasterInstance.procedureStore.region.openSeqNum == 2 || HMasterInstance.procedureStore.region.openSeqNum == 427"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue() == 2 || ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue() == 427);
			}
		});
		invariants4999.add(new Invariant(4973, "HMasterInstance.procedureStore.walRoller.lastRollTime == 1692770322826L || HMasterInstance.procedureStore.walRoller.lastRollTime == 1692770368723L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue() == 1692770322826L || ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue() == 1692770368723L);
			}
		});
		invariants4999.add(new Invariant(4974, "HMasterInstance.replicationBarrierCleaner.lastLog == 24592100863382L || HMasterInstance.replicationBarrierCleaner.lastLog == 24640201152018L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue() == 24592100863382L || ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue() == 24640201152018L);
			}
		});
		invariants4999.add(new Invariant(4975, "HMasterInstance.replicationBarrierCleaner.timeOfLastRun == 1692770324737L || HMasterInstance.replicationBarrierCleaner.timeOfLastRun == 1692770372837L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue() == 1692770324737L || ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue() == 1692770372837L);
			}
		});
		invariants4999.add(new Invariant(4976, "HMasterInstance.replicationBarrierCleaner.timeOfThisRun == 1692770324737L || HMasterInstance.replicationBarrierCleaner.timeOfThisRun == 1692770372839L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue() == 1692770324737L || ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue() == 1692770372839L);
			}
		});
		invariants4999.add(new Invariant(4977, "HMasterInstance.rpcClient.callIdCnt == 68 || HMasterInstance.rpcClient.callIdCnt == 69"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue() == 68 || ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue() == 69);
			}
		});
		invariants4999.add(new Invariant(4978, "HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash == 1583768455960592384L || HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash == 6855952120173035520L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue() == 1583768455960592384L || ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue() == 6855952120173035520L);
			}
		});
		invariants4999.add(new Invariant(4979, "HMasterInstance.rsFatals.usage == 0 || HMasterInstance.rsFatals.usage == 699"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue() == 699);
			}
		});
		invariants4999.add(new Invariant(4980, "HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog == 24594591509974L || HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog == 24656182751578L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue() == 24594591509974L || ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue() == 24656182751578L);
			}
		});
		invariants4999.add(new Invariant(4981, "HMasterInstance.snapshotCleanerChore.lastLog == 24592101465467L || HMasterInstance.snapshotCleanerChore.lastLog == 24640201285863L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue() == 24592101465467L || ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue() == 24640201285863L);
			}
		});
		invariants4999.add(new Invariant(4982, "HMasterInstance.snapshotCleanerChore.timeOfLastRun == 1692770324738L || HMasterInstance.snapshotCleanerChore.timeOfLastRun == 1692770372847L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue() == 1692770324738L || ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue() == 1692770372847L);
			}
		});
		invariants4999.add(new Invariant(4983, "HMasterInstance.TIMEOUT_REGION_MOVED < HMasterInstance.activeMasterManager.activeMasterServerName.startcode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.TIMEOUT_REGION_MOVED"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.startcode"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4984, "HMasterInstance.TIMEOUT_REGION_MOVED < HMasterInstance.activeMasterManager.master.masterActiveTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.TIMEOUT_REGION_MOVED"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterActiveTime"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4985, "HMasterInstance.TIMEOUT_REGION_MOVED < HMasterInstance.balancerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.TIMEOUT_REGION_MOVED"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.lastLog"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4986, "HMasterInstance.TIMEOUT_REGION_MOVED < HMasterInstance.balancerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.TIMEOUT_REGION_MOVED"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4987, "HMasterInstance.TIMEOUT_REGION_MOVED < HMasterInstance.catalogJanitorChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.TIMEOUT_REGION_MOVED"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastLog"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4988, "HMasterInstance.TIMEOUT_REGION_MOVED < HMasterInstance.catalogJanitorChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.TIMEOUT_REGION_MOVED"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.timeOfLastRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4989, "HMasterInstance.TIMEOUT_REGION_MOVED < HMasterInstance.catalogJanitorChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.TIMEOUT_REGION_MOVED"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.timeOfThisRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4990, "HMasterInstance.TIMEOUT_REGION_MOVED < HMasterInstance.clusterStatusChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.TIMEOUT_REGION_MOVED"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.lastLog"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4991, "HMasterInstance.TIMEOUT_REGION_MOVED < HMasterInstance.hbckChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.TIMEOUT_REGION_MOVED"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.hbckChore.lastLog"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4992, "HMasterInstance.TIMEOUT_REGION_MOVED < HMasterInstance.hbckChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.TIMEOUT_REGION_MOVED"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.hbckChore.timeOfThisRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4993, "HMasterInstance.TIMEOUT_REGION_MOVED < HMasterInstance.hfileCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.TIMEOUT_REGION_MOVED"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4994, "HMasterInstance.TIMEOUT_REGION_MOVED < HMasterInstance.hfileCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.TIMEOUT_REGION_MOVED"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4995, "HMasterInstance.TIMEOUT_REGION_MOVED < HMasterInstance.logCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.TIMEOUT_REGION_MOVED"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4996, "HMasterInstance.TIMEOUT_REGION_MOVED < HMasterInstance.logCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.TIMEOUT_REGION_MOVED"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4997, "HMasterInstance.TIMEOUT_REGION_MOVED < HMasterInstance.logCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.TIMEOUT_REGION_MOVED"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4998, "HMasterInstance.TIMEOUT_REGION_MOVED != HMasterInstance.masterFinishedInitializationTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.TIMEOUT_REGION_MOVED"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4999, "HMasterInstance.TIMEOUT_REGION_MOVED < HMasterInstance.mobFileCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.TIMEOUT_REGION_MOVED"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue());
			}
		});
	}
	static {
installInv4999();	}
}
