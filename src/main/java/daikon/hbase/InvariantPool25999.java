package daikon.hbase;
import daikon.*;
import java.util.Set;
import java.util.ArrayList;
import java.util.List;
//this class is automatically generated by our scripts
public class InvariantPool25999{

	public static List<Invariant> invariants25999 = new ArrayList<>();

	public static void installInv25999(){
		invariants25999.add(new Invariant(25000, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.lockStub.regionServer.startcode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.regionServer.startcode"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25001, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.lockStub.rpcServer.NIO_BUFFER_LIMIT"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.rpcServer.NIO_BUFFER_LIMIT"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25002, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.lockStub.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.rpcTimeout"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25003, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.lockStub.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25004, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.logCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25005, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.logCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25006, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25007, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25008, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.metricsRegionServer.regionServerWrapper.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.period"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25009, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent != HMasterInstance.metricsRegionServerImpl.allocator.lastHeapAllocationBytes"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServerImpl.allocator.lastHeapAllocationBytes"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25010, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.metricsRegionServerImpl.regionServer.TIMEOUT_REGION_MOVED"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServerImpl.regionServer.TIMEOUT_REGION_MOVED"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25011, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.metricsRegionServerImpl.regionServer.masterActiveTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServerImpl.regionServer.masterActiveTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25012, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.metricsRegionServerImpl.regionServer.maxBalancingTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServerImpl.regionServer.maxBalancingTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25013, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.metricsRegionServerImpl.regionServer.shortOperationTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServerImpl.regionServer.shortOperationTimeout"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25014, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.metricsRegionServerImpl.regionServer.startcode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServerImpl.regionServer.startcode"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25015, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.movedRegionsCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.movedRegionsCleaner.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25016, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent >= HMasterInstance.movedRegionsCleaner.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.movedRegionsCleaner.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25017, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent <= HMasterInstance.movedRegionsCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.movedRegionsCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25018, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent <= HMasterInstance.movedRegionsCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.movedRegionsCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25019, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.nonceManager.conflictWaitIterationMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.conflictWaitIterationMs"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25020, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.nonceManager.deleteNonceGracePeriod"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.deleteNonceGracePeriod"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25021, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.nonceManagerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManagerChore.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25022, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.nonceManagerChore.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManagerChore.period"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25023, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent <= HMasterInstance.nonceManagerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManagerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25024, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent <= HMasterInstance.nonceManagerChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManagerChore.timeOfThisRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25025, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25026, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.normalizer.masterRpcServices.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.rpcTimeout"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25027, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.normalizerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25028, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.pauseMonitor.SLEEP_INTERVAL_MS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.pauseMonitor.SLEEP_INTERVAL_MS"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25029, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.periodicFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.periodicFlusher.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25030, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent <= HMasterInstance.periodicFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.periodicFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25031, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent <= HMasterInstance.periodicFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.periodicFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25032, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.procedureExecutor.corePoolSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.corePoolSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25033, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.procedureExecutor.lastProcId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.lastProcId"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25034, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.procedureExecutor.maxPoolSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.maxPoolSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25035, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.procedureResultReporter.INIT_PAUSE_TIME_MS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureResultReporter.INIT_PAUSE_TIME_MS"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25036, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.procedureStore.TABLE_NAME.hashCode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.TABLE_NAME.hashCode"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25037, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25038, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25039, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.procedureStore.cleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25040, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.procedureStore.cleaner.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.period"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25041, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.procedureStore.cleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25042, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.procedureStore.cleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25043, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent <= HMasterInstance.procedureStore.cleanerPool.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.size"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25044, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent != HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25045, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25046, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.procedureStore.numThreads"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.numThreads"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25047, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.procedureStore.region.DEEP_OVERHEAD"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.DEEP_OVERHEAD"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25048, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.procedureStore.region.FIXED_OVERHEAD"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.FIXED_OVERHEAD"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25049, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25050, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25051, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.procedureStore.region.blockingMemStoreSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.blockingMemStoreSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25052, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent >= HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25053, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25054, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.procedureStore.region.maxBusyWaitDuration"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitDuration"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25055, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25056, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.procedureStore.region.timestampSlop"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.timestampSlop"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25057, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.procedureStore.walFactory.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walFactory.timeoutMillis"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25058, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25059, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25060, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.procedureStore.walRoller.threadWakeFrequency"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.threadWakeFrequency"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25061, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.regionServerAccounting.globalMemStoreLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimit"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25062, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25063, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25064, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25065, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25066, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25067, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.rpcClient.connectTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connectTO"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25068, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.rpcClient.failedServers.recheckServersTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.recheckServersTimeout"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25069, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.rpcClient.failureSleep"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failureSleep"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25070, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.rpcClient.maxConcurrentCallsPerServer"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.maxConcurrentCallsPerServer"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25071, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.rpcClient.minIdleTimeBeforeClose"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.minIdleTimeBeforeClose"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25072, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.rpcClient.readTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.readTO"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25073, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.rpcClient.writeTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.writeTO"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25074, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.rpcServices.maxScannerResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.maxScannerResultSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25075, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25076, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.rpcServices.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcTimeout"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25077, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25078, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.rsFatals.maxSizeBytes"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.maxSizeBytes"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25079, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.rsHost.rsServices.TIMEOUT_REGION_MOVED"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rsHost.rsServices.TIMEOUT_REGION_MOVED"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25080, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.rsHost.rsServices.compactionCheckFrequency"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rsHost.rsServices.compactionCheckFrequency"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25081, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.rsHost.rsServices.masterActiveTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rsHost.rsServices.masterActiveTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25082, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.rsHost.rsServices.maxBalancingTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rsHost.rsServices.maxBalancingTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25083, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.rsHost.rsServices.shortOperationTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rsHost.rsServices.shortOperationTimeout"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25084, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.rsHost.rsServices.startcode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rsHost.rsServices.startcode"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25085, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.rsSpaceQuotaManager.rsServices.TIMEOUT_REGION_MOVED"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rsSpaceQuotaManager.rsServices.TIMEOUT_REGION_MOVED"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25086, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.rsSpaceQuotaManager.rsServices.compactionCheckFrequency"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rsSpaceQuotaManager.rsServices.compactionCheckFrequency"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25087, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.rsSpaceQuotaManager.rsServices.masterActiveTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rsSpaceQuotaManager.rsServices.masterActiveTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25088, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.rsSpaceQuotaManager.rsServices.maxBalancingTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rsSpaceQuotaManager.rsServices.maxBalancingTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25089, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.rsSpaceQuotaManager.rsServices.shortOperationTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rsSpaceQuotaManager.rsServices.shortOperationTimeout"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25090, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.rsSpaceQuotaManager.rsServices.startcode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rsSpaceQuotaManager.rsServices.startcode"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25091, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.rssStub.masterRpcServices.maxScannerResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rssStub.masterRpcServices.maxScannerResultSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25092, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.rssStub.masterRpcServices.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rssStub.masterRpcServices.rpcTimeout"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25093, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.secureBulkLoadManager.RANDOM_RADIX"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.secureBulkLoadManager.RANDOM_RADIX"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25094, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.secureBulkLoadManager.RANDOM_WIDTH"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.secureBulkLoadManager.RANDOM_WIDTH"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25095, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.secureBulkLoadManager.conn.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.secureBulkLoadManager.conn.rpcTimeout"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25096, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25097, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.serverManager.flushedSeqIdFlusher.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.period"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25098, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent != HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25099, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25100, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.serverManager.maxSkew"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.maxSkew"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25101, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25102, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25103, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.snapshotManager.coordinator.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotManager.coordinator.timeoutMillis"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25104, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.splitLogWorker.coordination.checkInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.splitLogWorker.coordination.checkInterval"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25105, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.splitLogWorker.coordination.reportPeriod"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.splitLogWorker.coordination.reportPeriod"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25106, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25107, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25108, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.walRoller.checkLowReplicationInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walRoller.checkLowReplicationInterval"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25109, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25110, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.walRoller.rollPeriod"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walRoller.rollPeriod"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25111, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent < HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25112, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent >= daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0])))-1);
			}
		});
		invariants25999.add(new Invariant(25113, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent % daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE) == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() % daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))) == 0);
			}
		});
		invariants25999.add(new Invariant(25114, "HMasterInstance.compactionChecker.timeMeasurement.mostRecent % daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeMeasurement.mostRecent"))).intValue() % daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1 == 0);
			}
		});
		invariants25999.add(new Invariant(25115, "HMasterInstance.compactionChecker.timeOfLastRun <= HMasterInstance.compactionChecker.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25116, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25117, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.csm.splitLogManagerCoordination.timeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25118, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.csm.splitLogWorkerCoordination.checkInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.checkInterval"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25119, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25120, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25121, "HMasterInstance.compactionChecker.timeOfLastRun > HMasterInstance.dataFs.unspecifiedStoragePolicyId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.dataFs.unspecifiedStoragePolicyId"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25122, "HMasterInstance.compactionChecker.timeOfLastRun < HMasterInstance.executorStatusChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.executorStatusChore.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25123, "HMasterInstance.compactionChecker.timeOfLastRun > HMasterInstance.executorStatusChore.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.executorStatusChore.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25124, "HMasterInstance.compactionChecker.timeOfLastRun >= HMasterInstance.executorStatusChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.executorStatusChore.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25125, "HMasterInstance.compactionChecker.timeOfLastRun < HMasterInstance.hbckChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.hbckChore.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25126, "HMasterInstance.compactionChecker.timeOfLastRun > HMasterInstance.hbckChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.hbckChore.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25127, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.hbckChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.hbckChore.timeOfThisRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25128, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.hfileCleaner.AVAIL_PROCESSORS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.AVAIL_PROCESSORS"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25129, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.hfileCleaner.FIVE_MINUTES_IN_NANOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.FIVE_MINUTES_IN_NANOS"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25130, "HMasterInstance.compactionChecker.timeOfLastRun > HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25131, "HMasterInstance.compactionChecker.timeOfLastRun < HMasterInstance.hfileCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25132, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.hfileCleaner.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.period"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25133, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.hfileCleaner.pool.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.pool.size"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25134, "HMasterInstance.compactionChecker.timeOfLastRun >= HMasterInstance.hfileCleaner.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25135, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.hfileCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25136, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.lockStub.maxScannerResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.maxScannerResultSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25137, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.lockStub.priority.META_TRANSITION_QOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.priority.META_TRANSITION_QOS"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25138, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.lockStub.regionServer.TIMEOUT_REGION_MOVED"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.regionServer.TIMEOUT_REGION_MOVED"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25139, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.lockStub.regionServer.compactionCheckFrequency"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.regionServer.compactionCheckFrequency"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25140, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.lockStub.regionServer.masterActiveTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.regionServer.masterActiveTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25141, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.lockStub.regionServer.masterFinishedInitializationTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.regionServer.masterFinishedInitializationTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25142, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.lockStub.regionServer.maxBalancingTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.regionServer.maxBalancingTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25143, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.lockStub.regionServer.mergePlanCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.regionServer.mergePlanCount"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25144, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.lockStub.regionServer.shortOperationTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.regionServer.shortOperationTimeout"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25145, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.lockStub.regionServer.startcode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.regionServer.startcode"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25146, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.lockStub.rpcServer.NIO_BUFFER_LIMIT"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.rpcServer.NIO_BUFFER_LIMIT"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25147, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.lockStub.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.rpcTimeout"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25148, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.lockStub.scannerIdGenerator.scannerIdGen"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.scannerIdGenerator.scannerIdGen"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25149, "HMasterInstance.compactionChecker.timeOfLastRun < HMasterInstance.lockStub.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25150, "HMasterInstance.compactionChecker.timeOfLastRun < HMasterInstance.logCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25151, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.logCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25152, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25153, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25154, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.metricsRegionServer.regionServerWrapper.averageRegionSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.averageRegionSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25155, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.metricsRegionServer.regionServerWrapper.avgStoreFileAge"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.avgStoreFileAge"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25156, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.metricsRegionServer.regionServerWrapper.maxStoreFileAge"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.maxStoreFileAge"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25157, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.metricsRegionServer.regionServerWrapper.minStoreFileAge"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.minStoreFileAge"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25158, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.metricsRegionServer.regionServerWrapper.numStoreFiles"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.numStoreFiles"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25159, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.metricsRegionServer.regionServerWrapper.numStores"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.numStores"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25160, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.metricsRegionServer.regionServerWrapper.numWALFiles"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.numWALFiles"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25161, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.metricsRegionServer.regionServerWrapper.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.period"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25162, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.metricsRegionServer.regionServerWrapper.readRequestsCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.readRequestsCount"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25163, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.metricsRegionServer.regionServerWrapper.storeFileSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.storeFileSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25164, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.metricsRegionServer.regionServerWrapper.storefileIndexSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.storefileIndexSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25165, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.metricsRegionServer.regionServerWrapper.totalStaticBloomSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.totalStaticBloomSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25166, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.metricsRegionServer.regionServerWrapper.totalStaticIndexSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.totalStaticIndexSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25167, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.metricsRegionServerImpl.allocator.lastHeapAllocationBytes"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServerImpl.allocator.lastHeapAllocationBytes"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25168, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.metricsRegionServerImpl.regionServer.TIMEOUT_REGION_MOVED"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServerImpl.regionServer.TIMEOUT_REGION_MOVED"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25169, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.metricsRegionServerImpl.regionServer.masterActiveTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServerImpl.regionServer.masterActiveTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25170, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.metricsRegionServerImpl.regionServer.masterFinishedInitializationTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServerImpl.regionServer.masterFinishedInitializationTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25171, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.metricsRegionServerImpl.regionServer.maxBalancingTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServerImpl.regionServer.maxBalancingTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25172, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.metricsRegionServerImpl.regionServer.shortOperationTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServerImpl.regionServer.shortOperationTimeout"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25173, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.metricsRegionServerImpl.regionServer.startcode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServerImpl.regionServer.startcode"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25174, "HMasterInstance.compactionChecker.timeOfLastRun < HMasterInstance.movedRegionsCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.movedRegionsCleaner.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25175, "HMasterInstance.compactionChecker.timeOfLastRun >= HMasterInstance.movedRegionsCleaner.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.movedRegionsCleaner.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25176, "HMasterInstance.compactionChecker.timeOfLastRun >= HMasterInstance.movedRegionsCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.movedRegionsCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25177, "HMasterInstance.compactionChecker.timeOfLastRun >= HMasterInstance.movedRegionsCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.movedRegionsCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25178, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.nonceManager.conflictWaitIterationMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.conflictWaitIterationMs"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25179, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.nonceManager.deleteNonceGracePeriod"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.deleteNonceGracePeriod"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25180, "HMasterInstance.compactionChecker.timeOfLastRun < HMasterInstance.nonceManagerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManagerChore.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25181, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.nonceManagerChore.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManagerChore.period"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25182, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25183, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.normalizer.masterRpcServices.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.rpcTimeout"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25184, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.normalizer.minRegionCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.minRegionCount"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25185, "HMasterInstance.compactionChecker.timeOfLastRun < HMasterInstance.normalizerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25186, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.pauseMonitor.SLEEP_INTERVAL_MS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.pauseMonitor.SLEEP_INTERVAL_MS"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25187, "HMasterInstance.compactionChecker.timeOfLastRun < HMasterInstance.periodicFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.periodicFlusher.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25188, "HMasterInstance.compactionChecker.timeOfLastRun >= HMasterInstance.periodicFlusher.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.periodicFlusher.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25189, "HMasterInstance.compactionChecker.timeOfLastRun <= HMasterInstance.periodicFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.periodicFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25190, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.procedureExecutor.activeExecutorCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25191, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.procedureExecutor.corePoolSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.corePoolSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25192, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.procedureExecutor.lastProcId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.lastProcId"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25193, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.procedureExecutor.maxPoolSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.maxPoolSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25194, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.procedureExecutor.scheduler.nullPollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.nullPollCalls"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25195, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.procedureExecutor.scheduler.pollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.pollCalls"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25196, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.procedureExecutor.store.REGION_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.REGION_ID"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25197, "HMasterInstance.compactionChecker.timeOfLastRun > HMasterInstance.procedureResultReporter.INIT_PAUSE_TIME_MS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureResultReporter.INIT_PAUSE_TIME_MS"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25198, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.procedureStore.REGION_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.REGION_ID"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25199, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.procedureStore.TABLE_NAME.hashCode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.TABLE_NAME.hashCode"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25200, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25201, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25202, "HMasterInstance.compactionChecker.timeOfLastRun < HMasterInstance.procedureStore.cleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25203, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.procedureStore.cleaner.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.period"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25204, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.procedureStore.cleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25205, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.procedureStore.cleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25206, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.procedureStore.cleanerPool.cleanerLatch"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25207, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.procedureStore.cleanerPool.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.size"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25208, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25209, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25210, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.procedureStore.numThreads"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.numThreads"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25211, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.procedureStore.region.DEEP_OVERHEAD"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.DEEP_OVERHEAD"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25212, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.procedureStore.region.FIXED_OVERHEAD"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.FIXED_OVERHEAD"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25213, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25214, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25215, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.procedureStore.region.blockingMemStoreSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.blockingMemStoreSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25216, "HMasterInstance.compactionChecker.timeOfLastRun >= HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25217, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25218, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.procedureStore.region.majorInProgress"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25219, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.procedureStore.region.maxBusyWaitDuration"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitDuration"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25220, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25221, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25222, "HMasterInstance.compactionChecker.timeOfLastRun < HMasterInstance.procedureStore.region.timestampSlop"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.timestampSlop"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25223, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.procedureStore.walFactory.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walFactory.timeoutMillis"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25224, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25225, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25226, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.procedureStore.walRoller.threadWakeFrequency"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.threadWakeFrequency"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25227, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.regionServerAccounting.globalMemStoreLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimit"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25228, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25229, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25230, "HMasterInstance.compactionChecker.timeOfLastRun < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25231, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25232, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25233, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25234, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25235, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.rpcClient.connectTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connectTO"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25236, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.rpcClient.connections.poolMaxSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25237, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.rpcClient.failedServers.latestExpiry"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25238, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.rpcClient.failedServers.recheckServersTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.recheckServersTimeout"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25239, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.rpcClient.failureSleep"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failureSleep"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25240, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.rpcClient.maxConcurrentCallsPerServer"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.maxConcurrentCallsPerServer"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25241, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.rpcClient.minIdleTimeBeforeClose"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.minIdleTimeBeforeClose"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25242, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.rpcClient.readTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.readTO"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25243, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.rpcClient.writeTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.writeTO"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25244, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.rpcServices.maxScannerResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.maxScannerResultSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25245, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25246, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.rpcServices.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcTimeout"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25247, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.rpcServices.scannerIdGenerator.scannerIdGen"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.scannerIdGen"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25248, "HMasterInstance.compactionChecker.timeOfLastRun < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25249, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.rsFatals.maxSizeBytes"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.maxSizeBytes"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25250, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.rsHost.loadSequence"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsHost.loadSequence"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25251, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.rsHost.rsServices.TIMEOUT_REGION_MOVED"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsHost.rsServices.TIMEOUT_REGION_MOVED"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25252, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.rsHost.rsServices.compactionCheckFrequency"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsHost.rsServices.compactionCheckFrequency"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25253, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.rsHost.rsServices.masterActiveTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsHost.rsServices.masterActiveTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25254, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.rsHost.rsServices.masterFinishedInitializationTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsHost.rsServices.masterFinishedInitializationTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25255, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.rsHost.rsServices.maxBalancingTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsHost.rsServices.maxBalancingTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25256, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.rsHost.rsServices.shortOperationTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsHost.rsServices.shortOperationTimeout"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25257, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.rsHost.rsServices.startcode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsHost.rsServices.startcode"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25258, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.rsSpaceQuotaManager.rsServices.TIMEOUT_REGION_MOVED"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsSpaceQuotaManager.rsServices.TIMEOUT_REGION_MOVED"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25259, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.rsSpaceQuotaManager.rsServices.compactionCheckFrequency"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsSpaceQuotaManager.rsServices.compactionCheckFrequency"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25260, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.rsSpaceQuotaManager.rsServices.masterActiveTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsSpaceQuotaManager.rsServices.masterActiveTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25261, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.rsSpaceQuotaManager.rsServices.masterFinishedInitializationTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsSpaceQuotaManager.rsServices.masterFinishedInitializationTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25262, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.rsSpaceQuotaManager.rsServices.maxBalancingTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsSpaceQuotaManager.rsServices.maxBalancingTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25263, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.rsSpaceQuotaManager.rsServices.mergePlanCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsSpaceQuotaManager.rsServices.mergePlanCount"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25264, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.rsSpaceQuotaManager.rsServices.shortOperationTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsSpaceQuotaManager.rsServices.shortOperationTimeout"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25265, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.rsSpaceQuotaManager.rsServices.startcode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsSpaceQuotaManager.rsServices.startcode"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25266, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.rssStub.masterRpcServices.maxScannerResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rssStub.masterRpcServices.maxScannerResultSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25267, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.rssStub.masterRpcServices.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rssStub.masterRpcServices.rpcTimeout"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25268, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.secureBulkLoadManager.RANDOM_RADIX"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.secureBulkLoadManager.RANDOM_RADIX"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25269, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.secureBulkLoadManager.RANDOM_WIDTH"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.secureBulkLoadManager.RANDOM_WIDTH"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25270, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.secureBulkLoadManager.conn.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.secureBulkLoadManager.conn.rpcTimeout"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25271, "HMasterInstance.compactionChecker.timeOfLastRun < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25272, "HMasterInstance.compactionChecker.timeOfLastRun > HMasterInstance.serverManager.flushedSeqIdFlusher.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.period"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25273, "HMasterInstance.compactionChecker.timeOfLastRun > HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25274, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25275, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.serverManager.maxSkew"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.maxSkew"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25276, "HMasterInstance.compactionChecker.timeOfLastRun < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25277, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25278, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.snapshotManager.coordinator.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotManager.coordinator.timeoutMillis"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25279, "HMasterInstance.compactionChecker.timeOfLastRun > HMasterInstance.splitLogWorker.coordination.checkInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.splitLogWorker.coordination.checkInterval"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25280, "HMasterInstance.compactionChecker.timeOfLastRun > HMasterInstance.splitLogWorker.coordination.maxConcurrentTasks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.splitLogWorker.coordination.maxConcurrentTasks"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25281, "HMasterInstance.compactionChecker.timeOfLastRun > HMasterInstance.splitLogWorker.coordination.reportPeriod"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.splitLogWorker.coordination.reportPeriod"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25282, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25283, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25284, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25285, "HMasterInstance.compactionChecker.timeOfLastRun < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25286, "HMasterInstance.compactionChecker.timeOfLastRun > HMasterInstance.walRoller.checkLowReplicationInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.walRoller.checkLowReplicationInterval"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25287, "HMasterInstance.compactionChecker.timeOfLastRun > HMasterInstance.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25288, "HMasterInstance.compactionChecker.timeOfLastRun > HMasterInstance.walRoller.rollPeriod"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.walRoller.rollPeriod"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25289, "HMasterInstance.compactionChecker.timeOfLastRun != HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25290, "HMasterInstance.compactionChecker.timeOfLastRun != daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0]))));
			}
		});
		invariants25999.add(new Invariant(25291, "HMasterInstance.compactionChecker.timeOfLastRun >= daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0])))-1);
			}
		});
		invariants25999.add(new Invariant(25292, "HMasterInstance.compactionChecker.timeOfLastRun != daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants25999.add(new Invariant(25293, "HMasterInstance.compactionChecker.timeOfLastRun % daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE) == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() % daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))) == 0);
			}
		});
		invariants25999.add(new Invariant(25294, "HMasterInstance.compactionChecker.timeOfLastRun != daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])))-1);
			}
		});
		invariants25999.add(new Invariant(25295, "daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)-1 % HMasterInstance.compactionChecker.timeOfLastRun == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])))-1 % ((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() == 0);
			}
		});
		invariants25999.add(new Invariant(25296, "HMasterInstance.compactionChecker.timeOfLastRun != daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants25999.add(new Invariant(25297, "HMasterInstance.compactionChecker.timeOfLastRun != daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1);
			}
		});
		invariants25999.add(new Invariant(25298, "HMasterInstance.compactionChecker.timeOfLastRun % daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() % daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1 == 0);
			}
		});
		invariants25999.add(new Invariant(25299, "HMasterInstance.compactionChecker.timeOfLastRun != daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants25999.add(new Invariant(25300, "HMasterInstance.compactionChecker.timeOfLastRun != daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0])))-1);
			}
		});
		invariants25999.add(new Invariant(25301, "HMasterInstance.compactionChecker.timeOfLastRun != daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants25999.add(new Invariant(25302, "HMasterInstance.compactionChecker.timeOfLastRun != daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0])))-1);
			}
		});
		invariants25999.add(new Invariant(25303, "HMasterInstance.compactionChecker.timeOfLastRun != daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants25999.add(new Invariant(25304, "HMasterInstance.compactionChecker.timeOfLastRun != daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfLastRun"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0])))-1);
			}
		});
		invariants25999.add(new Invariant(25305, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25306, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.csm.splitLogManagerCoordination.timeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25307, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.csm.splitLogWorkerCoordination.checkInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.checkInterval"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25308, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25309, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25310, "HMasterInstance.compactionChecker.timeOfThisRun > HMasterInstance.dataFs.unspecifiedStoragePolicyId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.dataFs.unspecifiedStoragePolicyId"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25311, "HMasterInstance.compactionChecker.timeOfThisRun < HMasterInstance.executorStatusChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.executorStatusChore.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25312, "HMasterInstance.compactionChecker.timeOfThisRun > HMasterInstance.executorStatusChore.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.executorStatusChore.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25313, "HMasterInstance.compactionChecker.timeOfThisRun >= HMasterInstance.executorStatusChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.executorStatusChore.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25314, "HMasterInstance.compactionChecker.timeOfThisRun < HMasterInstance.hbckChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.hbckChore.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25315, "HMasterInstance.compactionChecker.timeOfThisRun > HMasterInstance.hbckChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.hbckChore.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25316, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.hbckChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.hbckChore.timeOfThisRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25317, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.hfileCleaner.AVAIL_PROCESSORS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.AVAIL_PROCESSORS"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25318, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.hfileCleaner.FIVE_MINUTES_IN_NANOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.FIVE_MINUTES_IN_NANOS"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25319, "HMasterInstance.compactionChecker.timeOfThisRun > HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25320, "HMasterInstance.compactionChecker.timeOfThisRun < HMasterInstance.hfileCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25321, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.hfileCleaner.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.period"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25322, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.hfileCleaner.pool.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.pool.size"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25323, "HMasterInstance.compactionChecker.timeOfThisRun >= HMasterInstance.hfileCleaner.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25324, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.hfileCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25325, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.lockStub.maxScannerResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.maxScannerResultSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25326, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.lockStub.priority.META_TRANSITION_QOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.priority.META_TRANSITION_QOS"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25327, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.lockStub.regionServer.TIMEOUT_REGION_MOVED"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.regionServer.TIMEOUT_REGION_MOVED"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25328, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.lockStub.regionServer.compactionCheckFrequency"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.regionServer.compactionCheckFrequency"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25329, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.lockStub.regionServer.masterActiveTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.regionServer.masterActiveTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25330, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.lockStub.regionServer.masterFinishedInitializationTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.regionServer.masterFinishedInitializationTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25331, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.lockStub.regionServer.maxBalancingTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.regionServer.maxBalancingTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25332, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.lockStub.regionServer.mergePlanCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.regionServer.mergePlanCount"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25333, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.lockStub.regionServer.shortOperationTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.regionServer.shortOperationTimeout"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25334, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.lockStub.regionServer.startcode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.regionServer.startcode"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25335, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.lockStub.rpcServer.NIO_BUFFER_LIMIT"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.rpcServer.NIO_BUFFER_LIMIT"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25336, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.lockStub.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.rpcTimeout"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25337, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.lockStub.scannerIdGenerator.scannerIdGen"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.scannerIdGenerator.scannerIdGen"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25338, "HMasterInstance.compactionChecker.timeOfThisRun < HMasterInstance.lockStub.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25339, "HMasterInstance.compactionChecker.timeOfThisRun < HMasterInstance.logCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25340, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.logCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25341, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25342, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25343, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.metricsRegionServer.regionServerWrapper.averageRegionSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.averageRegionSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25344, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.metricsRegionServer.regionServerWrapper.avgStoreFileAge"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.avgStoreFileAge"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25345, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.metricsRegionServer.regionServerWrapper.maxStoreFileAge"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.maxStoreFileAge"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25346, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.metricsRegionServer.regionServerWrapper.minStoreFileAge"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.minStoreFileAge"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25347, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.metricsRegionServer.regionServerWrapper.numStoreFiles"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.numStoreFiles"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25348, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.metricsRegionServer.regionServerWrapper.numStores"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.numStores"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25349, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.metricsRegionServer.regionServerWrapper.numWALFiles"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.numWALFiles"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25350, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.metricsRegionServer.regionServerWrapper.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.period"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25351, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.metricsRegionServer.regionServerWrapper.readRequestsCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.readRequestsCount"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25352, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.metricsRegionServer.regionServerWrapper.storeFileSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.storeFileSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25353, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.metricsRegionServer.regionServerWrapper.storefileIndexSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.storefileIndexSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25354, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.metricsRegionServer.regionServerWrapper.totalStaticBloomSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.totalStaticBloomSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25355, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.metricsRegionServer.regionServerWrapper.totalStaticIndexSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.totalStaticIndexSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25356, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.metricsRegionServerImpl.allocator.lastHeapAllocationBytes"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServerImpl.allocator.lastHeapAllocationBytes"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25357, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.metricsRegionServerImpl.regionServer.TIMEOUT_REGION_MOVED"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServerImpl.regionServer.TIMEOUT_REGION_MOVED"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25358, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.metricsRegionServerImpl.regionServer.masterActiveTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServerImpl.regionServer.masterActiveTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25359, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.metricsRegionServerImpl.regionServer.masterFinishedInitializationTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServerImpl.regionServer.masterFinishedInitializationTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25360, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.metricsRegionServerImpl.regionServer.maxBalancingTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServerImpl.regionServer.maxBalancingTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25361, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.metricsRegionServerImpl.regionServer.shortOperationTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServerImpl.regionServer.shortOperationTimeout"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25362, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.metricsRegionServerImpl.regionServer.startcode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServerImpl.regionServer.startcode"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25363, "HMasterInstance.compactionChecker.timeOfThisRun < HMasterInstance.movedRegionsCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.movedRegionsCleaner.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25364, "HMasterInstance.compactionChecker.timeOfThisRun >= HMasterInstance.movedRegionsCleaner.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.movedRegionsCleaner.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25365, "HMasterInstance.compactionChecker.timeOfThisRun >= HMasterInstance.movedRegionsCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.movedRegionsCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25366, "HMasterInstance.compactionChecker.timeOfThisRun >= HMasterInstance.movedRegionsCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.movedRegionsCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25367, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.nonceManager.conflictWaitIterationMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.conflictWaitIterationMs"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25368, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.nonceManager.deleteNonceGracePeriod"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.deleteNonceGracePeriod"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25369, "HMasterInstance.compactionChecker.timeOfThisRun < HMasterInstance.nonceManagerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManagerChore.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25370, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.nonceManagerChore.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManagerChore.period"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25371, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25372, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.normalizer.masterRpcServices.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.rpcTimeout"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25373, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.normalizer.minRegionCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.minRegionCount"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25374, "HMasterInstance.compactionChecker.timeOfThisRun < HMasterInstance.normalizerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25375, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.pauseMonitor.SLEEP_INTERVAL_MS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.pauseMonitor.SLEEP_INTERVAL_MS"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25376, "HMasterInstance.compactionChecker.timeOfThisRun < HMasterInstance.periodicFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.periodicFlusher.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25377, "HMasterInstance.compactionChecker.timeOfThisRun >= HMasterInstance.periodicFlusher.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.periodicFlusher.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25378, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.procedureExecutor.activeExecutorCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25379, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.procedureExecutor.corePoolSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.corePoolSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25380, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.procedureExecutor.lastProcId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.lastProcId"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25381, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.procedureExecutor.maxPoolSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.maxPoolSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25382, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.procedureExecutor.scheduler.nullPollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.nullPollCalls"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25383, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.procedureExecutor.scheduler.pollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.pollCalls"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25384, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.procedureExecutor.store.REGION_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.REGION_ID"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25385, "HMasterInstance.compactionChecker.timeOfThisRun > HMasterInstance.procedureResultReporter.INIT_PAUSE_TIME_MS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureResultReporter.INIT_PAUSE_TIME_MS"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25386, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.procedureStore.REGION_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.REGION_ID"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25387, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.procedureStore.TABLE_NAME.hashCode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.TABLE_NAME.hashCode"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25388, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25389, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25390, "HMasterInstance.compactionChecker.timeOfThisRun < HMasterInstance.procedureStore.cleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25391, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.procedureStore.cleaner.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.period"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25392, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.procedureStore.cleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25393, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.procedureStore.cleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25394, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.procedureStore.cleanerPool.cleanerLatch"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25395, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.procedureStore.cleanerPool.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.size"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25396, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25397, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25398, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.procedureStore.numThreads"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.numThreads"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25399, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.procedureStore.region.DEEP_OVERHEAD"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.DEEP_OVERHEAD"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25400, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.procedureStore.region.FIXED_OVERHEAD"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.FIXED_OVERHEAD"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25401, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25402, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25403, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.procedureStore.region.blockingMemStoreSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.blockingMemStoreSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25404, "HMasterInstance.compactionChecker.timeOfThisRun >= HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25405, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25406, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.procedureStore.region.majorInProgress"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25407, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.procedureStore.region.maxBusyWaitDuration"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitDuration"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25408, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25409, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25410, "HMasterInstance.compactionChecker.timeOfThisRun < HMasterInstance.procedureStore.region.timestampSlop"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.timestampSlop"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25411, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.procedureStore.walFactory.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walFactory.timeoutMillis"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25412, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25413, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25414, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.procedureStore.walRoller.threadWakeFrequency"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.threadWakeFrequency"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25415, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.regionServerAccounting.globalMemStoreLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimit"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25416, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25417, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25418, "HMasterInstance.compactionChecker.timeOfThisRun < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25419, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25420, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25421, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25422, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25423, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.rpcClient.connectTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connectTO"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25424, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.rpcClient.connections.poolMaxSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25425, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.rpcClient.failedServers.latestExpiry"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25426, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.rpcClient.failedServers.recheckServersTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.recheckServersTimeout"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25427, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.rpcClient.failureSleep"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failureSleep"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25428, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.rpcClient.maxConcurrentCallsPerServer"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.maxConcurrentCallsPerServer"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25429, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.rpcClient.minIdleTimeBeforeClose"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.minIdleTimeBeforeClose"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25430, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.rpcClient.readTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.readTO"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25431, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.rpcClient.writeTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.writeTO"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25432, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.rpcServices.maxScannerResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.maxScannerResultSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25433, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25434, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.rpcServices.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcTimeout"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25435, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.rpcServices.scannerIdGenerator.scannerIdGen"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.scannerIdGen"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25436, "HMasterInstance.compactionChecker.timeOfThisRun < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25437, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.rsFatals.maxSizeBytes"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.maxSizeBytes"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25438, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.rsHost.loadSequence"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsHost.loadSequence"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25439, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.rsHost.rsServices.TIMEOUT_REGION_MOVED"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsHost.rsServices.TIMEOUT_REGION_MOVED"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25440, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.rsHost.rsServices.compactionCheckFrequency"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsHost.rsServices.compactionCheckFrequency"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25441, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.rsHost.rsServices.masterActiveTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsHost.rsServices.masterActiveTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25442, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.rsHost.rsServices.masterFinishedInitializationTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsHost.rsServices.masterFinishedInitializationTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25443, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.rsHost.rsServices.maxBalancingTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsHost.rsServices.maxBalancingTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25444, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.rsHost.rsServices.shortOperationTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsHost.rsServices.shortOperationTimeout"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25445, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.rsHost.rsServices.startcode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsHost.rsServices.startcode"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25446, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.rsSpaceQuotaManager.rsServices.TIMEOUT_REGION_MOVED"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsSpaceQuotaManager.rsServices.TIMEOUT_REGION_MOVED"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25447, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.rsSpaceQuotaManager.rsServices.compactionCheckFrequency"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsSpaceQuotaManager.rsServices.compactionCheckFrequency"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25448, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.rsSpaceQuotaManager.rsServices.masterActiveTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsSpaceQuotaManager.rsServices.masterActiveTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25449, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.rsSpaceQuotaManager.rsServices.masterFinishedInitializationTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsSpaceQuotaManager.rsServices.masterFinishedInitializationTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25450, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.rsSpaceQuotaManager.rsServices.maxBalancingTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsSpaceQuotaManager.rsServices.maxBalancingTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25451, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.rsSpaceQuotaManager.rsServices.mergePlanCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsSpaceQuotaManager.rsServices.mergePlanCount"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25452, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.rsSpaceQuotaManager.rsServices.shortOperationTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsSpaceQuotaManager.rsServices.shortOperationTimeout"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25453, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.rsSpaceQuotaManager.rsServices.startcode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsSpaceQuotaManager.rsServices.startcode"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25454, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.rssStub.masterRpcServices.maxScannerResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rssStub.masterRpcServices.maxScannerResultSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25455, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.rssStub.masterRpcServices.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rssStub.masterRpcServices.rpcTimeout"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25456, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.secureBulkLoadManager.RANDOM_RADIX"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.secureBulkLoadManager.RANDOM_RADIX"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25457, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.secureBulkLoadManager.RANDOM_WIDTH"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.secureBulkLoadManager.RANDOM_WIDTH"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25458, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.secureBulkLoadManager.conn.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.secureBulkLoadManager.conn.rpcTimeout"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25459, "HMasterInstance.compactionChecker.timeOfThisRun < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25460, "HMasterInstance.compactionChecker.timeOfThisRun > HMasterInstance.serverManager.flushedSeqIdFlusher.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.period"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25461, "HMasterInstance.compactionChecker.timeOfThisRun > HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25462, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25463, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.serverManager.maxSkew"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.maxSkew"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25464, "HMasterInstance.compactionChecker.timeOfThisRun < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25465, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25466, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.snapshotManager.coordinator.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotManager.coordinator.timeoutMillis"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25467, "HMasterInstance.compactionChecker.timeOfThisRun > HMasterInstance.splitLogWorker.coordination.checkInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.splitLogWorker.coordination.checkInterval"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25468, "HMasterInstance.compactionChecker.timeOfThisRun > HMasterInstance.splitLogWorker.coordination.maxConcurrentTasks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.splitLogWorker.coordination.maxConcurrentTasks"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25469, "HMasterInstance.compactionChecker.timeOfThisRun > HMasterInstance.splitLogWorker.coordination.reportPeriod"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.splitLogWorker.coordination.reportPeriod"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25470, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25471, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25472, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25473, "HMasterInstance.compactionChecker.timeOfThisRun < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25474, "HMasterInstance.compactionChecker.timeOfThisRun > HMasterInstance.walRoller.checkLowReplicationInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.walRoller.checkLowReplicationInterval"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25475, "HMasterInstance.compactionChecker.timeOfThisRun > HMasterInstance.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25476, "HMasterInstance.compactionChecker.timeOfThisRun > HMasterInstance.walRoller.rollPeriod"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.walRoller.rollPeriod"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25477, "HMasterInstance.compactionChecker.timeOfThisRun != HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25478, "HMasterInstance.compactionChecker.timeOfThisRun != daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0]))));
			}
		});
		invariants25999.add(new Invariant(25479, "HMasterInstance.compactionChecker.timeOfThisRun >= daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0])))-1);
			}
		});
		invariants25999.add(new Invariant(25480, "HMasterInstance.compactionChecker.timeOfThisRun != daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants25999.add(new Invariant(25481, "HMasterInstance.compactionChecker.timeOfThisRun % daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE) == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() % daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))) == 0);
			}
		});
		invariants25999.add(new Invariant(25482, "HMasterInstance.compactionChecker.timeOfThisRun != daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])))-1);
			}
		});
		invariants25999.add(new Invariant(25483, "daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)-1 % HMasterInstance.compactionChecker.timeOfThisRun == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])))-1 % ((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() == 0);
			}
		});
		invariants25999.add(new Invariant(25484, "HMasterInstance.compactionChecker.timeOfThisRun != daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants25999.add(new Invariant(25485, "HMasterInstance.compactionChecker.timeOfThisRun != daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1);
			}
		});
		invariants25999.add(new Invariant(25486, "HMasterInstance.compactionChecker.timeOfThisRun % daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() % daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1 == 0);
			}
		});
		invariants25999.add(new Invariant(25487, "HMasterInstance.compactionChecker.timeOfThisRun != daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants25999.add(new Invariant(25488, "HMasterInstance.compactionChecker.timeOfThisRun != daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0])))-1);
			}
		});
		invariants25999.add(new Invariant(25489, "HMasterInstance.compactionChecker.timeOfThisRun != daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants25999.add(new Invariant(25490, "HMasterInstance.compactionChecker.timeOfThisRun != daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0])))-1);
			}
		});
		invariants25999.add(new Invariant(25491, "HMasterInstance.compactionChecker.timeOfThisRun != daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants25999.add(new Invariant(25492, "HMasterInstance.compactionChecker.timeOfThisRun != daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.compactionChecker.timeOfThisRun"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0])))-1);
			}
		});
		invariants25999.add(new Invariant(25493, "HMasterInstance.cpHost.loadSequence < HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.cpHost.loadSequence"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25494, "HMasterInstance.cpHost.loadSequence < HMasterInstance.csm.splitLogManagerCoordination.timeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.cpHost.loadSequence"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25495, "HMasterInstance.cpHost.loadSequence < HMasterInstance.hbckChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.cpHost.loadSequence"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.hbckChore.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25496, "HMasterInstance.cpHost.loadSequence < HMasterInstance.hbckChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.cpHost.loadSequence"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.hbckChore.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25497, "HMasterInstance.cpHost.loadSequence < HMasterInstance.hbckChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.cpHost.loadSequence"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.hbckChore.timeOfThisRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25498, "HMasterInstance.cpHost.loadSequence < HMasterInstance.hfileCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.cpHost.loadSequence"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25499, "HMasterInstance.cpHost.loadSequence < HMasterInstance.hfileCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.cpHost.loadSequence"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25500, "HMasterInstance.cpHost.loadSequence < HMasterInstance.logCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.cpHost.loadSequence"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25501, "HMasterInstance.cpHost.loadSequence < HMasterInstance.logCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.cpHost.loadSequence"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25502, "HMasterInstance.cpHost.loadSequence < HMasterInstance.normalizerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.cpHost.loadSequence"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25503, "HMasterInstance.cpHost.loadSequence <= HMasterInstance.procedureExecutor.activeExecutorCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.cpHost.loadSequence"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25504, "HMasterInstance.cpHost.loadSequence % HMasterInstance.procedureExecutor.lastProcId == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.cpHost.loadSequence"))).intValue() % ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.lastProcId"))).intValue() == 0);
			}
		});
		invariants25999.add(new Invariant(25505, "HMasterInstance.cpHost.loadSequence < HMasterInstance.procedureExecutor.lastProcId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.cpHost.loadSequence"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.lastProcId"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25506, "HMasterInstance.cpHost.loadSequence <= HMasterInstance.procedureExecutor.scheduler.nullPollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.cpHost.loadSequence"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.nullPollCalls"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25507, "HMasterInstance.cpHost.loadSequence % HMasterInstance.procedureExecutor.scheduler.pollCalls == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.cpHost.loadSequence"))).intValue() % ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.pollCalls"))).intValue() == 0);
			}
		});
		invariants25999.add(new Invariant(25508, "HMasterInstance.cpHost.loadSequence < HMasterInstance.procedureExecutor.scheduler.pollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.cpHost.loadSequence"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.pollCalls"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25509, "HMasterInstance.cpHost.loadSequence < HMasterInstance.procedureStore.cleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.cpHost.loadSequence"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25510, "HMasterInstance.cpHost.loadSequence < HMasterInstance.procedureStore.cleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.cpHost.loadSequence"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25511, "HMasterInstance.cpHost.loadSequence < HMasterInstance.procedureStore.cleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.cpHost.loadSequence"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25512, "HMasterInstance.cpHost.loadSequence % HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.cpHost.loadSequence"))).intValue() % ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() == 0);
			}
		});
		invariants25999.add(new Invariant(25513, "HMasterInstance.cpHost.loadSequence < HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.cpHost.loadSequence"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25514, "HMasterInstance.cpHost.loadSequence < HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.cpHost.loadSequence"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25515, "HMasterInstance.cpHost.loadSequence < HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.cpHost.loadSequence"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25516, "HMasterInstance.cpHost.loadSequence < HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.cpHost.loadSequence"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25517, "HMasterInstance.cpHost.loadSequence < HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.cpHost.loadSequence"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25518, "HMasterInstance.cpHost.loadSequence < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.cpHost.loadSequence"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25519, "HMasterInstance.cpHost.loadSequence < HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.cpHost.loadSequence"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25520, "HMasterInstance.cpHost.loadSequence % HMasterInstance.rpcClient.callIdCnt == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.cpHost.loadSequence"))).intValue() % ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue() == 0);
			}
		});
		invariants25999.add(new Invariant(25521, "HMasterInstance.cpHost.loadSequence < HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.cpHost.loadSequence"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25522, "HMasterInstance.cpHost.loadSequence == HMasterInstance.rpcServices.scannerIdGenerator.scannerIdGen*HMasterInstance.rpcServices.scannerIdGenerator.scannerIdGen"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.cpHost.loadSequence"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.scannerIdGen"))).intValue()*((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.scannerIdGen"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25523, "HMasterInstance.rpcServices.scannerIdGenerator.scannerIdGen == HMasterInstance.cpHost.loadSequence*HMasterInstance.cpHost.loadSequence"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.scannerIdGen"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.cpHost.loadSequence"))).intValue()*((Number)(InvariantChecker.getValue("HMasterInstance.cpHost.loadSequence"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25524, "HMasterInstance.cpHost.loadSequence > HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.cpHost.loadSequence"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25525, "HMasterInstance.cpHost.loadSequence < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.cpHost.loadSequence"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25526, "HMasterInstance.cpHost.loadSequence > HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.cpHost.loadSequence"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25527, "HMasterInstance.cpHost.loadSequence < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.cpHost.loadSequence"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25528, "HMasterInstance.cpHost.loadSequence < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.cpHost.loadSequence"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25529, "HMasterInstance.cpHost.loadSequence < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.cpHost.loadSequence"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25530, "HMasterInstance.cpHost.loadSequence <= HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.cpHost.loadSequence"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25531, "HMasterInstance.cpHost.loadSequence % HMasterInstance.tableDescriptors.invocations == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.cpHost.loadSequence"))).intValue() % ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue() == 0);
			}
		});
		invariants25999.add(new Invariant(25532, "HMasterInstance.cpHost.loadSequence < HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.cpHost.loadSequence"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25533, "HMasterInstance.cpHost.loadSequence <= daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.cpHost.loadSequence"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants25999.add(new Invariant(25534, "HMasterInstance.cpHost.loadSequence >= daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.cpHost.loadSequence"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])))-1);
			}
		});
		invariants25999.add(new Invariant(25535, "HMasterInstance.cpHost.loadSequence <= daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.cpHost.loadSequence"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants25999.add(new Invariant(25536, "HMasterInstance.cpHost.loadSequence <= daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.cpHost.loadSequence"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants25999.add(new Invariant(25537, "HMasterInstance.cpHost.loadSequence >= daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.cpHost.loadSequence"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0])))-1);
			}
		});
		invariants25999.add(new Invariant(25538, "HMasterInstance.cpHost.loadSequence <= daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.cpHost.loadSequence"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants25999.add(new Invariant(25539, "HMasterInstance.cpHost.loadSequence <= daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.cpHost.loadSequence"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants25999.add(new Invariant(25540, "HMasterInstance.cpHost.loadSequence >= daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.cpHost.loadSequence"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0])))-1);
			}
		});
		invariants25999.add(new Invariant(25541, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold >= HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25542, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold < HMasterInstance.executorStatusChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.executorStatusChore.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25543, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold > HMasterInstance.executorStatusChore.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.executorStatusChore.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25544, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold < HMasterInstance.executorStatusChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.executorStatusChore.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25545, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold < HMasterInstance.executorStatusChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.executorStatusChore.timeOfThisRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25546, "HMasterInstance.hbckChore.lastLog % HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hbckChore.lastLog"))).intValue() % ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() == 0);
			}
		});
		invariants25999.add(new Invariant(25547, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold != HMasterInstance.hbckChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.hbckChore.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25548, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold < HMasterInstance.lockStub.maxScannerResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.maxScannerResultSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25549, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold < HMasterInstance.lockStub.priority.META_TRANSITION_QOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.priority.META_TRANSITION_QOS"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25550, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold < HMasterInstance.lockStub.regionServer.TIMEOUT_REGION_MOVED"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.regionServer.TIMEOUT_REGION_MOVED"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25551, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold < HMasterInstance.lockStub.regionServer.compactionCheckFrequency"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.regionServer.compactionCheckFrequency"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25552, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold < HMasterInstance.lockStub.regionServer.masterActiveTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.regionServer.masterActiveTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25553, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold != HMasterInstance.lockStub.regionServer.masterFinishedInitializationTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.regionServer.masterFinishedInitializationTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25554, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold < HMasterInstance.lockStub.regionServer.maxBalancingTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.regionServer.maxBalancingTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25555, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold > HMasterInstance.lockStub.regionServer.mergePlanCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.regionServer.mergePlanCount"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25556, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold < HMasterInstance.lockStub.regionServer.shortOperationTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.regionServer.shortOperationTimeout"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25557, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold < HMasterInstance.lockStub.regionServer.startcode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.regionServer.startcode"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25558, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold < HMasterInstance.lockStub.rpcServer.NIO_BUFFER_LIMIT"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.rpcServer.NIO_BUFFER_LIMIT"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25559, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold < HMasterInstance.lockStub.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.rpcTimeout"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25560, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold != HMasterInstance.lockStub.scannerIdGenerator.scannerIdGen"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.scannerIdGenerator.scannerIdGen"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25561, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold < HMasterInstance.lockStub.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25562, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold != HMasterInstance.metricsRegionServer.regionServerWrapper.averageRegionSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.averageRegionSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25563, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold != HMasterInstance.metricsRegionServer.regionServerWrapper.avgStoreFileAge"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.avgStoreFileAge"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25564, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold != HMasterInstance.metricsRegionServer.regionServerWrapper.maxStoreFileAge"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.maxStoreFileAge"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25565, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold != HMasterInstance.metricsRegionServer.regionServerWrapper.minStoreFileAge"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.minStoreFileAge"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25566, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold >= HMasterInstance.metricsRegionServer.regionServerWrapper.numStoreFiles"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.numStoreFiles"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25567, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold != HMasterInstance.metricsRegionServer.regionServerWrapper.numStores"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.numStores"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25568, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold > HMasterInstance.metricsRegionServer.regionServerWrapper.numWALFiles"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.numWALFiles"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25569, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold < HMasterInstance.metricsRegionServer.regionServerWrapper.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.period"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25570, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold != HMasterInstance.metricsRegionServer.regionServerWrapper.readRequestsCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.readRequestsCount"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25571, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold != HMasterInstance.metricsRegionServer.regionServerWrapper.storeFileSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.storeFileSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25572, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold != HMasterInstance.metricsRegionServer.regionServerWrapper.storefileIndexSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.storefileIndexSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25573, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold != HMasterInstance.metricsRegionServer.regionServerWrapper.totalStaticBloomSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.totalStaticBloomSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25574, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold != HMasterInstance.metricsRegionServer.regionServerWrapper.totalStaticIndexSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.totalStaticIndexSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25575, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold != HMasterInstance.metricsRegionServerImpl.allocator.lastHeapAllocationBytes"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServerImpl.allocator.lastHeapAllocationBytes"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25576, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold < HMasterInstance.metricsRegionServerImpl.regionServer.TIMEOUT_REGION_MOVED"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServerImpl.regionServer.TIMEOUT_REGION_MOVED"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25577, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold < HMasterInstance.metricsRegionServerImpl.regionServer.masterActiveTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServerImpl.regionServer.masterActiveTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25578, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold != HMasterInstance.metricsRegionServerImpl.regionServer.masterFinishedInitializationTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServerImpl.regionServer.masterFinishedInitializationTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25579, "HMasterInstance.metricsRegionServerImpl.regionServer.masterFinishedInitializationTime % HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServerImpl.regionServer.masterFinishedInitializationTime"))).intValue() % ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() == 0);
			}
		});
		invariants25999.add(new Invariant(25580, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold < HMasterInstance.metricsRegionServerImpl.regionServer.maxBalancingTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServerImpl.regionServer.maxBalancingTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25581, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold < HMasterInstance.metricsRegionServerImpl.regionServer.shortOperationTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServerImpl.regionServer.shortOperationTimeout"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25582, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold < HMasterInstance.metricsRegionServerImpl.regionServer.startcode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServerImpl.regionServer.startcode"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25583, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold < HMasterInstance.movedRegionsCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.movedRegionsCleaner.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25584, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold > HMasterInstance.movedRegionsCleaner.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.movedRegionsCleaner.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25585, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold != HMasterInstance.movedRegionsCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.movedRegionsCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25586, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold != HMasterInstance.movedRegionsCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.movedRegionsCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25587, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold < HMasterInstance.nonceManagerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManagerChore.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25588, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold < HMasterInstance.nonceManagerChore.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManagerChore.period"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25589, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold != HMasterInstance.nonceManagerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManagerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25590, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold != HMasterInstance.nonceManagerChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManagerChore.timeOfThisRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25591, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold < HMasterInstance.pauseMonitor.SLEEP_INTERVAL_MS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.pauseMonitor.SLEEP_INTERVAL_MS"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25592, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold < HMasterInstance.periodicFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.periodicFlusher.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25593, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold != HMasterInstance.periodicFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.periodicFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25594, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold != HMasterInstance.periodicFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.periodicFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25595, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold > HMasterInstance.procedureExecutor.activeExecutorCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25596, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold != HMasterInstance.procedureExecutor.scheduler.nullPollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.nullPollCalls"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25597, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold < HMasterInstance.procedureResultReporter.INIT_PAUSE_TIME_MS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureResultReporter.INIT_PAUSE_TIME_MS"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25598, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold > HMasterInstance.rsHost.loadSequence"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsHost.loadSequence"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25599, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold < HMasterInstance.rsHost.rsServices.TIMEOUT_REGION_MOVED"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rsHost.rsServices.TIMEOUT_REGION_MOVED"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25600, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold < HMasterInstance.rsHost.rsServices.compactionCheckFrequency"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rsHost.rsServices.compactionCheckFrequency"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25601, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold < HMasterInstance.rsHost.rsServices.masterActiveTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rsHost.rsServices.masterActiveTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25602, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold != HMasterInstance.rsHost.rsServices.masterFinishedInitializationTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsHost.rsServices.masterFinishedInitializationTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25603, "HMasterInstance.rsHost.rsServices.masterFinishedInitializationTime % HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rsHost.rsServices.masterFinishedInitializationTime"))).intValue() % ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() == 0);
			}
		});
		invariants25999.add(new Invariant(25604, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold < HMasterInstance.rsHost.rsServices.maxBalancingTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rsHost.rsServices.maxBalancingTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25605, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold < HMasterInstance.rsHost.rsServices.shortOperationTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rsHost.rsServices.shortOperationTimeout"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25606, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold < HMasterInstance.rsHost.rsServices.startcode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rsHost.rsServices.startcode"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25607, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold < HMasterInstance.rsSpaceQuotaManager.rsServices.TIMEOUT_REGION_MOVED"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rsSpaceQuotaManager.rsServices.TIMEOUT_REGION_MOVED"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25608, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold < HMasterInstance.rsSpaceQuotaManager.rsServices.compactionCheckFrequency"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rsSpaceQuotaManager.rsServices.compactionCheckFrequency"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25609, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold < HMasterInstance.rsSpaceQuotaManager.rsServices.masterActiveTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rsSpaceQuotaManager.rsServices.masterActiveTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25610, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold != HMasterInstance.rsSpaceQuotaManager.rsServices.masterFinishedInitializationTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsSpaceQuotaManager.rsServices.masterFinishedInitializationTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25611, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold < HMasterInstance.rsSpaceQuotaManager.rsServices.maxBalancingTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rsSpaceQuotaManager.rsServices.maxBalancingTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25612, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold > HMasterInstance.rsSpaceQuotaManager.rsServices.mergePlanCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsSpaceQuotaManager.rsServices.mergePlanCount"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25613, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold < HMasterInstance.rsSpaceQuotaManager.rsServices.shortOperationTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rsSpaceQuotaManager.rsServices.shortOperationTimeout"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25614, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold < HMasterInstance.rsSpaceQuotaManager.rsServices.startcode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rsSpaceQuotaManager.rsServices.startcode"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25615, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold < HMasterInstance.rssStub.masterRpcServices.maxScannerResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rssStub.masterRpcServices.maxScannerResultSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25616, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold < HMasterInstance.rssStub.masterRpcServices.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rssStub.masterRpcServices.rpcTimeout"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25617, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold < HMasterInstance.secureBulkLoadManager.RANDOM_RADIX"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.secureBulkLoadManager.RANDOM_RADIX"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25618, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold < HMasterInstance.secureBulkLoadManager.RANDOM_WIDTH"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.secureBulkLoadManager.RANDOM_WIDTH"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25619, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold < HMasterInstance.secureBulkLoadManager.conn.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.secureBulkLoadManager.conn.rpcTimeout"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25620, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold < HMasterInstance.splitLogWorker.coordination.checkInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.splitLogWorker.coordination.checkInterval"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25621, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold > HMasterInstance.splitLogWorker.coordination.maxConcurrentTasks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.splitLogWorker.coordination.maxConcurrentTasks"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25622, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold < HMasterInstance.splitLogWorker.coordination.reportPeriod"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.splitLogWorker.coordination.reportPeriod"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25623, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold < HMasterInstance.walRoller.checkLowReplicationInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walRoller.checkLowReplicationInterval"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25624, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold < HMasterInstance.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25625, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold < HMasterInstance.walRoller.rollPeriod"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walRoller.rollPeriod"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25626, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold >= daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants25999.add(new Invariant(25627, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold >= daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0])))-1);
			}
		});
		invariants25999.add(new Invariant(25628, "HMasterInstance.csm.splitLogManagerCoordination.timeout >= HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25629, "HMasterInstance.csm.splitLogManagerCoordination.timeout >= HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25630, "HMasterInstance.csm.splitLogManagerCoordination.timeout < HMasterInstance.executorStatusChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.executorStatusChore.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25631, "HMasterInstance.csm.splitLogManagerCoordination.timeout > HMasterInstance.executorStatusChore.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.executorStatusChore.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25632, "HMasterInstance.csm.splitLogManagerCoordination.timeout < HMasterInstance.executorStatusChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.executorStatusChore.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25633, "HMasterInstance.csm.splitLogManagerCoordination.timeout < HMasterInstance.executorStatusChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.executorStatusChore.timeOfThisRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25634, "HMasterInstance.csm.splitLogManagerCoordination.timeout != HMasterInstance.hbckChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.hbckChore.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25635, "HMasterInstance.csm.splitLogManagerCoordination.timeout < HMasterInstance.lockStub.maxScannerResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.maxScannerResultSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25636, "HMasterInstance.csm.splitLogManagerCoordination.timeout > HMasterInstance.lockStub.priority.META_TRANSITION_QOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.priority.META_TRANSITION_QOS"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25637, "HMasterInstance.csm.splitLogManagerCoordination.timeout > HMasterInstance.lockStub.regionServer.compactionCheckFrequency"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.regionServer.compactionCheckFrequency"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25638, "HMasterInstance.csm.splitLogManagerCoordination.timeout < HMasterInstance.lockStub.regionServer.masterActiveTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.regionServer.masterActiveTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25639, "HMasterInstance.csm.splitLogManagerCoordination.timeout != HMasterInstance.lockStub.regionServer.masterFinishedInitializationTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.regionServer.masterFinishedInitializationTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25640, "HMasterInstance.csm.splitLogManagerCoordination.timeout < HMasterInstance.lockStub.regionServer.maxBalancingTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.regionServer.maxBalancingTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25641, "HMasterInstance.csm.splitLogManagerCoordination.timeout > HMasterInstance.lockStub.regionServer.mergePlanCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.regionServer.mergePlanCount"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25642, "HMasterInstance.csm.splitLogManagerCoordination.timeout > HMasterInstance.lockStub.regionServer.shortOperationTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.regionServer.shortOperationTimeout"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25643, "HMasterInstance.csm.splitLogManagerCoordination.timeout < HMasterInstance.lockStub.regionServer.startcode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.regionServer.startcode"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25644, "HMasterInstance.csm.splitLogManagerCoordination.timeout > HMasterInstance.lockStub.rpcServer.NIO_BUFFER_LIMIT"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.rpcServer.NIO_BUFFER_LIMIT"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25645, "HMasterInstance.csm.splitLogManagerCoordination.timeout > HMasterInstance.lockStub.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.rpcTimeout"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25646, "HMasterInstance.csm.splitLogManagerCoordination.timeout > HMasterInstance.lockStub.scannerIdGenerator.scannerIdGen"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.scannerIdGenerator.scannerIdGen"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25647, "HMasterInstance.csm.splitLogManagerCoordination.timeout < HMasterInstance.lockStub.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25648, "HMasterInstance.csm.splitLogManagerCoordination.timeout > HMasterInstance.metricsRegionServer.regionServerWrapper.averageRegionSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.averageRegionSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25649, "HMasterInstance.csm.splitLogManagerCoordination.timeout > HMasterInstance.metricsRegionServer.regionServerWrapper.avgStoreFileAge"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.avgStoreFileAge"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25650, "HMasterInstance.csm.splitLogManagerCoordination.timeout > HMasterInstance.metricsRegionServer.regionServerWrapper.maxStoreFileAge"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.maxStoreFileAge"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25651, "HMasterInstance.csm.splitLogManagerCoordination.timeout > HMasterInstance.metricsRegionServer.regionServerWrapper.minStoreFileAge"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.minStoreFileAge"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25652, "HMasterInstance.csm.splitLogManagerCoordination.timeout > HMasterInstance.metricsRegionServer.regionServerWrapper.numStoreFiles"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.numStoreFiles"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25653, "HMasterInstance.csm.splitLogManagerCoordination.timeout > HMasterInstance.metricsRegionServer.regionServerWrapper.numStores"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.numStores"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25654, "HMasterInstance.csm.splitLogManagerCoordination.timeout > HMasterInstance.metricsRegionServer.regionServerWrapper.numWALFiles"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.numWALFiles"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25655, "HMasterInstance.csm.splitLogManagerCoordination.timeout > HMasterInstance.metricsRegionServer.regionServerWrapper.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.period"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25656, "HMasterInstance.csm.splitLogManagerCoordination.timeout > HMasterInstance.metricsRegionServer.regionServerWrapper.readRequestsCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.readRequestsCount"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25657, "HMasterInstance.csm.splitLogManagerCoordination.timeout > HMasterInstance.metricsRegionServer.regionServerWrapper.storeFileSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.storeFileSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25658, "HMasterInstance.csm.splitLogManagerCoordination.timeout > HMasterInstance.metricsRegionServer.regionServerWrapper.storefileIndexSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.storefileIndexSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25659, "HMasterInstance.csm.splitLogManagerCoordination.timeout > HMasterInstance.metricsRegionServer.regionServerWrapper.totalStaticBloomSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.totalStaticBloomSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25660, "HMasterInstance.csm.splitLogManagerCoordination.timeout > HMasterInstance.metricsRegionServer.regionServerWrapper.totalStaticIndexSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.totalStaticIndexSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25661, "HMasterInstance.csm.splitLogManagerCoordination.timeout > HMasterInstance.metricsRegionServerImpl.allocator.lastHeapAllocationBytes"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServerImpl.allocator.lastHeapAllocationBytes"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25662, "HMasterInstance.csm.splitLogManagerCoordination.timeout < HMasterInstance.metricsRegionServerImpl.regionServer.masterActiveTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServerImpl.regionServer.masterActiveTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25663, "HMasterInstance.csm.splitLogManagerCoordination.timeout != HMasterInstance.metricsRegionServerImpl.regionServer.masterFinishedInitializationTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServerImpl.regionServer.masterFinishedInitializationTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25664, "HMasterInstance.csm.splitLogManagerCoordination.timeout < HMasterInstance.metricsRegionServerImpl.regionServer.maxBalancingTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServerImpl.regionServer.maxBalancingTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25665, "HMasterInstance.csm.splitLogManagerCoordination.timeout > HMasterInstance.metricsRegionServerImpl.regionServer.shortOperationTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServerImpl.regionServer.shortOperationTimeout"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25666, "HMasterInstance.csm.splitLogManagerCoordination.timeout < HMasterInstance.metricsRegionServerImpl.regionServer.startcode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServerImpl.regionServer.startcode"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25667, "HMasterInstance.csm.splitLogManagerCoordination.timeout < HMasterInstance.movedRegionsCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.movedRegionsCleaner.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25668, "HMasterInstance.csm.splitLogManagerCoordination.timeout > HMasterInstance.movedRegionsCleaner.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.movedRegionsCleaner.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25669, "HMasterInstance.csm.splitLogManagerCoordination.timeout != HMasterInstance.movedRegionsCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.movedRegionsCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25670, "HMasterInstance.csm.splitLogManagerCoordination.timeout != HMasterInstance.movedRegionsCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.movedRegionsCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25671, "HMasterInstance.csm.splitLogManagerCoordination.timeout < HMasterInstance.nonceManagerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManagerChore.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25672, "HMasterInstance.csm.splitLogManagerCoordination.timeout < HMasterInstance.nonceManagerChore.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManagerChore.period"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25673, "HMasterInstance.csm.splitLogManagerCoordination.timeout != HMasterInstance.nonceManagerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManagerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25674, "HMasterInstance.csm.splitLogManagerCoordination.timeout != HMasterInstance.nonceManagerChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManagerChore.timeOfThisRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25675, "HMasterInstance.csm.splitLogManagerCoordination.timeout > HMasterInstance.pauseMonitor.SLEEP_INTERVAL_MS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.pauseMonitor.SLEEP_INTERVAL_MS"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25676, "HMasterInstance.csm.splitLogManagerCoordination.timeout < HMasterInstance.periodicFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.periodicFlusher.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25677, "HMasterInstance.csm.splitLogManagerCoordination.timeout > HMasterInstance.periodicFlusher.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.periodicFlusher.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25678, "HMasterInstance.csm.splitLogManagerCoordination.timeout != HMasterInstance.periodicFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.periodicFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25679, "HMasterInstance.csm.splitLogManagerCoordination.timeout != HMasterInstance.periodicFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.periodicFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25680, "HMasterInstance.csm.splitLogManagerCoordination.timeout > HMasterInstance.procedureResultReporter.INIT_PAUSE_TIME_MS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureResultReporter.INIT_PAUSE_TIME_MS"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25681, "HMasterInstance.csm.splitLogManagerCoordination.timeout >= HMasterInstance.rpcServices.scannerIdGenerator.scannerIdGen"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.scannerIdGen"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25682, "HMasterInstance.csm.splitLogManagerCoordination.timeout > HMasterInstance.rsHost.loadSequence"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsHost.loadSequence"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25683, "HMasterInstance.csm.splitLogManagerCoordination.timeout > HMasterInstance.rsHost.rsServices.compactionCheckFrequency"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsHost.rsServices.compactionCheckFrequency"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25684, "HMasterInstance.csm.splitLogManagerCoordination.timeout < HMasterInstance.rsHost.rsServices.masterActiveTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rsHost.rsServices.masterActiveTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25685, "HMasterInstance.csm.splitLogManagerCoordination.timeout != HMasterInstance.rsHost.rsServices.masterFinishedInitializationTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsHost.rsServices.masterFinishedInitializationTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25686, "HMasterInstance.csm.splitLogManagerCoordination.timeout < HMasterInstance.rsHost.rsServices.maxBalancingTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rsHost.rsServices.maxBalancingTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25687, "HMasterInstance.csm.splitLogManagerCoordination.timeout > HMasterInstance.rsHost.rsServices.shortOperationTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsHost.rsServices.shortOperationTimeout"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25688, "HMasterInstance.csm.splitLogManagerCoordination.timeout < HMasterInstance.rsHost.rsServices.startcode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rsHost.rsServices.startcode"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25689, "HMasterInstance.csm.splitLogManagerCoordination.timeout > HMasterInstance.rsSpaceQuotaManager.rsServices.compactionCheckFrequency"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsSpaceQuotaManager.rsServices.compactionCheckFrequency"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25690, "HMasterInstance.csm.splitLogManagerCoordination.timeout < HMasterInstance.rsSpaceQuotaManager.rsServices.masterActiveTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rsSpaceQuotaManager.rsServices.masterActiveTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25691, "HMasterInstance.csm.splitLogManagerCoordination.timeout != HMasterInstance.rsSpaceQuotaManager.rsServices.masterFinishedInitializationTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsSpaceQuotaManager.rsServices.masterFinishedInitializationTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25692, "HMasterInstance.csm.splitLogManagerCoordination.timeout < HMasterInstance.rsSpaceQuotaManager.rsServices.maxBalancingTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rsSpaceQuotaManager.rsServices.maxBalancingTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25693, "HMasterInstance.csm.splitLogManagerCoordination.timeout > HMasterInstance.rsSpaceQuotaManager.rsServices.mergePlanCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsSpaceQuotaManager.rsServices.mergePlanCount"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25694, "HMasterInstance.csm.splitLogManagerCoordination.timeout > HMasterInstance.rsSpaceQuotaManager.rsServices.shortOperationTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsSpaceQuotaManager.rsServices.shortOperationTimeout"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25695, "HMasterInstance.csm.splitLogManagerCoordination.timeout < HMasterInstance.rsSpaceQuotaManager.rsServices.startcode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rsSpaceQuotaManager.rsServices.startcode"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25696, "HMasterInstance.csm.splitLogManagerCoordination.timeout < HMasterInstance.rssStub.masterRpcServices.maxScannerResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rssStub.masterRpcServices.maxScannerResultSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25697, "HMasterInstance.csm.splitLogManagerCoordination.timeout > HMasterInstance.rssStub.masterRpcServices.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rssStub.masterRpcServices.rpcTimeout"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25698, "HMasterInstance.csm.splitLogManagerCoordination.timeout > HMasterInstance.secureBulkLoadManager.RANDOM_RADIX"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.secureBulkLoadManager.RANDOM_RADIX"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25699, "HMasterInstance.csm.splitLogManagerCoordination.timeout > HMasterInstance.secureBulkLoadManager.RANDOM_WIDTH"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.secureBulkLoadManager.RANDOM_WIDTH"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25700, "HMasterInstance.csm.splitLogManagerCoordination.timeout > HMasterInstance.secureBulkLoadManager.conn.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.secureBulkLoadManager.conn.rpcTimeout"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25701, "HMasterInstance.csm.splitLogManagerCoordination.timeout > HMasterInstance.splitLogWorker.coordination.checkInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.splitLogWorker.coordination.checkInterval"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25702, "HMasterInstance.csm.splitLogManagerCoordination.timeout > HMasterInstance.splitLogWorker.coordination.maxConcurrentTasks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.splitLogWorker.coordination.maxConcurrentTasks"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25703, "HMasterInstance.csm.splitLogManagerCoordination.timeout > HMasterInstance.splitLogWorker.coordination.reportPeriod"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.splitLogWorker.coordination.reportPeriod"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25704, "HMasterInstance.csm.splitLogManagerCoordination.timeout > HMasterInstance.walRoller.checkLowReplicationInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.walRoller.checkLowReplicationInterval"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25705, "HMasterInstance.csm.splitLogManagerCoordination.timeout < HMasterInstance.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25706, "HMasterInstance.csm.splitLogManagerCoordination.timeout < HMasterInstance.walRoller.rollPeriod"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walRoller.rollPeriod"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25707, "HMasterInstance.csm.splitLogWorkerCoordination.checkInterval > HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.checkInterval"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25708, "HMasterInstance.csm.splitLogWorkerCoordination.checkInterval != HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.checkInterval"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25709, "HMasterInstance.csm.splitLogWorkerCoordination.checkInterval < HMasterInstance.executorStatusChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.checkInterval"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.executorStatusChore.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25710, "HMasterInstance.csm.splitLogWorkerCoordination.checkInterval > HMasterInstance.executorStatusChore.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.checkInterval"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.executorStatusChore.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25711, "HMasterInstance.csm.splitLogWorkerCoordination.checkInterval < HMasterInstance.executorStatusChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.checkInterval"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.executorStatusChore.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25712, "HMasterInstance.csm.splitLogWorkerCoordination.checkInterval < HMasterInstance.executorStatusChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.checkInterval"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.executorStatusChore.timeOfThisRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25713, "HMasterInstance.csm.splitLogWorkerCoordination.checkInterval != HMasterInstance.hbckChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.checkInterval"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.hbckChore.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25714, "HMasterInstance.csm.splitLogWorkerCoordination.checkInterval != HMasterInstance.lockStub.regionServer.masterFinishedInitializationTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.checkInterval"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.regionServer.masterFinishedInitializationTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25715, "HMasterInstance.csm.splitLogWorkerCoordination.checkInterval > HMasterInstance.lockStub.scannerIdGenerator.scannerIdGen"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.checkInterval"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.scannerIdGenerator.scannerIdGen"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25716, "HMasterInstance.csm.splitLogWorkerCoordination.checkInterval != HMasterInstance.metricsRegionServer.regionServerWrapper.averageRegionSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.checkInterval"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.averageRegionSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25717, "HMasterInstance.csm.splitLogWorkerCoordination.checkInterval != HMasterInstance.metricsRegionServer.regionServerWrapper.avgStoreFileAge"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.checkInterval"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.avgStoreFileAge"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25718, "HMasterInstance.csm.splitLogWorkerCoordination.checkInterval != HMasterInstance.metricsRegionServer.regionServerWrapper.maxStoreFileAge"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.checkInterval"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.maxStoreFileAge"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25719, "HMasterInstance.csm.splitLogWorkerCoordination.checkInterval != HMasterInstance.metricsRegionServer.regionServerWrapper.minStoreFileAge"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.checkInterval"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.minStoreFileAge"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25720, "HMasterInstance.csm.splitLogWorkerCoordination.checkInterval > HMasterInstance.metricsRegionServer.regionServerWrapper.numStoreFiles"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.checkInterval"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.numStoreFiles"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25721, "HMasterInstance.csm.splitLogWorkerCoordination.checkInterval > HMasterInstance.metricsRegionServer.regionServerWrapper.numStores"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.checkInterval"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.numStores"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25722, "HMasterInstance.csm.splitLogWorkerCoordination.checkInterval > HMasterInstance.metricsRegionServer.regionServerWrapper.numWALFiles"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.checkInterval"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.numWALFiles"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25723, "HMasterInstance.csm.splitLogWorkerCoordination.checkInterval > HMasterInstance.metricsRegionServer.regionServerWrapper.readRequestsCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.checkInterval"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.readRequestsCount"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25724, "HMasterInstance.csm.splitLogWorkerCoordination.checkInterval != HMasterInstance.metricsRegionServer.regionServerWrapper.storeFileSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.checkInterval"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.storeFileSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25725, "HMasterInstance.csm.splitLogWorkerCoordination.checkInterval > HMasterInstance.metricsRegionServer.regionServerWrapper.storefileIndexSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.checkInterval"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.storefileIndexSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25726, "HMasterInstance.csm.splitLogWorkerCoordination.checkInterval > HMasterInstance.metricsRegionServer.regionServerWrapper.totalStaticBloomSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.checkInterval"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.totalStaticBloomSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25727, "HMasterInstance.csm.splitLogWorkerCoordination.checkInterval > HMasterInstance.metricsRegionServer.regionServerWrapper.totalStaticIndexSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.checkInterval"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.totalStaticIndexSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25728, "HMasterInstance.csm.splitLogWorkerCoordination.checkInterval != HMasterInstance.metricsRegionServerImpl.allocator.lastHeapAllocationBytes"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.checkInterval"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServerImpl.allocator.lastHeapAllocationBytes"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25729, "HMasterInstance.csm.splitLogWorkerCoordination.checkInterval < HMasterInstance.metricsRegionServerImpl.regionServer.masterActiveTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.checkInterval"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServerImpl.regionServer.masterActiveTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25730, "HMasterInstance.csm.splitLogWorkerCoordination.checkInterval != HMasterInstance.metricsRegionServerImpl.regionServer.masterFinishedInitializationTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.checkInterval"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServerImpl.regionServer.masterFinishedInitializationTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25731, "HMasterInstance.csm.splitLogWorkerCoordination.checkInterval < HMasterInstance.metricsRegionServerImpl.regionServer.startcode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.checkInterval"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServerImpl.regionServer.startcode"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25732, "HMasterInstance.csm.splitLogWorkerCoordination.checkInterval < HMasterInstance.movedRegionsCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.checkInterval"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.movedRegionsCleaner.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25733, "HMasterInstance.csm.splitLogWorkerCoordination.checkInterval != HMasterInstance.movedRegionsCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.checkInterval"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.movedRegionsCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25734, "HMasterInstance.csm.splitLogWorkerCoordination.checkInterval != HMasterInstance.movedRegionsCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.checkInterval"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.movedRegionsCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25735, "HMasterInstance.csm.splitLogWorkerCoordination.checkInterval < HMasterInstance.nonceManagerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.checkInterval"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManagerChore.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25736, "HMasterInstance.csm.splitLogWorkerCoordination.checkInterval != HMasterInstance.nonceManagerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.checkInterval"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManagerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25737, "HMasterInstance.csm.splitLogWorkerCoordination.checkInterval != HMasterInstance.nonceManagerChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.checkInterval"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManagerChore.timeOfThisRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25738, "HMasterInstance.csm.splitLogWorkerCoordination.checkInterval < HMasterInstance.periodicFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.checkInterval"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.periodicFlusher.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25739, "HMasterInstance.csm.splitLogWorkerCoordination.checkInterval > HMasterInstance.periodicFlusher.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.checkInterval"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.periodicFlusher.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25740, "HMasterInstance.csm.splitLogWorkerCoordination.checkInterval != HMasterInstance.periodicFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.checkInterval"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.periodicFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25741, "HMasterInstance.csm.splitLogWorkerCoordination.checkInterval != HMasterInstance.periodicFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.checkInterval"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.periodicFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25742, "HMasterInstance.csm.splitLogWorkerCoordination.checkInterval > HMasterInstance.rpcServices.scannerIdGenerator.scannerIdGen"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.checkInterval"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.scannerIdGen"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25743, "HMasterInstance.csm.splitLogWorkerCoordination.checkInterval < HMasterInstance.rsHost.rsServices.masterActiveTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.checkInterval"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rsHost.rsServices.masterActiveTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25744, "HMasterInstance.csm.splitLogWorkerCoordination.checkInterval != HMasterInstance.rsHost.rsServices.masterFinishedInitializationTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.checkInterval"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsHost.rsServices.masterFinishedInitializationTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25745, "HMasterInstance.csm.splitLogWorkerCoordination.checkInterval < HMasterInstance.rsHost.rsServices.startcode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.checkInterval"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rsHost.rsServices.startcode"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25746, "HMasterInstance.csm.splitLogWorkerCoordination.checkInterval != HMasterInstance.rsSpaceQuotaManager.rsServices.masterFinishedInitializationTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.checkInterval"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsSpaceQuotaManager.rsServices.masterFinishedInitializationTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25747, "HMasterInstance.csm.splitLogWorkerCoordination.checkInterval < HMasterInstance.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.checkInterval"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25748, "HMasterInstance.csm.splitLogWorkerCoordination.checkInterval > daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.checkInterval"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0]))));
			}
		});
		invariants25999.add(new Invariant(25749, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks <= HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25750, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks > HMasterInstance.dataFs.unspecifiedStoragePolicyId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.dataFs.unspecifiedStoragePolicyId"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25751, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.executorStatusChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.executorStatusChore.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25752, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks > HMasterInstance.executorStatusChore.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.executorStatusChore.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25753, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.executorStatusChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.executorStatusChore.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25754, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.executorStatusChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.executorStatusChore.timeOfThisRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25755, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.hbckChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.hbckChore.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25756, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks != HMasterInstance.hbckChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.hbckChore.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25757, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.hbckChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.hbckChore.timeOfThisRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25758, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.hfileCleaner.AVAIL_PROCESSORS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.AVAIL_PROCESSORS"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25759, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.hfileCleaner.FIVE_MINUTES_IN_NANOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.FIVE_MINUTES_IN_NANOS"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25760, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks > HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25761, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.hfileCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25762, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.hfileCleaner.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.period"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25763, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.hfileCleaner.pool.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.pool.size"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25764, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks > HMasterInstance.hfileCleaner.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25765, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.hfileCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25766, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.lockStub.maxScannerResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.maxScannerResultSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25767, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.lockStub.priority.META_TRANSITION_QOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.priority.META_TRANSITION_QOS"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25768, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.lockStub.regionServer.TIMEOUT_REGION_MOVED"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.regionServer.TIMEOUT_REGION_MOVED"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25769, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.lockStub.regionServer.compactionCheckFrequency"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.regionServer.compactionCheckFrequency"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25770, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.lockStub.regionServer.masterActiveTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.regionServer.masterActiveTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25771, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.lockStub.regionServer.maxBalancingTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.regionServer.maxBalancingTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25772, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks >= HMasterInstance.lockStub.regionServer.mergePlanCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.regionServer.mergePlanCount"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25773, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.lockStub.regionServer.shortOperationTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.regionServer.shortOperationTimeout"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25774, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.lockStub.regionServer.startcode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.regionServer.startcode"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25775, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.lockStub.rpcServer.NIO_BUFFER_LIMIT"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.rpcServer.NIO_BUFFER_LIMIT"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25776, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.lockStub.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.rpcTimeout"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25777, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.lockStub.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25778, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.logCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25779, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.logCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25780, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25781, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25782, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks >= HMasterInstance.metricsRegionServer.regionServerWrapper.numWALFiles"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.numWALFiles"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25783, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.metricsRegionServer.regionServerWrapper.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.period"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25784, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks != HMasterInstance.metricsRegionServerImpl.allocator.lastHeapAllocationBytes"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServerImpl.allocator.lastHeapAllocationBytes"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25785, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.metricsRegionServerImpl.regionServer.TIMEOUT_REGION_MOVED"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServerImpl.regionServer.TIMEOUT_REGION_MOVED"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25786, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.metricsRegionServerImpl.regionServer.masterActiveTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServerImpl.regionServer.masterActiveTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25787, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.metricsRegionServerImpl.regionServer.maxBalancingTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServerImpl.regionServer.maxBalancingTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25788, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.metricsRegionServerImpl.regionServer.shortOperationTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServerImpl.regionServer.shortOperationTimeout"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25789, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.metricsRegionServerImpl.regionServer.startcode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServerImpl.regionServer.startcode"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25790, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25791, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25792, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.mobFileCleanerChore.initialDelay"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.initialDelay"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25793, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.mobFileCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25794, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks > HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25795, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.mobFileCleanerChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25796, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.mobFileCompactionChore.initialDelay"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.initialDelay"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25797, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.mobFileCompactionChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25798, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.mobFileCompactionChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25799, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.movedRegionsCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.movedRegionsCleaner.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25800, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks > HMasterInstance.movedRegionsCleaner.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.movedRegionsCleaner.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25801, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks != HMasterInstance.movedRegionsCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.movedRegionsCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25802, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks != HMasterInstance.movedRegionsCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.movedRegionsCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25803, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.nonceManager.conflictWaitIterationMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.conflictWaitIterationMs"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25804, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.nonceManager.deleteNonceGracePeriod"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.deleteNonceGracePeriod"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25805, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.nonceManagerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManagerChore.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25806, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.nonceManagerChore.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManagerChore.period"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25807, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks != HMasterInstance.nonceManagerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManagerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25808, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks != HMasterInstance.nonceManagerChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManagerChore.timeOfThisRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25809, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25810, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.normalizer.masterRpcServices.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.rpcTimeout"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25811, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.normalizer.minRegionCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.minRegionCount"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25812, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.normalizerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25813, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.pauseMonitor.SLEEP_INTERVAL_MS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.pauseMonitor.SLEEP_INTERVAL_MS"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25814, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.periodicFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.periodicFlusher.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25815, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks != HMasterInstance.periodicFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.periodicFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25816, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks != HMasterInstance.periodicFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.periodicFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25817, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.procedureExecutor.corePoolSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.corePoolSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25818, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.procedureExecutor.maxPoolSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.maxPoolSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25819, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks != HMasterInstance.procedureExecutor.store.REGION_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.REGION_ID"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25820, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.procedureResultReporter.INIT_PAUSE_TIME_MS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureResultReporter.INIT_PAUSE_TIME_MS"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25821, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks != HMasterInstance.procedureStore.REGION_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.REGION_ID"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25822, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.procedureStore.TABLE_NAME.hashCode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.TABLE_NAME.hashCode"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25823, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25824, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25825, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.procedureStore.cleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25826, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.procedureStore.cleaner.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.period"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25827, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.procedureStore.cleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25828, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.procedureStore.cleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25829, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks >= HMasterInstance.procedureStore.cleanerPool.cleanerLatch"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25830, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.procedureStore.cleanerPool.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.size"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25831, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks <= HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25832, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25833, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.procedureStore.numThreads"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.numThreads"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25834, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.procedureStore.region.DEEP_OVERHEAD"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.DEEP_OVERHEAD"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25835, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.procedureStore.region.FIXED_OVERHEAD"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.FIXED_OVERHEAD"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25836, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25837, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25838, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.procedureStore.region.blockingMemStoreSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.blockingMemStoreSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25839, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks > HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25840, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25841, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks >= HMasterInstance.procedureStore.region.majorInProgress"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25842, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.procedureStore.region.maxBusyWaitDuration"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitDuration"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25843, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks <= HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25844, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25845, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.procedureStore.region.timestampSlop"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.timestampSlop"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25846, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.procedureStore.walFactory.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walFactory.timeoutMillis"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25847, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25848, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25849, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.procedureStore.walRoller.threadWakeFrequency"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.threadWakeFrequency"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25850, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.regionServerAccounting.globalMemStoreLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimit"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25851, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25852, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25853, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25854, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25855, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25856, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25857, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.rpcClient.connectTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connectTO"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25858, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks != HMasterInstance.rpcClient.connections.poolMaxSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25859, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks >= HMasterInstance.rpcClient.failedServers.latestExpiry"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25860, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.rpcClient.failedServers.recheckServersTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.recheckServersTimeout"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25861, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.rpcClient.failureSleep"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failureSleep"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25862, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.rpcClient.maxConcurrentCallsPerServer"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.maxConcurrentCallsPerServer"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25863, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.rpcClient.minIdleTimeBeforeClose"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.minIdleTimeBeforeClose"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25864, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.rpcClient.readTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.readTO"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25865, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.rpcClient.writeTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.writeTO"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25866, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.rpcServices.maxScannerResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.maxScannerResultSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25867, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25868, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.rpcServices.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcTimeout"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25869, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks != HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25870, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.rsFatals.maxSizeBytes"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.maxSizeBytes"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25871, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks >= HMasterInstance.rsHost.loadSequence"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.rsHost.loadSequence"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25872, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.rsHost.rsServices.TIMEOUT_REGION_MOVED"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rsHost.rsServices.TIMEOUT_REGION_MOVED"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25873, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.rsHost.rsServices.compactionCheckFrequency"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rsHost.rsServices.compactionCheckFrequency"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25874, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.rsHost.rsServices.masterActiveTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rsHost.rsServices.masterActiveTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25875, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.rsHost.rsServices.maxBalancingTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rsHost.rsServices.maxBalancingTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25876, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.rsHost.rsServices.shortOperationTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rsHost.rsServices.shortOperationTimeout"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25877, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.rsHost.rsServices.startcode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rsHost.rsServices.startcode"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25878, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.rsSpaceQuotaManager.rsServices.TIMEOUT_REGION_MOVED"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rsSpaceQuotaManager.rsServices.TIMEOUT_REGION_MOVED"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25879, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.rsSpaceQuotaManager.rsServices.compactionCheckFrequency"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rsSpaceQuotaManager.rsServices.compactionCheckFrequency"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25880, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.rsSpaceQuotaManager.rsServices.masterActiveTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rsSpaceQuotaManager.rsServices.masterActiveTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25881, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.rsSpaceQuotaManager.rsServices.maxBalancingTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rsSpaceQuotaManager.rsServices.maxBalancingTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25882, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks >= HMasterInstance.rsSpaceQuotaManager.rsServices.mergePlanCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.rsSpaceQuotaManager.rsServices.mergePlanCount"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25883, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.rsSpaceQuotaManager.rsServices.shortOperationTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rsSpaceQuotaManager.rsServices.shortOperationTimeout"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25884, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.rsSpaceQuotaManager.rsServices.startcode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rsSpaceQuotaManager.rsServices.startcode"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25885, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.rssStub.masterRpcServices.maxScannerResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rssStub.masterRpcServices.maxScannerResultSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25886, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.rssStub.masterRpcServices.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rssStub.masterRpcServices.rpcTimeout"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25887, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.secureBulkLoadManager.RANDOM_RADIX"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.secureBulkLoadManager.RANDOM_RADIX"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25888, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.secureBulkLoadManager.RANDOM_WIDTH"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.secureBulkLoadManager.RANDOM_WIDTH"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25889, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.secureBulkLoadManager.conn.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.secureBulkLoadManager.conn.rpcTimeout"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25890, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25891, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.serverManager.flushedSeqIdFlusher.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.period"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25892, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks != HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25893, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25894, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.serverManager.maxSkew"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.maxSkew"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25895, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25896, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25897, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.snapshotManager.coordinator.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotManager.coordinator.timeoutMillis"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25898, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.splitLogWorker.coordination.checkInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.splitLogWorker.coordination.checkInterval"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25899, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.splitLogWorker.coordination.reportPeriod"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.splitLogWorker.coordination.reportPeriod"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25900, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks <= HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25901, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25902, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25903, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.walRoller.checkLowReplicationInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walRoller.checkLowReplicationInterval"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25904, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25905, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.walRoller.rollPeriod"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walRoller.rollPeriod"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25906, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks < HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25907, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks >= daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0]))));
			}
		});
		invariants25999.add(new Invariant(25908, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks >= daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])))-1);
			}
		});
		invariants25999.add(new Invariant(25909, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks >= daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0])))-1);
			}
		});
		invariants25999.add(new Invariant(25910, "HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks >= daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0])))-1);
			}
		});
		invariants25999.add(new Invariant(25911, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod > HMasterInstance.dataFs.unspecifiedStoragePolicyId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.dataFs.unspecifiedStoragePolicyId"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25912, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod < HMasterInstance.executorStatusChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.executorStatusChore.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25913, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod > HMasterInstance.executorStatusChore.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.executorStatusChore.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25914, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod < HMasterInstance.executorStatusChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.executorStatusChore.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25915, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod < HMasterInstance.executorStatusChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.executorStatusChore.timeOfThisRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25916, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod < HMasterInstance.hbckChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.hbckChore.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25917, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod != HMasterInstance.hbckChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.hbckChore.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25918, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod < HMasterInstance.hbckChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.hbckChore.timeOfThisRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25919, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod != HMasterInstance.hfileCleaner.AVAIL_PROCESSORS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.AVAIL_PROCESSORS"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25920, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod < HMasterInstance.hfileCleaner.FIVE_MINUTES_IN_NANOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.FIVE_MINUTES_IN_NANOS"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25921, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod > HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25922, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod < HMasterInstance.hfileCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25923, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod < HMasterInstance.hfileCleaner.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.period"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25924, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod != HMasterInstance.hfileCleaner.pool.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.pool.size"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25925, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod > HMasterInstance.hfileCleaner.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25926, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod < HMasterInstance.hfileCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25927, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod < HMasterInstance.lockStub.maxScannerResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.maxScannerResultSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25928, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod != HMasterInstance.lockStub.priority.META_TRANSITION_QOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.priority.META_TRANSITION_QOS"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25929, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod < HMasterInstance.lockStub.regionServer.TIMEOUT_REGION_MOVED"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.regionServer.TIMEOUT_REGION_MOVED"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25930, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod != HMasterInstance.lockStub.regionServer.compactionCheckFrequency"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.regionServer.compactionCheckFrequency"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25931, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod < HMasterInstance.lockStub.regionServer.masterActiveTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.regionServer.masterActiveTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25932, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod < HMasterInstance.lockStub.regionServer.maxBalancingTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.regionServer.maxBalancingTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25933, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod >= HMasterInstance.lockStub.regionServer.mergePlanCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.regionServer.mergePlanCount"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25934, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod != HMasterInstance.lockStub.regionServer.shortOperationTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.regionServer.shortOperationTimeout"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25935, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod < HMasterInstance.lockStub.regionServer.startcode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.regionServer.startcode"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25936, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod < HMasterInstance.lockStub.rpcServer.NIO_BUFFER_LIMIT"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.rpcServer.NIO_BUFFER_LIMIT"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25937, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod < HMasterInstance.lockStub.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.rpcTimeout"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25938, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod >= HMasterInstance.lockStub.scannerIdGenerator.scannerIdGen"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.scannerIdGenerator.scannerIdGen"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25939, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod < HMasterInstance.lockStub.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.lockStub.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25940, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod < HMasterInstance.logCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25941, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod < HMasterInstance.logCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25942, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod != HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25943, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod != HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25944, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod >= HMasterInstance.metricsRegionServer.regionServerWrapper.averageRegionSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.averageRegionSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25945, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod >= HMasterInstance.metricsRegionServer.regionServerWrapper.numStoreFiles"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.numStoreFiles"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25946, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod >= HMasterInstance.metricsRegionServer.regionServerWrapper.numStores"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.numStores"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25947, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod >= HMasterInstance.metricsRegionServer.regionServerWrapper.numWALFiles"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.numWALFiles"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25948, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod != HMasterInstance.metricsRegionServer.regionServerWrapper.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.period"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25949, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod >= HMasterInstance.metricsRegionServer.regionServerWrapper.readRequestsCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.readRequestsCount"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25950, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod >= HMasterInstance.metricsRegionServer.regionServerWrapper.storeFileSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.storeFileSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25951, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod >= HMasterInstance.metricsRegionServer.regionServerWrapper.storefileIndexSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.storefileIndexSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25952, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod >= HMasterInstance.metricsRegionServer.regionServerWrapper.totalStaticBloomSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.totalStaticBloomSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25953, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod >= HMasterInstance.metricsRegionServer.regionServerWrapper.totalStaticIndexSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServer.regionServerWrapper.totalStaticIndexSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25954, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod != HMasterInstance.metricsRegionServerImpl.allocator.lastHeapAllocationBytes"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServerImpl.allocator.lastHeapAllocationBytes"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25955, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod < HMasterInstance.metricsRegionServerImpl.regionServer.TIMEOUT_REGION_MOVED"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServerImpl.regionServer.TIMEOUT_REGION_MOVED"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25956, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod < HMasterInstance.metricsRegionServerImpl.regionServer.masterActiveTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServerImpl.regionServer.masterActiveTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25957, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod < HMasterInstance.metricsRegionServerImpl.regionServer.maxBalancingTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServerImpl.regionServer.maxBalancingTime"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25958, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod != HMasterInstance.metricsRegionServerImpl.regionServer.shortOperationTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServerImpl.regionServer.shortOperationTimeout"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25959, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod < HMasterInstance.metricsRegionServerImpl.regionServer.startcode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.metricsRegionServerImpl.regionServer.startcode"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25960, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod < HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25961, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod < HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25962, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod < HMasterInstance.mobFileCleanerChore.initialDelay"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.initialDelay"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25963, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod < HMasterInstance.mobFileCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25964, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod > HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25965, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod < HMasterInstance.mobFileCleanerChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25966, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod < HMasterInstance.mobFileCompactionChore.initialDelay"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.initialDelay"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25967, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod < HMasterInstance.mobFileCompactionChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25968, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod < HMasterInstance.mobFileCompactionChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25969, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod < HMasterInstance.movedRegionsCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.movedRegionsCleaner.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25970, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod > HMasterInstance.movedRegionsCleaner.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.movedRegionsCleaner.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25971, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod != HMasterInstance.movedRegionsCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.movedRegionsCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25972, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod != HMasterInstance.movedRegionsCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.movedRegionsCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25973, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod != HMasterInstance.nonceManager.conflictWaitIterationMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.conflictWaitIterationMs"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25974, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod < HMasterInstance.nonceManager.deleteNonceGracePeriod"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.deleteNonceGracePeriod"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25975, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod < HMasterInstance.nonceManagerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManagerChore.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25976, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod < HMasterInstance.nonceManagerChore.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManagerChore.period"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25977, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod != HMasterInstance.nonceManagerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManagerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25978, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod != HMasterInstance.nonceManagerChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManagerChore.timeOfThisRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25979, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod < HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25980, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod < HMasterInstance.normalizer.masterRpcServices.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.rpcTimeout"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25981, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod != HMasterInstance.normalizer.minRegionCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.minRegionCount"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25982, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod < HMasterInstance.normalizerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25983, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod != HMasterInstance.pauseMonitor.SLEEP_INTERVAL_MS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.pauseMonitor.SLEEP_INTERVAL_MS"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25984, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod < HMasterInstance.periodicFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.periodicFlusher.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25985, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod > HMasterInstance.periodicFlusher.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.periodicFlusher.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25986, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod != HMasterInstance.periodicFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.periodicFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25987, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod != HMasterInstance.periodicFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.periodicFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25988, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod != HMasterInstance.procedureExecutor.corePoolSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.corePoolSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25989, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod != HMasterInstance.procedureExecutor.maxPoolSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.maxPoolSize"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25990, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod != HMasterInstance.procedureExecutor.store.REGION_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.REGION_ID"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25991, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod > HMasterInstance.procedureResultReporter.INIT_PAUSE_TIME_MS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureResultReporter.INIT_PAUSE_TIME_MS"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25992, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod != HMasterInstance.procedureStore.REGION_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.REGION_ID"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25993, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod < HMasterInstance.procedureStore.TABLE_NAME.hashCode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.TABLE_NAME.hashCode"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25994, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod != HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25995, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod < HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25996, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod < HMasterInstance.procedureStore.cleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25997, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod < HMasterInstance.procedureStore.cleaner.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.period"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25998, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod < HMasterInstance.procedureStore.cleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants25999.add(new Invariant(25999, "HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod < HMasterInstance.procedureStore.cleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue());
			}
		});
	}
	static {
installInv25999();	}
}
