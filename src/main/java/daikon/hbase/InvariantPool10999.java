package daikon.hbase;
import daikon.*;
import java.util.Set;
import java.util.ArrayList;
import java.util.List;
//this class is automatically generated by our scripts
public class InvariantPool10999{

	public static List<Invariant> invariants10999 = new ArrayList<>();

	public static void installInv10999(){
		invariants10999.add(new Invariant(10000, "HMasterInstance.procedureStore.cleaner.timeOfLastRun > HMasterInstance.rpcClient.connectTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connectTO"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10001, "HMasterInstance.procedureStore.cleaner.timeOfLastRun > HMasterInstance.rpcClient.connections.poolMaxSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10002, "HMasterInstance.procedureStore.cleaner.timeOfLastRun > HMasterInstance.rpcClient.failedServers.latestExpiry"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10003, "HMasterInstance.procedureStore.cleaner.timeOfLastRun > HMasterInstance.rpcClient.failedServers.recheckServersTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.recheckServersTimeout"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10004, "HMasterInstance.procedureStore.cleaner.timeOfLastRun > HMasterInstance.rpcClient.failureSleep"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failureSleep"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10005, "HMasterInstance.procedureStore.cleaner.timeOfLastRun > HMasterInstance.rpcClient.maxConcurrentCallsPerServer"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.maxConcurrentCallsPerServer"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10006, "HMasterInstance.procedureStore.cleaner.timeOfLastRun > HMasterInstance.rpcClient.minIdleTimeBeforeClose"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.minIdleTimeBeforeClose"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10007, "HMasterInstance.procedureStore.cleaner.timeOfLastRun > HMasterInstance.rpcClient.readTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.readTO"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10008, "HMasterInstance.procedureStore.cleaner.timeOfLastRun > HMasterInstance.rpcClient.writeTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.writeTO"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10009, "HMasterInstance.procedureStore.cleaner.timeOfLastRun > HMasterInstance.rpcServices.maxScannerResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.maxScannerResultSize"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10010, "HMasterInstance.procedureStore.cleaner.timeOfLastRun > HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10011, "HMasterInstance.procedureStore.cleaner.timeOfLastRun > HMasterInstance.rpcServices.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcTimeout"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10012, "HMasterInstance.procedureStore.cleaner.timeOfLastRun < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10013, "HMasterInstance.procedureStore.cleaner.timeOfLastRun > HMasterInstance.rsFatals.maxSizeBytes"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.maxSizeBytes"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10014, "HMasterInstance.procedureStore.cleaner.timeOfLastRun > HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10015, "HMasterInstance.procedureStore.cleaner.timeOfLastRun < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10016, "HMasterInstance.procedureStore.cleaner.timeOfLastRun > HMasterInstance.serverManager.flushedSeqIdFlusher.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.period"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10017, "HMasterInstance.procedureStore.cleaner.timeOfLastRun > HMasterInstance.serverManager.maxSkew"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.maxSkew"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10018, "HMasterInstance.procedureStore.cleaner.timeOfLastRun < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10019, "HMasterInstance.procedureStore.cleaner.timeOfLastRun < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10020, "HMasterInstance.procedureStore.cleaner.timeOfLastRun > HMasterInstance.snapshotManager.coordinator.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotManager.coordinator.timeoutMillis"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10021, "HMasterInstance.procedureStore.cleaner.timeOfLastRun > HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10022, "HMasterInstance.procedureStore.cleaner.timeOfLastRun < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10023, "HMasterInstance.procedureStore.cleaner.timeOfLastRun > HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10024, "HMasterInstance.procedureStore.cleaner.timeOfLastRun > daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0]))));
			}
		});
		invariants10999.add(new Invariant(10025, "HMasterInstance.procedureStore.cleaner.timeOfThisRun > HMasterInstance.procedureStore.cleanerPool.cleanerLatch"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10026, "HMasterInstance.procedureStore.cleaner.timeOfThisRun > HMasterInstance.procedureStore.cleanerPool.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.size"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10027, "HMasterInstance.procedureStore.cleaner.timeOfThisRun > HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10028, "HMasterInstance.procedureStore.cleaner.timeOfThisRun > HMasterInstance.procedureStore.numThreads"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.numThreads"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10029, "HMasterInstance.procedureStore.cleaner.timeOfThisRun > HMasterInstance.procedureStore.region.DEEP_OVERHEAD"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.DEEP_OVERHEAD"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10030, "HMasterInstance.procedureStore.cleaner.timeOfThisRun > HMasterInstance.procedureStore.region.FIXED_OVERHEAD"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.FIXED_OVERHEAD"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10031, "HMasterInstance.procedureStore.cleaner.timeOfThisRun > HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10032, "HMasterInstance.procedureStore.cleaner.timeOfThisRun > HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10033, "HMasterInstance.procedureStore.cleaner.timeOfThisRun > HMasterInstance.procedureStore.region.blockingMemStoreSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.blockingMemStoreSize"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10034, "HMasterInstance.procedureStore.cleaner.timeOfThisRun > HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10035, "HMasterInstance.procedureStore.cleaner.timeOfThisRun > HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10036, "HMasterInstance.procedureStore.cleaner.timeOfThisRun > HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10037, "HMasterInstance.procedureStore.cleaner.timeOfThisRun > HMasterInstance.procedureStore.region.majorInProgress"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10038, "HMasterInstance.procedureStore.cleaner.timeOfThisRun > HMasterInstance.procedureStore.region.maxBusyWaitDuration"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitDuration"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10039, "HMasterInstance.procedureStore.cleaner.timeOfThisRun > HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10040, "HMasterInstance.procedureStore.cleaner.timeOfThisRun > HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10041, "HMasterInstance.procedureStore.cleaner.timeOfThisRun < HMasterInstance.procedureStore.region.timestampSlop"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.timestampSlop"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10042, "HMasterInstance.procedureStore.cleaner.timeOfThisRun > HMasterInstance.procedureStore.walFactory.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walFactory.timeoutMillis"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10043, "HMasterInstance.procedureStore.cleaner.timeOfThisRun > HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10044, "HMasterInstance.procedureStore.cleaner.timeOfThisRun > HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10045, "HMasterInstance.procedureStore.cleaner.timeOfThisRun > HMasterInstance.procedureStore.walRoller.threadWakeFrequency"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.threadWakeFrequency"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10046, "HMasterInstance.procedureStore.cleaner.timeOfThisRun > HMasterInstance.regionServerAccounting.globalMemStoreLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimit"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10047, "HMasterInstance.procedureStore.cleaner.timeOfThisRun > HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10048, "HMasterInstance.procedureStore.cleaner.timeOfThisRun > HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10049, "HMasterInstance.procedureStore.cleaner.timeOfThisRun < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10050, "HMasterInstance.procedureStore.cleaner.timeOfThisRun < HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10051, "HMasterInstance.procedureStore.cleaner.timeOfThisRun < HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10052, "HMasterInstance.procedureStore.cleaner.timeOfThisRun > HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10053, "HMasterInstance.procedureStore.cleaner.timeOfThisRun > HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10054, "HMasterInstance.procedureStore.cleaner.timeOfThisRun > HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10055, "HMasterInstance.procedureStore.cleaner.timeOfThisRun > HMasterInstance.rpcClient.connectTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connectTO"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10056, "HMasterInstance.procedureStore.cleaner.timeOfThisRun > HMasterInstance.rpcClient.connections.poolMaxSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10057, "HMasterInstance.procedureStore.cleaner.timeOfThisRun > HMasterInstance.rpcClient.failedServers.latestExpiry"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10058, "HMasterInstance.procedureStore.cleaner.timeOfThisRun > HMasterInstance.rpcClient.failedServers.recheckServersTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.recheckServersTimeout"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10059, "HMasterInstance.procedureStore.cleaner.timeOfThisRun > HMasterInstance.rpcClient.failureSleep"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failureSleep"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10060, "HMasterInstance.procedureStore.cleaner.timeOfThisRun > HMasterInstance.rpcClient.maxConcurrentCallsPerServer"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.maxConcurrentCallsPerServer"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10061, "HMasterInstance.procedureStore.cleaner.timeOfThisRun > HMasterInstance.rpcClient.minIdleTimeBeforeClose"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.minIdleTimeBeforeClose"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10062, "HMasterInstance.procedureStore.cleaner.timeOfThisRun > HMasterInstance.rpcClient.readTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.readTO"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10063, "HMasterInstance.procedureStore.cleaner.timeOfThisRun > HMasterInstance.rpcClient.writeTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.writeTO"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10064, "HMasterInstance.procedureStore.cleaner.timeOfThisRun > HMasterInstance.rpcServices.maxScannerResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.maxScannerResultSize"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10065, "HMasterInstance.procedureStore.cleaner.timeOfThisRun > HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10066, "HMasterInstance.procedureStore.cleaner.timeOfThisRun > HMasterInstance.rpcServices.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcTimeout"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10067, "HMasterInstance.procedureStore.cleaner.timeOfThisRun < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10068, "HMasterInstance.procedureStore.cleaner.timeOfThisRun > HMasterInstance.rsFatals.maxSizeBytes"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.maxSizeBytes"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10069, "HMasterInstance.procedureStore.cleaner.timeOfThisRun > HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10070, "HMasterInstance.procedureStore.cleaner.timeOfThisRun < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10071, "HMasterInstance.procedureStore.cleaner.timeOfThisRun > HMasterInstance.serverManager.flushedSeqIdFlusher.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.period"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10072, "HMasterInstance.procedureStore.cleaner.timeOfThisRun > HMasterInstance.serverManager.maxSkew"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.maxSkew"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10073, "HMasterInstance.procedureStore.cleaner.timeOfThisRun < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10074, "HMasterInstance.procedureStore.cleaner.timeOfThisRun < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10075, "HMasterInstance.procedureStore.cleaner.timeOfThisRun > HMasterInstance.snapshotManager.coordinator.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotManager.coordinator.timeoutMillis"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10076, "HMasterInstance.procedureStore.cleaner.timeOfThisRun > HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10077, "HMasterInstance.procedureStore.cleaner.timeOfThisRun < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10078, "HMasterInstance.procedureStore.cleaner.timeOfThisRun > HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10079, "HMasterInstance.procedureStore.cleaner.timeOfThisRun > daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0]))));
			}
		});
		invariants10999.add(new Invariant(10080, "HMasterInstance.procedureStore.cleanerPool.cleanerLatch < HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10081, "HMasterInstance.procedureStore.cleanerPool.cleanerLatch != HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10082, "HMasterInstance.procedureStore.cleanerPool.cleanerLatch < HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10083, "HMasterInstance.procedureStore.cleanerPool.cleanerLatch < HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10084, "HMasterInstance.procedureStore.cleanerPool.cleanerLatch < HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10085, "HMasterInstance.procedureStore.cleanerPool.cleanerLatch < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10086, "HMasterInstance.procedureStore.cleanerPool.cleanerLatch < HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10087, "HMasterInstance.procedureStore.cleanerPool.cleanerLatch < HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10088, "HMasterInstance.procedureStore.cleanerPool.cleanerLatch < HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10089, "HMasterInstance.procedureStore.cleanerPool.cleanerLatch < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10090, "HMasterInstance.procedureStore.cleanerPool.cleanerLatch <= HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10091, "HMasterInstance.procedureStore.cleanerPool.cleanerLatch < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10092, "HMasterInstance.procedureStore.cleanerPool.cleanerLatch < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10093, "HMasterInstance.procedureStore.cleanerPool.cleanerLatch < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10094, "HMasterInstance.procedureStore.cleanerPool.cleanerLatch < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10095, "HMasterInstance.procedureStore.cleanerPool.size < HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.size"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10096, "HMasterInstance.procedureStore.cleanerPool.size != HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.size"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10097, "HMasterInstance.procedureStore.cleanerPool.size != HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.size"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10098, "HMasterInstance.procedureStore.cleanerPool.size != HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.size"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10099, "HMasterInstance.procedureStore.cleanerPool.size < HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.size"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10100, "HMasterInstance.procedureStore.cleanerPool.size < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.size"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10101, "HMasterInstance.procedureStore.cleanerPool.size < HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.size"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10102, "HMasterInstance.procedureStore.cleanerPool.size < HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.size"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10103, "HMasterInstance.procedureStore.cleanerPool.size < HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.size"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10104, "HMasterInstance.procedureStore.cleanerPool.size < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.size"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10105, "HMasterInstance.procedureStore.cleanerPool.size != HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.size"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10106, "HMasterInstance.procedureStore.cleanerPool.size < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.size"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10107, "HMasterInstance.procedureStore.cleanerPool.size < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.size"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10108, "HMasterInstance.procedureStore.cleanerPool.size < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.size"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10109, "HMasterInstance.procedureStore.cleanerPool.size < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.size"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10110, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush != HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10111, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush > HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10112, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush != HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10113, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush < HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10114, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10115, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10116, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush < HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10117, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush >= daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])))-1);
			}
		});
		invariants10999.add(new Invariant(10118, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush != daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1);
			}
		});
		invariants10999.add(new Invariant(10119, "HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime > HMasterInstance.procedureStore.numThreads"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.numThreads"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10120, "HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime > HMasterInstance.procedureStore.region.DEEP_OVERHEAD"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.DEEP_OVERHEAD"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10121, "HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime > HMasterInstance.procedureStore.region.FIXED_OVERHEAD"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.FIXED_OVERHEAD"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10122, "HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime > HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10123, "HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime > HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10124, "HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime > HMasterInstance.procedureStore.region.blockingMemStoreSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.blockingMemStoreSize"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10125, "HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime > HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10126, "HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime > HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10127, "HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime > HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10128, "HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime > HMasterInstance.procedureStore.region.majorInProgress"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10129, "HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime > HMasterInstance.procedureStore.region.maxBusyWaitDuration"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitDuration"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10130, "HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime > HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10131, "HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime > HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10132, "HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime < HMasterInstance.procedureStore.region.timestampSlop"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.timestampSlop"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10133, "HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime > HMasterInstance.procedureStore.walFactory.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walFactory.timeoutMillis"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10134, "HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime > HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10135, "HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime > HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10136, "HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime > HMasterInstance.procedureStore.walRoller.threadWakeFrequency"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.threadWakeFrequency"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10137, "HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime > HMasterInstance.regionServerAccounting.globalMemStoreLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimit"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10138, "HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime > HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10139, "HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime > HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10140, "HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10141, "HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime < HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10142, "HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime < HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10143, "HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime > HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10144, "HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime > HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10145, "HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime > HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10146, "HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime > HMasterInstance.rpcClient.connectTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connectTO"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10147, "HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime > HMasterInstance.rpcClient.connections.poolMaxSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10148, "HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime > HMasterInstance.rpcClient.failedServers.latestExpiry"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10149, "HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime > HMasterInstance.rpcClient.failedServers.recheckServersTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.recheckServersTimeout"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10150, "HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime > HMasterInstance.rpcClient.failureSleep"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failureSleep"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10151, "HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime > HMasterInstance.rpcClient.maxConcurrentCallsPerServer"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.maxConcurrentCallsPerServer"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10152, "HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime > HMasterInstance.rpcClient.minIdleTimeBeforeClose"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.minIdleTimeBeforeClose"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10153, "HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime > HMasterInstance.rpcClient.readTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.readTO"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10154, "HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime > HMasterInstance.rpcClient.writeTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.writeTO"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10155, "HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime > HMasterInstance.rpcServices.maxScannerResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.maxScannerResultSize"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10156, "HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime > HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10157, "HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime > HMasterInstance.rpcServices.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcTimeout"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10158, "HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10159, "HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime > HMasterInstance.rsFatals.maxSizeBytes"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.maxSizeBytes"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10160, "HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime > HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10161, "HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10162, "HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime > HMasterInstance.serverManager.flushedSeqIdFlusher.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.period"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10163, "HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime > HMasterInstance.serverManager.maxSkew"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.maxSkew"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10164, "HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10165, "HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10166, "HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime > HMasterInstance.snapshotManager.coordinator.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotManager.coordinator.timeoutMillis"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10167, "HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime > HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10168, "HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10169, "HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime > HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10170, "HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime > daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0]))));
			}
		});
		invariants10999.add(new Invariant(10171, "HMasterInstance.procedureStore.numThreads != HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.numThreads"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10172, "HMasterInstance.procedureStore.numThreads != HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.numThreads"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10173, "HMasterInstance.procedureStore.numThreads != HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.numThreads"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10174, "HMasterInstance.procedureStore.numThreads < HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.numThreads"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10175, "HMasterInstance.procedureStore.numThreads < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.numThreads"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10176, "HMasterInstance.procedureStore.numThreads < HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.numThreads"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10177, "HMasterInstance.procedureStore.numThreads < HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.numThreads"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10178, "HMasterInstance.procedureStore.numThreads < HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.numThreads"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10179, "HMasterInstance.procedureStore.numThreads < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.numThreads"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10180, "HMasterInstance.procedureStore.numThreads != HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.numThreads"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10181, "HMasterInstance.procedureStore.numThreads < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.numThreads"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10182, "HMasterInstance.procedureStore.numThreads < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.numThreads"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10183, "HMasterInstance.procedureStore.numThreads < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.numThreads"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10184, "HMasterInstance.procedureStore.numThreads < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.numThreads"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10185, "HMasterInstance.procedureStore.numThreads >= daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.numThreads"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1);
			}
		});
		invariants10999.add(new Invariant(10186, "HMasterInstance.procedureStore.region.DEEP_OVERHEAD > HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.DEEP_OVERHEAD"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10187, "HMasterInstance.procedureStore.region.DEEP_OVERHEAD > HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.DEEP_OVERHEAD"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10188, "HMasterInstance.procedureStore.region.DEEP_OVERHEAD > HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.DEEP_OVERHEAD"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10189, "HMasterInstance.procedureStore.region.DEEP_OVERHEAD < HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.DEEP_OVERHEAD"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10190, "HMasterInstance.procedureStore.region.DEEP_OVERHEAD < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.DEEP_OVERHEAD"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10191, "HMasterInstance.procedureStore.region.DEEP_OVERHEAD < HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.DEEP_OVERHEAD"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10192, "HMasterInstance.procedureStore.region.DEEP_OVERHEAD < HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.DEEP_OVERHEAD"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10193, "HMasterInstance.procedureStore.region.DEEP_OVERHEAD > HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.DEEP_OVERHEAD"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10194, "HMasterInstance.procedureStore.region.DEEP_OVERHEAD < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.DEEP_OVERHEAD"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10195, "HMasterInstance.procedureStore.region.DEEP_OVERHEAD > HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.DEEP_OVERHEAD"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10196, "HMasterInstance.procedureStore.region.DEEP_OVERHEAD < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.DEEP_OVERHEAD"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10197, "HMasterInstance.procedureStore.region.DEEP_OVERHEAD < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.DEEP_OVERHEAD"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10198, "HMasterInstance.procedureStore.region.DEEP_OVERHEAD < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.DEEP_OVERHEAD"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10199, "HMasterInstance.procedureStore.region.DEEP_OVERHEAD < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.DEEP_OVERHEAD"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10200, "HMasterInstance.procedureStore.region.FIXED_OVERHEAD != HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.FIXED_OVERHEAD"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10201, "HMasterInstance.procedureStore.region.FIXED_OVERHEAD != HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.FIXED_OVERHEAD"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10202, "HMasterInstance.procedureStore.region.FIXED_OVERHEAD != HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.FIXED_OVERHEAD"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10203, "HMasterInstance.procedureStore.region.FIXED_OVERHEAD < HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.FIXED_OVERHEAD"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10204, "HMasterInstance.procedureStore.region.FIXED_OVERHEAD < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.FIXED_OVERHEAD"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10205, "HMasterInstance.procedureStore.region.FIXED_OVERHEAD < HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.FIXED_OVERHEAD"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10206, "HMasterInstance.procedureStore.region.FIXED_OVERHEAD < HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.FIXED_OVERHEAD"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10207, "HMasterInstance.procedureStore.region.FIXED_OVERHEAD > HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.FIXED_OVERHEAD"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10208, "HMasterInstance.procedureStore.region.FIXED_OVERHEAD < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.FIXED_OVERHEAD"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10209, "HMasterInstance.procedureStore.region.FIXED_OVERHEAD != HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.FIXED_OVERHEAD"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10210, "HMasterInstance.procedureStore.region.FIXED_OVERHEAD < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.FIXED_OVERHEAD"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10211, "HMasterInstance.procedureStore.region.FIXED_OVERHEAD < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.FIXED_OVERHEAD"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10212, "HMasterInstance.procedureStore.region.FIXED_OVERHEAD < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.FIXED_OVERHEAD"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10213, "HMasterInstance.procedureStore.region.FIXED_OVERHEAD < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.FIXED_OVERHEAD"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10214, "HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES > HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10215, "HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES > HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10216, "HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES > HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10217, "HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES < HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10218, "HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10219, "HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES < HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10220, "HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES < HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10221, "HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES > HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10222, "HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10223, "HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES > HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10224, "HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10225, "HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10226, "HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10227, "HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10228, "HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL > HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10229, "HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL > HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10230, "HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL > HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10231, "HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL < HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10232, "HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10233, "HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL < HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10234, "HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL < HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10235, "HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL > HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10236, "HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10237, "HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL > HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10238, "HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10239, "HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10240, "HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10241, "HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10242, "HMasterInstance.procedureStore.region.blockingMemStoreSize > HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.blockingMemStoreSize"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10243, "HMasterInstance.procedureStore.region.blockingMemStoreSize > HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.blockingMemStoreSize"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10244, "HMasterInstance.procedureStore.region.blockingMemStoreSize > HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.blockingMemStoreSize"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10245, "HMasterInstance.procedureStore.region.blockingMemStoreSize < HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.blockingMemStoreSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10246, "HMasterInstance.procedureStore.region.blockingMemStoreSize < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.blockingMemStoreSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10247, "HMasterInstance.procedureStore.region.blockingMemStoreSize < HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.blockingMemStoreSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10248, "HMasterInstance.procedureStore.region.blockingMemStoreSize < HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.blockingMemStoreSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10249, "HMasterInstance.procedureStore.region.blockingMemStoreSize > HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.blockingMemStoreSize"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10250, "HMasterInstance.procedureStore.region.blockingMemStoreSize < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.blockingMemStoreSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10251, "HMasterInstance.procedureStore.region.blockingMemStoreSize > HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.blockingMemStoreSize"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10252, "HMasterInstance.procedureStore.region.blockingMemStoreSize < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.blockingMemStoreSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10253, "HMasterInstance.procedureStore.region.blockingMemStoreSize < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.blockingMemStoreSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10254, "HMasterInstance.procedureStore.region.blockingMemStoreSize < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.blockingMemStoreSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10255, "HMasterInstance.procedureStore.region.blockingMemStoreSize < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.blockingMemStoreSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10256, "HMasterInstance.procedureStore.region.lastFlushOpSeqId >= HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10257, "HMasterInstance.procedureStore.region.lastFlushOpSeqId <= HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10258, "HMasterInstance.procedureStore.region.lastFlushOpSeqId != HMasterInstance.procedureStore.region.majorInProgress"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10259, "HMasterInstance.procedureStore.region.lastFlushOpSeqId < HMasterInstance.procedureStore.region.maxBusyWaitDuration"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitDuration"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10260, "HMasterInstance.procedureStore.region.lastFlushOpSeqId != HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10261, "HMasterInstance.procedureStore.region.lastFlushOpSeqId < HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10262, "HMasterInstance.procedureStore.region.lastFlushOpSeqId < HMasterInstance.procedureStore.region.timestampSlop"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.timestampSlop"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10263, "HMasterInstance.procedureStore.region.lastFlushOpSeqId < HMasterInstance.procedureStore.walFactory.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walFactory.timeoutMillis"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10264, "HMasterInstance.procedureStore.region.lastFlushOpSeqId < HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10265, "HMasterInstance.procedureStore.region.lastFlushOpSeqId < HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10266, "HMasterInstance.procedureStore.region.lastFlushOpSeqId != HMasterInstance.procedureStore.walRoller.threadWakeFrequency"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.threadWakeFrequency"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10267, "HMasterInstance.procedureStore.region.lastFlushOpSeqId < HMasterInstance.regionServerAccounting.globalMemStoreLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimit"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10268, "HMasterInstance.procedureStore.region.lastFlushOpSeqId < HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10269, "HMasterInstance.procedureStore.region.lastFlushOpSeqId < HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10270, "HMasterInstance.procedureStore.region.lastFlushOpSeqId < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10271, "HMasterInstance.procedureStore.region.lastFlushOpSeqId < HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10272, "HMasterInstance.procedureStore.region.lastFlushOpSeqId < HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10273, "HMasterInstance.procedureStore.region.lastFlushOpSeqId != HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10274, "HMasterInstance.procedureStore.region.lastFlushOpSeqId < HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10275, "HMasterInstance.procedureStore.region.lastFlushOpSeqId != HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10276, "HMasterInstance.procedureStore.region.lastFlushOpSeqId < HMasterInstance.rpcClient.connectTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connectTO"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10277, "HMasterInstance.procedureStore.region.lastFlushOpSeqId != HMasterInstance.rpcClient.connections.poolMaxSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10278, "HMasterInstance.procedureStore.region.lastFlushOpSeqId != HMasterInstance.rpcClient.failedServers.latestExpiry"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10279, "HMasterInstance.procedureStore.region.lastFlushOpSeqId < HMasterInstance.rpcClient.failedServers.recheckServersTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.recheckServersTimeout"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10280, "HMasterInstance.procedureStore.region.lastFlushOpSeqId != HMasterInstance.rpcClient.failureSleep"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failureSleep"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10281, "HMasterInstance.procedureStore.region.lastFlushOpSeqId < HMasterInstance.rpcClient.maxConcurrentCallsPerServer"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.maxConcurrentCallsPerServer"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10282, "HMasterInstance.procedureStore.region.lastFlushOpSeqId < HMasterInstance.rpcClient.minIdleTimeBeforeClose"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.minIdleTimeBeforeClose"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10283, "HMasterInstance.procedureStore.region.lastFlushOpSeqId < HMasterInstance.rpcClient.readTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.readTO"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10284, "HMasterInstance.procedureStore.region.lastFlushOpSeqId < HMasterInstance.rpcClient.writeTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.writeTO"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10285, "HMasterInstance.procedureStore.region.lastFlushOpSeqId < HMasterInstance.rpcServices.maxScannerResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.maxScannerResultSize"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10286, "HMasterInstance.procedureStore.region.lastFlushOpSeqId < HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10287, "HMasterInstance.procedureStore.region.lastFlushOpSeqId < HMasterInstance.rpcServices.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcTimeout"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10288, "HMasterInstance.procedureStore.region.lastFlushOpSeqId < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10289, "HMasterInstance.procedureStore.region.lastFlushOpSeqId < HMasterInstance.rsFatals.maxSizeBytes"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.maxSizeBytes"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10290, "HMasterInstance.procedureStore.region.lastFlushOpSeqId != HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10291, "HMasterInstance.procedureStore.region.lastFlushOpSeqId < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10292, "HMasterInstance.procedureStore.region.lastFlushOpSeqId < HMasterInstance.serverManager.flushedSeqIdFlusher.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.period"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10293, "HMasterInstance.procedureStore.region.lastFlushOpSeqId < HMasterInstance.serverManager.maxSkew"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.maxSkew"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10294, "HMasterInstance.procedureStore.region.lastFlushOpSeqId < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10295, "HMasterInstance.procedureStore.region.lastFlushOpSeqId < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10296, "HMasterInstance.procedureStore.region.lastFlushOpSeqId < HMasterInstance.snapshotManager.coordinator.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotManager.coordinator.timeoutMillis"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10297, "HMasterInstance.procedureStore.region.lastFlushOpSeqId != HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10298, "HMasterInstance.procedureStore.region.lastFlushOpSeqId != HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10299, "HMasterInstance.procedureStore.region.lastFlushOpSeqId < HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10300, "HMasterInstance.procedureStore.region.lastFlushOpSeqId < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10301, "HMasterInstance.procedureStore.region.lastFlushOpSeqId < HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10302, "HMasterInstance.procedureStore.region.lastFlushOpSeqId != daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0]))));
			}
		});
		invariants10999.add(new Invariant(10303, "HMasterInstance.procedureStore.region.lastFlushOpSeqId >= daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0])))-1);
			}
		});
		invariants10999.add(new Invariant(10304, "HMasterInstance.procedureStore.region.lastFlushOpSeqId != daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants10999.add(new Invariant(10305, "HMasterInstance.procedureStore.region.lastFlushOpSeqId != daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants10999.add(new Invariant(10306, "HMasterInstance.procedureStore.region.lastFlushOpSeqId != daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants10999.add(new Invariant(10307, "HMasterInstance.procedureStore.region.lastFlushOpSeqId != daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants10999.add(new Invariant(10308, "HMasterInstance.procedureStore.region.lastFlushOpSeqId != daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants10999.add(new Invariant(10309, "HMasterInstance.procedureStore.region.lastFlushOpSeqId != daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants10999.add(new Invariant(10310, "HMasterInstance.procedureStore.region.lastFlushOpSeqId != daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])))-1);
			}
		});
		invariants10999.add(new Invariant(10311, "HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId < HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10312, "HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId < HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10313, "HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId < HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10314, "HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10315, "HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId < HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10316, "HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId < HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10317, "HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId < HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10318, "HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10319, "HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId < HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10320, "HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10321, "HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10322, "HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10323, "HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10324, "HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId < HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10325, "HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId < HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10326, "HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10327, "HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId <= daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])))-1);
			}
		});
		invariants10999.add(new Invariant(10328, "HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId <= daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1);
			}
		});
		invariants10999.add(new Invariant(10329, "HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId <= daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0])))-1);
			}
		});
		invariants10999.add(new Invariant(10330, "HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId <= daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0])))-1);
			}
		});
		invariants10999.add(new Invariant(10331, "HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId <= daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0])))-1);
			}
		});
		invariants10999.add(new Invariant(10332, "HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId < daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"))).intValue() < daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])))-1);
			}
		});
		invariants10999.add(new Invariant(10333, "HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId > HMasterInstance.procedureStore.region.majorInProgress"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10334, "HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId < HMasterInstance.procedureStore.region.maxBusyWaitDuration"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitDuration"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10335, "HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId != HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10336, "HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId < HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10337, "HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId < HMasterInstance.procedureStore.region.timestampSlop"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.timestampSlop"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10338, "HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId < HMasterInstance.procedureStore.walFactory.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walFactory.timeoutMillis"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10339, "HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId < HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10340, "HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId < HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10341, "HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId != HMasterInstance.procedureStore.walRoller.threadWakeFrequency"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.threadWakeFrequency"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10342, "HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId < HMasterInstance.regionServerAccounting.globalMemStoreLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimit"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10343, "HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId < HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10344, "HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId < HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10345, "HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10346, "HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId < HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10347, "HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId < HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10348, "HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId != HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10349, "HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId < HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10350, "HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId != HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10351, "HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId < HMasterInstance.rpcClient.connectTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connectTO"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10352, "HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId >= HMasterInstance.rpcClient.connections.poolMaxSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10353, "HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId > HMasterInstance.rpcClient.failedServers.latestExpiry"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10354, "HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId < HMasterInstance.rpcClient.failedServers.recheckServersTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.recheckServersTimeout"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10355, "HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId != HMasterInstance.rpcClient.failureSleep"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failureSleep"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10356, "HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId < HMasterInstance.rpcClient.maxConcurrentCallsPerServer"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.maxConcurrentCallsPerServer"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10357, "HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId < HMasterInstance.rpcClient.minIdleTimeBeforeClose"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.minIdleTimeBeforeClose"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10358, "HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId < HMasterInstance.rpcClient.readTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.readTO"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10359, "HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId < HMasterInstance.rpcClient.writeTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.writeTO"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10360, "HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId < HMasterInstance.rpcServices.maxScannerResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.maxScannerResultSize"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10361, "HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId < HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10362, "HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId < HMasterInstance.rpcServices.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcTimeout"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10363, "HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10364, "HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId < HMasterInstance.rsFatals.maxSizeBytes"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.maxSizeBytes"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10365, "HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId != HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10366, "HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10367, "HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId < HMasterInstance.serverManager.flushedSeqIdFlusher.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.period"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10368, "HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId < HMasterInstance.serverManager.maxSkew"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.maxSkew"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10369, "HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10370, "HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10371, "HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId < HMasterInstance.snapshotManager.coordinator.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotManager.coordinator.timeoutMillis"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10372, "HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId < HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10373, "HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10374, "HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId < HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10375, "HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId > daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0]))));
			}
		});
		invariants10999.add(new Invariant(10376, "HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId >= daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1);
			}
		});
		invariants10999.add(new Invariant(10377, "HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId >= daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0])))-1);
			}
		});
		invariants10999.add(new Invariant(10378, "HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId >= daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants10999.add(new Invariant(10379, "HMasterInstance.procedureStore.region.majorInProgress < HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10380, "HMasterInstance.procedureStore.region.majorInProgress < HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10381, "HMasterInstance.procedureStore.region.majorInProgress < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10382, "HMasterInstance.procedureStore.region.majorInProgress < HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10383, "HMasterInstance.procedureStore.region.majorInProgress < HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10384, "HMasterInstance.procedureStore.region.majorInProgress < HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10385, "HMasterInstance.procedureStore.region.majorInProgress < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10386, "HMasterInstance.procedureStore.region.majorInProgress <= HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10387, "HMasterInstance.procedureStore.region.majorInProgress < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10388, "HMasterInstance.procedureStore.region.majorInProgress < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10389, "HMasterInstance.procedureStore.region.majorInProgress < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10390, "HMasterInstance.procedureStore.region.majorInProgress < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10391, "HMasterInstance.procedureStore.region.maxBusyWaitDuration > HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitDuration"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10392, "HMasterInstance.procedureStore.region.maxBusyWaitDuration < HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitDuration"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10393, "HMasterInstance.procedureStore.region.maxBusyWaitDuration < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitDuration"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10394, "HMasterInstance.procedureStore.region.maxBusyWaitDuration < HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitDuration"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10395, "HMasterInstance.procedureStore.region.maxBusyWaitDuration < HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitDuration"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10396, "HMasterInstance.procedureStore.region.maxBusyWaitDuration > HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitDuration"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10397, "HMasterInstance.procedureStore.region.maxBusyWaitDuration < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitDuration"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10398, "HMasterInstance.procedureStore.region.maxBusyWaitDuration > HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitDuration"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10399, "HMasterInstance.procedureStore.region.maxBusyWaitDuration < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitDuration"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10400, "HMasterInstance.procedureStore.region.maxBusyWaitDuration < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitDuration"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10401, "HMasterInstance.procedureStore.region.maxBusyWaitDuration < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitDuration"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10402, "HMasterInstance.procedureStore.region.maxBusyWaitDuration < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitDuration"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10403, "HMasterInstance.procedureStore.region.maxBusyWaitMultiplier <= HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10404, "HMasterInstance.procedureStore.region.maxBusyWaitMultiplier < HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10405, "HMasterInstance.procedureStore.region.maxBusyWaitMultiplier < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10406, "HMasterInstance.procedureStore.region.maxBusyWaitMultiplier < HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10407, "HMasterInstance.procedureStore.region.maxBusyWaitMultiplier < HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10408, "HMasterInstance.procedureStore.region.maxBusyWaitMultiplier < HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10409, "HMasterInstance.procedureStore.region.maxBusyWaitMultiplier < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10410, "HMasterInstance.procedureStore.region.maxBusyWaitMultiplier != HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10411, "HMasterInstance.procedureStore.region.maxBusyWaitMultiplier < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10412, "HMasterInstance.procedureStore.region.maxBusyWaitMultiplier < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10413, "HMasterInstance.procedureStore.region.maxBusyWaitMultiplier < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10414, "HMasterInstance.procedureStore.region.maxBusyWaitMultiplier < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10415, "HMasterInstance.procedureStore.region.maxBusyWaitMultiplier >= daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0])))-1);
			}
		});
		invariants10999.add(new Invariant(10416, "HMasterInstance.procedureStore.region.openSeqNum < HMasterInstance.procedureStore.region.timestampSlop"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.timestampSlop"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10417, "HMasterInstance.procedureStore.region.openSeqNum < HMasterInstance.procedureStore.walFactory.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walFactory.timeoutMillis"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10418, "HMasterInstance.procedureStore.region.openSeqNum < HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10419, "HMasterInstance.procedureStore.region.openSeqNum < HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10420, "HMasterInstance.procedureStore.region.openSeqNum != HMasterInstance.procedureStore.walRoller.threadWakeFrequency"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.threadWakeFrequency"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10421, "HMasterInstance.procedureStore.region.openSeqNum < HMasterInstance.regionServerAccounting.globalMemStoreLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimit"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10422, "HMasterInstance.procedureStore.region.openSeqNum < HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10423, "HMasterInstance.procedureStore.region.openSeqNum < HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10424, "HMasterInstance.procedureStore.region.openSeqNum < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10425, "HMasterInstance.procedureStore.region.openSeqNum < HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10426, "HMasterInstance.procedureStore.region.openSeqNum < HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10427, "HMasterInstance.procedureStore.region.openSeqNum != HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10428, "HMasterInstance.procedureStore.region.openSeqNum < HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10429, "HMasterInstance.procedureStore.region.openSeqNum != HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10430, "HMasterInstance.procedureStore.region.openSeqNum < HMasterInstance.rpcClient.connectTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connectTO"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10431, "HMasterInstance.procedureStore.region.openSeqNum > HMasterInstance.rpcClient.connections.poolMaxSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10432, "HMasterInstance.procedureStore.region.openSeqNum > HMasterInstance.rpcClient.failedServers.latestExpiry"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10433, "HMasterInstance.procedureStore.region.openSeqNum < HMasterInstance.rpcClient.failedServers.recheckServersTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.recheckServersTimeout"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10434, "HMasterInstance.procedureStore.region.openSeqNum != HMasterInstance.rpcClient.failureSleep"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failureSleep"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10435, "HMasterInstance.procedureStore.region.openSeqNum < HMasterInstance.rpcClient.maxConcurrentCallsPerServer"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.maxConcurrentCallsPerServer"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10436, "HMasterInstance.procedureStore.region.openSeqNum < HMasterInstance.rpcClient.minIdleTimeBeforeClose"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.minIdleTimeBeforeClose"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10437, "HMasterInstance.procedureStore.region.openSeqNum < HMasterInstance.rpcClient.readTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.readTO"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10438, "HMasterInstance.procedureStore.region.openSeqNum < HMasterInstance.rpcClient.writeTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.writeTO"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10439, "HMasterInstance.procedureStore.region.openSeqNum < HMasterInstance.rpcServices.maxScannerResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.maxScannerResultSize"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10440, "HMasterInstance.procedureStore.region.openSeqNum < HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10441, "HMasterInstance.procedureStore.region.openSeqNum < HMasterInstance.rpcServices.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcTimeout"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10442, "HMasterInstance.procedureStore.region.openSeqNum < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10443, "HMasterInstance.procedureStore.region.openSeqNum < HMasterInstance.rsFatals.maxSizeBytes"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.maxSizeBytes"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10444, "HMasterInstance.procedureStore.region.openSeqNum != HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10445, "HMasterInstance.procedureStore.region.openSeqNum < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10446, "HMasterInstance.procedureStore.region.openSeqNum < HMasterInstance.serverManager.flushedSeqIdFlusher.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.period"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10447, "HMasterInstance.procedureStore.region.openSeqNum < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10448, "HMasterInstance.procedureStore.region.openSeqNum < HMasterInstance.serverManager.maxSkew"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.maxSkew"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10449, "HMasterInstance.procedureStore.region.openSeqNum < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10450, "HMasterInstance.procedureStore.region.openSeqNum < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10451, "HMasterInstance.procedureStore.region.openSeqNum < HMasterInstance.snapshotManager.coordinator.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotManager.coordinator.timeoutMillis"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10452, "HMasterInstance.procedureStore.region.openSeqNum < HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10453, "HMasterInstance.procedureStore.region.openSeqNum < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10454, "HMasterInstance.procedureStore.region.openSeqNum < HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10455, "HMasterInstance.procedureStore.region.openSeqNum > daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0]))));
			}
		});
		invariants10999.add(new Invariant(10456, "HMasterInstance.procedureStore.region.openSeqNum > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants10999.add(new Invariant(10457, "HMasterInstance.procedureStore.region.openSeqNum >= daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants10999.add(new Invariant(10458, "HMasterInstance.procedureStore.region.openSeqNum >= daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants10999.add(new Invariant(10459, "HMasterInstance.procedureStore.region.openSeqNum > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants10999.add(new Invariant(10460, "HMasterInstance.procedureStore.region.openSeqNum > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants10999.add(new Invariant(10461, "HMasterInstance.procedureStore.region.timestampSlop > HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.timestampSlop"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10462, "HMasterInstance.procedureStore.region.timestampSlop > HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.timestampSlop"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10463, "HMasterInstance.procedureStore.region.timestampSlop > HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.timestampSlop"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10464, "HMasterInstance.procedureStore.region.timestampSlop > HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.timestampSlop"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10465, "HMasterInstance.procedureStore.region.timestampSlop > HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.timestampSlop"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10466, "HMasterInstance.procedureStore.region.timestampSlop > HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.timestampSlop"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10467, "HMasterInstance.procedureStore.region.timestampSlop > HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.timestampSlop"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10468, "HMasterInstance.procedureStore.region.timestampSlop > HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.timestampSlop"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10469, "HMasterInstance.procedureStore.region.timestampSlop > HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.timestampSlop"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10470, "HMasterInstance.procedureStore.region.timestampSlop > HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.timestampSlop"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10471, "HMasterInstance.procedureStore.region.timestampSlop >= HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.timestampSlop"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10472, "HMasterInstance.procedureStore.walFactory.timeoutMillis < HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walFactory.timeoutMillis"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10473, "HMasterInstance.procedureStore.walFactory.timeoutMillis < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walFactory.timeoutMillis"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10474, "HMasterInstance.procedureStore.walFactory.timeoutMillis < HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walFactory.timeoutMillis"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10475, "HMasterInstance.procedureStore.walFactory.timeoutMillis < HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walFactory.timeoutMillis"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10476, "HMasterInstance.procedureStore.walFactory.timeoutMillis > HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walFactory.timeoutMillis"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10477, "HMasterInstance.procedureStore.walFactory.timeoutMillis < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walFactory.timeoutMillis"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10478, "HMasterInstance.procedureStore.walFactory.timeoutMillis > HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walFactory.timeoutMillis"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10479, "HMasterInstance.procedureStore.walFactory.timeoutMillis < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walFactory.timeoutMillis"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10480, "HMasterInstance.procedureStore.walFactory.timeoutMillis < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walFactory.timeoutMillis"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10481, "HMasterInstance.procedureStore.walFactory.timeoutMillis < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walFactory.timeoutMillis"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10482, "HMasterInstance.procedureStore.walFactory.timeoutMillis < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walFactory.timeoutMillis"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10483, "HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval < HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10484, "HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10485, "HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval < HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10486, "HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval < HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10487, "HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval > HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10488, "HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10489, "HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval > HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10490, "HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10491, "HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10492, "HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10493, "HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10494, "HMasterInstance.procedureStore.walRoller.lastRollTime > HMasterInstance.procedureStore.walRoller.threadWakeFrequency"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.threadWakeFrequency"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10495, "HMasterInstance.procedureStore.walRoller.lastRollTime > HMasterInstance.regionServerAccounting.globalMemStoreLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimit"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10496, "HMasterInstance.procedureStore.walRoller.lastRollTime > HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10497, "HMasterInstance.procedureStore.walRoller.lastRollTime > HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10498, "HMasterInstance.procedureStore.walRoller.lastRollTime < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10499, "HMasterInstance.procedureStore.walRoller.lastRollTime < HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10500, "HMasterInstance.procedureStore.walRoller.lastRollTime < HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10501, "HMasterInstance.procedureStore.walRoller.lastRollTime > HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10502, "HMasterInstance.procedureStore.walRoller.lastRollTime > HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10503, "HMasterInstance.procedureStore.walRoller.lastRollTime > HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10504, "HMasterInstance.procedureStore.walRoller.lastRollTime > HMasterInstance.rpcClient.connectTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connectTO"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10505, "HMasterInstance.procedureStore.walRoller.lastRollTime > HMasterInstance.rpcClient.connections.poolMaxSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10506, "HMasterInstance.procedureStore.walRoller.lastRollTime > HMasterInstance.rpcClient.failedServers.latestExpiry"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10507, "HMasterInstance.procedureStore.walRoller.lastRollTime > HMasterInstance.rpcClient.failedServers.recheckServersTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.recheckServersTimeout"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10508, "HMasterInstance.procedureStore.walRoller.lastRollTime > HMasterInstance.rpcClient.failureSleep"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failureSleep"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10509, "HMasterInstance.procedureStore.walRoller.lastRollTime > HMasterInstance.rpcClient.maxConcurrentCallsPerServer"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.maxConcurrentCallsPerServer"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10510, "HMasterInstance.procedureStore.walRoller.lastRollTime > HMasterInstance.rpcClient.minIdleTimeBeforeClose"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.minIdleTimeBeforeClose"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10511, "HMasterInstance.procedureStore.walRoller.lastRollTime > HMasterInstance.rpcClient.readTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.readTO"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10512, "HMasterInstance.procedureStore.walRoller.lastRollTime > HMasterInstance.rpcClient.writeTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.writeTO"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10513, "HMasterInstance.procedureStore.walRoller.lastRollTime > HMasterInstance.rpcServices.maxScannerResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.maxScannerResultSize"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10514, "HMasterInstance.procedureStore.walRoller.lastRollTime > HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10515, "HMasterInstance.procedureStore.walRoller.lastRollTime > HMasterInstance.rpcServices.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcTimeout"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10516, "HMasterInstance.procedureStore.walRoller.lastRollTime < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10517, "HMasterInstance.procedureStore.walRoller.lastRollTime > HMasterInstance.rsFatals.maxSizeBytes"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.maxSizeBytes"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10518, "HMasterInstance.procedureStore.walRoller.lastRollTime > HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10519, "HMasterInstance.procedureStore.walRoller.lastRollTime < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10520, "HMasterInstance.procedureStore.walRoller.lastRollTime > HMasterInstance.serverManager.flushedSeqIdFlusher.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.period"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10521, "HMasterInstance.procedureStore.walRoller.lastRollTime > HMasterInstance.serverManager.maxSkew"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.maxSkew"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10522, "HMasterInstance.procedureStore.walRoller.lastRollTime < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10523, "HMasterInstance.procedureStore.walRoller.lastRollTime < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10524, "HMasterInstance.procedureStore.walRoller.lastRollTime > HMasterInstance.snapshotManager.coordinator.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotManager.coordinator.timeoutMillis"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10525, "HMasterInstance.procedureStore.walRoller.lastRollTime > HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10526, "HMasterInstance.procedureStore.walRoller.lastRollTime < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10527, "HMasterInstance.procedureStore.walRoller.lastRollTime > HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10528, "HMasterInstance.procedureStore.walRoller.lastRollTime > daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0]))));
			}
		});
		invariants10999.add(new Invariant(10529, "HMasterInstance.procedureStore.walRoller.threadWakeFrequency < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.threadWakeFrequency"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10530, "HMasterInstance.procedureStore.walRoller.threadWakeFrequency < HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.threadWakeFrequency"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10531, "HMasterInstance.procedureStore.walRoller.threadWakeFrequency < HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.threadWakeFrequency"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10532, "HMasterInstance.procedureStore.walRoller.threadWakeFrequency > HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.threadWakeFrequency"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10533, "HMasterInstance.procedureStore.walRoller.threadWakeFrequency < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.threadWakeFrequency"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10534, "HMasterInstance.procedureStore.walRoller.threadWakeFrequency != HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.threadWakeFrequency"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10535, "HMasterInstance.procedureStore.walRoller.threadWakeFrequency < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.threadWakeFrequency"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10536, "HMasterInstance.procedureStore.walRoller.threadWakeFrequency < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.threadWakeFrequency"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10537, "HMasterInstance.procedureStore.walRoller.threadWakeFrequency < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.threadWakeFrequency"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10538, "HMasterInstance.procedureStore.walRoller.threadWakeFrequency < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.threadWakeFrequency"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10539, "HMasterInstance.regionServerAccounting.globalMemStoreLimit < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimit"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10540, "HMasterInstance.regionServerAccounting.globalMemStoreLimit < HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimit"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10541, "HMasterInstance.regionServerAccounting.globalMemStoreLimit < HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimit"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10542, "HMasterInstance.regionServerAccounting.globalMemStoreLimit > HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimit"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10543, "HMasterInstance.regionServerAccounting.globalMemStoreLimit < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimit"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10544, "HMasterInstance.regionServerAccounting.globalMemStoreLimit > HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimit"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10545, "HMasterInstance.regionServerAccounting.globalMemStoreLimit < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimit"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10546, "HMasterInstance.regionServerAccounting.globalMemStoreLimit < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimit"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10547, "HMasterInstance.regionServerAccounting.globalMemStoreLimit < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimit"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10548, "HMasterInstance.regionServerAccounting.globalMemStoreLimit < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimit"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10549, "HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10550, "HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark < HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10551, "HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark < HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10552, "HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark > HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10553, "HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10554, "HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark > HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10555, "HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10556, "HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10557, "HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10558, "HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10559, "HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10560, "HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval < HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10561, "HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval < HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10562, "HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval > HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10563, "HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10564, "HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval > HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10565, "HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10566, "HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10567, "HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10568, "HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10569, "HMasterInstance.replicationBarrierCleaner.lastLog > HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10570, "HMasterInstance.replicationBarrierCleaner.lastLog > HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10571, "HMasterInstance.replicationBarrierCleaner.lastLog > HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10572, "HMasterInstance.replicationBarrierCleaner.lastLog > HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10573, "HMasterInstance.replicationBarrierCleaner.lastLog > HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10574, "HMasterInstance.replicationBarrierCleaner.lastLog > HMasterInstance.rpcClient.connectTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connectTO"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10575, "HMasterInstance.replicationBarrierCleaner.lastLog > HMasterInstance.rpcClient.connections.poolMaxSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10576, "HMasterInstance.replicationBarrierCleaner.lastLog > HMasterInstance.rpcClient.failedServers.latestExpiry"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10577, "HMasterInstance.replicationBarrierCleaner.lastLog > HMasterInstance.rpcClient.failedServers.recheckServersTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.recheckServersTimeout"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10578, "HMasterInstance.replicationBarrierCleaner.lastLog > HMasterInstance.rpcClient.failureSleep"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failureSleep"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10579, "HMasterInstance.replicationBarrierCleaner.lastLog > HMasterInstance.rpcClient.maxConcurrentCallsPerServer"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.maxConcurrentCallsPerServer"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10580, "HMasterInstance.replicationBarrierCleaner.lastLog > HMasterInstance.rpcClient.minIdleTimeBeforeClose"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.minIdleTimeBeforeClose"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10581, "HMasterInstance.replicationBarrierCleaner.lastLog > HMasterInstance.rpcClient.readTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.readTO"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10582, "HMasterInstance.replicationBarrierCleaner.lastLog > HMasterInstance.rpcClient.writeTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.writeTO"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10583, "HMasterInstance.replicationBarrierCleaner.lastLog > HMasterInstance.rpcServices.maxScannerResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.maxScannerResultSize"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10584, "HMasterInstance.replicationBarrierCleaner.lastLog > HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10585, "HMasterInstance.replicationBarrierCleaner.lastLog > HMasterInstance.rpcServices.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcTimeout"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10586, "HMasterInstance.replicationBarrierCleaner.lastLog < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10587, "HMasterInstance.replicationBarrierCleaner.lastLog > HMasterInstance.rsFatals.maxSizeBytes"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.maxSizeBytes"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10588, "HMasterInstance.replicationBarrierCleaner.lastLog > HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10589, "HMasterInstance.replicationBarrierCleaner.lastLog < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10590, "HMasterInstance.replicationBarrierCleaner.lastLog > HMasterInstance.serverManager.flushedSeqIdFlusher.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.period"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10591, "HMasterInstance.replicationBarrierCleaner.lastLog > HMasterInstance.serverManager.maxSkew"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.maxSkew"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10592, "HMasterInstance.replicationBarrierCleaner.lastLog < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10593, "HMasterInstance.replicationBarrierCleaner.lastLog > HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10594, "HMasterInstance.replicationBarrierCleaner.lastLog > HMasterInstance.snapshotManager.coordinator.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotManager.coordinator.timeoutMillis"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10595, "HMasterInstance.replicationBarrierCleaner.lastLog > HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10596, "HMasterInstance.replicationBarrierCleaner.lastLog != HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10597, "HMasterInstance.replicationBarrierCleaner.lastLog > HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10598, "HMasterInstance.replicationBarrierCleaner.lastLog > daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0]))));
			}
		});
		invariants10999.add(new Invariant(10599, "HMasterInstance.replicationBarrierCleaner.timeOfLastRun <= HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10600, "HMasterInstance.replicationBarrierCleaner.timeOfLastRun > HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10601, "HMasterInstance.replicationBarrierCleaner.timeOfLastRun > HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10602, "HMasterInstance.replicationBarrierCleaner.timeOfLastRun > HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10603, "HMasterInstance.replicationBarrierCleaner.timeOfLastRun > HMasterInstance.rpcClient.connectTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connectTO"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10604, "HMasterInstance.replicationBarrierCleaner.timeOfLastRun > HMasterInstance.rpcClient.connections.poolMaxSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10605, "HMasterInstance.replicationBarrierCleaner.timeOfLastRun > HMasterInstance.rpcClient.failedServers.latestExpiry"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10606, "HMasterInstance.replicationBarrierCleaner.timeOfLastRun > HMasterInstance.rpcClient.failedServers.recheckServersTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.recheckServersTimeout"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10607, "HMasterInstance.replicationBarrierCleaner.timeOfLastRun > HMasterInstance.rpcClient.failureSleep"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failureSleep"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10608, "HMasterInstance.replicationBarrierCleaner.timeOfLastRun > HMasterInstance.rpcClient.maxConcurrentCallsPerServer"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.maxConcurrentCallsPerServer"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10609, "HMasterInstance.replicationBarrierCleaner.timeOfLastRun > HMasterInstance.rpcClient.minIdleTimeBeforeClose"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.minIdleTimeBeforeClose"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10610, "HMasterInstance.replicationBarrierCleaner.timeOfLastRun > HMasterInstance.rpcClient.readTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.readTO"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10611, "HMasterInstance.replicationBarrierCleaner.timeOfLastRun > HMasterInstance.rpcClient.writeTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.writeTO"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10612, "HMasterInstance.replicationBarrierCleaner.timeOfLastRun > HMasterInstance.rpcServices.maxScannerResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.maxScannerResultSize"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10613, "HMasterInstance.replicationBarrierCleaner.timeOfLastRun > HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10614, "HMasterInstance.replicationBarrierCleaner.timeOfLastRun > HMasterInstance.rpcServices.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcTimeout"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10615, "HMasterInstance.replicationBarrierCleaner.timeOfLastRun < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10616, "HMasterInstance.replicationBarrierCleaner.timeOfLastRun > HMasterInstance.rsFatals.maxSizeBytes"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.maxSizeBytes"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10617, "HMasterInstance.replicationBarrierCleaner.timeOfLastRun > HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10618, "HMasterInstance.replicationBarrierCleaner.timeOfLastRun < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10619, "HMasterInstance.replicationBarrierCleaner.timeOfLastRun > HMasterInstance.serverManager.flushedSeqIdFlusher.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.period"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10620, "HMasterInstance.replicationBarrierCleaner.timeOfLastRun > HMasterInstance.serverManager.maxSkew"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.maxSkew"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10621, "HMasterInstance.replicationBarrierCleaner.timeOfLastRun < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10622, "HMasterInstance.replicationBarrierCleaner.timeOfLastRun < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10623, "HMasterInstance.replicationBarrierCleaner.timeOfLastRun > HMasterInstance.snapshotManager.coordinator.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotManager.coordinator.timeoutMillis"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10624, "HMasterInstance.replicationBarrierCleaner.timeOfLastRun > HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10625, "HMasterInstance.replicationBarrierCleaner.timeOfLastRun < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10626, "HMasterInstance.replicationBarrierCleaner.timeOfLastRun > HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10627, "HMasterInstance.replicationBarrierCleaner.timeOfLastRun > daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0]))));
			}
		});
		invariants10999.add(new Invariant(10628, "HMasterInstance.replicationBarrierCleaner.timeOfThisRun > HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10629, "HMasterInstance.replicationBarrierCleaner.timeOfThisRun > HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10630, "HMasterInstance.replicationBarrierCleaner.timeOfThisRun > HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10631, "HMasterInstance.replicationBarrierCleaner.timeOfThisRun > HMasterInstance.rpcClient.connectTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connectTO"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10632, "HMasterInstance.replicationBarrierCleaner.timeOfThisRun > HMasterInstance.rpcClient.connections.poolMaxSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10633, "HMasterInstance.replicationBarrierCleaner.timeOfThisRun > HMasterInstance.rpcClient.failedServers.latestExpiry"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10634, "HMasterInstance.replicationBarrierCleaner.timeOfThisRun > HMasterInstance.rpcClient.failedServers.recheckServersTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.recheckServersTimeout"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10635, "HMasterInstance.replicationBarrierCleaner.timeOfThisRun > HMasterInstance.rpcClient.failureSleep"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failureSleep"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10636, "HMasterInstance.replicationBarrierCleaner.timeOfThisRun > HMasterInstance.rpcClient.maxConcurrentCallsPerServer"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.maxConcurrentCallsPerServer"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10637, "HMasterInstance.replicationBarrierCleaner.timeOfThisRun > HMasterInstance.rpcClient.minIdleTimeBeforeClose"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.minIdleTimeBeforeClose"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10638, "HMasterInstance.replicationBarrierCleaner.timeOfThisRun > HMasterInstance.rpcClient.readTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.readTO"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10639, "HMasterInstance.replicationBarrierCleaner.timeOfThisRun > HMasterInstance.rpcClient.writeTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.writeTO"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10640, "HMasterInstance.replicationBarrierCleaner.timeOfThisRun > HMasterInstance.rpcServices.maxScannerResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.maxScannerResultSize"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10641, "HMasterInstance.replicationBarrierCleaner.timeOfThisRun > HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10642, "HMasterInstance.replicationBarrierCleaner.timeOfThisRun > HMasterInstance.rpcServices.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcTimeout"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10643, "HMasterInstance.replicationBarrierCleaner.timeOfThisRun < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10644, "HMasterInstance.replicationBarrierCleaner.timeOfThisRun > HMasterInstance.rsFatals.maxSizeBytes"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.maxSizeBytes"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10645, "HMasterInstance.replicationBarrierCleaner.timeOfThisRun > HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10646, "HMasterInstance.replicationBarrierCleaner.timeOfThisRun < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10647, "HMasterInstance.replicationBarrierCleaner.timeOfThisRun > HMasterInstance.serverManager.flushedSeqIdFlusher.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.period"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10648, "HMasterInstance.replicationBarrierCleaner.timeOfThisRun < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10649, "HMasterInstance.replicationBarrierCleaner.timeOfThisRun > HMasterInstance.serverManager.maxSkew"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.maxSkew"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10650, "HMasterInstance.replicationBarrierCleaner.timeOfThisRun < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10651, "HMasterInstance.replicationBarrierCleaner.timeOfThisRun < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10652, "HMasterInstance.replicationBarrierCleaner.timeOfThisRun > HMasterInstance.snapshotManager.coordinator.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotManager.coordinator.timeoutMillis"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10653, "HMasterInstance.replicationBarrierCleaner.timeOfThisRun > HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10654, "HMasterInstance.replicationBarrierCleaner.timeOfThisRun > HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10655, "HMasterInstance.replicationBarrierCleaner.timeOfThisRun > HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10656, "HMasterInstance.replicationBarrierCleaner.timeOfThisRun < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10657, "HMasterInstance.replicationBarrierCleaner.timeOfThisRun > HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10658, "HMasterInstance.replicationBarrierCleaner.timeOfThisRun > daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0]))));
			}
		});
		invariants10999.add(new Invariant(10659, "HMasterInstance.replicationBarrierCleaner.timeOfThisRun > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants10999.add(new Invariant(10660, "HMasterInstance.replicationBarrierCleaner.timeOfThisRun > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants10999.add(new Invariant(10661, "HMasterInstance.replicationBarrierCleaner.timeOfThisRun > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants10999.add(new Invariant(10662, "HMasterInstance.replicationBarrierCleaner.timeOfThisRun > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants10999.add(new Invariant(10663, "HMasterInstance.replicationBarrierCleaner.timeOfThisRun > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants10999.add(new Invariant(10664, "HMasterInstance.replicationBarrierCleaner.timeOfThisRun > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants10999.add(new Invariant(10665, "HMasterInstance.rpcClient.callIdCnt < HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10666, "HMasterInstance.rpcClient.callIdCnt > HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10667, "HMasterInstance.rpcClient.callIdCnt < HMasterInstance.rpcClient.connectTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connectTO"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10668, "HMasterInstance.rpcClient.callIdCnt > HMasterInstance.rpcClient.connections.poolMaxSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10669, "HMasterInstance.rpcClient.callIdCnt > HMasterInstance.rpcClient.failedServers.latestExpiry"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10670, "HMasterInstance.rpcClient.callIdCnt < HMasterInstance.rpcClient.failedServers.recheckServersTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.recheckServersTimeout"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10671, "HMasterInstance.rpcClient.callIdCnt < HMasterInstance.rpcClient.failureSleep"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failureSleep"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10672, "HMasterInstance.rpcClient.callIdCnt < HMasterInstance.rpcClient.maxConcurrentCallsPerServer"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.maxConcurrentCallsPerServer"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10673, "HMasterInstance.rpcClient.callIdCnt < HMasterInstance.rpcClient.minIdleTimeBeforeClose"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.minIdleTimeBeforeClose"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10674, "HMasterInstance.rpcClient.callIdCnt < HMasterInstance.rpcClient.readTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.readTO"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10675, "HMasterInstance.rpcClient.callIdCnt < HMasterInstance.rpcClient.writeTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.writeTO"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10676, "HMasterInstance.rpcClient.callIdCnt < HMasterInstance.rpcServices.maxScannerResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.maxScannerResultSize"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10677, "HMasterInstance.rpcClient.callIdCnt < HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10678, "HMasterInstance.rpcClient.callIdCnt < HMasterInstance.rpcServices.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcTimeout"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10679, "HMasterInstance.rpcClient.callIdCnt < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10680, "HMasterInstance.rpcClient.callIdCnt < HMasterInstance.rsFatals.maxSizeBytes"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.maxSizeBytes"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10681, "HMasterInstance.rpcClient.callIdCnt != HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10682, "HMasterInstance.rpcClient.callIdCnt < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10683, "HMasterInstance.rpcClient.callIdCnt < HMasterInstance.serverManager.flushedSeqIdFlusher.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.period"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10684, "HMasterInstance.rpcClient.callIdCnt < HMasterInstance.serverManager.maxSkew"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.maxSkew"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10685, "HMasterInstance.rpcClient.callIdCnt < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10686, "HMasterInstance.rpcClient.callIdCnt < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10687, "HMasterInstance.rpcClient.callIdCnt < HMasterInstance.snapshotManager.coordinator.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotManager.coordinator.timeoutMillis"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10688, "HMasterInstance.rpcClient.callIdCnt < HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10689, "HMasterInstance.rpcClient.callIdCnt < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10690, "HMasterInstance.rpcClient.callIdCnt < HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10691, "HMasterInstance.rpcClient.callIdCnt > daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0]))));
			}
		});
		invariants10999.add(new Invariant(10692, "daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE) % HMasterInstance.rpcClient.callIdCnt == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))) % ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue() == 0);
			}
		});
		invariants10999.add(new Invariant(10693, "HMasterInstance.rpcClient.callIdCnt % daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)-1 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue() % daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0])))-1 == 0);
			}
		});
		invariants10999.add(new Invariant(10694, "daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE) % HMasterInstance.rpcClient.callIdCnt == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))) % ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue() == 0);
			}
		});
		invariants10999.add(new Invariant(10695, "HMasterInstance.rpcClient.callIdCnt % daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)-1 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue() % daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0])))-1 == 0);
			}
		});
		invariants10999.add(new Invariant(10696, "HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10697, "HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize > HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10698, "HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10699, "HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10700, "HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10701, "HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10702, "daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE) % HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))) % ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"))).intValue() == 0);
			}
		});
		invariants10999.add(new Invariant(10703, "HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize % daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)-1 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"))).intValue() % daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0])))-1 == 0);
			}
		});
		invariants10999.add(new Invariant(10704, "HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10705, "HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier != HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10706, "HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10707, "HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10708, "HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10709, "HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10710, "HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier != daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1);
			}
		});
		invariants10999.add(new Invariant(10711, "daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE) % HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))) % ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"))).intValue() == 0);
			}
		});
		invariants10999.add(new Invariant(10712, "HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier % daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)-1 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"))).intValue() % daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0])))-1 == 0);
			}
		});
		invariants10999.add(new Invariant(10713, "HMasterInstance.rpcClient.connectTO < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connectTO"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10714, "HMasterInstance.rpcClient.connectTO > HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connectTO"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10715, "HMasterInstance.rpcClient.connectTO < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connectTO"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10716, "HMasterInstance.rpcClient.connectTO < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connectTO"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10717, "HMasterInstance.rpcClient.connectTO < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connectTO"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10718, "HMasterInstance.rpcClient.connectTO < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connectTO"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10719, "HMasterInstance.rpcClient.connectTO % daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connectTO"))).intValue() % daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1 == 0);
			}
		});
		invariants10999.add(new Invariant(10720, "daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE) % HMasterInstance.rpcClient.connectTO == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))) % ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connectTO"))).intValue() == 0);
			}
		});
		invariants10999.add(new Invariant(10721, "HMasterInstance.rpcClient.connectTO % daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)-1 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connectTO"))).intValue() % daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0])))-1 == 0);
			}
		});
		invariants10999.add(new Invariant(10722, "HMasterInstance.rpcClient.connections.poolMaxSize < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10723, "HMasterInstance.rpcClient.connections.poolMaxSize != HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10724, "HMasterInstance.rpcClient.connections.poolMaxSize < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10725, "HMasterInstance.rpcClient.connections.poolMaxSize < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10726, "HMasterInstance.rpcClient.connections.poolMaxSize < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10727, "HMasterInstance.rpcClient.connections.poolMaxSize < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10728, "HMasterInstance.rpcClient.connections.poolMaxSize % daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)-1 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue() % daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0])))-1 == 0);
			}
		});
		invariants10999.add(new Invariant(10729, "HMasterInstance.rpcClient.connections.poolMaxSize == daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)-1*daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0])))-1*daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0])))-1);
			}
		});
		invariants10999.add(new Invariant(10730, "HMasterInstance.rpcClient.failedServers.latestExpiry < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10731, "HMasterInstance.rpcClient.failedServers.latestExpiry <= HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10732, "HMasterInstance.rpcClient.failedServers.latestExpiry < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10733, "HMasterInstance.rpcClient.failedServers.latestExpiry < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10734, "HMasterInstance.rpcClient.failedServers.latestExpiry < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10735, "HMasterInstance.rpcClient.failedServers.latestExpiry < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10736, "HMasterInstance.rpcClient.failedServers.latestExpiry == daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)*daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0])))*daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants10999.add(new Invariant(10737, "daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE) == HMasterInstance.rpcClient.failedServers.latestExpiry*HMasterInstance.rpcClient.failedServers.latestExpiry"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))) == ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue()*((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10738, "HMasterInstance.rpcClient.failedServers.latestExpiry % daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)-1 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue() % daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0])))-1 == 0);
			}
		});
		invariants10999.add(new Invariant(10739, "HMasterInstance.rpcClient.failedServers.recheckServersTimeout < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.recheckServersTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10740, "HMasterInstance.rpcClient.failedServers.recheckServersTimeout > HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.recheckServersTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10741, "HMasterInstance.rpcClient.failedServers.recheckServersTimeout < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.recheckServersTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10742, "HMasterInstance.rpcClient.failedServers.recheckServersTimeout < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.recheckServersTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10743, "HMasterInstance.rpcClient.failedServers.recheckServersTimeout < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.recheckServersTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10744, "HMasterInstance.rpcClient.failedServers.recheckServersTimeout < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.recheckServersTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10745, "HMasterInstance.rpcClient.failedServers.recheckServersTimeout % daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.recheckServersTimeout"))).intValue() % daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1 == 0);
			}
		});
		invariants10999.add(new Invariant(10746, "daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE) % HMasterInstance.rpcClient.failedServers.recheckServersTimeout == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))) % ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.recheckServersTimeout"))).intValue() == 0);
			}
		});
		invariants10999.add(new Invariant(10747, "HMasterInstance.rpcClient.failedServers.recheckServersTimeout % daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)-1 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.recheckServersTimeout"))).intValue() % daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0])))-1 == 0);
			}
		});
		invariants10999.add(new Invariant(10748, "HMasterInstance.rpcClient.failureSleep < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failureSleep"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10749, "HMasterInstance.rpcClient.failureSleep != HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failureSleep"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10750, "HMasterInstance.rpcClient.failureSleep < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failureSleep"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10751, "HMasterInstance.rpcClient.failureSleep < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failureSleep"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10752, "HMasterInstance.rpcClient.failureSleep < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failureSleep"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10753, "HMasterInstance.rpcClient.failureSleep != HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failureSleep"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10754, "HMasterInstance.rpcClient.failureSleep != HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failureSleep"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10755, "HMasterInstance.rpcClient.failureSleep < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failureSleep"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10756, "HMasterInstance.rpcClient.failureSleep % daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failureSleep"))).intValue() % daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1 == 0);
			}
		});
		invariants10999.add(new Invariant(10757, "daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE) % HMasterInstance.rpcClient.failureSleep == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))) % ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failureSleep"))).intValue() == 0);
			}
		});
		invariants10999.add(new Invariant(10758, "HMasterInstance.rpcClient.failureSleep % daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)-1 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failureSleep"))).intValue() % daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0])))-1 == 0);
			}
		});
		invariants10999.add(new Invariant(10759, "HMasterInstance.rpcClient.maxConcurrentCallsPerServer < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.maxConcurrentCallsPerServer"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10760, "HMasterInstance.rpcClient.maxConcurrentCallsPerServer > HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.maxConcurrentCallsPerServer"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10761, "HMasterInstance.rpcClient.maxConcurrentCallsPerServer < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.maxConcurrentCallsPerServer"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10762, "HMasterInstance.rpcClient.maxConcurrentCallsPerServer < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.maxConcurrentCallsPerServer"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10763, "HMasterInstance.rpcClient.maxConcurrentCallsPerServer < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.maxConcurrentCallsPerServer"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10764, "HMasterInstance.rpcClient.maxConcurrentCallsPerServer < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.maxConcurrentCallsPerServer"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10765, "daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE) % HMasterInstance.rpcClient.maxConcurrentCallsPerServer == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))) % ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.maxConcurrentCallsPerServer"))).intValue() == 0);
			}
		});
		invariants10999.add(new Invariant(10766, "HMasterInstance.rpcClient.maxConcurrentCallsPerServer % daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)-1 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.maxConcurrentCallsPerServer"))).intValue() % daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0])))-1 == 0);
			}
		});
		invariants10999.add(new Invariant(10767, "HMasterInstance.rpcClient.minIdleTimeBeforeClose < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.minIdleTimeBeforeClose"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10768, "HMasterInstance.rpcClient.minIdleTimeBeforeClose > HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.minIdleTimeBeforeClose"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10769, "HMasterInstance.rpcClient.minIdleTimeBeforeClose < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.minIdleTimeBeforeClose"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10770, "HMasterInstance.rpcClient.minIdleTimeBeforeClose < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.minIdleTimeBeforeClose"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10771, "HMasterInstance.rpcClient.minIdleTimeBeforeClose < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.minIdleTimeBeforeClose"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10772, "HMasterInstance.rpcClient.minIdleTimeBeforeClose < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.minIdleTimeBeforeClose"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10773, "daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE) % HMasterInstance.rpcClient.minIdleTimeBeforeClose == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))) % ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.minIdleTimeBeforeClose"))).intValue() == 0);
			}
		});
		invariants10999.add(new Invariant(10774, "HMasterInstance.rpcClient.minIdleTimeBeforeClose % daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)-1 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.minIdleTimeBeforeClose"))).intValue() % daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0])))-1 == 0);
			}
		});
		invariants10999.add(new Invariant(10775, "HMasterInstance.rpcClient.readTO < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.readTO"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10776, "HMasterInstance.rpcClient.readTO > HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.readTO"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10777, "HMasterInstance.rpcClient.readTO < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.readTO"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10778, "HMasterInstance.rpcClient.readTO < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.readTO"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10779, "HMasterInstance.rpcClient.readTO < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.readTO"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10780, "HMasterInstance.rpcClient.readTO < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.readTO"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10781, "HMasterInstance.rpcClient.readTO % daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.readTO"))).intValue() % daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1 == 0);
			}
		});
		invariants10999.add(new Invariant(10782, "daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE) % HMasterInstance.rpcClient.readTO == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))) % ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.readTO"))).intValue() == 0);
			}
		});
		invariants10999.add(new Invariant(10783, "HMasterInstance.rpcClient.readTO % daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)-1 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.readTO"))).intValue() % daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0])))-1 == 0);
			}
		});
		invariants10999.add(new Invariant(10784, "HMasterInstance.rpcClient.writeTO < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.writeTO"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10785, "HMasterInstance.rpcClient.writeTO > HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.writeTO"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10786, "HMasterInstance.rpcClient.writeTO < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.writeTO"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10787, "HMasterInstance.rpcClient.writeTO < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.writeTO"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10788, "HMasterInstance.rpcClient.writeTO < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.writeTO"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10789, "HMasterInstance.rpcClient.writeTO < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.writeTO"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10790, "daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE) % HMasterInstance.rpcClient.writeTO == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))) % ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.writeTO"))).intValue() == 0);
			}
		});
		invariants10999.add(new Invariant(10791, "HMasterInstance.rpcClient.writeTO % daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)-1 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.writeTO"))).intValue() % daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0])))-1 == 0);
			}
		});
		invariants10999.add(new Invariant(10792, "HMasterInstance.rpcServices.maxScannerResultSize < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.maxScannerResultSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10793, "HMasterInstance.rpcServices.maxScannerResultSize > HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.maxScannerResultSize"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10794, "HMasterInstance.rpcServices.maxScannerResultSize < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.maxScannerResultSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10795, "HMasterInstance.rpcServices.maxScannerResultSize < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.maxScannerResultSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10796, "HMasterInstance.rpcServices.maxScannerResultSize < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.maxScannerResultSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10797, "HMasterInstance.rpcServices.maxScannerResultSize < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.maxScannerResultSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10798, "HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10799, "HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT > HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10800, "HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10801, "HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10802, "HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10803, "HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10804, "HMasterInstance.rpcServices.rpcTimeout < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10805, "HMasterInstance.rpcServices.rpcTimeout > HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10806, "HMasterInstance.rpcServices.rpcTimeout < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10807, "HMasterInstance.rpcServices.rpcTimeout < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10808, "HMasterInstance.rpcServices.rpcTimeout < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10809, "HMasterInstance.rpcServices.rpcTimeout < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10810, "HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash > HMasterInstance.rsFatals.maxSizeBytes"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.maxSizeBytes"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10811, "HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash > HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10812, "HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash > HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10813, "HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash > HMasterInstance.serverManager.flushedSeqIdFlusher.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.period"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10814, "HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash > HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10815, "HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash > HMasterInstance.serverManager.maxSkew"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.maxSkew"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10816, "HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash > HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10817, "HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash > HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10818, "HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash > HMasterInstance.snapshotManager.coordinator.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotManager.coordinator.timeoutMillis"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10819, "HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash > HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10820, "HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash > HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10821, "HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash > HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10822, "HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash != HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10823, "HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash > HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10824, "HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash > daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0]))));
			}
		});
		invariants10999.add(new Invariant(10825, "HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants10999.add(new Invariant(10826, "HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants10999.add(new Invariant(10827, "HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants10999.add(new Invariant(10828, "HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants10999.add(new Invariant(10829, "HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants10999.add(new Invariant(10830, "HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants10999.add(new Invariant(10831, "HMasterInstance.rsFatals.maxSizeBytes > HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.maxSizeBytes"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10832, "HMasterInstance.rsFatals.maxSizeBytes < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.maxSizeBytes"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10833, "HMasterInstance.rsFatals.maxSizeBytes < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.maxSizeBytes"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10834, "HMasterInstance.rsFatals.maxSizeBytes < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.maxSizeBytes"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10835, "HMasterInstance.rsFatals.maxSizeBytes < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.maxSizeBytes"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10836, "HMasterInstance.rsFatals.usage < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10837, "HMasterInstance.rsFatals.usage < HMasterInstance.serverManager.flushedSeqIdFlusher.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.period"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10838, "HMasterInstance.rsFatals.usage < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10839, "HMasterInstance.rsFatals.usage < HMasterInstance.serverManager.maxSkew"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.maxSkew"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10840, "HMasterInstance.rsFatals.usage < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10841, "HMasterInstance.rsFatals.usage < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10842, "HMasterInstance.rsFatals.usage < HMasterInstance.snapshotManager.coordinator.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotManager.coordinator.timeoutMillis"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10843, "HMasterInstance.rsFatals.usage < HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10844, "HMasterInstance.rsFatals.usage < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10845, "HMasterInstance.rsFatals.usage < HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10846, "HMasterInstance.rsFatals.usage >= daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0]))));
			}
		});
		invariants10999.add(new Invariant(10847, "HMasterInstance.rsFatals.usage >= daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])))-1);
			}
		});
		invariants10999.add(new Invariant(10848, "HMasterInstance.rsFatals.usage != daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants10999.add(new Invariant(10849, "HMasterInstance.rsFatals.usage >= daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])))-1);
			}
		});
		invariants10999.add(new Invariant(10850, "HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog > HMasterInstance.serverManager.flushedSeqIdFlusher.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.period"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10851, "HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog > HMasterInstance.serverManager.maxSkew"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.maxSkew"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10852, "HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog > HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10853, "HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog > HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10854, "HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog > HMasterInstance.snapshotManager.coordinator.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotManager.coordinator.timeoutMillis"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10855, "HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog > HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10856, "HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog != HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10857, "HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog > HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10858, "HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog > daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0]))));
			}
		});
		invariants10999.add(new Invariant(10859, "HMasterInstance.serverManager.flushedSeqIdFlusher.period < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.period"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10860, "HMasterInstance.serverManager.flushedSeqIdFlusher.period < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.period"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10861, "HMasterInstance.serverManager.flushedSeqIdFlusher.period < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.period"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10862, "HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun > HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10863, "HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun != HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10864, "HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun % daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE) == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue() % daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))) == 0);
			}
		});
		invariants10999.add(new Invariant(10865, "daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)-1 % HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])))-1 % ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue() == 0);
			}
		});
		invariants10999.add(new Invariant(10866, "HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun % daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE) == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue() % daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))) == 0);
			}
		});
		invariants10999.add(new Invariant(10867, "daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)-1 % HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])))-1 % ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue() == 0);
			}
		});
		invariants10999.add(new Invariant(10868, "HMasterInstance.serverManager.maxSkew < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.maxSkew"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10869, "HMasterInstance.serverManager.maxSkew < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.maxSkew"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10870, "HMasterInstance.serverManager.maxSkew < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.maxSkew"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10871, "HMasterInstance.snapshotCleanerChore.lastLog > HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10872, "HMasterInstance.snapshotCleanerChore.lastLog > HMasterInstance.snapshotManager.coordinator.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotManager.coordinator.timeoutMillis"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10873, "HMasterInstance.snapshotCleanerChore.lastLog > HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10874, "HMasterInstance.snapshotCleanerChore.lastLog != HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10875, "HMasterInstance.snapshotCleanerChore.lastLog > HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10876, "HMasterInstance.snapshotCleanerChore.lastLog > daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0]))));
			}
		});
		invariants10999.add(new Invariant(10877, "HMasterInstance.snapshotCleanerChore.timeOfLastRun > HMasterInstance.snapshotManager.coordinator.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotManager.coordinator.timeoutMillis"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10878, "HMasterInstance.snapshotCleanerChore.timeOfLastRun > HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10879, "HMasterInstance.snapshotCleanerChore.timeOfLastRun > HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10880, "HMasterInstance.snapshotCleanerChore.timeOfLastRun > HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10881, "HMasterInstance.snapshotCleanerChore.timeOfLastRun < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10882, "HMasterInstance.snapshotCleanerChore.timeOfLastRun > HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10883, "HMasterInstance.snapshotCleanerChore.timeOfLastRun > daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0]))));
			}
		});
		invariants10999.add(new Invariant(10884, "HMasterInstance.snapshotCleanerChore.timeOfLastRun > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants10999.add(new Invariant(10885, "HMasterInstance.snapshotCleanerChore.timeOfLastRun > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants10999.add(new Invariant(10886, "HMasterInstance.snapshotCleanerChore.timeOfLastRun > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants10999.add(new Invariant(10887, "HMasterInstance.snapshotCleanerChore.timeOfLastRun > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants10999.add(new Invariant(10888, "HMasterInstance.snapshotCleanerChore.timeOfLastRun > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants10999.add(new Invariant(10889, "HMasterInstance.snapshotCleanerChore.timeOfLastRun > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants10999.add(new Invariant(10890, "HMasterInstance.snapshotManager.coordinator.timeoutMillis < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.snapshotManager.coordinator.timeoutMillis"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10891, "HMasterInstance.tableDescriptors.cachehits >= daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])))-1);
			}
		});
		invariants10999.add(new Invariant(10892, "HMasterInstance.tableDescriptors.cachehits != daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1);
			}
		});
		invariants10999.add(new Invariant(10893, "HMasterInstance.tableDescriptors.cachehits >= daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0])))-1);
			}
		});
		invariants10999.add(new Invariant(10894, "HMasterInstance.tableDescriptors.invocations >= daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])))-1);
			}
		});
		invariants10999.add(new Invariant(10895, "HMasterInstance.tableDescriptors.invocations >= daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0])))-1);
			}
		});
		invariants10999.add(new Invariant(10896, "HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10897, "HMasterInstance.walManager.splitLogManager.lastTaskCreateTime > HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"))).intValue());
			}
		});
		invariants10999.add(new Invariant(10898, "HMasterInstance.walManager.splitLogManager.lastTaskCreateTime > daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0]))));
			}
		});
		invariants10999.add(new Invariant(10899, "HMasterInstance.walManager.splitLogManager.lastTaskCreateTime % daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE) == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue() % daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))) == 0);
			}
		});
		invariants10999.add(new Invariant(10900, "daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)-1 % HMasterInstance.walManager.splitLogManager.lastTaskCreateTime == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])))-1 % ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue() == 0);
			}
		});
		invariants10999.add(new Invariant(10901, "daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)-1 <= daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0])))-1 <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants10999.add(new Invariant(10902, "233 * HMasterInstance.activeMasterManager.activeMasterServerName.startcode - 3619888 * HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold + 15536 * HMasterInstance.rsFatals.usage - 3.9441548434564E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (233 * ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.startcode"))).intValue() - 3619888 * ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() + 15536 * ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue() - 3.9441548434564E14 == 0);
			}
		});
		invariants10999.add(new Invariant(10903, "HMasterInstance.activeMasterManager.activeMasterServerName.startcode + 15536 * HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold - 46608 * daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE) - 1.69277031908E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.startcode"))).intValue() + 15536 * ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() - 46608 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))) - 1.69277031908E12 == 0);
			}
		});
		invariants10999.add(new Invariant(10904, "HMasterInstance.activeMasterManager.activeMasterServerName.startcode + 15536 * HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold - 46608 * daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)-1 - 1.692770365688E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.startcode"))).intValue() + 15536 * ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() - 46608 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])))-1 - 1.692770365688E12 == 0);
			}
		});
		invariants10999.add(new Invariant(10905, "2500 * HMasterInstance.activeMasterManager.activeMasterServerName.startcode + 971 * HMasterInstance.csm.splitLogManagerCoordination.timeout - 116520000 * daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE) - 4.2319257977E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2500 * ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.startcode"))).intValue() + 971 * ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() - 116520000 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))) - 4.2319257977E15 == 0);
			}
		});
		invariants10999.add(new Invariant(10906, "2500 * HMasterInstance.activeMasterManager.activeMasterServerName.startcode + 971 * HMasterInstance.csm.splitLogManagerCoordination.timeout - 116520000 * daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)-1 - 4.23192591422E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2500 * ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.startcode"))).intValue() + 971 * ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() - 116520000 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])))-1 - 4.23192591422E15 == 0);
			}
		});
		invariants10999.add(new Invariant(10907, "2500 * HMasterInstance.activeMasterManager.activeMasterServerName.startcode - 971 * HMasterInstance.csm.splitLogManagerCoordination.timeout + 116520000 * daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE) - 4.2319257977E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2500 * ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.startcode"))).intValue() - 971 * ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() + 116520000 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))) - 4.2319257977E15 == 0);
			}
		});
		invariants10999.add(new Invariant(10908, "2500 * HMasterInstance.activeMasterManager.activeMasterServerName.startcode - 971 * HMasterInstance.csm.splitLogManagerCoordination.timeout + 116520000 * daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)-1 - 4.23192568118E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2500 * ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.startcode"))).intValue() - 971 * ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() + 116520000 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0])))-1 - 4.23192568118E15 == 0);
			}
		});
		invariants10999.add(new Invariant(10909, "233 * HMasterInstance.activeMasterManager.activeMasterServerName.startcode + 5429832 * HMasterInstance.procedureExecutor.activeExecutorCount + 15536 * HMasterInstance.rsFatals.usage - 3.94415495205304E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (233 * ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.startcode"))).intValue() + 5429832 * ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue() + 15536 * ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue() - 3.94415495205304E14 == 0);
			}
		});
		invariants10999.add(new Invariant(10910, "HMasterInstance.activeMasterManager.activeMasterServerName.startcode + 23304 * HMasterInstance.procedureExecutor.activeExecutorCount - 46608 * daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE) - 1.69277031908E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.startcode"))).intValue() + 23304 * ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue() - 46608 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))) - 1.69277031908E12 == 0);
			}
		});
		invariants10999.add(new Invariant(10911, "HMasterInstance.activeMasterManager.activeMasterServerName.startcode + 23304 * HMasterInstance.procedureExecutor.activeExecutorCount - 46608 * daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)-1 - 1.692770365688E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.startcode"))).intValue() + 23304 * ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue() - 46608 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])))-1 - 1.692770365688E12 == 0);
			}
		});
		invariants10999.add(new Invariant(10912, "233 * HMasterInstance.activeMasterManager.activeMasterServerName.startcode + 15536 * HMasterInstance.rsFatals.usage + 5429832 * daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE) - 3.94415495205304E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (233 * ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.startcode"))).intValue() + 15536 * ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue() + 5429832 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))) - 3.94415495205304E14 == 0);
			}
		});
		invariants10999.add(new Invariant(10913, "233 * HMasterInstance.activeMasterManager.activeMasterServerName.startcode + 15536 * HMasterInstance.rsFatals.usage + 5429832 * daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)-1 - 3.94415489775472E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (233 * ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.startcode"))).intValue() + 15536 * ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue() + 5429832 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0])))-1 - 3.94415489775472E14 == 0);
			}
		});
		invariants10999.add(new Invariant(10914, "233 * HMasterInstance.activeMasterManager.activeMasterServerName.startcode - 7768 * HMasterInstance.rsFatals.usage - 5429832 * daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE) - 3.94415478915808E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (233 * ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.startcode"))).intValue() - 7768 * ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue() - 5429832 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))) - 3.94415478915808E14 == 0);
			}
		});
		invariants10999.add(new Invariant(10915, "233 * HMasterInstance.activeMasterManager.activeMasterServerName.startcode - 7768 * HMasterInstance.rsFatals.usage - 5429832 * daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)-1 - 3.9441548434564E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (233 * ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.startcode"))).intValue() - 7768 * ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue() - 5429832 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0])))-1 - 3.9441548434564E14 == 0);
			}
		});
		invariants10999.add(new Invariant(10916, "66079 * HMasterInstance.activeMasterManager.activeMasterServerName.startcode - 46608 * HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun - 69725568 * daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE) - 3.2959930503044696E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (66079 * ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.startcode"))).intValue() - 46608 * ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue() - 69725568 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))) - 3.2959930503044696E16 == 0);
			}
		});
		invariants10999.add(new Invariant(10917, "66079 * HMasterInstance.activeMasterManager.activeMasterServerName.startcode - 46608 * HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun - 69725568 * daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)-1 - 3.2959930572770264E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (66079 * ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.startcode"))).intValue() - 46608 * ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue() - 69725568 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0])))-1 - 3.2959930572770264E16 == 0);
			}
		});
		invariants10999.add(new Invariant(10918, "HMasterInstance.activeMasterManager.activeMasterServerName.startcode - 46608 * daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE) + 23304 * daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE) - 1.69277031908E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.startcode"))).intValue() - 46608 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))) + 23304 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))) - 1.69277031908E12 == 0);
			}
		});
		invariants10999.add(new Invariant(10919, "HMasterInstance.activeMasterManager.activeMasterServerName.startcode - 46608 * daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE) + 23304 * daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1 - 1.692770295776E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.startcode"))).intValue() - 46608 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))) + 23304 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1 - 1.692770295776E12 == 0);
			}
		});
		invariants10999.add(new Invariant(10920, "HMasterInstance.activeMasterManager.activeMasterServerName.startcode - 46608 * daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE) + 23304 * daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE) - 1.69277031908E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.startcode"))).intValue() - 46608 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))) + 23304 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))) - 1.69277031908E12 == 0);
			}
		});
		invariants10999.add(new Invariant(10921, "HMasterInstance.activeMasterManager.activeMasterServerName.startcode - 46608 * daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE) + 23304 * daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)-1 - 1.692770295776E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.startcode"))).intValue() - 46608 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))) + 23304 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0])))-1 - 1.692770295776E12 == 0);
			}
		});
		invariants10999.add(new Invariant(10922, "HMasterInstance.activeMasterManager.activeMasterServerName.startcode - 46608 * daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE) + 46608 * daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE) - 1.69277031908E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.startcode"))).intValue() - 46608 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))) + 46608 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))) - 1.69277031908E12 == 0);
			}
		});
		invariants10999.add(new Invariant(10923, "HMasterInstance.activeMasterManager.activeMasterServerName.startcode - 46608 * daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE) + 46608 * daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)-1 - 1.692770272472E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.startcode"))).intValue() - 46608 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))) + 46608 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0])))-1 - 1.692770272472E12 == 0);
			}
		});
		invariants10999.add(new Invariant(10924, "HMasterInstance.activeMasterManager.activeMasterServerName.startcode - 46608 * daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)-1 + 23304 * daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE) - 1.692770365688E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.startcode"))).intValue() - 46608 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])))-1 + 23304 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))) - 1.692770365688E12 == 0);
			}
		});
		invariants10999.add(new Invariant(10925, "HMasterInstance.activeMasterManager.activeMasterServerName.startcode - 46608 * daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)-1 + 23304 * daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1 - 1.692770342384E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.startcode"))).intValue() - 46608 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])))-1 + 23304 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1 - 1.692770342384E12 == 0);
			}
		});
		invariants10999.add(new Invariant(10926, "HMasterInstance.activeMasterManager.activeMasterServerName.startcode - 46608 * daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)-1 + 23304 * daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE) - 1.692770365688E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.startcode"))).intValue() - 46608 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])))-1 + 23304 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))) - 1.692770365688E12 == 0);
			}
		});
		invariants10999.add(new Invariant(10927, "HMasterInstance.activeMasterManager.activeMasterServerName.startcode - 46608 * daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)-1 + 23304 * daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)-1 - 1.692770342384E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.startcode"))).intValue() - 46608 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])))-1 + 23304 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0])))-1 - 1.692770342384E12 == 0);
			}
		});
		invariants10999.add(new Invariant(10928, "HMasterInstance.activeMasterManager.activeMasterServerName.startcode - 46608 * daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)-1 + 46608 * daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE) - 1.692770365688E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.startcode"))).intValue() - 46608 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])))-1 + 46608 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))) - 1.692770365688E12 == 0);
			}
		});
		invariants10999.add(new Invariant(10929, "HMasterInstance.activeMasterManager.activeMasterServerName.startcode - 46608 * daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)-1 + 46608 * daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)-1 - 1.69277031908E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.startcode"))).intValue() - 46608 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])))-1 + 46608 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0])))-1 - 1.69277031908E12 == 0);
			}
		});
		invariants10999.add(new Invariant(10930, "699 * HMasterInstance.activeMasterManager.master.masterActiveTime - 10627363 * HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold + 45611 * HMasterInstance.rsFatals.usage - 1.183246454382495E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (699 * ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterActiveTime"))).intValue() - 10627363 * ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() + 45611 * ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue() - 1.183246454382495E15 == 0);
			}
		});
		invariants10999.add(new Invariant(10931, "3 * HMasterInstance.activeMasterManager.master.masterActiveTime + 45611 * HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold - 136833 * daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE) - 5.078310963015E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (3 * ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterActiveTime"))).intValue() + 45611 * ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() - 136833 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))) - 5.078310963015E12 == 0);
			}
		});
		invariants10999.add(new Invariant(10932, "3 * HMasterInstance.activeMasterManager.master.masterActiveTime + 45611 * HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold - 136833 * daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)-1 - 5.078311099848E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (3 * ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterActiveTime"))).intValue() + 45611 * ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() - 136833 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])))-1 - 5.078311099848E12 == 0);
			}
		});
		invariants10999.add(new Invariant(10933, "120000 * HMasterInstance.activeMasterManager.master.masterActiveTime + 45611 * HMasterInstance.csm.splitLogManagerCoordination.timeout - 5.47332E9 * daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE) - 2.031324385206E17 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (120000 * ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterActiveTime"))).intValue() + 45611 * ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() - 5.47332E9 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))) - 2.031324385206E17 == 0);
			}
		});
		invariants10999.add(new Invariant(10934, "120000 * HMasterInstance.activeMasterManager.master.masterActiveTime + 45611 * HMasterInstance.csm.splitLogManagerCoordination.timeout - 5.47332E9 * daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)-1 - 2.0313244399392E17 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (120000 * ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterActiveTime"))).intValue() + 45611 * ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() - 5.47332E9 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])))-1 - 2.0313244399392E17 == 0);
			}
		});
		invariants10999.add(new Invariant(10935, "120000 * HMasterInstance.activeMasterManager.master.masterActiveTime - 45611 * HMasterInstance.csm.splitLogManagerCoordination.timeout + 5.47332E9 * daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE) - 2.031324385206E17 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (120000 * ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterActiveTime"))).intValue() - 45611 * ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() + 5.47332E9 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))) - 2.031324385206E17 == 0);
			}
		});
		invariants10999.add(new Invariant(10936, "120000 * HMasterInstance.activeMasterManager.master.masterActiveTime - 45611 * HMasterInstance.csm.splitLogManagerCoordination.timeout + 5.47332E9 * daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)-1 - 2.0313243304728E17 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (120000 * ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterActiveTime"))).intValue() - 45611 * ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() + 5.47332E9 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0])))-1 - 2.0313243304728E17 == 0);
			}
		});
		invariants10999.add(new Invariant(10937, "1398 * HMasterInstance.activeMasterManager.master.masterActiveTime + 31882089 * HMasterInstance.procedureExecutor.activeExecutorCount + 91222 * HMasterInstance.rsFatals.usage - 2.366492972529168E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (1398 * ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterActiveTime"))).intValue() + 31882089 * ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue() + 91222 * ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue() - 2.366492972529168E15 == 0);
			}
		});
		invariants10999.add(new Invariant(10938, "2 * HMasterInstance.activeMasterManager.master.masterActiveTime + 45611 * HMasterInstance.procedureExecutor.activeExecutorCount - 91222 * daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE) - 3.38554064201E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2 * ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterActiveTime"))).intValue() + 45611 * ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue() - 91222 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))) - 3.38554064201E12 == 0);
			}
		});
		invariants10999.add(new Invariant(10939, "2 * HMasterInstance.activeMasterManager.master.masterActiveTime + 45611 * HMasterInstance.procedureExecutor.activeExecutorCount - 91222 * daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)-1 - 3.385540733232E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2 * ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterActiveTime"))).intValue() + 45611 * ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue() - 91222 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])))-1 - 3.385540733232E12 == 0);
			}
		});
		invariants10999.add(new Invariant(10940, "1398 * HMasterInstance.activeMasterManager.master.masterActiveTime + 91222 * HMasterInstance.rsFatals.usage + 31882089 * daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE) - 2.366492972529168E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (1398 * ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterActiveTime"))).intValue() + 91222 * ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue() + 31882089 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))) - 2.366492972529168E15 == 0);
			}
		});
		invariants10999.add(new Invariant(10941, "1398 * HMasterInstance.activeMasterManager.master.masterActiveTime + 91222 * HMasterInstance.rsFatals.usage + 31882089 * daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)-1 - 2.366492940647079E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (1398 * ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterActiveTime"))).intValue() + 91222 * ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue() + 31882089 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0])))-1 - 2.366492940647079E15 == 0);
			}
		});
		invariants10999.add(new Invariant(10942, "1398 * HMasterInstance.activeMasterManager.master.masterActiveTime - 45611 * HMasterInstance.rsFatals.usage - 31882089 * daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE) - 2.366492876882901E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (1398 * ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterActiveTime"))).intValue() - 45611 * ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue() - 31882089 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))) - 2.366492876882901E15 == 0);
			}
		});
		invariants10999.add(new Invariant(10943, "1398 * HMasterInstance.activeMasterManager.master.masterActiveTime - 45611 * HMasterInstance.rsFatals.usage - 31882089 * daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)-1 - 2.36649290876499E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (1398 * ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterActiveTime"))).intValue() - 45611 * ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue() - 31882089 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0])))-1 - 2.36649290876499E15 == 0);
			}
		});
		invariants10999.add(new Invariant(10944, "3887 * HMasterInstance.activeMasterManager.master.masterActiveTime - 2683 * HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun - 4013768 * daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE) - 2.038095449793711E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (3887 * ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterActiveTime"))).intValue() - 2683 * ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue() - 4013768 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))) - 2.038095449793711E15 == 0);
			}
		});
		invariants10999.add(new Invariant(10945, "3887 * HMasterInstance.activeMasterManager.master.masterActiveTime - 2683 * HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun - 4013768 * daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)-1 - 2.038095453807479E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (3887 * ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterActiveTime"))).intValue() - 2683 * ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue() - 4013768 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0])))-1 - 2.038095453807479E15 == 0);
			}
		});
		invariants10999.add(new Invariant(10946, "2 * HMasterInstance.activeMasterManager.master.masterActiveTime - 91222 * daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE) + 45611 * daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE) - 3.38554064201E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2 * ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterActiveTime"))).intValue() - 91222 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))) + 45611 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))) - 3.38554064201E12 == 0);
			}
		});
		invariants10999.add(new Invariant(10947, "2 * HMasterInstance.activeMasterManager.master.masterActiveTime - 91222 * daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE) + 45611 * daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1 - 3.385540596399E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2 * ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterActiveTime"))).intValue() - 91222 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))) + 45611 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1 - 3.385540596399E12 == 0);
			}
		});
		invariants10999.add(new Invariant(10948, "2 * HMasterInstance.activeMasterManager.master.masterActiveTime - 91222 * daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE) + 45611 * daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE) - 3.38554064201E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2 * ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterActiveTime"))).intValue() - 91222 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))) + 45611 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))) - 3.38554064201E12 == 0);
			}
		});
		invariants10999.add(new Invariant(10949, "2 * HMasterInstance.activeMasterManager.master.masterActiveTime - 91222 * daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE) + 45611 * daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)-1 - 3.385540596399E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2 * ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterActiveTime"))).intValue() - 91222 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))) + 45611 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0])))-1 - 3.385540596399E12 == 0);
			}
		});
		invariants10999.add(new Invariant(10950, "HMasterInstance.activeMasterManager.master.masterActiveTime - 45611 * daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE) + 45611 * daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE) - 1.692770321005E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterActiveTime"))).intValue() - 45611 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))) + 45611 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))) - 1.692770321005E12 == 0);
			}
		});
		invariants10999.add(new Invariant(10951, "HMasterInstance.activeMasterManager.master.masterActiveTime - 45611 * daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE) + 45611 * daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)-1 - 1.692770275394E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterActiveTime"))).intValue() - 45611 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))) + 45611 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0])))-1 - 1.692770275394E12 == 0);
			}
		});
		invariants10999.add(new Invariant(10952, "2 * HMasterInstance.activeMasterManager.master.masterActiveTime - 91222 * daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)-1 + 45611 * daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE) - 3.385540733232E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2 * ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterActiveTime"))).intValue() - 91222 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])))-1 + 45611 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))) - 3.385540733232E12 == 0);
			}
		});
		invariants10999.add(new Invariant(10953, "2 * HMasterInstance.activeMasterManager.master.masterActiveTime - 91222 * daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)-1 + 45611 * daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1 - 3.385540687621E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2 * ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterActiveTime"))).intValue() - 91222 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])))-1 + 45611 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1 - 3.385540687621E12 == 0);
			}
		});
		invariants10999.add(new Invariant(10954, "2 * HMasterInstance.activeMasterManager.master.masterActiveTime - 91222 * daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)-1 + 45611 * daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE) - 3.385540733232E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2 * ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterActiveTime"))).intValue() - 91222 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])))-1 + 45611 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))) - 3.385540733232E12 == 0);
			}
		});
		invariants10999.add(new Invariant(10955, "2 * HMasterInstance.activeMasterManager.master.masterActiveTime - 91222 * daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)-1 + 45611 * daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)-1 - 3.385540687621E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2 * ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterActiveTime"))).intValue() - 91222 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])))-1 + 45611 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0])))-1 - 3.385540687621E12 == 0);
			}
		});
		invariants10999.add(new Invariant(10956, "HMasterInstance.activeMasterManager.master.masterActiveTime - 45611 * daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)-1 + 45611 * daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE) - 1.692770366616E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterActiveTime"))).intValue() - 45611 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])))-1 + 45611 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))) - 1.692770366616E12 == 0);
			}
		});
		invariants10999.add(new Invariant(10957, "HMasterInstance.activeMasterManager.master.masterActiveTime - 45611 * daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)-1 + 45611 * daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)-1 - 1.692770321005E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterActiveTime"))).intValue() - 45611 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])))-1 + 45611 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0])))-1 - 1.692770321005E12 == 0);
			}
		});
		invariants10999.add(new Invariant(10958, "123194 * HMasterInstance.assignmentManager.deadMetricChore.lastUpdate - 160551 * HMasterInstance.balancerChore.timeOfLastRun + 2.328797779E9 * daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE) + 6.3236816460218352E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (123194 * ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() - 160551 * ((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeOfLastRun"))).intValue() + 2.328797779E9 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))) + 6.3236816460218352E16 == 0);
			}
		});
		invariants10999.add(new Invariant(10959, "123194 * HMasterInstance.assignmentManager.deadMetricChore.lastUpdate - 160551 * HMasterInstance.balancerChore.timeOfLastRun + 2.328797779E9 * daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1 + 6.3236818789016128E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (123194 * ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() - 160551 * ((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeOfLastRun"))).intValue() + 2.328797779E9 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1 + 6.3236818789016128E16 == 0);
			}
		});
		invariants10999.add(new Invariant(10960, "123194 * HMasterInstance.assignmentManager.deadMetricChore.lastUpdate - 160551 * HMasterInstance.balancerChore.timeOfLastRun + 2.328797779E9 * daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE) + 6.3236816460218352E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (123194 * ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() - 160551 * ((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeOfLastRun"))).intValue() + 2.328797779E9 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))) + 6.3236816460218352E16 == 0);
			}
		});
		invariants10999.add(new Invariant(10961, "123194 * HMasterInstance.assignmentManager.deadMetricChore.lastUpdate - 160551 * HMasterInstance.balancerChore.timeOfLastRun + 2.328797779E9 * daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)-1 + 6.3236818789016128E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (123194 * ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() - 160551 * ((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeOfLastRun"))).intValue() + 2.328797779E9 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0])))-1 + 6.3236818789016128E16 == 0);
			}
		});
		invariants10999.add(new Invariant(10962, "3264641 * HMasterInstance.assignmentManager.deadMetricChore.lastUpdate - 1437980 * HMasterInstance.balancerChore.timeOfLastRun + 2.328797779E9 * daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE) - 3.0921176620169175E18 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (3264641 * ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() - 1437980 * ((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeOfLastRun"))).intValue() + 2.328797779E9 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))) - 3.0921176620169175E18 == 0);
			}
		});
		invariants10999.add(new Invariant(10963, "3264641 * HMasterInstance.assignmentManager.deadMetricChore.lastUpdate - 1437980 * HMasterInstance.balancerChore.timeOfLastRun + 2.328797779E9 * daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)-1 - 3.0921176596881198E18 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (3264641 * ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() - 1437980 * ((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeOfLastRun"))).intValue() + 2.328797779E9 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0])))-1 - 3.0921176596881198E18 == 0);
			}
		});
		invariants10999.add(new Invariant(10964, "41060 * HMasterInstance.assignmentManager.deadMetricChore.lastUpdate - 53517 * HMasterInstance.catalogJanitorChore.lastReport.now + 776177710 * daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE) + 2.1086838415537572E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (41060 * ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() - 53517 * ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.now"))).intValue() + 776177710 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))) + 2.1086838415537572E16 == 0);
			}
		});
		invariants10999.add(new Invariant(10965, "41060 * HMasterInstance.assignmentManager.deadMetricChore.lastUpdate - 53517 * HMasterInstance.catalogJanitorChore.lastReport.now + 776177710 * daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1 + 2.1086839191715284E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (41060 * ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() - 53517 * ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.now"))).intValue() + 776177710 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1 + 2.1086839191715284E16 == 0);
			}
		});
		invariants10999.add(new Invariant(10966, "41060 * HMasterInstance.assignmentManager.deadMetricChore.lastUpdate - 53517 * HMasterInstance.catalogJanitorChore.lastReport.now + 776177710 * daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE) + 2.1086838415537572E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (41060 * ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() - 53517 * ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.now"))).intValue() + 776177710 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))) + 2.1086838415537572E16 == 0);
			}
		});
		invariants10999.add(new Invariant(10967, "41060 * HMasterInstance.assignmentManager.deadMetricChore.lastUpdate - 53517 * HMasterInstance.catalogJanitorChore.lastReport.now + 776177710 * daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)-1 + 2.1086839191715284E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (41060 * ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() - 53517 * ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.now"))).intValue() + 776177710 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0])))-1 + 2.1086839191715284E16 == 0);
			}
		});
		invariants10999.add(new Invariant(10968, "326427 * HMasterInstance.assignmentManager.deadMetricChore.lastUpdate - 143798 * HMasterInstance.catalogJanitorChore.lastReport.now + 232853313 * daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE) - 3.0914896442E17 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (326427 * ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() - 143798 * ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.now"))).intValue() + 232853313 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))) - 3.0914896442E17 == 0);
			}
		});
		invariants10999.add(new Invariant(10969, "326427 * HMasterInstance.assignmentManager.deadMetricChore.lastUpdate - 143798 * HMasterInstance.catalogJanitorChore.lastReport.now + 232853313 * daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)-1 - 3.0914896418714662E17 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (326427 * ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() - 143798 * ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.now"))).intValue() + 232853313 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0])))-1 - 3.0914896418714662E17 == 0);
			}
		});
		invariants10999.add(new Invariant(10970, "41062 * HMasterInstance.assignmentManager.deadMetricChore.lastUpdate - 53517 * HMasterInstance.catalogJanitorChore.timeOfLastRun + 776215517 * daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE) + 2.1083452874647028E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (41062 * ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() - 53517 * ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.timeOfLastRun"))).intValue() + 776215517 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))) + 2.1083452874647028E16 == 0);
			}
		});
		invariants10999.add(new Invariant(10971, "41062 * HMasterInstance.assignmentManager.deadMetricChore.lastUpdate - 53517 * HMasterInstance.catalogJanitorChore.timeOfLastRun + 776215517 * daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1 + 2.1083453650862544E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (41062 * ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() - 53517 * ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.timeOfLastRun"))).intValue() + 776215517 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1 + 2.1083453650862544E16 == 0);
			}
		});
		invariants10999.add(new Invariant(10972, "41062 * HMasterInstance.assignmentManager.deadMetricChore.lastUpdate - 53517 * HMasterInstance.catalogJanitorChore.timeOfLastRun + 776215517 * daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE) + 2.1083452874647028E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (41062 * ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() - 53517 * ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.timeOfLastRun"))).intValue() + 776215517 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))) + 2.1083452874647028E16 == 0);
			}
		});
		invariants10999.add(new Invariant(10973, "41062 * HMasterInstance.assignmentManager.deadMetricChore.lastUpdate - 53517 * HMasterInstance.catalogJanitorChore.timeOfLastRun + 776215517 * daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)-1 + 2.1083453650862544E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (41062 * ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() - 53517 * ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.timeOfLastRun"))).intValue() + 776215517 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0])))-1 + 2.1083453650862544E16 == 0);
			}
		});
		invariants10999.add(new Invariant(10974, "3264429 * HMasterInstance.assignmentManager.deadMetricChore.lastUpdate - 1437980 * HMasterInstance.catalogJanitorChore.timeOfLastRun + 2.328646551E9 * daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE) - 3.0917587946923484E18 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (3264429 * ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() - 1437980 * ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.timeOfLastRun"))).intValue() + 2.328646551E9 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))) - 3.0917587946923484E18 == 0);
			}
		});
		invariants10999.add(new Invariant(10975, "3264429 * HMasterInstance.assignmentManager.deadMetricChore.lastUpdate - 1437980 * HMasterInstance.catalogJanitorChore.timeOfLastRun + 2.328646551E9 * daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)-1 - 3.0917587923637018E18 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (3264429 * ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() - 1437980 * ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.timeOfLastRun"))).intValue() + 2.328646551E9 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0])))-1 - 3.0917587923637018E18 == 0);
			}
		});
		invariants10999.add(new Invariant(10976, "123184 * HMasterInstance.assignmentManager.deadMetricChore.lastUpdate - 160551 * HMasterInstance.catalogJanitorChore.timeOfThisRun + 2.328608744E9 * daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE) + 6.3253744164831632E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (123184 * ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() - 160551 * ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.timeOfThisRun"))).intValue() + 2.328608744E9 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))) + 6.3253744164831632E16 == 0);
			}
		});
		invariants10999.add(new Invariant(10977, "123184 * HMasterInstance.assignmentManager.deadMetricChore.lastUpdate - 160551 * HMasterInstance.catalogJanitorChore.timeOfThisRun + 2.328608744E9 * daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1 + 6.3253746493440376E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (123184 * ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() - 160551 * ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.timeOfThisRun"))).intValue() + 2.328608744E9 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1 + 6.3253746493440376E16 == 0);
			}
		});
		invariants10999.add(new Invariant(10978, "123184 * HMasterInstance.assignmentManager.deadMetricChore.lastUpdate - 160551 * HMasterInstance.catalogJanitorChore.timeOfThisRun + 2.328608744E9 * daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE) + 6.3253744164831632E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (123184 * ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() - 160551 * ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.timeOfThisRun"))).intValue() + 2.328608744E9 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))) + 6.3253744164831632E16 == 0);
			}
		});
		invariants10999.add(new Invariant(10979, "123184 * HMasterInstance.assignmentManager.deadMetricChore.lastUpdate - 160551 * HMasterInstance.catalogJanitorChore.timeOfThisRun + 2.328608744E9 * daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)-1 + 6.3253746493440376E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (123184 * ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() - 160551 * ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.timeOfThisRun"))).intValue() + 2.328608744E9 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0])))-1 + 6.3253746493440376E16 == 0);
			}
		});
		invariants10999.add(new Invariant(10980, "816094 * HMasterInstance.assignmentManager.deadMetricChore.lastUpdate - 359495 * HMasterInstance.catalogJanitorChore.timeOfThisRun + 582152186 * daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE) - 7.7291726946539136E17 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (816094 * ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() - 359495 * ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.timeOfThisRun"))).intValue() + 582152186 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))) - 7.7291726946539136E17 == 0);
			}
		});
		invariants10999.add(new Invariant(10981, "816094 * HMasterInstance.assignmentManager.deadMetricChore.lastUpdate - 359495 * HMasterInstance.catalogJanitorChore.timeOfThisRun + 582152186 * daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)-1 - 7.7291726888323917E17 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (816094 * ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() - 359495 * ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.timeOfThisRun"))).intValue() + 582152186 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0])))-1 - 7.7291726888323917E17 == 0);
			}
		});
		invariants10999.add(new Invariant(10982, "123206 * HMasterInstance.assignmentManager.deadMetricChore.lastUpdate - 160551 * HMasterInstance.hbckChore.timeOfThisRun + 2.329024621E9 * daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE) + 6.3216503218728304E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (123206 * ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() - 160551 * ((Number)(InvariantChecker.getValue("HMasterInstance.hbckChore.timeOfThisRun"))).intValue() + 2.329024621E9 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))) + 6.3216503218728304E16 == 0);
			}
		});
		invariants10999.add(new Invariant(10983, "123206 * HMasterInstance.assignmentManager.deadMetricChore.lastUpdate - 160551 * HMasterInstance.hbckChore.timeOfThisRun + 2.329024621E9 * daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1 + 6.3216505547752928E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (123206 * ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() - 160551 * ((Number)(InvariantChecker.getValue("HMasterInstance.hbckChore.timeOfThisRun"))).intValue() + 2.329024621E9 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1 + 6.3216505547752928E16 == 0);
			}
		});
		invariants10999.add(new Invariant(10984, "123206 * HMasterInstance.assignmentManager.deadMetricChore.lastUpdate - 160551 * HMasterInstance.hbckChore.timeOfThisRun + 2.329024621E9 * daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE) + 6.3216503218728304E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (123206 * ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() - 160551 * ((Number)(InvariantChecker.getValue("HMasterInstance.hbckChore.timeOfThisRun"))).intValue() + 2.329024621E9 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))) + 6.3216503218728304E16 == 0);
			}
		});
		invariants10999.add(new Invariant(10985, "123206 * HMasterInstance.assignmentManager.deadMetricChore.lastUpdate - 160551 * HMasterInstance.hbckChore.timeOfThisRun + 2.329024621E9 * daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)-1 + 6.3216505547752928E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (123206 * ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() - 160551 * ((Number)(InvariantChecker.getValue("HMasterInstance.hbckChore.timeOfThisRun"))).intValue() + 2.329024621E9 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0])))-1 + 6.3216505547752928E16 == 0);
			}
		});
		invariants10999.add(new Invariant(10986, "3264959 * HMasterInstance.assignmentManager.deadMetricChore.lastUpdate - 1437980 * HMasterInstance.hbckChore.timeOfThisRun + 2.329024621E9 * daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE) - 3.092655962967103E18 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (3264959 * ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() - 1437980 * ((Number)(InvariantChecker.getValue("HMasterInstance.hbckChore.timeOfThisRun"))).intValue() + 2.329024621E9 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))) - 3.092655962967103E18 == 0);
			}
		});
		invariants10999.add(new Invariant(10987, "3264959 * HMasterInstance.assignmentManager.deadMetricChore.lastUpdate - 1437980 * HMasterInstance.hbckChore.timeOfThisRun + 2.329024621E9 * daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)-1 - 3.0926559606380785E18 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (3264959 * ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() - 1437980 * ((Number)(InvariantChecker.getValue("HMasterInstance.hbckChore.timeOfThisRun"))).intValue() + 2.329024621E9 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0])))-1 - 3.0926559606380785E18 == 0);
			}
		});
		invariants10999.add(new Invariant(10988, "123338 * HMasterInstance.assignmentManager.deadMetricChore.lastUpdate - 160551 * HMasterInstance.mobFileCleanerChore.timeOfThisRun + 2.331519883E9 * daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE) + 6.299305754242948E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (123338 * ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() - 160551 * ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() + 2.331519883E9 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))) + 6.299305754242948E16 == 0);
			}
		});
		invariants10999.add(new Invariant(10989, "123338 * HMasterInstance.assignmentManager.deadMetricChore.lastUpdate - 160551 * HMasterInstance.mobFileCleanerChore.timeOfThisRun + 2.331519883E9 * daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1 + 6.299305987394936E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (123338 * ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() - 160551 * ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() + 2.331519883E9 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1 + 6.299305987394936E16 == 0);
			}
		});
		invariants10999.add(new Invariant(10990, "123338 * HMasterInstance.assignmentManager.deadMetricChore.lastUpdate - 160551 * HMasterInstance.mobFileCleanerChore.timeOfThisRun + 2.331519883E9 * daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE) + 6.299305754242948E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (123338 * ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() - 160551 * ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() + 2.331519883E9 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))) + 6.299305754242948E16 == 0);
			}
		});
		invariants10999.add(new Invariant(10991, "123338 * HMasterInstance.assignmentManager.deadMetricChore.lastUpdate - 160551 * HMasterInstance.mobFileCleanerChore.timeOfThisRun + 2.331519883E9 * daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)-1 + 6.299305987394936E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (123338 * ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() - 160551 * ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() + 2.331519883E9 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0])))-1 + 6.299305987394936E16 == 0);
			}
		});
		invariants10999.add(new Invariant(10992, "3268457 * HMasterInstance.assignmentManager.deadMetricChore.lastUpdate - 1437980 * HMasterInstance.mobFileCleanerChore.timeOfThisRun + 2.331519883E9 * daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE) - 3.0985772735974518E18 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (3268457 * ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() - 1437980 * ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() + 2.331519883E9 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))) - 3.0985772735974518E18 == 0);
			}
		});
		invariants10999.add(new Invariant(10993, "3268457 * HMasterInstance.assignmentManager.deadMetricChore.lastUpdate - 1437980 * HMasterInstance.mobFileCleanerChore.timeOfThisRun + 2.331519883E9 * daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)-1 - 3.0985772712659318E18 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (3268457 * ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() - 1437980 * ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() + 2.331519883E9 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0])))-1 - 3.0985772712659318E18 == 0);
			}
		});
		invariants10999.add(new Invariant(10994, "13704 * HMasterInstance.assignmentManager.deadMetricChore.lastUpdate - 17839 * HMasterInstance.mobFileCompactionChore.timeOfThisRun + 259053564 * daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE) + 6.999604787035558E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (13704 * ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() - 17839 * ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() + 259053564 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))) + 6.999604787035558E15 == 0);
			}
		});
		invariants10999.add(new Invariant(10995, "13704 * HMasterInstance.assignmentManager.deadMetricChore.lastUpdate - 17839 * HMasterInstance.mobFileCompactionChore.timeOfThisRun + 259053564 * daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1 + 6.999605046089122E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (13704 * ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() - 17839 * ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() + 259053564 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1 + 6.999605046089122E15 == 0);
			}
		});
		invariants10999.add(new Invariant(10996, "13704 * HMasterInstance.assignmentManager.deadMetricChore.lastUpdate - 17839 * HMasterInstance.mobFileCompactionChore.timeOfThisRun + 259053564 * daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE) + 6.999604787035558E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (13704 * ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() - 17839 * ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() + 259053564 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))) + 6.999604787035558E15 == 0);
			}
		});
		invariants10999.add(new Invariant(10997, "13704 * HMasterInstance.assignmentManager.deadMetricChore.lastUpdate - 17839 * HMasterInstance.mobFileCompactionChore.timeOfThisRun + 259053564 * daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)-1 + 6.999605046089122E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (13704 * ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() - 17839 * ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() + 259053564 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0])))-1 + 6.999605046089122E15 == 0);
			}
		});
		invariants10999.add(new Invariant(10998, "817101 * HMasterInstance.assignmentManager.deadMetricChore.lastUpdate - 359495 * HMasterInstance.mobFileCompactionChore.timeOfThisRun + 582870519 * daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE) - 7.7462188919166733E17 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (817101 * ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() - 359495 * ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() + 582870519 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))) - 7.7462188919166733E17 == 0);
			}
		});
		invariants10999.add(new Invariant(10999, "817101 * HMasterInstance.assignmentManager.deadMetricChore.lastUpdate - 359495 * HMasterInstance.mobFileCompactionChore.timeOfThisRun + 582870519 * daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)-1 - 7.746218886087968E17 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (817101 * ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() - 359495 * ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() + 582870519 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0])))-1 - 7.746218886087968E17 == 0);
			}
		});
	}
	static {
installInv10999();	}
}
