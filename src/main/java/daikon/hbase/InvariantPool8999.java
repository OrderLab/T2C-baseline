package daikon.hbase;
import daikon.*;
import java.util.Set;
import java.util.ArrayList;
import java.util.List;
//this class is automatically generated by our scripts
public class InvariantPool8999{

	public static List<Invariant> invariants8999 = new ArrayList<>();

	public static void installInv8999(){
		invariants8999.add(new Invariant(8000, "HMasterInstance.hfileCleaner.FIVE_MINUTES_IN_NANOS < HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8001, "HMasterInstance.hfileCleaner.FIVE_MINUTES_IN_NANOS > HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8002, "HMasterInstance.hfileCleaner.FIVE_MINUTES_IN_NANOS > HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8003, "HMasterInstance.hfileCleaner.FIVE_MINUTES_IN_NANOS > HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8004, "HMasterInstance.hfileCleaner.FIVE_MINUTES_IN_NANOS < HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8005, "HMasterInstance.hfileCleaner.FIVE_MINUTES_IN_NANOS < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8006, "HMasterInstance.hfileCleaner.FIVE_MINUTES_IN_NANOS < HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8007, "HMasterInstance.hfileCleaner.FIVE_MINUTES_IN_NANOS < HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8008, "HMasterInstance.hfileCleaner.FIVE_MINUTES_IN_NANOS > HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8009, "HMasterInstance.hfileCleaner.FIVE_MINUTES_IN_NANOS < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8010, "HMasterInstance.hfileCleaner.FIVE_MINUTES_IN_NANOS > HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8011, "HMasterInstance.hfileCleaner.FIVE_MINUTES_IN_NANOS < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8012, "HMasterInstance.hfileCleaner.FIVE_MINUTES_IN_NANOS < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8013, "HMasterInstance.hfileCleaner.FIVE_MINUTES_IN_NANOS < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8014, "HMasterInstance.hfileCleaner.FIVE_MINUTES_IN_NANOS < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8015, "HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID < HMasterInstance.hfileCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8016, "HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID < HMasterInstance.hfileCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8017, "HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID < HMasterInstance.logCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8018, "HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID < HMasterInstance.logCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8019, "HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID < HMasterInstance.logCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8020, "HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID < HMasterInstance.masterFinishedInitializationTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8021, "HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID < HMasterInstance.mobFileCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8022, "HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID < HMasterInstance.mobFileCleanerChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8023, "HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID < HMasterInstance.mobFileCompactionChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8024, "HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID < HMasterInstance.mobFileCompactionChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8025, "HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID < HMasterInstance.normalizerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8026, "HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID < HMasterInstance.normalizerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8027, "HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID < HMasterInstance.procedureStore.cleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8028, "HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID < HMasterInstance.procedureStore.cleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8029, "HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID < HMasterInstance.procedureStore.cleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8030, "HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID < HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8031, "HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID < HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8032, "HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID < HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8033, "HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID < HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8034, "HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID < HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8035, "HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8036, "HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID < HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8037, "HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID < HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8038, "HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID < HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8039, "HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8040, "HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID < HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8041, "HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8042, "HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8043, "HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8044, "HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8045, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.hfileCleaner.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.period"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8046, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.hfileCleaner.pool.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.pool.size"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8047, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.hfileCleaner.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8048, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.hfileCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8049, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.logCleaner.AVAIL_PROCESSORS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.AVAIL_PROCESSORS"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8050, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8051, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8052, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.logCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8053, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.logCleaner.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.period"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8054, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.logCleaner.pool.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.pool.size"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8055, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.logCleaner.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8056, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.logCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8057, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.logCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8058, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.masterFinishedInitializationTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8059, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8060, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8061, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8062, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8063, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.mobFileCleanerChore.initialDelay"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.initialDelay"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8064, "HMasterInstance.hfileCleaner.lastLog < HMasterInstance.mobFileCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8065, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8066, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.mobFileCleanerChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8067, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.mobFileCompactionChore.initialDelay"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.initialDelay"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8068, "HMasterInstance.hfileCleaner.lastLog < HMasterInstance.mobFileCompactionChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8069, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.mobFileCompactionChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8070, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.nonceManager.conflictWaitIterationMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.conflictWaitIterationMs"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8071, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.nonceManager.deleteNonceGracePeriod"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.deleteNonceGracePeriod"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8072, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8073, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.normalizer.masterRpcServices.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.rpcTimeout"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8074, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.normalizer.minRegionCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.minRegionCount"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8075, "HMasterInstance.hfileCleaner.lastLog < HMasterInstance.normalizerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8076, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.normalizerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8077, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.procedureExecutor.corePoolSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.corePoolSize"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8078, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.procedureExecutor.maxPoolSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.maxPoolSize"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8079, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.procedureExecutor.store.REGION_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.REGION_ID"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8080, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.procedureStore.REGION_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.REGION_ID"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8081, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.procedureStore.TABLE_NAME.hashCode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.TABLE_NAME.hashCode"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8082, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8083, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8084, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.procedureStore.cleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8085, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.procedureStore.cleaner.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.period"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8086, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.procedureStore.cleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8087, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.procedureStore.cleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8088, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.procedureStore.cleanerPool.cleanerLatch"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8089, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.procedureStore.cleanerPool.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.size"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8090, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8091, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.procedureStore.numThreads"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.numThreads"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8092, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.procedureStore.region.DEEP_OVERHEAD"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.DEEP_OVERHEAD"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8093, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.procedureStore.region.FIXED_OVERHEAD"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.FIXED_OVERHEAD"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8094, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8095, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8096, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.procedureStore.region.blockingMemStoreSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.blockingMemStoreSize"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8097, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8098, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8099, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8100, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.procedureStore.region.majorInProgress"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8101, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.procedureStore.region.maxBusyWaitDuration"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitDuration"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8102, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8103, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8104, "HMasterInstance.hfileCleaner.lastLog < HMasterInstance.procedureStore.region.timestampSlop"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.timestampSlop"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8105, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.procedureStore.walFactory.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walFactory.timeoutMillis"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8106, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8107, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8108, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.procedureStore.walRoller.threadWakeFrequency"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.threadWakeFrequency"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8109, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.regionServerAccounting.globalMemStoreLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimit"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8110, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8111, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8112, "HMasterInstance.hfileCleaner.lastLog < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8113, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8114, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8115, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8116, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8117, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8118, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.rpcClient.connectTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connectTO"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8119, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.rpcClient.connections.poolMaxSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8120, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.rpcClient.failedServers.latestExpiry"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8121, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.rpcClient.failedServers.recheckServersTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.recheckServersTimeout"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8122, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.rpcClient.failureSleep"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failureSleep"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8123, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.rpcClient.maxConcurrentCallsPerServer"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.maxConcurrentCallsPerServer"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8124, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.rpcClient.minIdleTimeBeforeClose"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.minIdleTimeBeforeClose"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8125, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.rpcClient.readTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.readTO"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8126, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.rpcClient.writeTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.writeTO"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8127, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.rpcServices.maxScannerResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.maxScannerResultSize"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8128, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8129, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.rpcServices.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcTimeout"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8130, "HMasterInstance.hfileCleaner.lastLog < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8131, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.rsFatals.maxSizeBytes"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.maxSizeBytes"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8132, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8133, "HMasterInstance.hfileCleaner.lastLog < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8134, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.serverManager.flushedSeqIdFlusher.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.period"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8135, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.serverManager.maxSkew"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.maxSkew"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8136, "HMasterInstance.hfileCleaner.lastLog < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8137, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8138, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.snapshotManager.coordinator.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotManager.coordinator.timeoutMillis"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8139, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8140, "HMasterInstance.hfileCleaner.lastLog != HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8141, "HMasterInstance.hfileCleaner.lastLog > HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8142, "HMasterInstance.hfileCleaner.lastLog > daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0]))));
			}
		});
		invariants8999.add(new Invariant(8143, "HMasterInstance.hfileCleaner.period < HMasterInstance.hfileCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.period"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8144, "HMasterInstance.hfileCleaner.period < HMasterInstance.logCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.period"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8145, "HMasterInstance.hfileCleaner.period < HMasterInstance.logCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.period"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8146, "HMasterInstance.hfileCleaner.period < HMasterInstance.logCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.period"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8147, "HMasterInstance.hfileCleaner.period != HMasterInstance.masterFinishedInitializationTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.period"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8148, "HMasterInstance.hfileCleaner.period < HMasterInstance.mobFileCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.period"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8149, "HMasterInstance.hfileCleaner.period < HMasterInstance.mobFileCleanerChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.period"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8150, "HMasterInstance.hfileCleaner.period < HMasterInstance.mobFileCompactionChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.period"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8151, "HMasterInstance.hfileCleaner.period < HMasterInstance.mobFileCompactionChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.period"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8152, "HMasterInstance.hfileCleaner.period < HMasterInstance.normalizerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.period"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8153, "HMasterInstance.hfileCleaner.period < HMasterInstance.normalizerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.period"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8154, "HMasterInstance.hfileCleaner.period < HMasterInstance.procedureStore.cleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.period"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8155, "HMasterInstance.hfileCleaner.period < HMasterInstance.procedureStore.cleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.period"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8156, "HMasterInstance.hfileCleaner.period < HMasterInstance.procedureStore.cleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.period"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8157, "HMasterInstance.hfileCleaner.period < HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.period"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8158, "HMasterInstance.hfileCleaner.period > HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.period"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8159, "HMasterInstance.hfileCleaner.period > HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.period"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8160, "HMasterInstance.hfileCleaner.period > HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.period"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8161, "HMasterInstance.hfileCleaner.period < HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.period"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8162, "HMasterInstance.hfileCleaner.period < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.period"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8163, "HMasterInstance.hfileCleaner.period < HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.period"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8164, "HMasterInstance.hfileCleaner.period < HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.period"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8165, "HMasterInstance.hfileCleaner.period > HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.period"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8166, "HMasterInstance.hfileCleaner.period < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.period"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8167, "HMasterInstance.hfileCleaner.period > HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.period"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8168, "HMasterInstance.hfileCleaner.period < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.period"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8169, "HMasterInstance.hfileCleaner.period < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.period"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8170, "HMasterInstance.hfileCleaner.period < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.period"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8171, "HMasterInstance.hfileCleaner.period < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.period"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8172, "HMasterInstance.hfileCleaner.pool.size < HMasterInstance.hfileCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.pool.size"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8173, "HMasterInstance.hfileCleaner.pool.size < HMasterInstance.logCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.pool.size"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8174, "HMasterInstance.hfileCleaner.pool.size < HMasterInstance.logCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.pool.size"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8175, "HMasterInstance.hfileCleaner.pool.size < HMasterInstance.logCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.pool.size"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8176, "HMasterInstance.hfileCleaner.pool.size != HMasterInstance.masterFinishedInitializationTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.pool.size"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8177, "HMasterInstance.hfileCleaner.pool.size < HMasterInstance.mobFileCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.pool.size"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8178, "HMasterInstance.hfileCleaner.pool.size < HMasterInstance.mobFileCleanerChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.pool.size"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8179, "HMasterInstance.hfileCleaner.pool.size < HMasterInstance.mobFileCompactionChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.pool.size"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8180, "HMasterInstance.hfileCleaner.pool.size < HMasterInstance.mobFileCompactionChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.pool.size"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8181, "HMasterInstance.hfileCleaner.pool.size < HMasterInstance.normalizerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.pool.size"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8182, "HMasterInstance.hfileCleaner.pool.size < HMasterInstance.normalizerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.pool.size"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8183, "HMasterInstance.hfileCleaner.pool.size < HMasterInstance.procedureStore.cleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.pool.size"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8184, "HMasterInstance.hfileCleaner.pool.size < HMasterInstance.procedureStore.cleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.pool.size"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8185, "HMasterInstance.hfileCleaner.pool.size < HMasterInstance.procedureStore.cleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.pool.size"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8186, "HMasterInstance.hfileCleaner.pool.size < HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.pool.size"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8187, "HMasterInstance.hfileCleaner.pool.size != HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.pool.size"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8188, "HMasterInstance.hfileCleaner.pool.size != HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.pool.size"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8189, "HMasterInstance.hfileCleaner.pool.size != HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.pool.size"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8190, "HMasterInstance.hfileCleaner.pool.size < HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.pool.size"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8191, "HMasterInstance.hfileCleaner.pool.size < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.pool.size"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8192, "HMasterInstance.hfileCleaner.pool.size < HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.pool.size"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8193, "HMasterInstance.hfileCleaner.pool.size < HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.pool.size"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8194, "HMasterInstance.hfileCleaner.pool.size < HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.pool.size"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8195, "HMasterInstance.hfileCleaner.pool.size < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.pool.size"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8196, "HMasterInstance.hfileCleaner.pool.size != HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.pool.size"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8197, "HMasterInstance.hfileCleaner.pool.size < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.pool.size"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8198, "HMasterInstance.hfileCleaner.pool.size < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.pool.size"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8199, "HMasterInstance.hfileCleaner.pool.size < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.pool.size"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8200, "HMasterInstance.hfileCleaner.pool.size < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.pool.size"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8201, "HMasterInstance.hfileCleaner.timeMeasurement.mostRecent < HMasterInstance.hfileCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8202, "HMasterInstance.hfileCleaner.timeMeasurement.mostRecent < HMasterInstance.logCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8203, "HMasterInstance.hfileCleaner.timeMeasurement.mostRecent < HMasterInstance.logCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8204, "HMasterInstance.hfileCleaner.timeMeasurement.mostRecent < HMasterInstance.logCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8205, "HMasterInstance.hfileCleaner.timeMeasurement.mostRecent < HMasterInstance.masterFinishedInitializationTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8206, "HMasterInstance.hfileCleaner.timeMeasurement.mostRecent < HMasterInstance.mobFileCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8207, "HMasterInstance.hfileCleaner.timeMeasurement.mostRecent < HMasterInstance.mobFileCleanerChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8208, "HMasterInstance.hfileCleaner.timeMeasurement.mostRecent < HMasterInstance.mobFileCompactionChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8209, "HMasterInstance.hfileCleaner.timeMeasurement.mostRecent < HMasterInstance.mobFileCompactionChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8210, "HMasterInstance.hfileCleaner.timeMeasurement.mostRecent < HMasterInstance.normalizerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8211, "HMasterInstance.hfileCleaner.timeMeasurement.mostRecent < HMasterInstance.normalizerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8212, "HMasterInstance.hfileCleaner.timeMeasurement.mostRecent < HMasterInstance.procedureStore.cleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8213, "HMasterInstance.hfileCleaner.timeMeasurement.mostRecent < HMasterInstance.procedureStore.cleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8214, "HMasterInstance.hfileCleaner.timeMeasurement.mostRecent < HMasterInstance.procedureStore.cleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8215, "HMasterInstance.hfileCleaner.timeMeasurement.mostRecent < HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8216, "HMasterInstance.hfileCleaner.timeMeasurement.mostRecent <= HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeMeasurement.mostRecent"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8217, "HMasterInstance.hfileCleaner.timeMeasurement.mostRecent < HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8218, "HMasterInstance.hfileCleaner.timeMeasurement.mostRecent < HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8219, "HMasterInstance.hfileCleaner.timeMeasurement.mostRecent < HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8220, "HMasterInstance.hfileCleaner.timeMeasurement.mostRecent < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8221, "HMasterInstance.hfileCleaner.timeMeasurement.mostRecent < HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8222, "HMasterInstance.hfileCleaner.timeMeasurement.mostRecent < HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8223, "HMasterInstance.hfileCleaner.timeMeasurement.mostRecent < HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8224, "HMasterInstance.hfileCleaner.timeMeasurement.mostRecent < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8225, "HMasterInstance.hfileCleaner.timeMeasurement.mostRecent < HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8226, "HMasterInstance.hfileCleaner.timeMeasurement.mostRecent < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8227, "HMasterInstance.hfileCleaner.timeMeasurement.mostRecent < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8228, "HMasterInstance.hfileCleaner.timeMeasurement.mostRecent < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8229, "HMasterInstance.hfileCleaner.timeMeasurement.mostRecent < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8230, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.logCleaner.AVAIL_PROCESSORS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.AVAIL_PROCESSORS"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8231, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8232, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8233, "HMasterInstance.hfileCleaner.timeOfLastRun < HMasterInstance.logCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8234, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.logCleaner.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.period"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8235, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.logCleaner.pool.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.pool.size"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8236, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.logCleaner.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8237, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.logCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8238, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.logCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8239, "HMasterInstance.hfileCleaner.timeOfLastRun != HMasterInstance.masterFinishedInitializationTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8240, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8241, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8242, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8243, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8244, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.mobFileCleanerChore.initialDelay"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.initialDelay"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8245, "HMasterInstance.hfileCleaner.timeOfLastRun < HMasterInstance.mobFileCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8246, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8247, "HMasterInstance.hfileCleaner.timeOfLastRun < HMasterInstance.mobFileCleanerChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8248, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.mobFileCompactionChore.initialDelay"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.initialDelay"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8249, "HMasterInstance.hfileCleaner.timeOfLastRun < HMasterInstance.mobFileCompactionChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8250, "HMasterInstance.hfileCleaner.timeOfLastRun < HMasterInstance.mobFileCompactionChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8251, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.nonceManager.conflictWaitIterationMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.conflictWaitIterationMs"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8252, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.nonceManager.deleteNonceGracePeriod"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.deleteNonceGracePeriod"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8253, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8254, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.normalizer.masterRpcServices.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.rpcTimeout"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8255, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.normalizer.minRegionCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.minRegionCount"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8256, "HMasterInstance.hfileCleaner.timeOfLastRun < HMasterInstance.normalizerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8257, "HMasterInstance.hfileCleaner.timeOfLastRun < HMasterInstance.normalizerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8258, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.procedureExecutor.corePoolSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.corePoolSize"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8259, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.procedureExecutor.maxPoolSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.maxPoolSize"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8260, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.procedureExecutor.store.REGION_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.REGION_ID"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8261, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.procedureStore.REGION_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.REGION_ID"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8262, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.procedureStore.TABLE_NAME.hashCode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.TABLE_NAME.hashCode"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8263, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8264, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8265, "HMasterInstance.hfileCleaner.timeOfLastRun < HMasterInstance.procedureStore.cleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8266, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.procedureStore.cleaner.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.period"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8267, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.procedureStore.cleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8268, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.procedureStore.cleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8269, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.procedureStore.cleanerPool.cleanerLatch"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8270, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.procedureStore.cleanerPool.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.size"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8271, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8272, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.procedureStore.numThreads"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.numThreads"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8273, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.procedureStore.region.DEEP_OVERHEAD"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.DEEP_OVERHEAD"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8274, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.procedureStore.region.FIXED_OVERHEAD"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.FIXED_OVERHEAD"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8275, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8276, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8277, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.procedureStore.region.blockingMemStoreSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.blockingMemStoreSize"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8278, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8279, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8280, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8281, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.procedureStore.region.majorInProgress"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8282, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.procedureStore.region.maxBusyWaitDuration"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitDuration"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8283, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8284, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8285, "HMasterInstance.hfileCleaner.timeOfLastRun < HMasterInstance.procedureStore.region.timestampSlop"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.timestampSlop"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8286, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.procedureStore.walFactory.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walFactory.timeoutMillis"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8287, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8288, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8289, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.procedureStore.walRoller.threadWakeFrequency"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.threadWakeFrequency"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8290, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.regionServerAccounting.globalMemStoreLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimit"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8291, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8292, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8293, "HMasterInstance.hfileCleaner.timeOfLastRun < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8294, "HMasterInstance.hfileCleaner.timeOfLastRun <= HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8295, "HMasterInstance.hfileCleaner.timeOfLastRun < HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8296, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8297, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8298, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8299, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.rpcClient.connectTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connectTO"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8300, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.rpcClient.connections.poolMaxSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8301, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.rpcClient.failedServers.latestExpiry"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8302, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.rpcClient.failedServers.recheckServersTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.recheckServersTimeout"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8303, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.rpcClient.failureSleep"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failureSleep"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8304, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.rpcClient.maxConcurrentCallsPerServer"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.maxConcurrentCallsPerServer"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8305, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.rpcClient.minIdleTimeBeforeClose"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.minIdleTimeBeforeClose"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8306, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.rpcClient.readTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.readTO"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8307, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.rpcClient.writeTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.writeTO"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8308, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.rpcServices.maxScannerResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.maxScannerResultSize"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8309, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8310, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.rpcServices.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcTimeout"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8311, "HMasterInstance.hfileCleaner.timeOfLastRun < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8312, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.rsFatals.maxSizeBytes"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.maxSizeBytes"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8313, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8314, "HMasterInstance.hfileCleaner.timeOfLastRun < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8315, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.serverManager.flushedSeqIdFlusher.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.period"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8316, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.serverManager.maxSkew"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.maxSkew"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8317, "HMasterInstance.hfileCleaner.timeOfLastRun < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8318, "HMasterInstance.hfileCleaner.timeOfLastRun < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8319, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.snapshotManager.coordinator.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotManager.coordinator.timeoutMillis"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8320, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8321, "HMasterInstance.hfileCleaner.timeOfLastRun < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8322, "HMasterInstance.hfileCleaner.timeOfLastRun > HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8323, "HMasterInstance.hfileCleaner.timeOfLastRun > daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0]))));
			}
		});
		invariants8999.add(new Invariant(8324, "HMasterInstance.logCleaner.AVAIL_PROCESSORS < HMasterInstance.logCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.AVAIL_PROCESSORS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8325, "HMasterInstance.logCleaner.AVAIL_PROCESSORS < HMasterInstance.logCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.AVAIL_PROCESSORS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8326, "HMasterInstance.logCleaner.AVAIL_PROCESSORS < HMasterInstance.logCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.AVAIL_PROCESSORS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8327, "HMasterInstance.logCleaner.AVAIL_PROCESSORS != HMasterInstance.masterFinishedInitializationTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.AVAIL_PROCESSORS"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8328, "HMasterInstance.logCleaner.AVAIL_PROCESSORS < HMasterInstance.mobFileCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.AVAIL_PROCESSORS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8329, "HMasterInstance.logCleaner.AVAIL_PROCESSORS < HMasterInstance.mobFileCleanerChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.AVAIL_PROCESSORS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8330, "HMasterInstance.logCleaner.AVAIL_PROCESSORS < HMasterInstance.mobFileCompactionChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.AVAIL_PROCESSORS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8331, "HMasterInstance.logCleaner.AVAIL_PROCESSORS < HMasterInstance.mobFileCompactionChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.AVAIL_PROCESSORS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8332, "HMasterInstance.logCleaner.AVAIL_PROCESSORS < HMasterInstance.normalizerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.AVAIL_PROCESSORS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8333, "HMasterInstance.logCleaner.AVAIL_PROCESSORS < HMasterInstance.normalizerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.AVAIL_PROCESSORS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8334, "HMasterInstance.logCleaner.AVAIL_PROCESSORS > HMasterInstance.procedureExecutor.activeExecutorCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.AVAIL_PROCESSORS"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8335, "HMasterInstance.logCleaner.AVAIL_PROCESSORS != HMasterInstance.procedureExecutor.lastProcId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.AVAIL_PROCESSORS"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.lastProcId"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8336, "HMasterInstance.logCleaner.AVAIL_PROCESSORS > HMasterInstance.procedureExecutor.scheduler.nullPollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.AVAIL_PROCESSORS"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.nullPollCalls"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8337, "HMasterInstance.logCleaner.AVAIL_PROCESSORS != HMasterInstance.procedureExecutor.scheduler.pollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.AVAIL_PROCESSORS"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.pollCalls"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8338, "HMasterInstance.logCleaner.AVAIL_PROCESSORS < HMasterInstance.procedureStore.cleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.AVAIL_PROCESSORS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8339, "HMasterInstance.logCleaner.AVAIL_PROCESSORS < HMasterInstance.procedureStore.cleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.AVAIL_PROCESSORS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8340, "HMasterInstance.logCleaner.AVAIL_PROCESSORS < HMasterInstance.procedureStore.cleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.AVAIL_PROCESSORS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8341, "HMasterInstance.logCleaner.AVAIL_PROCESSORS != HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.AVAIL_PROCESSORS"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8342, "HMasterInstance.logCleaner.AVAIL_PROCESSORS < HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.AVAIL_PROCESSORS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8343, "HMasterInstance.logCleaner.AVAIL_PROCESSORS != HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.AVAIL_PROCESSORS"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8344, "HMasterInstance.logCleaner.AVAIL_PROCESSORS != HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.AVAIL_PROCESSORS"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8345, "HMasterInstance.logCleaner.AVAIL_PROCESSORS != HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.AVAIL_PROCESSORS"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8346, "HMasterInstance.logCleaner.AVAIL_PROCESSORS < HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.AVAIL_PROCESSORS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8347, "HMasterInstance.logCleaner.AVAIL_PROCESSORS < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.AVAIL_PROCESSORS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8348, "HMasterInstance.logCleaner.AVAIL_PROCESSORS < HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.AVAIL_PROCESSORS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8349, "HMasterInstance.logCleaner.AVAIL_PROCESSORS < HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.AVAIL_PROCESSORS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8350, "HMasterInstance.logCleaner.AVAIL_PROCESSORS < HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.AVAIL_PROCESSORS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8351, "HMasterInstance.logCleaner.AVAIL_PROCESSORS < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.AVAIL_PROCESSORS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8352, "HMasterInstance.logCleaner.AVAIL_PROCESSORS != HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.AVAIL_PROCESSORS"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8353, "HMasterInstance.logCleaner.AVAIL_PROCESSORS < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.AVAIL_PROCESSORS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8354, "HMasterInstance.logCleaner.AVAIL_PROCESSORS < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.AVAIL_PROCESSORS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8355, "HMasterInstance.logCleaner.AVAIL_PROCESSORS < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.AVAIL_PROCESSORS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8356, "HMasterInstance.logCleaner.AVAIL_PROCESSORS < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.AVAIL_PROCESSORS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8357, "HMasterInstance.logCleaner.AVAIL_PROCESSORS != HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.AVAIL_PROCESSORS"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8358, "HMasterInstance.logCleaner.AVAIL_PROCESSORS != HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.AVAIL_PROCESSORS"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8359, "HMasterInstance.logCleaner.AVAIL_PROCESSORS < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.AVAIL_PROCESSORS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8360, "HMasterInstance.logCleaner.AVAIL_PROCESSORS > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.AVAIL_PROCESSORS"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants8999.add(new Invariant(8361, "HMasterInstance.logCleaner.AVAIL_PROCESSORS > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.AVAIL_PROCESSORS"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants8999.add(new Invariant(8362, "HMasterInstance.logCleaner.AVAIL_PROCESSORS > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.AVAIL_PROCESSORS"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants8999.add(new Invariant(8363, "HMasterInstance.logCleaner.AVAIL_PROCESSORS != daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.AVAIL_PROCESSORS"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants8999.add(new Invariant(8364, "HMasterInstance.logCleaner.AVAIL_PROCESSORS > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.AVAIL_PROCESSORS"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants8999.add(new Invariant(8365, "HMasterInstance.logCleaner.AVAIL_PROCESSORS > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.AVAIL_PROCESSORS"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants8999.add(new Invariant(8366, "HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS < HMasterInstance.logCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8367, "HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS < HMasterInstance.logCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8368, "HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS < HMasterInstance.logCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8369, "HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS != HMasterInstance.masterFinishedInitializationTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8370, "HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS < HMasterInstance.mobFileCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8371, "HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS < HMasterInstance.mobFileCleanerChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8372, "HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS < HMasterInstance.mobFileCompactionChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8373, "HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS < HMasterInstance.mobFileCompactionChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8374, "HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS < HMasterInstance.normalizerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8375, "HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS < HMasterInstance.normalizerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8376, "HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS > HMasterInstance.procedureExecutor.activeExecutorCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8377, "HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS > HMasterInstance.procedureExecutor.lastProcId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.lastProcId"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8378, "HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS > HMasterInstance.procedureExecutor.scheduler.nullPollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.nullPollCalls"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8379, "HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS > HMasterInstance.procedureExecutor.scheduler.pollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.pollCalls"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8380, "HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS < HMasterInstance.procedureStore.cleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8381, "HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS < HMasterInstance.procedureStore.cleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8382, "HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS < HMasterInstance.procedureStore.cleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8383, "HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS > HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8384, "HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS < HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8385, "HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS > HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8386, "HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS > HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8387, "HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS > HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8388, "HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS < HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8389, "HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8390, "HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS < HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8391, "HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS < HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8392, "HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS > HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8393, "HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8394, "HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS > HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8395, "HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8396, "HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8397, "HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8398, "HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8399, "HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS > HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8400, "HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS > HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8401, "HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8402, "HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants8999.add(new Invariant(8403, "HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants8999.add(new Invariant(8404, "HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants8999.add(new Invariant(8405, "HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants8999.add(new Invariant(8406, "HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants8999.add(new Invariant(8407, "HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants8999.add(new Invariant(8408, "HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE < HMasterInstance.logCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8409, "HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE < HMasterInstance.logCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8410, "HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE < HMasterInstance.logCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8411, "HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE != HMasterInstance.masterFinishedInitializationTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8412, "HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE < HMasterInstance.mobFileCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8413, "HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE < HMasterInstance.mobFileCleanerChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8414, "HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE < HMasterInstance.mobFileCompactionChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8415, "HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE < HMasterInstance.mobFileCompactionChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8416, "HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE < HMasterInstance.normalizerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8417, "HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE < HMasterInstance.normalizerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8418, "HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE < HMasterInstance.procedureExecutor.lastProcId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.lastProcId"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8419, "HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE < HMasterInstance.procedureExecutor.scheduler.pollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.pollCalls"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8420, "HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE < HMasterInstance.procedureStore.cleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8421, "HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE < HMasterInstance.procedureStore.cleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8422, "HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE < HMasterInstance.procedureStore.cleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8423, "HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE < HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8424, "HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE < HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8425, "HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE != HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8426, "HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE <= HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8427, "HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE < HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8428, "HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE < HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8429, "HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8430, "HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE < HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8431, "HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE < HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8432, "HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE < HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8433, "HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8434, "HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE != HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8435, "HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8436, "HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8437, "HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8438, "HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8439, "HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE < HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8440, "HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8441, "HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE >= daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants8999.add(new Invariant(8442, "HMasterInstance.logCleaner.lastLog > HMasterInstance.logCleaner.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.period"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8443, "HMasterInstance.logCleaner.lastLog > HMasterInstance.logCleaner.pool.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.pool.size"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8444, "HMasterInstance.logCleaner.lastLog > HMasterInstance.logCleaner.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8445, "HMasterInstance.logCleaner.lastLog > HMasterInstance.logCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8446, "HMasterInstance.logCleaner.lastLog > HMasterInstance.logCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8447, "HMasterInstance.logCleaner.lastLog > HMasterInstance.masterFinishedInitializationTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8448, "HMasterInstance.logCleaner.lastLog > HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8449, "HMasterInstance.logCleaner.lastLog > HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8450, "HMasterInstance.logCleaner.lastLog > HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8451, "HMasterInstance.logCleaner.lastLog > HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8452, "HMasterInstance.logCleaner.lastLog > HMasterInstance.mobFileCleanerChore.initialDelay"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.initialDelay"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8453, "HMasterInstance.logCleaner.lastLog < HMasterInstance.mobFileCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8454, "HMasterInstance.logCleaner.lastLog > HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8455, "HMasterInstance.logCleaner.lastLog > HMasterInstance.mobFileCleanerChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8456, "HMasterInstance.logCleaner.lastLog > HMasterInstance.mobFileCompactionChore.initialDelay"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.initialDelay"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8457, "HMasterInstance.logCleaner.lastLog < HMasterInstance.mobFileCompactionChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8458, "HMasterInstance.logCleaner.lastLog > HMasterInstance.mobFileCompactionChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8459, "HMasterInstance.logCleaner.lastLog > HMasterInstance.nonceManager.conflictWaitIterationMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.conflictWaitIterationMs"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8460, "HMasterInstance.logCleaner.lastLog > HMasterInstance.nonceManager.deleteNonceGracePeriod"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.deleteNonceGracePeriod"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8461, "HMasterInstance.logCleaner.lastLog > HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8462, "HMasterInstance.logCleaner.lastLog > HMasterInstance.normalizer.masterRpcServices.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.rpcTimeout"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8463, "HMasterInstance.logCleaner.lastLog > HMasterInstance.normalizer.minRegionCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.minRegionCount"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8464, "HMasterInstance.logCleaner.lastLog < HMasterInstance.normalizerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8465, "HMasterInstance.logCleaner.lastLog > HMasterInstance.normalizerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8466, "HMasterInstance.logCleaner.lastLog > HMasterInstance.procedureExecutor.corePoolSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.corePoolSize"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8467, "HMasterInstance.logCleaner.lastLog > HMasterInstance.procedureExecutor.maxPoolSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.maxPoolSize"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8468, "HMasterInstance.logCleaner.lastLog > HMasterInstance.procedureExecutor.store.REGION_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.REGION_ID"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8469, "HMasterInstance.logCleaner.lastLog > HMasterInstance.procedureStore.REGION_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.REGION_ID"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8470, "HMasterInstance.logCleaner.lastLog > HMasterInstance.procedureStore.TABLE_NAME.hashCode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.TABLE_NAME.hashCode"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8471, "HMasterInstance.logCleaner.lastLog > HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8472, "HMasterInstance.logCleaner.lastLog > HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8473, "HMasterInstance.logCleaner.lastLog > HMasterInstance.procedureStore.cleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8474, "HMasterInstance.logCleaner.lastLog > HMasterInstance.procedureStore.cleaner.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.period"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8475, "HMasterInstance.logCleaner.lastLog > HMasterInstance.procedureStore.cleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8476, "HMasterInstance.logCleaner.lastLog > HMasterInstance.procedureStore.cleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8477, "HMasterInstance.logCleaner.lastLog > HMasterInstance.procedureStore.cleanerPool.cleanerLatch"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8478, "HMasterInstance.logCleaner.lastLog > HMasterInstance.procedureStore.cleanerPool.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.size"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8479, "HMasterInstance.logCleaner.lastLog > HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8480, "HMasterInstance.logCleaner.lastLog > HMasterInstance.procedureStore.numThreads"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.numThreads"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8481, "HMasterInstance.logCleaner.lastLog > HMasterInstance.procedureStore.region.DEEP_OVERHEAD"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.DEEP_OVERHEAD"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8482, "HMasterInstance.logCleaner.lastLog > HMasterInstance.procedureStore.region.FIXED_OVERHEAD"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.FIXED_OVERHEAD"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8483, "HMasterInstance.logCleaner.lastLog > HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8484, "HMasterInstance.logCleaner.lastLog > HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8485, "HMasterInstance.logCleaner.lastLog > HMasterInstance.procedureStore.region.blockingMemStoreSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.blockingMemStoreSize"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8486, "HMasterInstance.logCleaner.lastLog > HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8487, "HMasterInstance.logCleaner.lastLog > HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8488, "HMasterInstance.logCleaner.lastLog > HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8489, "HMasterInstance.logCleaner.lastLog > HMasterInstance.procedureStore.region.majorInProgress"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8490, "HMasterInstance.logCleaner.lastLog > HMasterInstance.procedureStore.region.maxBusyWaitDuration"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitDuration"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8491, "HMasterInstance.logCleaner.lastLog > HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8492, "HMasterInstance.logCleaner.lastLog > HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8493, "HMasterInstance.logCleaner.lastLog < HMasterInstance.procedureStore.region.timestampSlop"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.timestampSlop"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8494, "HMasterInstance.logCleaner.lastLog > HMasterInstance.procedureStore.walFactory.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walFactory.timeoutMillis"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8495, "HMasterInstance.logCleaner.lastLog > HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8496, "HMasterInstance.logCleaner.lastLog > HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8497, "HMasterInstance.logCleaner.lastLog > HMasterInstance.procedureStore.walRoller.threadWakeFrequency"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.threadWakeFrequency"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8498, "HMasterInstance.logCleaner.lastLog > HMasterInstance.regionServerAccounting.globalMemStoreLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimit"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8499, "HMasterInstance.logCleaner.lastLog > HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8500, "HMasterInstance.logCleaner.lastLog > HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8501, "HMasterInstance.logCleaner.lastLog < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8502, "HMasterInstance.logCleaner.lastLog > HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8503, "HMasterInstance.logCleaner.lastLog > HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8504, "HMasterInstance.logCleaner.lastLog > HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8505, "HMasterInstance.logCleaner.lastLog > HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8506, "HMasterInstance.logCleaner.lastLog > HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8507, "HMasterInstance.logCleaner.lastLog > HMasterInstance.rpcClient.connectTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connectTO"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8508, "HMasterInstance.logCleaner.lastLog > HMasterInstance.rpcClient.connections.poolMaxSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8509, "HMasterInstance.logCleaner.lastLog > HMasterInstance.rpcClient.failedServers.latestExpiry"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8510, "HMasterInstance.logCleaner.lastLog > HMasterInstance.rpcClient.failedServers.recheckServersTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.recheckServersTimeout"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8511, "HMasterInstance.logCleaner.lastLog > HMasterInstance.rpcClient.failureSleep"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failureSleep"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8512, "HMasterInstance.logCleaner.lastLog > HMasterInstance.rpcClient.maxConcurrentCallsPerServer"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.maxConcurrentCallsPerServer"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8513, "HMasterInstance.logCleaner.lastLog > HMasterInstance.rpcClient.minIdleTimeBeforeClose"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.minIdleTimeBeforeClose"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8514, "HMasterInstance.logCleaner.lastLog > HMasterInstance.rpcClient.readTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.readTO"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8515, "HMasterInstance.logCleaner.lastLog > HMasterInstance.rpcClient.writeTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.writeTO"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8516, "HMasterInstance.logCleaner.lastLog > HMasterInstance.rpcServices.maxScannerResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.maxScannerResultSize"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8517, "HMasterInstance.logCleaner.lastLog > HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8518, "HMasterInstance.logCleaner.lastLog > HMasterInstance.rpcServices.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcTimeout"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8519, "HMasterInstance.logCleaner.lastLog < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8520, "HMasterInstance.logCleaner.lastLog > HMasterInstance.rsFatals.maxSizeBytes"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.maxSizeBytes"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8521, "HMasterInstance.logCleaner.lastLog > HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8522, "HMasterInstance.logCleaner.lastLog < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8523, "HMasterInstance.logCleaner.lastLog > HMasterInstance.serverManager.flushedSeqIdFlusher.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.period"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8524, "HMasterInstance.logCleaner.lastLog > HMasterInstance.serverManager.maxSkew"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.maxSkew"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8525, "HMasterInstance.logCleaner.lastLog < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8526, "HMasterInstance.logCleaner.lastLog > HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8527, "HMasterInstance.logCleaner.lastLog > HMasterInstance.snapshotManager.coordinator.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotManager.coordinator.timeoutMillis"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8528, "HMasterInstance.logCleaner.lastLog > HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8529, "HMasterInstance.logCleaner.lastLog != HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8530, "HMasterInstance.logCleaner.lastLog > HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8531, "HMasterInstance.logCleaner.lastLog > daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0]))));
			}
		});
		invariants8999.add(new Invariant(8532, "HMasterInstance.logCleaner.period < HMasterInstance.logCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.period"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8533, "HMasterInstance.logCleaner.period < HMasterInstance.logCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.period"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8534, "HMasterInstance.logCleaner.period != HMasterInstance.masterFinishedInitializationTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.period"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8535, "HMasterInstance.logCleaner.period < HMasterInstance.mobFileCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.period"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8536, "HMasterInstance.logCleaner.period < HMasterInstance.mobFileCleanerChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.period"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8537, "HMasterInstance.logCleaner.period < HMasterInstance.mobFileCompactionChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.period"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8538, "HMasterInstance.logCleaner.period < HMasterInstance.mobFileCompactionChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.period"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8539, "HMasterInstance.logCleaner.period < HMasterInstance.normalizerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.period"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8540, "HMasterInstance.logCleaner.period < HMasterInstance.normalizerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.period"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8541, "HMasterInstance.logCleaner.period > HMasterInstance.procedureExecutor.activeExecutorCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.period"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8542, "HMasterInstance.logCleaner.period > HMasterInstance.procedureExecutor.lastProcId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.period"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.lastProcId"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8543, "HMasterInstance.logCleaner.period > HMasterInstance.procedureExecutor.scheduler.nullPollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.period"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.nullPollCalls"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8544, "HMasterInstance.logCleaner.period > HMasterInstance.procedureExecutor.scheduler.pollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.period"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.pollCalls"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8545, "HMasterInstance.logCleaner.period < HMasterInstance.procedureStore.cleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.period"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8546, "HMasterInstance.logCleaner.period < HMasterInstance.procedureStore.cleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.period"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8547, "HMasterInstance.logCleaner.period < HMasterInstance.procedureStore.cleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.period"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8548, "HMasterInstance.logCleaner.period > HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.period"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8549, "HMasterInstance.logCleaner.period < HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.period"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8550, "HMasterInstance.logCleaner.period > HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.period"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8551, "HMasterInstance.logCleaner.period > HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.period"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8552, "HMasterInstance.logCleaner.period > HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.period"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8553, "HMasterInstance.logCleaner.period < HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.period"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8554, "HMasterInstance.logCleaner.period < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.period"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8555, "HMasterInstance.logCleaner.period < HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.period"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8556, "HMasterInstance.logCleaner.period < HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.period"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8557, "HMasterInstance.logCleaner.period > HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.period"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8558, "HMasterInstance.logCleaner.period < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.period"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8559, "HMasterInstance.logCleaner.period > HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.period"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8560, "HMasterInstance.logCleaner.period < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.period"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8561, "HMasterInstance.logCleaner.period < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.period"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8562, "HMasterInstance.logCleaner.period < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.period"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8563, "HMasterInstance.logCleaner.period < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.period"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8564, "HMasterInstance.logCleaner.period > HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.period"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8565, "HMasterInstance.logCleaner.period > HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.period"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8566, "HMasterInstance.logCleaner.period < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.period"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8567, "HMasterInstance.logCleaner.period > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.period"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants8999.add(new Invariant(8568, "HMasterInstance.logCleaner.period > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.period"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants8999.add(new Invariant(8569, "HMasterInstance.logCleaner.period > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.period"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants8999.add(new Invariant(8570, "HMasterInstance.logCleaner.period > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.period"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants8999.add(new Invariant(8571, "HMasterInstance.logCleaner.period > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.period"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants8999.add(new Invariant(8572, "HMasterInstance.logCleaner.period > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.period"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants8999.add(new Invariant(8573, "HMasterInstance.logCleaner.pool.size < HMasterInstance.logCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.pool.size"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8574, "HMasterInstance.logCleaner.pool.size < HMasterInstance.logCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.pool.size"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8575, "HMasterInstance.logCleaner.pool.size != HMasterInstance.masterFinishedInitializationTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.pool.size"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8576, "HMasterInstance.logCleaner.pool.size < HMasterInstance.mobFileCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.pool.size"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8577, "HMasterInstance.logCleaner.pool.size < HMasterInstance.mobFileCleanerChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.pool.size"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8578, "HMasterInstance.logCleaner.pool.size < HMasterInstance.mobFileCompactionChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.pool.size"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8579, "HMasterInstance.logCleaner.pool.size < HMasterInstance.mobFileCompactionChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.pool.size"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8580, "HMasterInstance.logCleaner.pool.size < HMasterInstance.normalizerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.pool.size"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8581, "HMasterInstance.logCleaner.pool.size < HMasterInstance.normalizerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.pool.size"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8582, "HMasterInstance.logCleaner.pool.size != HMasterInstance.procedureExecutor.activeExecutorCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.pool.size"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8583, "HMasterInstance.logCleaner.pool.size < HMasterInstance.procedureStore.cleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.pool.size"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8584, "HMasterInstance.logCleaner.pool.size < HMasterInstance.procedureStore.cleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.pool.size"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8585, "HMasterInstance.logCleaner.pool.size < HMasterInstance.procedureStore.cleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.pool.size"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8586, "HMasterInstance.logCleaner.pool.size < HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.pool.size"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8587, "HMasterInstance.logCleaner.pool.size < HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.pool.size"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8588, "HMasterInstance.logCleaner.pool.size != HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.pool.size"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8589, "HMasterInstance.logCleaner.pool.size != HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.pool.size"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8590, "HMasterInstance.logCleaner.pool.size != HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.pool.size"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8591, "HMasterInstance.logCleaner.pool.size < HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.pool.size"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8592, "HMasterInstance.logCleaner.pool.size < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.pool.size"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8593, "HMasterInstance.logCleaner.pool.size < HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.pool.size"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8594, "HMasterInstance.logCleaner.pool.size < HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.pool.size"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8595, "HMasterInstance.logCleaner.pool.size < HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.pool.size"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8596, "HMasterInstance.logCleaner.pool.size < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.pool.size"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8597, "HMasterInstance.logCleaner.pool.size != HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.pool.size"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8598, "HMasterInstance.logCleaner.pool.size < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.pool.size"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8599, "HMasterInstance.logCleaner.pool.size < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.pool.size"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8600, "HMasterInstance.logCleaner.pool.size < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.pool.size"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8601, "HMasterInstance.logCleaner.pool.size < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.pool.size"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8602, "HMasterInstance.logCleaner.pool.size < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.pool.size"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8603, "HMasterInstance.logCleaner.pool.size > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.pool.size"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants8999.add(new Invariant(8604, "HMasterInstance.logCleaner.pool.size != daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.pool.size"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants8999.add(new Invariant(8605, "HMasterInstance.logCleaner.pool.size >= daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.pool.size"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0])))-1);
			}
		});
		invariants8999.add(new Invariant(8606, "HMasterInstance.logCleaner.pool.size > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.pool.size"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants8999.add(new Invariant(8607, "HMasterInstance.logCleaner.pool.size > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.pool.size"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants8999.add(new Invariant(8608, "HMasterInstance.logCleaner.timeMeasurement.mostRecent < HMasterInstance.logCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8609, "HMasterInstance.logCleaner.timeMeasurement.mostRecent < HMasterInstance.logCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8610, "HMasterInstance.logCleaner.timeMeasurement.mostRecent < HMasterInstance.masterFinishedInitializationTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8611, "HMasterInstance.logCleaner.timeMeasurement.mostRecent < HMasterInstance.mobFileCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8612, "HMasterInstance.logCleaner.timeMeasurement.mostRecent < HMasterInstance.mobFileCleanerChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8613, "HMasterInstance.logCleaner.timeMeasurement.mostRecent < HMasterInstance.mobFileCompactionChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8614, "HMasterInstance.logCleaner.timeMeasurement.mostRecent < HMasterInstance.mobFileCompactionChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8615, "HMasterInstance.logCleaner.timeMeasurement.mostRecent < HMasterInstance.normalizerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8616, "HMasterInstance.logCleaner.timeMeasurement.mostRecent < HMasterInstance.normalizerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8617, "HMasterInstance.logCleaner.timeMeasurement.mostRecent < HMasterInstance.procedureExecutor.activeExecutorCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8618, "HMasterInstance.logCleaner.timeMeasurement.mostRecent < HMasterInstance.procedureExecutor.lastProcId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.lastProcId"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8619, "HMasterInstance.logCleaner.timeMeasurement.mostRecent < HMasterInstance.procedureExecutor.scheduler.nullPollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.nullPollCalls"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8620, "HMasterInstance.logCleaner.timeMeasurement.mostRecent < HMasterInstance.procedureExecutor.scheduler.pollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.pollCalls"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8621, "HMasterInstance.logCleaner.timeMeasurement.mostRecent < HMasterInstance.procedureStore.cleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8622, "HMasterInstance.logCleaner.timeMeasurement.mostRecent < HMasterInstance.procedureStore.cleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8623, "HMasterInstance.logCleaner.timeMeasurement.mostRecent < HMasterInstance.procedureStore.cleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8624, "HMasterInstance.logCleaner.timeMeasurement.mostRecent < HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8625, "HMasterInstance.logCleaner.timeMeasurement.mostRecent < HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8626, "HMasterInstance.logCleaner.timeMeasurement.mostRecent <= HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeMeasurement.mostRecent"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8627, "HMasterInstance.logCleaner.timeMeasurement.mostRecent < HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8628, "HMasterInstance.logCleaner.timeMeasurement.mostRecent < HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8629, "HMasterInstance.logCleaner.timeMeasurement.mostRecent < HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8630, "HMasterInstance.logCleaner.timeMeasurement.mostRecent < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8631, "HMasterInstance.logCleaner.timeMeasurement.mostRecent < HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8632, "HMasterInstance.logCleaner.timeMeasurement.mostRecent < HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8633, "HMasterInstance.logCleaner.timeMeasurement.mostRecent < HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8634, "HMasterInstance.logCleaner.timeMeasurement.mostRecent < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8635, "HMasterInstance.logCleaner.timeMeasurement.mostRecent < HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8636, "HMasterInstance.logCleaner.timeMeasurement.mostRecent < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8637, "HMasterInstance.logCleaner.timeMeasurement.mostRecent < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8638, "HMasterInstance.logCleaner.timeMeasurement.mostRecent < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8639, "HMasterInstance.logCleaner.timeMeasurement.mostRecent < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8640, "HMasterInstance.logCleaner.timeMeasurement.mostRecent < HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8641, "HMasterInstance.logCleaner.timeMeasurement.mostRecent < HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8642, "HMasterInstance.logCleaner.timeMeasurement.mostRecent < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8643, "HMasterInstance.logCleaner.timeMeasurement.mostRecent <= daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeMeasurement.mostRecent"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])))-1);
			}
		});
		invariants8999.add(new Invariant(8644, "HMasterInstance.logCleaner.timeMeasurement.mostRecent <= daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeMeasurement.mostRecent"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1);
			}
		});
		invariants8999.add(new Invariant(8645, "HMasterInstance.logCleaner.timeMeasurement.mostRecent <= daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeMeasurement.mostRecent"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0])))-1);
			}
		});
		invariants8999.add(new Invariant(8646, "HMasterInstance.logCleaner.timeMeasurement.mostRecent <= daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeMeasurement.mostRecent"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0])))-1);
			}
		});
		invariants8999.add(new Invariant(8647, "HMasterInstance.logCleaner.timeMeasurement.mostRecent <= daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeMeasurement.mostRecent"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0])))-1);
			}
		});
		invariants8999.add(new Invariant(8648, "HMasterInstance.logCleaner.timeMeasurement.mostRecent < daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeMeasurement.mostRecent"))).intValue() < daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])))-1);
			}
		});
		invariants8999.add(new Invariant(8649, "HMasterInstance.logCleaner.timeOfLastRun <= HMasterInstance.logCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8650, "HMasterInstance.logCleaner.timeOfLastRun != HMasterInstance.masterFinishedInitializationTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8651, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8652, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8653, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8654, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8655, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.mobFileCleanerChore.initialDelay"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.initialDelay"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8656, "HMasterInstance.logCleaner.timeOfLastRun < HMasterInstance.mobFileCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8657, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8658, "HMasterInstance.logCleaner.timeOfLastRun < HMasterInstance.mobFileCleanerChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8659, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.mobFileCompactionChore.initialDelay"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.initialDelay"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8660, "HMasterInstance.logCleaner.timeOfLastRun < HMasterInstance.mobFileCompactionChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8661, "HMasterInstance.logCleaner.timeOfLastRun < HMasterInstance.mobFileCompactionChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8662, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.nonceManager.conflictWaitIterationMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.conflictWaitIterationMs"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8663, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.nonceManager.deleteNonceGracePeriod"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.deleteNonceGracePeriod"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8664, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8665, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.normalizer.masterRpcServices.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.rpcTimeout"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8666, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.normalizer.minRegionCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.minRegionCount"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8667, "HMasterInstance.logCleaner.timeOfLastRun < HMasterInstance.normalizerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8668, "HMasterInstance.logCleaner.timeOfLastRun < HMasterInstance.normalizerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8669, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.procedureExecutor.corePoolSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.corePoolSize"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8670, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.procedureExecutor.maxPoolSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.maxPoolSize"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8671, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.procedureExecutor.store.REGION_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.REGION_ID"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8672, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.procedureStore.REGION_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.REGION_ID"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8673, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.procedureStore.TABLE_NAME.hashCode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.TABLE_NAME.hashCode"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8674, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8675, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8676, "HMasterInstance.logCleaner.timeOfLastRun < HMasterInstance.procedureStore.cleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8677, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.procedureStore.cleaner.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.period"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8678, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.procedureStore.cleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8679, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.procedureStore.cleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8680, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.procedureStore.cleanerPool.cleanerLatch"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8681, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.procedureStore.cleanerPool.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.size"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8682, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8683, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.procedureStore.numThreads"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.numThreads"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8684, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.procedureStore.region.DEEP_OVERHEAD"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.DEEP_OVERHEAD"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8685, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.procedureStore.region.FIXED_OVERHEAD"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.FIXED_OVERHEAD"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8686, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8687, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8688, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.procedureStore.region.blockingMemStoreSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.blockingMemStoreSize"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8689, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8690, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8691, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8692, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.procedureStore.region.majorInProgress"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8693, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.procedureStore.region.maxBusyWaitDuration"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitDuration"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8694, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8695, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8696, "HMasterInstance.logCleaner.timeOfLastRun < HMasterInstance.procedureStore.region.timestampSlop"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.timestampSlop"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8697, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.procedureStore.walFactory.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walFactory.timeoutMillis"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8698, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8699, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8700, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.procedureStore.walRoller.threadWakeFrequency"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.threadWakeFrequency"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8701, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.regionServerAccounting.globalMemStoreLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimit"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8702, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8703, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8704, "HMasterInstance.logCleaner.timeOfLastRun < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8705, "HMasterInstance.logCleaner.timeOfLastRun < HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8706, "HMasterInstance.logCleaner.timeOfLastRun < HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8707, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8708, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8709, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8710, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.rpcClient.connectTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connectTO"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8711, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.rpcClient.connections.poolMaxSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8712, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.rpcClient.failedServers.latestExpiry"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8713, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.rpcClient.failedServers.recheckServersTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.recheckServersTimeout"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8714, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.rpcClient.failureSleep"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failureSleep"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8715, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.rpcClient.maxConcurrentCallsPerServer"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.maxConcurrentCallsPerServer"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8716, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.rpcClient.minIdleTimeBeforeClose"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.minIdleTimeBeforeClose"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8717, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.rpcClient.readTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.readTO"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8718, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.rpcClient.writeTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.writeTO"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8719, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.rpcServices.maxScannerResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.maxScannerResultSize"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8720, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8721, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.rpcServices.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcTimeout"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8722, "HMasterInstance.logCleaner.timeOfLastRun < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8723, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.rsFatals.maxSizeBytes"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.maxSizeBytes"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8724, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8725, "HMasterInstance.logCleaner.timeOfLastRun < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8726, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.serverManager.flushedSeqIdFlusher.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.period"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8727, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.serverManager.maxSkew"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.maxSkew"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8728, "HMasterInstance.logCleaner.timeOfLastRun < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8729, "HMasterInstance.logCleaner.timeOfLastRun < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8730, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.snapshotManager.coordinator.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotManager.coordinator.timeoutMillis"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8731, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8732, "HMasterInstance.logCleaner.timeOfLastRun < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8733, "HMasterInstance.logCleaner.timeOfLastRun > HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8734, "HMasterInstance.logCleaner.timeOfLastRun > daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0]))));
			}
		});
		invariants8999.add(new Invariant(8735, "HMasterInstance.logCleaner.timeOfThisRun != HMasterInstance.masterFinishedInitializationTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8736, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8737, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8738, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8739, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8740, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.mobFileCleanerChore.initialDelay"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.initialDelay"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8741, "HMasterInstance.logCleaner.timeOfThisRun < HMasterInstance.mobFileCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8742, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8743, "HMasterInstance.logCleaner.timeOfThisRun < HMasterInstance.mobFileCleanerChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8744, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.mobFileCompactionChore.initialDelay"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.initialDelay"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8745, "HMasterInstance.logCleaner.timeOfThisRun < HMasterInstance.mobFileCompactionChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8746, "HMasterInstance.logCleaner.timeOfThisRun < HMasterInstance.mobFileCompactionChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8747, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.nonceManager.conflictWaitIterationMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.conflictWaitIterationMs"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8748, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.nonceManager.deleteNonceGracePeriod"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.deleteNonceGracePeriod"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8749, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8750, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.normalizer.masterRpcServices.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.rpcTimeout"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8751, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.normalizer.minRegionCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.minRegionCount"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8752, "HMasterInstance.logCleaner.timeOfThisRun < HMasterInstance.normalizerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8753, "HMasterInstance.logCleaner.timeOfThisRun < HMasterInstance.normalizerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8754, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.procedureExecutor.activeExecutorCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8755, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.procedureExecutor.corePoolSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.corePoolSize"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8756, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.procedureExecutor.lastProcId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.lastProcId"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8757, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.procedureExecutor.maxPoolSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.maxPoolSize"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8758, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.procedureExecutor.scheduler.nullPollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.nullPollCalls"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8759, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.procedureExecutor.scheduler.pollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.pollCalls"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8760, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.procedureExecutor.store.REGION_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.REGION_ID"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8761, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.procedureStore.REGION_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.REGION_ID"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8762, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.procedureStore.TABLE_NAME.hashCode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.TABLE_NAME.hashCode"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8763, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8764, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8765, "HMasterInstance.logCleaner.timeOfThisRun < HMasterInstance.procedureStore.cleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8766, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.procedureStore.cleaner.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.period"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8767, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.procedureStore.cleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8768, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.procedureStore.cleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8769, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.procedureStore.cleanerPool.cleanerLatch"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8770, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.procedureStore.cleanerPool.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.size"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8771, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8772, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8773, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.procedureStore.numThreads"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.numThreads"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8774, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.procedureStore.region.DEEP_OVERHEAD"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.DEEP_OVERHEAD"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8775, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.procedureStore.region.FIXED_OVERHEAD"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.FIXED_OVERHEAD"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8776, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8777, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8778, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.procedureStore.region.blockingMemStoreSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.blockingMemStoreSize"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8779, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8780, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8781, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8782, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.procedureStore.region.majorInProgress"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8783, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.procedureStore.region.maxBusyWaitDuration"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitDuration"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8784, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8785, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8786, "HMasterInstance.logCleaner.timeOfThisRun < HMasterInstance.procedureStore.region.timestampSlop"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.timestampSlop"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8787, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.procedureStore.walFactory.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walFactory.timeoutMillis"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8788, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8789, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8790, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.procedureStore.walRoller.threadWakeFrequency"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.threadWakeFrequency"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8791, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.regionServerAccounting.globalMemStoreLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimit"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8792, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8793, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8794, "HMasterInstance.logCleaner.timeOfThisRun < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8795, "HMasterInstance.logCleaner.timeOfThisRun < HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8796, "HMasterInstance.logCleaner.timeOfThisRun < HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8797, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8798, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8799, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8800, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.rpcClient.connectTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connectTO"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8801, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.rpcClient.connections.poolMaxSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8802, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.rpcClient.failedServers.latestExpiry"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8803, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.rpcClient.failedServers.recheckServersTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.recheckServersTimeout"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8804, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.rpcClient.failureSleep"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failureSleep"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8805, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.rpcClient.maxConcurrentCallsPerServer"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.maxConcurrentCallsPerServer"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8806, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.rpcClient.minIdleTimeBeforeClose"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.minIdleTimeBeforeClose"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8807, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.rpcClient.readTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.readTO"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8808, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.rpcClient.writeTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.writeTO"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8809, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.rpcServices.maxScannerResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.maxScannerResultSize"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8810, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8811, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.rpcServices.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcTimeout"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8812, "HMasterInstance.logCleaner.timeOfThisRun < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8813, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.rsFatals.maxSizeBytes"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.maxSizeBytes"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8814, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8815, "HMasterInstance.logCleaner.timeOfThisRun < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8816, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.serverManager.flushedSeqIdFlusher.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.period"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8817, "HMasterInstance.logCleaner.timeOfThisRun < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8818, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.serverManager.maxSkew"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.maxSkew"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8819, "HMasterInstance.logCleaner.timeOfThisRun < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8820, "HMasterInstance.logCleaner.timeOfThisRun < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8821, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.snapshotManager.coordinator.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotManager.coordinator.timeoutMillis"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8822, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8823, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8824, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8825, "HMasterInstance.logCleaner.timeOfThisRun < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8826, "HMasterInstance.logCleaner.timeOfThisRun > HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8827, "HMasterInstance.logCleaner.timeOfThisRun > daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0]))));
			}
		});
		invariants8999.add(new Invariant(8828, "HMasterInstance.logCleaner.timeOfThisRun > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants8999.add(new Invariant(8829, "HMasterInstance.logCleaner.timeOfThisRun > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants8999.add(new Invariant(8830, "HMasterInstance.logCleaner.timeOfThisRun > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants8999.add(new Invariant(8831, "HMasterInstance.logCleaner.timeOfThisRun > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants8999.add(new Invariant(8832, "HMasterInstance.logCleaner.timeOfThisRun > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants8999.add(new Invariant(8833, "HMasterInstance.logCleaner.timeOfThisRun > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants8999.add(new Invariant(8834, "HMasterInstance.masterFinishedInitializationTime != HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8835, "HMasterInstance.masterFinishedInitializationTime != HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8836, "HMasterInstance.masterFinishedInitializationTime > HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8837, "HMasterInstance.masterFinishedInitializationTime > HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8838, "HMasterInstance.masterFinishedInitializationTime > HMasterInstance.mobFileCleanerChore.initialDelay"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.initialDelay"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8839, "HMasterInstance.masterFinishedInitializationTime < HMasterInstance.mobFileCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8840, "HMasterInstance.masterFinishedInitializationTime > HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8841, "HMasterInstance.masterFinishedInitializationTime < HMasterInstance.mobFileCleanerChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8842, "HMasterInstance.masterFinishedInitializationTime > HMasterInstance.mobFileCompactionChore.initialDelay"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.initialDelay"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8843, "HMasterInstance.masterFinishedInitializationTime < HMasterInstance.mobFileCompactionChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8844, "HMasterInstance.masterFinishedInitializationTime < HMasterInstance.mobFileCompactionChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8845, "HMasterInstance.masterFinishedInitializationTime != HMasterInstance.nonceManager.conflictWaitIterationMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.conflictWaitIterationMs"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8846, "HMasterInstance.masterFinishedInitializationTime != HMasterInstance.nonceManager.deleteNonceGracePeriod"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.deleteNonceGracePeriod"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8847, "HMasterInstance.masterFinishedInitializationTime != HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8848, "HMasterInstance.masterFinishedInitializationTime != HMasterInstance.normalizer.masterRpcServices.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.rpcTimeout"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8849, "HMasterInstance.masterFinishedInitializationTime != HMasterInstance.normalizer.minRegionCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.minRegionCount"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8850, "HMasterInstance.masterFinishedInitializationTime < HMasterInstance.normalizerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8851, "HMasterInstance.masterFinishedInitializationTime != HMasterInstance.normalizerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8852, "HMasterInstance.masterFinishedInitializationTime != HMasterInstance.procedureExecutor.corePoolSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.corePoolSize"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8853, "HMasterInstance.masterFinishedInitializationTime != HMasterInstance.procedureExecutor.maxPoolSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.maxPoolSize"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8854, "HMasterInstance.masterFinishedInitializationTime != HMasterInstance.procedureExecutor.store.REGION_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.REGION_ID"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8855, "HMasterInstance.masterFinishedInitializationTime != HMasterInstance.procedureStore.REGION_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.REGION_ID"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8856, "HMasterInstance.masterFinishedInitializationTime != HMasterInstance.procedureStore.TABLE_NAME.hashCode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.TABLE_NAME.hashCode"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8857, "HMasterInstance.masterFinishedInitializationTime != HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8858, "HMasterInstance.masterFinishedInitializationTime != HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8859, "HMasterInstance.masterFinishedInitializationTime < HMasterInstance.procedureStore.cleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8860, "HMasterInstance.masterFinishedInitializationTime != HMasterInstance.procedureStore.cleaner.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.period"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8861, "HMasterInstance.masterFinishedInitializationTime != HMasterInstance.procedureStore.cleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8862, "HMasterInstance.masterFinishedInitializationTime != HMasterInstance.procedureStore.cleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8863, "HMasterInstance.masterFinishedInitializationTime >= HMasterInstance.procedureStore.cleanerPool.cleanerLatch"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8864, "HMasterInstance.masterFinishedInitializationTime != HMasterInstance.procedureStore.cleanerPool.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.size"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8865, "HMasterInstance.masterFinishedInitializationTime != HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8866, "HMasterInstance.masterFinishedInitializationTime != HMasterInstance.procedureStore.numThreads"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.numThreads"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8867, "HMasterInstance.masterFinishedInitializationTime != HMasterInstance.procedureStore.region.DEEP_OVERHEAD"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.DEEP_OVERHEAD"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8868, "HMasterInstance.masterFinishedInitializationTime != HMasterInstance.procedureStore.region.FIXED_OVERHEAD"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.FIXED_OVERHEAD"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8869, "HMasterInstance.masterFinishedInitializationTime != HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8870, "HMasterInstance.masterFinishedInitializationTime != HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8871, "HMasterInstance.masterFinishedInitializationTime != HMasterInstance.procedureStore.region.blockingMemStoreSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.blockingMemStoreSize"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8872, "HMasterInstance.masterFinishedInitializationTime != HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8873, "HMasterInstance.masterFinishedInitializationTime > HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8874, "HMasterInstance.masterFinishedInitializationTime != HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8875, "HMasterInstance.masterFinishedInitializationTime >= HMasterInstance.procedureStore.region.majorInProgress"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8876, "HMasterInstance.masterFinishedInitializationTime != HMasterInstance.procedureStore.region.maxBusyWaitDuration"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitDuration"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8877, "HMasterInstance.masterFinishedInitializationTime != HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8878, "HMasterInstance.masterFinishedInitializationTime != HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8879, "HMasterInstance.masterFinishedInitializationTime < HMasterInstance.procedureStore.region.timestampSlop"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.timestampSlop"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8880, "HMasterInstance.masterFinishedInitializationTime != HMasterInstance.procedureStore.walFactory.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walFactory.timeoutMillis"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8881, "HMasterInstance.masterFinishedInitializationTime != HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8882, "HMasterInstance.masterFinishedInitializationTime != HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8883, "HMasterInstance.masterFinishedInitializationTime != HMasterInstance.procedureStore.walRoller.threadWakeFrequency"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.threadWakeFrequency"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8884, "HMasterInstance.masterFinishedInitializationTime != HMasterInstance.regionServerAccounting.globalMemStoreLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimit"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8885, "HMasterInstance.masterFinishedInitializationTime != HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8886, "HMasterInstance.masterFinishedInitializationTime != HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8887, "HMasterInstance.masterFinishedInitializationTime < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8888, "HMasterInstance.masterFinishedInitializationTime != HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8889, "HMasterInstance.masterFinishedInitializationTime != HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8890, "HMasterInstance.masterFinishedInitializationTime > HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8891, "HMasterInstance.masterFinishedInitializationTime > HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8892, "HMasterInstance.masterFinishedInitializationTime > HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8893, "HMasterInstance.masterFinishedInitializationTime > HMasterInstance.rpcClient.connectTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connectTO"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8894, "HMasterInstance.masterFinishedInitializationTime > HMasterInstance.rpcClient.connections.poolMaxSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8895, "HMasterInstance.masterFinishedInitializationTime > HMasterInstance.rpcClient.failedServers.latestExpiry"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8896, "HMasterInstance.masterFinishedInitializationTime > HMasterInstance.rpcClient.failedServers.recheckServersTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.recheckServersTimeout"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8897, "HMasterInstance.masterFinishedInitializationTime > HMasterInstance.rpcClient.failureSleep"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failureSleep"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8898, "HMasterInstance.masterFinishedInitializationTime > HMasterInstance.rpcClient.maxConcurrentCallsPerServer"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.maxConcurrentCallsPerServer"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8899, "HMasterInstance.masterFinishedInitializationTime > HMasterInstance.rpcClient.minIdleTimeBeforeClose"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.minIdleTimeBeforeClose"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8900, "HMasterInstance.masterFinishedInitializationTime > HMasterInstance.rpcClient.readTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.readTO"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8901, "HMasterInstance.masterFinishedInitializationTime > HMasterInstance.rpcClient.writeTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.writeTO"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8902, "HMasterInstance.masterFinishedInitializationTime != HMasterInstance.rpcServices.maxScannerResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.maxScannerResultSize"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8903, "HMasterInstance.masterFinishedInitializationTime != HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8904, "HMasterInstance.masterFinishedInitializationTime != HMasterInstance.rpcServices.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcTimeout"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8905, "HMasterInstance.masterFinishedInitializationTime < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8906, "HMasterInstance.masterFinishedInitializationTime != HMasterInstance.rsFatals.maxSizeBytes"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.maxSizeBytes"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8907, "HMasterInstance.masterFinishedInitializationTime >= HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8908, "HMasterInstance.masterFinishedInitializationTime < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8909, "HMasterInstance.masterFinishedInitializationTime != HMasterInstance.serverManager.flushedSeqIdFlusher.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.period"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8910, "HMasterInstance.masterFinishedInitializationTime != HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8911, "HMasterInstance.masterFinishedInitializationTime != HMasterInstance.serverManager.maxSkew"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.maxSkew"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8912, "HMasterInstance.masterFinishedInitializationTime < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8913, "HMasterInstance.masterFinishedInitializationTime != HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8914, "HMasterInstance.masterFinishedInitializationTime != HMasterInstance.snapshotManager.coordinator.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotManager.coordinator.timeoutMillis"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8915, "HMasterInstance.masterFinishedInitializationTime != HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8916, "HMasterInstance.masterFinishedInitializationTime != HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8917, "HMasterInstance.masterFinishedInitializationTime != HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8918, "HMasterInstance.masterFinishedInitializationTime >= daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0]))));
			}
		});
		invariants8999.add(new Invariant(8919, "HMasterInstance.masterFinishedInitializationTime >= daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])))-1);
			}
		});
		invariants8999.add(new Invariant(8920, "HMasterInstance.masterFinishedInitializationTime != daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1);
			}
		});
		invariants8999.add(new Invariant(8921, "HMasterInstance.masterFinishedInitializationTime != daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0])))-1);
			}
		});
		invariants8999.add(new Invariant(8922, "HMasterInstance.masterFinishedInitializationTime != daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants8999.add(new Invariant(8923, "HMasterInstance.masterFinishedInitializationTime % daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE) == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() % daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))) == 0);
			}
		});
		invariants8999.add(new Invariant(8924, "HMasterInstance.masterFinishedInitializationTime >= daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])))-1);
			}
		});
		invariants8999.add(new Invariant(8925, "HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES < HMasterInstance.mobFileCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8926, "HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES < HMasterInstance.mobFileCleanerChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8927, "HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES < HMasterInstance.mobFileCompactionChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8928, "HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES < HMasterInstance.mobFileCompactionChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8929, "HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES < HMasterInstance.normalizerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8930, "HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES < HMasterInstance.normalizerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8931, "HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES >= HMasterInstance.procedureExecutor.scheduler.nullPollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.nullPollCalls"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8932, "HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES < HMasterInstance.procedureStore.cleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8933, "HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES < HMasterInstance.procedureStore.cleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8934, "HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES < HMasterInstance.procedureStore.cleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8935, "HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES < HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8936, "HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES != HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8937, "HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES != HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8938, "HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES != HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8939, "HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES < HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8940, "HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8941, "HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES < HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8942, "HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES < HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8943, "HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES < HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8944, "HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8945, "HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES != HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8946, "HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8947, "HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8948, "HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8949, "HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8950, "HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES < HMasterInstance.mobFileCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8951, "HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES < HMasterInstance.mobFileCleanerChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8952, "HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES < HMasterInstance.mobFileCompactionChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8953, "HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES < HMasterInstance.mobFileCompactionChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8954, "HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES < HMasterInstance.normalizerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8955, "HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES < HMasterInstance.normalizerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8956, "HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES < HMasterInstance.procedureStore.cleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8957, "HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES < HMasterInstance.procedureStore.cleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8958, "HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES < HMasterInstance.procedureStore.cleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8959, "HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES > HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8960, "HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES < HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8961, "HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES > HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8962, "HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES > HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8963, "HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES > HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8964, "HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES < HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8965, "HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8966, "HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES < HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8967, "HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES < HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8968, "HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES > HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8969, "HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8970, "HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES > HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8971, "HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8972, "HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8973, "HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8974, "HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8975, "HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS < HMasterInstance.mobFileCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8976, "HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS < HMasterInstance.mobFileCleanerChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8977, "HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS < HMasterInstance.mobFileCompactionChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8978, "HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS < HMasterInstance.mobFileCompactionChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8979, "HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS < HMasterInstance.normalizerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8980, "HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS < HMasterInstance.normalizerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8981, "HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS > HMasterInstance.procedureExecutor.activeExecutorCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8982, "HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS > HMasterInstance.procedureExecutor.lastProcId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.lastProcId"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8983, "HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS > HMasterInstance.procedureExecutor.scheduler.nullPollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.nullPollCalls"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8984, "HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS > HMasterInstance.procedureExecutor.scheduler.pollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.pollCalls"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8985, "HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS < HMasterInstance.procedureStore.cleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8986, "HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS < HMasterInstance.procedureStore.cleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8987, "HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS < HMasterInstance.procedureStore.cleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8988, "HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS > HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8989, "HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS < HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8990, "HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS > HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8991, "HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS > HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8992, "HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS > HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8993, "HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS < HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8994, "HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8995, "HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS < HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8996, "HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS < HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8997, "HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS > HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8998, "HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants8999.add(new Invariant(8999, "HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS > HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
	}
	static {
installInv8999();	}
}
