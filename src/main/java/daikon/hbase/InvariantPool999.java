package daikon.hbase;
import daikon.*;
import java.util.Set;
import java.util.ArrayList;
import java.util.List;
//this class is automatically generated by our scripts
public class InvariantPool999{

	public static List<Invariant> invariants999 = new ArrayList<>();

	public static void installInv999(){
		invariants999.add(new Invariant(0, "HMasterInstance.$assertionsDisabled == HMasterInstance.TEST_SKIP_REPORTING_TRANSITION"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.TEST_SKIP_REPORTING_TRANSITION"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(1, "HMasterInstance.$assertionsDisabled == HMasterInstance.abortRequested"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.abortRequested"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(2, "HMasterInstance.$assertionsDisabled == HMasterInstance.activeMasterManager.master.$assertionsDisabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.$assertionsDisabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(3, "HMasterInstance.$assertionsDisabled == HMasterInstance.activeMasterManager.master.TEST_SKIP_REPORTING_TRANSITION"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.TEST_SKIP_REPORTING_TRANSITION"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(4, "HMasterInstance.$assertionsDisabled == HMasterInstance.activeMasterManager.master.abortRequested"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.abortRequested"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(5, "HMasterInstance.$assertionsDisabled == HMasterInstance.activeMasterManager.master.killed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.killed"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(6, "HMasterInstance.$assertionsDisabled == HMasterInstance.activeMasterManager.master.maintenanceMode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.maintenanceMode"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(7, "HMasterInstance.$assertionsDisabled == HMasterInstance.activeMasterManager.master.masterless"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterless"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(8, "HMasterInstance.$assertionsDisabled == HMasterInstance.activeMasterManager.master.online"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.online"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(9, "HMasterInstance.$assertionsDisabled == HMasterInstance.activeMasterManager.master.stopping"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.stopping"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(10, "HMasterInstance.$assertionsDisabled == HMasterInstance.activeMasterManager.watcher.aborted"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.watcher.aborted"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(11, "HMasterInstance.$assertionsDisabled == HMasterInstance.assignmentManager.$assertionsDisabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.assignmentManager.$assertionsDisabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(12, "HMasterInstance.$assertionsDisabled == HMasterInstance.asyncClusterConnection.conn.aborted"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.conn.aborted"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(13, "HMasterInstance.$assertionsDisabled == HMasterInstance.asyncClusterConnection.rpcClient.shutdownGroupWhenClose"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.shutdownGroupWhenClose"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(14, "HMasterInstance.$assertionsDisabled == HMasterInstance.balancerChore.timeMeasurement.oneRound"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeMeasurement.oneRound"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(15, "HMasterInstance.$assertionsDisabled == HMasterInstance.cachedClusterId.fetchInProgress"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.cachedClusterId.fetchInProgress"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(16, "HMasterInstance.$assertionsDisabled == HMasterInstance.cachedClusterId.isClusterIdSet"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.cachedClusterId.isClusterIdSet"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(17, "HMasterInstance.$assertionsDisabled == HMasterInstance.cleanerPool.reconfigNotification"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.cleanerPool.reconfigNotification"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(18, "HMasterInstance.$assertionsDisabled == HMasterInstance.clusterStatusTracker.stopped"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.clusterStatusTracker.stopped"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(19, "HMasterInstance.$assertionsDisabled == HMasterInstance.clusterStatusTracker.watcher.aborted"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.clusterStatusTracker.watcher.aborted"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(20, "HMasterInstance.$assertionsDisabled == HMasterInstance.csm.splitLogManagerCoordination.ignoreZKDeleteForTesting"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.ignoreZKDeleteForTesting"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(21, "HMasterInstance.$assertionsDisabled == HMasterInstance.csm.splitLogWorkerCoordination.shouldStop"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.shouldStop"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(22, "HMasterInstance.$assertionsDisabled == HMasterInstance.csm.splitLogWorkerCoordination.workerInGrabTask"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.workerInGrabTask"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(23, "HMasterInstance.$assertionsDisabled == HMasterInstance.csm.watcher.aborted"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.csm.watcher.aborted"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(24, "HMasterInstance.$assertionsDisabled == HMasterInstance.drainingServerTracker.watcher.aborted"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.drainingServerTracker.watcher.aborted"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(25, "HMasterInstance.$assertionsDisabled == HMasterInstance.fileSystemManager.isSecurityEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.fileSystemManager.isSecurityEnabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(26, "HMasterInstance.$assertionsDisabled == HMasterInstance.killed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.killed"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(27, "HMasterInstance.$assertionsDisabled == HMasterInstance.maintenanceMode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.maintenanceMode"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(28, "HMasterInstance.$assertionsDisabled == HMasterInstance.masterAddressTracker.stopped"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.masterAddressTracker.stopped"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(29, "HMasterInstance.$assertionsDisabled == HMasterInstance.masterAddressTracker.watcher.aborted"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.masterAddressTracker.watcher.aborted"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(30, "HMasterInstance.$assertionsDisabled == HMasterInstance.masterless"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.masterless"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(31, "HMasterInstance.$assertionsDisabled == HMasterInstance.metaRegionLocationCache.watcher.aborted"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.watcher.aborted"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(32, "HMasterInstance.$assertionsDisabled == HMasterInstance.mobCompactionLock.$assertionsDisabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.mobCompactionLock.$assertionsDisabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(33, "HMasterInstance.$assertionsDisabled == HMasterInstance.nonceManager.$assertionsDisabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.nonceManager.$assertionsDisabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(34, "HMasterInstance.$assertionsDisabled == HMasterInstance.online"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.online"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(35, "HMasterInstance.$assertionsDisabled == HMasterInstance.procedureExecutor.$assertionsDisabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.$assertionsDisabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(36, "HMasterInstance.$assertionsDisabled == HMasterInstance.procedureStore.TABLE_NAME.systemTable"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.TABLE_NAME.systemTable"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(37, "HMasterInstance.$assertionsDisabled == HMasterInstance.procedureStore.flusherAndCompactor.$assertionsDisabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.$assertionsDisabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(38, "HMasterInstance.$assertionsDisabled == HMasterInstance.rpcClient.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcClient.running"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(39, "HMasterInstance.$assertionsDisabled == HMasterInstance.rpcServices.$assertionsDisabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcServices.$assertionsDisabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(40, "HMasterInstance.$assertionsDisabled == HMasterInstance.rpcServices.clearCompactionQueues"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcServices.clearCompactionQueues"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(41, "HMasterInstance.$assertionsDisabled == HMasterInstance.rpcServices.regionServer.$assertionsDisabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcServices.regionServer.$assertionsDisabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(42, "HMasterInstance.$assertionsDisabled == HMasterInstance.rpcServices.regionServer.TEST_SKIP_REPORTING_TRANSITION"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcServices.regionServer.TEST_SKIP_REPORTING_TRANSITION"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(43, "HMasterInstance.$assertionsDisabled == HMasterInstance.rpcServices.regionServer.abortRequested"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcServices.regionServer.abortRequested"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(44, "HMasterInstance.$assertionsDisabled == HMasterInstance.rpcServices.regionServer.killed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcServices.regionServer.killed"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(45, "HMasterInstance.$assertionsDisabled == HMasterInstance.rpcServices.regionServer.maintenanceMode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcServices.regionServer.maintenanceMode"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(46, "HMasterInstance.$assertionsDisabled == HMasterInstance.rpcServices.regionServer.masterless"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcServices.regionServer.masterless"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(47, "HMasterInstance.$assertionsDisabled == HMasterInstance.rpcServices.regionServer.online"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcServices.regionServer.online"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(48, "HMasterInstance.$assertionsDisabled == HMasterInstance.rpcServices.regionServer.stopping"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcServices.regionServer.stopping"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(49, "HMasterInstance.$assertionsDisabled == HMasterInstance.rpcServices.rejectRowsWithSizeOverThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcServices.rejectRowsWithSizeOverThreshold"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(50, "HMasterInstance.$assertionsDisabled == HMasterInstance.rpcServices.rpcServer.allowFallbackToSimpleAuth"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcServer.allowFallbackToSimpleAuth"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(51, "HMasterInstance.$assertionsDisabled == HMasterInstance.rpcServices.rpcServer.authorize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcServer.authorize"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(52, "HMasterInstance.$assertionsDisabled == HMasterInstance.rpcServices.rpcServer.isSecurityEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcServer.isSecurityEnabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(53, "HMasterInstance.$assertionsDisabled == HMasterInstance.rsFatals.$assertionsDisabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rsFatals.$assertionsDisabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(54, "HMasterInstance.$assertionsDisabled == HMasterInstance.sleeper.triggerWake"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.sleeper.triggerWake"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(55, "HMasterInstance.$assertionsDisabled == HMasterInstance.stopping"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.stopping"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(56, "HMasterInstance.$assertionsDisabled == HMasterInstance.tableDescriptors.fsreadonly"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.fsreadonly"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(57, "HMasterInstance.$assertionsDisabled == HMasterInstance.zooKeeper.aborted"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.zooKeeper.aborted"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(58, "HMasterInstance.$assertionsDisabled == HMasterInstance.zooKeeper.recoverableZooKeeper.$assertionsDisabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.zooKeeper.recoverableZooKeeper.$assertionsDisabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(59, "HMasterInstance.TIMEOUT_REGION_MOVED == HMasterInstance.activeMasterManager.master.TIMEOUT_REGION_MOVED"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.TIMEOUT_REGION_MOVED"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.TIMEOUT_REGION_MOVED"))).intValue());
			}
		});
		invariants999.add(new Invariant(60, "HMasterInstance.TIMEOUT_REGION_MOVED == HMasterInstance.asyncClusterConnection.rpcClient.minIdleTimeBeforeClose"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.TIMEOUT_REGION_MOVED"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.minIdleTimeBeforeClose"))).intValue());
			}
		});
		invariants999.add(new Invariant(61, "HMasterInstance.TIMEOUT_REGION_MOVED == HMasterInstance.procedureStore.region.maxBusyWaitDuration"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.TIMEOUT_REGION_MOVED"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitDuration"))).intValue());
			}
		});
		invariants999.add(new Invariant(62, "HMasterInstance.TIMEOUT_REGION_MOVED == HMasterInstance.rpcClient.minIdleTimeBeforeClose"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.TIMEOUT_REGION_MOVED"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.minIdleTimeBeforeClose"))).intValue());
			}
		});
		invariants999.add(new Invariant(63, "HMasterInstance.TIMEOUT_REGION_MOVED == HMasterInstance.rpcServices.regionServer.TIMEOUT_REGION_MOVED"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.TIMEOUT_REGION_MOVED"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.regionServer.TIMEOUT_REGION_MOVED"))).intValue());
			}
		});
		invariants999.add(new Invariant(64, "HMasterInstance.activeMaster == HMasterInstance.activeMasterManager.master.activeMaster"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.activeMaster"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.activeMaster"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(65, "HMasterInstance.activeMaster == HMasterInstance.activeMasterManager.master.serviceStarted"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.activeMaster"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.serviceStarted"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(66, "HMasterInstance.activeMaster == HMasterInstance.balancer.internalBalancer.useRegionFinder"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.activeMaster"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.useRegionFinder"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(67, "HMasterInstance.activeMaster == HMasterInstance.balancerChore.initialChoreComplete"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.activeMaster"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.balancerChore.initialChoreComplete"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(68, "HMasterInstance.activeMaster == HMasterInstance.rpcClient.fallbackAllowed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.activeMaster"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcClient.fallbackAllowed"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(69, "HMasterInstance.activeMaster == HMasterInstance.rpcServices.regionServer.activeMaster"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.activeMaster"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcServices.regionServer.activeMaster"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(70, "HMasterInstance.activeMaster == HMasterInstance.rpcServices.regionServer.serviceStarted"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.activeMaster"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcServices.regionServer.serviceStarted"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(71, "HMasterInstance.activeMaster == HMasterInstance.serviceStarted"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.activeMaster"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.serviceStarted"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(72, "HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE == HMasterInstance.activeMasterManager.infoPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.infoPort"))).intValue());
			}
		});
		invariants999.add(new Invariant(73, "HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE == HMasterInstance.activeMasterManager.sn.NON_STARTCODE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.sn.NON_STARTCODE"))).intValue());
			}
		});
		invariants999.add(new Invariant(74, "HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE == HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID"))).intValue());
			}
		});
		invariants999.add(new Invariant(75, "HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE == HMasterInstance.balancerChore.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants999.add(new Invariant(76, "HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE == HMasterInstance.csm.splitLogWorkerCoordination.FAILED_TO_OWN_TASK"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.FAILED_TO_OWN_TASK"))).intValue());
			}
		});
		invariants999.add(new Invariant(77, "HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE == HMasterInstance.hfileCleaner.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants999.add(new Invariant(78, "HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE == HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants999.add(new Invariant(79, "HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE == HMasterInstance.serverName.NON_STARTCODE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.serverName.NON_STARTCODE"))).intValue());
			}
		});
		invariants999.add(new Invariant(80, "HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE == daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0])))-1);
			}
		});
		invariants999.add(new Invariant(81, "HMasterInstance.activeMasterManager.activeMasterServerName.VERSION == HMasterInstance.activeMasterManager.sn.VERSION"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Short)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.VERSION"))).shortValue() == ((Short)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.sn.VERSION"))).shortValue());
			}
		});
		invariants999.add(new Invariant(82, "HMasterInstance.activeMasterManager.activeMasterServerName.VERSION == HMasterInstance.serverName.VERSION"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Short)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.VERSION"))).shortValue() == ((Short)(InvariantChecker.getValue("HMasterInstance.serverName.VERSION"))).shortValue());
			}
		});
		invariants999.add(new Invariant(83, "HMasterInstance.activeMasterManager.activeMasterServerName.serialVersionUID == HMasterInstance.activeMasterManager.sn.serialVersionUID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.serialVersionUID"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.sn.serialVersionUID"))).intValue());
			}
		});
		invariants999.add(new Invariant(84, "HMasterInstance.activeMasterManager.activeMasterServerName.serialVersionUID == HMasterInstance.serverName.serialVersionUID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.serialVersionUID"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.serverName.serialVersionUID"))).intValue());
			}
		});
		invariants999.add(new Invariant(85, "HMasterInstance.activeMasterManager.activeMasterServerName.startcode == HMasterInstance.activeMasterManager.master.startcode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.startcode"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.startcode"))).intValue());
			}
		});
		invariants999.add(new Invariant(86, "HMasterInstance.activeMasterManager.activeMasterServerName.startcode == HMasterInstance.activeMasterManager.sn.startcode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.startcode"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.sn.startcode"))).intValue());
			}
		});
		invariants999.add(new Invariant(87, "HMasterInstance.activeMasterManager.activeMasterServerName.startcode == HMasterInstance.rpcServices.regionServer.startcode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.startcode"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.regionServer.startcode"))).intValue());
			}
		});
		invariants999.add(new Invariant(88, "HMasterInstance.activeMasterManager.activeMasterServerName.startcode == HMasterInstance.serverName.startcode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.startcode"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.serverName.startcode"))).intValue());
			}
		});
		invariants999.add(new Invariant(89, "HMasterInstance.activeMasterManager.activeMasterServerName.startcode == HMasterInstance.startcode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.startcode"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.startcode"))).intValue());
			}
		});
		invariants999.add(new Invariant(90, "HMasterInstance.activeMasterManager.clusterHasActiveMaster == HMasterInstance.activeMasterManager.master.dataFsOk"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.clusterHasActiveMaster"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.dataFsOk"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(91, "HMasterInstance.activeMasterManager.clusterHasActiveMaster == HMasterInstance.activeMasterManager.master.preLoadTableDescriptors"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.clusterHasActiveMaster"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.preLoadTableDescriptors"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(92, "HMasterInstance.activeMasterManager.clusterHasActiveMaster == HMasterInstance.assignmentManager.deadMetricChore.persist"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.clusterHasActiveMaster"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.persist"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(93, "HMasterInstance.activeMasterManager.clusterHasActiveMaster == HMasterInstance.asyncClusterConnection.hostnameCanChange"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.clusterHasActiveMaster"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.hostnameCanChange"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(94, "HMasterInstance.activeMasterManager.clusterHasActiveMaster == HMasterInstance.balancer.internalBalancer.useRegionFinder"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.clusterHasActiveMaster"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.useRegionFinder"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(95, "HMasterInstance.activeMasterManager.clusterHasActiveMaster == HMasterInstance.balancerChore.initialChoreComplete"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.clusterHasActiveMaster"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.balancerChore.initialChoreComplete"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(96, "HMasterInstance.activeMasterManager.clusterHasActiveMaster == HMasterInstance.dataFs.useHBaseChecksum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.clusterHasActiveMaster"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.dataFs.useHBaseChecksum"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(97, "HMasterInstance.activeMasterManager.clusterHasActiveMaster == HMasterInstance.dataFsOk"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.clusterHasActiveMaster"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.dataFsOk"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(98, "HMasterInstance.activeMasterManager.clusterHasActiveMaster == HMasterInstance.preLoadTableDescriptors"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.clusterHasActiveMaster"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.preLoadTableDescriptors"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(99, "HMasterInstance.activeMasterManager.clusterHasActiveMaster == HMasterInstance.procedureExecutor.store.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.clusterHasActiveMaster"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.running"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(100, "HMasterInstance.activeMasterManager.clusterHasActiveMaster == HMasterInstance.procedureStore.cleaner.enabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.clusterHasActiveMaster"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.enabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(101, "HMasterInstance.activeMasterManager.clusterHasActiveMaster == HMasterInstance.procedureStore.walRoller.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.clusterHasActiveMaster"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.running"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(102, "HMasterInstance.activeMasterManager.clusterHasActiveMaster == HMasterInstance.rpcClient.fallbackAllowed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.clusterHasActiveMaster"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcClient.fallbackAllowed"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(103, "HMasterInstance.activeMasterManager.clusterHasActiveMaster == HMasterInstance.rpcServices.regionServer.dataFsOk"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.clusterHasActiveMaster"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcServices.regionServer.dataFsOk"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(104, "HMasterInstance.activeMasterManager.clusterHasActiveMaster == HMasterInstance.rpcServices.regionServer.preLoadTableDescriptors"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.clusterHasActiveMaster"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcServices.regionServer.preLoadTableDescriptors"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(105, "HMasterInstance.activeMasterManager.clusterHasActiveMaster == HMasterInstance.rpcServices.rpcServer.started"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.clusterHasActiveMaster"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcServer.started"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(106, "HMasterInstance.activeMasterManager.clusterHasActiveMaster == HMasterInstance.rpcServices.rpcServer.tcpKeepAlive"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.clusterHasActiveMaster"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcServer.tcpKeepAlive"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(107, "HMasterInstance.activeMasterManager.clusterHasActiveMaster == HMasterInstance.rpcServices.rpcServer.tcpNoDelay"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.clusterHasActiveMaster"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcServer.tcpNoDelay"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(108, "HMasterInstance.activeMasterManager.clusterHasActiveMaster == HMasterInstance.walFs.useHBaseChecksum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.clusterHasActiveMaster"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.walFs.useHBaseChecksum"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(109, "HMasterInstance.activeMasterManager.clusterHasActiveMaster == HMasterInstance.walManager.fsOk"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.clusterHasActiveMaster"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.walManager.fsOk"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(110, "HMasterInstance.activeMasterManager.clusterShutDown == HMasterInstance.asyncClusterConnection.closed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.clusterShutDown"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.closed"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(111, "HMasterInstance.activeMasterManager.clusterShutDown == HMasterInstance.rpcClient.fallbackAllowed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.clusterShutDown"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcClient.fallbackAllowed"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(112, "HMasterInstance.activeMasterManager.master.compactionCheckFrequency == HMasterInstance.activeMasterManager.master.flushCheckFrequency"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.compactionCheckFrequency"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.flushCheckFrequency"))).intValue());
			}
		});
		invariants999.add(new Invariant(113, "HMasterInstance.activeMasterManager.master.compactionCheckFrequency == HMasterInstance.activeMasterManager.master.msgInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.compactionCheckFrequency"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.msgInterval"))).intValue());
			}
		});
		invariants999.add(new Invariant(114, "HMasterInstance.activeMasterManager.master.compactionCheckFrequency == HMasterInstance.activeMasterManager.master.threadWakeFrequency"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.compactionCheckFrequency"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.threadWakeFrequency"))).intValue());
			}
		});
		invariants999.add(new Invariant(115, "HMasterInstance.activeMasterManager.master.compactionCheckFrequency == HMasterInstance.asyncClusterConnection.connConf.metaScannerCaching"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.compactionCheckFrequency"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.metaScannerCaching"))).intValue());
			}
		});
		invariants999.add(new Invariant(116, "HMasterInstance.activeMasterManager.master.compactionCheckFrequency == HMasterInstance.compactionCheckFrequency"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.compactionCheckFrequency"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.compactionCheckFrequency"))).intValue());
			}
		});
		invariants999.add(new Invariant(117, "HMasterInstance.activeMasterManager.master.compactionCheckFrequency == HMasterInstance.flushCheckFrequency"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.compactionCheckFrequency"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.flushCheckFrequency"))).intValue());
			}
		});
		invariants999.add(new Invariant(118, "HMasterInstance.activeMasterManager.master.compactionCheckFrequency == HMasterInstance.msgInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.compactionCheckFrequency"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.msgInterval"))).intValue());
			}
		});
		invariants999.add(new Invariant(119, "HMasterInstance.activeMasterManager.master.compactionCheckFrequency == HMasterInstance.procedureStore.walRoller.threadWakeFrequency"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.compactionCheckFrequency"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.threadWakeFrequency"))).intValue());
			}
		});
		invariants999.add(new Invariant(120, "HMasterInstance.activeMasterManager.master.compactionCheckFrequency == HMasterInstance.rpcClient.failureSleep"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.compactionCheckFrequency"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failureSleep"))).intValue());
			}
		});
		invariants999.add(new Invariant(121, "HMasterInstance.activeMasterManager.master.compactionCheckFrequency == HMasterInstance.rpcServices.regionServer.compactionCheckFrequency"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.compactionCheckFrequency"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.regionServer.compactionCheckFrequency"))).intValue());
			}
		});
		invariants999.add(new Invariant(122, "HMasterInstance.activeMasterManager.master.compactionCheckFrequency == HMasterInstance.rpcServices.regionServer.flushCheckFrequency"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.compactionCheckFrequency"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.regionServer.flushCheckFrequency"))).intValue());
			}
		});
		invariants999.add(new Invariant(123, "HMasterInstance.activeMasterManager.master.compactionCheckFrequency == HMasterInstance.rpcServices.regionServer.msgInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.compactionCheckFrequency"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.regionServer.msgInterval"))).intValue());
			}
		});
		invariants999.add(new Invariant(124, "HMasterInstance.activeMasterManager.master.compactionCheckFrequency == HMasterInstance.rpcServices.regionServer.threadWakeFrequency"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.compactionCheckFrequency"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.regionServer.threadWakeFrequency"))).intValue());
			}
		});
		invariants999.add(new Invariant(125, "HMasterInstance.activeMasterManager.master.compactionCheckFrequency == HMasterInstance.sleeper.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.compactionCheckFrequency"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.sleeper.period"))).intValue());
			}
		});
		invariants999.add(new Invariant(126, "HMasterInstance.activeMasterManager.master.compactionCheckFrequency == HMasterInstance.threadWakeFrequency"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.compactionCheckFrequency"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.threadWakeFrequency"))).intValue());
			}
		});
		invariants999.add(new Invariant(127, "HMasterInstance.activeMasterManager.master.masterActiveTime == HMasterInstance.masterActiveTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterActiveTime"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.masterActiveTime"))).intValue());
			}
		});
		invariants999.add(new Invariant(128, "HMasterInstance.activeMasterManager.master.masterActiveTime == HMasterInstance.rpcServices.regionServer.masterActiveTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterActiveTime"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.regionServer.masterActiveTime"))).intValue());
			}
		});
		invariants999.add(new Invariant(129, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime == HMasterInstance.masterFinishedInitializationTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.masterFinishedInitializationTime"))).intValue());
			}
		});
		invariants999.add(new Invariant(130, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime == HMasterInstance.rpcServices.regionServer.masterFinishedInitializationTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.regionServer.masterFinishedInitializationTime"))).intValue());
			}
		});
		invariants999.add(new Invariant(131, "HMasterInstance.activeMasterManager.master.maxBalancingTime == HMasterInstance.balancerChore.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.maxBalancingTime"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.period"))).intValue());
			}
		});
		invariants999.add(new Invariant(132, "HMasterInstance.activeMasterManager.master.maxBalancingTime == HMasterInstance.maxBalancingTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.maxBalancingTime"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.maxBalancingTime"))).intValue());
			}
		});
		invariants999.add(new Invariant(133, "HMasterInstance.activeMasterManager.master.maxBalancingTime == HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.maxBalancingTime"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"))).intValue());
			}
		});
		invariants999.add(new Invariant(134, "HMasterInstance.activeMasterManager.master.maxBalancingTime == HMasterInstance.procedureStore.walFactory.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.maxBalancingTime"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walFactory.timeoutMillis"))).intValue());
			}
		});
		invariants999.add(new Invariant(135, "HMasterInstance.activeMasterManager.master.maxBalancingTime == HMasterInstance.rpcServices.regionServer.maxBalancingTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.maxBalancingTime"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.regionServer.maxBalancingTime"))).intValue());
			}
		});
		invariants999.add(new Invariant(136, "HMasterInstance.activeMasterManager.master.maxBalancingTime == HMasterInstance.snapshotManager.coordinator.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.maxBalancingTime"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotManager.coordinator.timeoutMillis"))).intValue());
			}
		});
		invariants999.add(new Invariant(137, "daikon.Quant.fuzzy.eq(HMasterInstance.activeMasterManager.master.maxRitPercent, HMasterInstance.maxRitPercent)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.fuzzy.eq(((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.maxRitPercent"))).doubleValue(), ((Number)(InvariantChecker.getValue("HMasterInstance.maxRitPercent"))).doubleValue()));
			}
		});
		invariants999.add(new Invariant(138, "daikon.Quant.fuzzy.eq(HMasterInstance.activeMasterManager.master.maxRitPercent, HMasterInstance.rpcServices.priority.scanVirtualTimeWeight)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.fuzzy.eq(((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.maxRitPercent"))).doubleValue(), ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.priority.scanVirtualTimeWeight"))).doubleValue()));
			}
		});
		invariants999.add(new Invariant(139, "daikon.Quant.fuzzy.eq(HMasterInstance.activeMasterManager.master.maxRitPercent, HMasterInstance.rpcServices.regionServer.maxRitPercent)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.fuzzy.eq(((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.maxRitPercent"))).doubleValue(), ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.regionServer.maxRitPercent"))).doubleValue()));
			}
		});
		invariants999.add(new Invariant(140, "HMasterInstance.activeMasterManager.master.mergePlanCount == HMasterInstance.activeMasterManager.master.splitPlanCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.splitPlanCount"))).intValue());
			}
		});
		invariants999.add(new Invariant(141, "HMasterInstance.activeMasterManager.master.mergePlanCount == HMasterInstance.assignmentManager.deadMetricChore.childrenLatch"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.childrenLatch"))).intValue());
			}
		});
		invariants999.add(new Invariant(142, "HMasterInstance.activeMasterManager.master.mergePlanCount == HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs"))).intValue());
			}
		});
		invariants999.add(new Invariant(143, "HMasterInstance.activeMasterManager.master.mergePlanCount == HMasterInstance.balancer.clusterStatus.masterInfoPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.balancer.clusterStatus.masterInfoPort"))).intValue());
			}
		});
		invariants999.add(new Invariant(144, "HMasterInstance.activeMasterManager.master.mergePlanCount == HMasterInstance.cachedClusterId.cacheMisses"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.cachedClusterId.cacheMisses"))).intValue());
			}
		});
		invariants999.add(new Invariant(145, "HMasterInstance.activeMasterManager.master.mergePlanCount == HMasterInstance.cleanerPool.cleanerLatch"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.cleanerPool.cleanerLatch"))).intValue());
			}
		});
		invariants999.add(new Invariant(146, "HMasterInstance.activeMasterManager.master.mergePlanCount == HMasterInstance.csm.splitLogWorkerCoordination.currentVersion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.currentVersion"))).intValue());
			}
		});
		invariants999.add(new Invariant(147, "HMasterInstance.activeMasterManager.master.mergePlanCount == HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue());
			}
		});
		invariants999.add(new Invariant(148, "HMasterInstance.activeMasterManager.master.mergePlanCount == HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue());
			}
		});
		invariants999.add(new Invariant(149, "HMasterInstance.activeMasterManager.master.mergePlanCount == HMasterInstance.csm.splitLogWorkerCoordination.taskReadySeq"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.taskReadySeq"))).intValue());
			}
		});
		invariants999.add(new Invariant(150, "HMasterInstance.activeMasterManager.master.mergePlanCount == HMasterInstance.csm.splitLogWorkerCoordination.tasksInProgress"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.tasksInProgress"))).intValue());
			}
		});
		invariants999.add(new Invariant(151, "HMasterInstance.activeMasterManager.master.mergePlanCount == HMasterInstance.mergePlanCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.mergePlanCount"))).intValue());
			}
		});
		invariants999.add(new Invariant(152, "HMasterInstance.activeMasterManager.master.mergePlanCount == HMasterInstance.procedureStore.cleanerPool.cleanerLatch"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue());
			}
		});
		invariants999.add(new Invariant(153, "HMasterInstance.activeMasterManager.master.mergePlanCount == HMasterInstance.procedureStore.region.majorInProgress"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue());
			}
		});
		invariants999.add(new Invariant(154, "HMasterInstance.activeMasterManager.master.mergePlanCount == HMasterInstance.rpcClient.failedServers.latestExpiry"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue());
			}
		});
		invariants999.add(new Invariant(155, "HMasterInstance.activeMasterManager.master.mergePlanCount == HMasterInstance.rpcServices.regionServer.mergePlanCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.regionServer.mergePlanCount"))).intValue());
			}
		});
		invariants999.add(new Invariant(156, "HMasterInstance.activeMasterManager.master.mergePlanCount == HMasterInstance.rpcServices.regionServer.splitPlanCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.regionServer.splitPlanCount"))).intValue());
			}
		});
		invariants999.add(new Invariant(157, "HMasterInstance.activeMasterManager.master.mergePlanCount == HMasterInstance.rpcServices.rpcServer.CURRENT_VERSION"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcServer.CURRENT_VERSION"))).intValue());
			}
		});
		invariants999.add(new Invariant(158, "HMasterInstance.activeMasterManager.master.mergePlanCount == HMasterInstance.rpcServices.scannerIdGenerator.scannerIdGen"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.scannerIdGen"))).intValue());
			}
		});
		invariants999.add(new Invariant(159, "HMasterInstance.activeMasterManager.master.mergePlanCount == HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants999.add(new Invariant(160, "HMasterInstance.activeMasterManager.master.mergePlanCount == HMasterInstance.splitPlanCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.splitPlanCount"))).intValue());
			}
		});
		invariants999.add(new Invariant(161, "HMasterInstance.activeMasterManager.master.mergePlanCount == daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(162, "HMasterInstance.activeMasterManager.master.mergePlanCount == daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])))-1);
			}
		});
		invariants999.add(new Invariant(163, "HMasterInstance.activeMasterManager.master.shortOperationTimeout == HMasterInstance.asyncClusterConnection.rpcClient.connectTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.shortOperationTimeout"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.connectTO"))).intValue());
			}
		});
		invariants999.add(new Invariant(164, "HMasterInstance.activeMasterManager.master.shortOperationTimeout == HMasterInstance.cachedClusterId.MAX_FETCH_TIMEOUT_MS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.shortOperationTimeout"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.cachedClusterId.MAX_FETCH_TIMEOUT_MS"))).intValue());
			}
		});
		invariants999.add(new Invariant(165, "HMasterInstance.activeMasterManager.master.shortOperationTimeout == HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_MAX"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.shortOperationTimeout"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_MAX"))).intValue());
			}
		});
		invariants999.add(new Invariant(166, "HMasterInstance.activeMasterManager.master.shortOperationTimeout == HMasterInstance.rpcClient.connectTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.shortOperationTimeout"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connectTO"))).intValue());
			}
		});
		invariants999.add(new Invariant(167, "HMasterInstance.activeMasterManager.master.shortOperationTimeout == HMasterInstance.rpcServices.regionServer.shortOperationTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.shortOperationTimeout"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.regionServer.shortOperationTimeout"))).intValue());
			}
		});
		invariants999.add(new Invariant(168, "HMasterInstance.activeMasterManager.master.shortOperationTimeout == HMasterInstance.rpcServices.rpcServer.warnResponseTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.shortOperationTimeout"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcServer.warnResponseTime"))).intValue());
			}
		});
		invariants999.add(new Invariant(169, "HMasterInstance.activeMasterManager.master.shortOperationTimeout == HMasterInstance.shortOperationTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.shortOperationTimeout"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.shortOperationTimeout"))).intValue());
			}
		});
		invariants999.add(new Invariant(170, "HMasterInstance.activeMasterManager.master.shortOperationTimeout == HMasterInstance.sleeper.MINIMAL_DELTA_FOR_LOGGING"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.shortOperationTimeout"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.sleeper.MINIMAL_DELTA_FOR_LOGGING"))).intValue());
			}
		});
		invariants999.add(new Invariant(171, "HMasterInstance.activeMasterManager.master.shutDown == HMasterInstance.cleanerPool.reconfigNotification"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.shutDown"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.cleanerPool.reconfigNotification"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(172, "HMasterInstance.activeMasterManager.master.shutDown == HMasterInstance.procedureExecutor.$assertionsDisabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.shutDown"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.$assertionsDisabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(173, "HMasterInstance.activeMasterManager.master.shutDown == HMasterInstance.procedureStore.TABLE_NAME.systemTable"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.shutDown"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.TABLE_NAME.systemTable"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(174, "HMasterInstance.activeMasterManager.master.shutDown == HMasterInstance.procedureStore.flusherAndCompactor.$assertionsDisabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.shutDown"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.$assertionsDisabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(175, "HMasterInstance.activeMasterManager.master.shutDown == HMasterInstance.rpcServices.regionServer.shutDown"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.shutDown"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcServices.regionServer.shutDown"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(176, "HMasterInstance.activeMasterManager.master.shutDown == HMasterInstance.shutDown"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.shutDown"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.shutDown"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(177, "HMasterInstance.activeMasterManager.master.shutDown == HMasterInstance.snapshotCleanerChore.snapshotManager.stopped"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.shutDown"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.snapshotManager.stopped"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(178, "HMasterInstance.activeMasterManager.master.shutDown == HMasterInstance.snapshotManager.stopped"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.shutDown"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.snapshotManager.stopped"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(179, "HMasterInstance.activeMasterManager.master.stopped == HMasterInstance.cleanerPool.reconfigNotification"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.stopped"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.cleanerPool.reconfigNotification"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(180, "HMasterInstance.activeMasterManager.master.stopped == HMasterInstance.rpcClient.fallbackAllowed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.stopped"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcClient.fallbackAllowed"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(181, "HMasterInstance.activeMasterManager.master.stopped == HMasterInstance.rpcServices.regionServer.stopped"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.stopped"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcServices.regionServer.stopped"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(182, "HMasterInstance.activeMasterManager.master.stopped == HMasterInstance.spanReceiverHost.closed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.stopped"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.spanReceiverHost.closed"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(183, "HMasterInstance.activeMasterManager.master.stopped == HMasterInstance.stopped"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.stopped"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.stopped"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(184, "HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE == HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return ((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0])) == (Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])));
			}
		});
		invariants999.add(new Invariant(185, "HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE == HMasterInstance.mobCompactionLock.map_FOR_ENCLOSING_USE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return ((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0])) == (Set.class.cast(InvariantChecker.getValue("HMasterInstance.mobCompactionLock.map")).toArray(new Object[0])));
			}
		});
		invariants999.add(new Invariant(186, "HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE == HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return ((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0])) == (Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])));
			}
		});
		invariants999.add(new Invariant(187, "HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE == HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return ((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0])) == (Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0])));
			}
		});
		invariants999.add(new Invariant(188, "HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE == HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return ((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0])) == (Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0])));
			}
		});
		invariants999.add(new Invariant(189, "HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE == HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return ((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0])) == (Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0])));
			}
		});
		invariants999.add(new Invariant(190, "HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE == HMasterInstance.rpcServices.regionServer.submittedRegionProcedures_FOR_ENCLOSING_USE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return ((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0])) == (Set.class.cast(InvariantChecker.getValue("HMasterInstance.rpcServices.regionServer.submittedRegionProcedures")).toArray(new Object[0])));
			}
		});
		invariants999.add(new Invariant(191, "HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE == HMasterInstance.submittedRegionProcedures_FOR_ENCLOSING_USE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return ((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0])) == (Set.class.cast(InvariantChecker.getValue("HMasterInstance.submittedRegionProcedures")).toArray(new Object[0])));
			}
		});
		invariants999.add(new Invariant(192, "HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE == HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return ((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0])) == (Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])));
			}
		});
		invariants999.add(new Invariant(193, "daikon.Quant.pairwiseEqual(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE, HMasterInstance.mobCompactionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.pairwiseEqual((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0])), (Set.class.cast(InvariantChecker.getValue("HMasterInstance.mobCompactionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(194, "daikon.Quant.pairwiseEqual(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE, HMasterInstance.rpcServices.regionServer.submittedRegionProcedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.pairwiseEqual((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0])), (Set.class.cast(InvariantChecker.getValue("HMasterInstance.rpcServices.regionServer.submittedRegionProcedures")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(195, "daikon.Quant.pairwiseEqual(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE, HMasterInstance.submittedRegionProcedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.pairwiseEqual((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0])), (Set.class.cast(InvariantChecker.getValue("HMasterInstance.submittedRegionProcedures")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(196, "HMasterInstance.assignmentManager.$assertionsDisabled == HMasterInstance.assignmentManager.deadMetricChore.$assertionsDisabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.assignmentManager.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.$assertionsDisabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(197, "HMasterInstance.assignmentManager.$assertionsDisabled == HMasterInstance.assignmentManager.deadMetricChore.bypass"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.assignmentManager.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.bypass"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(198, "HMasterInstance.assignmentManager.$assertionsDisabled == HMasterInstance.assignmentManager.deadMetricChore.locked"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.assignmentManager.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.locked"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(199, "HMasterInstance.assignmentManager.$assertionsDisabled == HMasterInstance.assignmentManager.deadMetricChore.lockedWhenLoading"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.assignmentManager.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lockedWhenLoading"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(200, "HMasterInstance.assignmentManager.$assertionsDisabled == HMasterInstance.assignmentManager.ritChore.$assertionsDisabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.assignmentManager.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.$assertionsDisabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(201, "HMasterInstance.assignmentManager.$assertionsDisabled == HMasterInstance.assignmentManager.ritChore.bypass"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.assignmentManager.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.bypass"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(202, "HMasterInstance.assignmentManager.$assertionsDisabled == HMasterInstance.assignmentManager.ritChore.locked"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.assignmentManager.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.locked"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(203, "HMasterInstance.assignmentManager.$assertionsDisabled == HMasterInstance.assignmentManager.ritChore.lockedWhenLoading"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.assignmentManager.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lockedWhenLoading"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(204, "HMasterInstance.assignmentManager.$assertionsDisabled == HMasterInstance.assignmentManager.shouldAssignRegionsWithFavoredNodes"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.assignmentManager.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.assignmentManager.shouldAssignRegionsWithFavoredNodes"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(205, "HMasterInstance.assignmentManager.$assertionsDisabled == HMasterInstance.asyncClusterConnection.conn.aborted"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.assignmentManager.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.conn.aborted"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(206, "HMasterInstance.assignmentManager.$assertionsDisabled == HMasterInstance.asyncClusterConnection.rpcClient.shutdownGroupWhenClose"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.assignmentManager.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.shutdownGroupWhenClose"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(207, "HMasterInstance.assignmentManager.$assertionsDisabled == HMasterInstance.balancerChore.timeMeasurement.oneRound"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.assignmentManager.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeMeasurement.oneRound"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(208, "HMasterInstance.assignmentManager.$assertionsDisabled == HMasterInstance.cleanerPool.reconfigNotification"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.assignmentManager.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.cleanerPool.reconfigNotification"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(209, "HMasterInstance.assignmentManager.$assertionsDisabled == HMasterInstance.drainingServerTracker.watcher.aborted"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.assignmentManager.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.drainingServerTracker.watcher.aborted"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(210, "HMasterInstance.assignmentManager.$assertionsDisabled == HMasterInstance.fileSystemManager.isSecurityEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.assignmentManager.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.fileSystemManager.isSecurityEnabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(211, "HMasterInstance.assignmentManager.$assertionsDisabled == HMasterInstance.procedureExecutor.$assertionsDisabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.assignmentManager.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.$assertionsDisabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(212, "HMasterInstance.assignmentManager.$assertionsDisabled == HMasterInstance.procedureStore.TABLE_NAME.systemTable"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.assignmentManager.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.TABLE_NAME.systemTable"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(213, "HMasterInstance.assignmentManager.$assertionsDisabled == HMasterInstance.procedureStore.flusherAndCompactor.$assertionsDisabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.assignmentManager.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.$assertionsDisabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(214, "HMasterInstance.assignmentManager.$assertionsDisabled == HMasterInstance.regionServerTracker.watcher.aborted"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.assignmentManager.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.regionServerTracker.watcher.aborted"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(215, "HMasterInstance.assignmentManager.$assertionsDisabled == HMasterInstance.rpcClient.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.assignmentManager.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcClient.running"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(216, "HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID == HMasterInstance.assignmentManager.deadMetricChore.NO_TIMEOUT"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.NO_TIMEOUT"))).intValue());
			}
		});
		invariants999.add(new Invariant(217, "HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID == HMasterInstance.assignmentManager.deadMetricChore.parentProcId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.parentProcId"))).intValue());
			}
		});
		invariants999.add(new Invariant(218, "HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID == HMasterInstance.assignmentManager.deadMetricChore.procId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.procId"))).intValue());
			}
		});
		invariants999.add(new Invariant(219, "HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID == HMasterInstance.assignmentManager.deadMetricChore.rootProcId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.rootProcId"))).intValue());
			}
		});
		invariants999.add(new Invariant(220, "HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID == HMasterInstance.assignmentManager.ritChore.NO_PROC_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.NO_PROC_ID"))).intValue());
			}
		});
		invariants999.add(new Invariant(221, "HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID == HMasterInstance.assignmentManager.ritChore.NO_TIMEOUT"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.NO_TIMEOUT"))).intValue());
			}
		});
		invariants999.add(new Invariant(222, "HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID == HMasterInstance.assignmentManager.ritChore.parentProcId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.parentProcId"))).intValue());
			}
		});
		invariants999.add(new Invariant(223, "HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID == HMasterInstance.assignmentManager.ritChore.procId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.procId"))).intValue());
			}
		});
		invariants999.add(new Invariant(224, "HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID == HMasterInstance.assignmentManager.ritChore.rootProcId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.rootProcId"))).intValue());
			}
		});
		invariants999.add(new Invariant(225, "HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID == HMasterInstance.balancerChore.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants999.add(new Invariant(226, "HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID == HMasterInstance.hfileCleaner.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants999.add(new Invariant(227, "HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID == HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants999.add(new Invariant(228, "HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID == daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0])))-1);
			}
		});
		invariants999.add(new Invariant(229, "HMasterInstance.assignmentManager.deadMetricChore.childrenLatch == HMasterInstance.assignmentManager.deadMetricChore.submittedTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.childrenLatch"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.submittedTime"))).intValue());
			}
		});
		invariants999.add(new Invariant(230, "HMasterInstance.assignmentManager.deadMetricChore.childrenLatch == HMasterInstance.assignmentManager.ritChore.childrenLatch"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.childrenLatch"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.childrenLatch"))).intValue());
			}
		});
		invariants999.add(new Invariant(231, "HMasterInstance.assignmentManager.deadMetricChore.childrenLatch == HMasterInstance.assignmentManager.ritChore.submittedTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.childrenLatch"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.submittedTime"))).intValue());
			}
		});
		invariants999.add(new Invariant(232, "HMasterInstance.assignmentManager.deadMetricChore.childrenLatch == HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.childrenLatch"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs"))).intValue());
			}
		});
		invariants999.add(new Invariant(233, "HMasterInstance.assignmentManager.deadMetricChore.childrenLatch == HMasterInstance.balancer.clusterStatus.masterInfoPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.childrenLatch"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.balancer.clusterStatus.masterInfoPort"))).intValue());
			}
		});
		invariants999.add(new Invariant(234, "HMasterInstance.assignmentManager.deadMetricChore.childrenLatch == HMasterInstance.cleanerPool.cleanerLatch"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.childrenLatch"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.cleanerPool.cleanerLatch"))).intValue());
			}
		});
		invariants999.add(new Invariant(235, "HMasterInstance.assignmentManager.deadMetricChore.childrenLatch == HMasterInstance.procedureStore.cleanerPool.cleanerLatch"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.childrenLatch"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue());
			}
		});
		invariants999.add(new Invariant(236, "HMasterInstance.assignmentManager.deadMetricChore.childrenLatch == HMasterInstance.procedureStore.region.majorInProgress"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.childrenLatch"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue());
			}
		});
		invariants999.add(new Invariant(237, "HMasterInstance.assignmentManager.deadMetricChore.childrenLatch == HMasterInstance.rpcClient.failedServers.latestExpiry"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.childrenLatch"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue());
			}
		});
		invariants999.add(new Invariant(238, "HMasterInstance.assignmentManager.deadMetricChore.childrenLatch == daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.childrenLatch"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(239, "HMasterInstance.assignmentManager.deadMetricChore.childrenLatch == daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.childrenLatch"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])))-1);
			}
		});
		invariants999.add(new Invariant(240, "HMasterInstance.assignmentManager.deadMetricChore.persist == HMasterInstance.assignmentManager.ritChore.persist"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.persist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.persist"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(241, "HMasterInstance.assignmentManager.deadMetricChore.persist == HMasterInstance.asyncClusterConnection.hostnameCanChange"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.persist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.hostnameCanChange"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(242, "HMasterInstance.assignmentManager.deadMetricChore.persist == HMasterInstance.balancer.internalBalancer.useRegionFinder"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.persist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.useRegionFinder"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(243, "HMasterInstance.assignmentManager.deadMetricChore.persist == HMasterInstance.balancerChore.initialChoreComplete"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.persist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.balancerChore.initialChoreComplete"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(244, "HMasterInstance.assignmentManager.deadMetricChore.persist == HMasterInstance.procedureExecutor.store.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.persist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.running"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(245, "HMasterInstance.assignmentManager.deadMetricChore.persist == HMasterInstance.procedureStore.cleaner.enabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.persist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.enabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(246, "HMasterInstance.assignmentManager.deadMetricChore.persist == HMasterInstance.procedureStore.walRoller.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.persist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.running"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(247, "HMasterInstance.assignmentManager.deadMetricChore.persist == HMasterInstance.rpcClient.fallbackAllowed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.persist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcClient.fallbackAllowed"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(248, "HMasterInstance.assignmentManager.deadMetricChore.persist == HMasterInstance.tableDescriptors.fsvisited"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.persist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.fsvisited"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(249, "HMasterInstance.assignmentManager.deadMetricChore.persist == HMasterInstance.tableDescriptors.usecache"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.persist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.usecache"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(250, "HMasterInstance.assignmentManager.deadMetricChore.persist == HMasterInstance.walManager.fsOk"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.persist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.walManager.fsOk"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(251, "HMasterInstance.assignmentManager.running == HMasterInstance.procedureExecutor.store.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.assignmentManager.running"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.running"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(252, "HMasterInstance.assignmentManager.running == HMasterInstance.procedureStore.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.assignmentManager.running"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.running"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(253, "HMasterInstance.asyncClusterConnection.closed == HMasterInstance.rpcClient.fallbackAllowed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.closed"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcClient.fallbackAllowed"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(254, "HMasterInstance.asyncClusterConnection.closed == HMasterInstance.serverManager.clusterShutdown"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.closed"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.serverManager.clusterShutdown"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(255, "HMasterInstance.asyncClusterConnection.conn.aborted == HMasterInstance.asyncClusterConnection.rpcClient.shutdownGroupWhenClose"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.conn.aborted"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.shutdownGroupWhenClose"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(256, "HMasterInstance.asyncClusterConnection.conn.aborted == HMasterInstance.balancer.internalBalancer.isByTable"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.conn.aborted"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.isByTable"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(257, "HMasterInstance.asyncClusterConnection.conn.aborted == HMasterInstance.balancer.internalBalancer.maintenanceMode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.conn.aborted"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.maintenanceMode"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(258, "HMasterInstance.asyncClusterConnection.conn.aborted == HMasterInstance.balancer.internalBalancer.onlySystemTablesOnMaster"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.conn.aborted"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.onlySystemTablesOnMaster"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(259, "HMasterInstance.asyncClusterConnection.conn.aborted == HMasterInstance.balancer.internalBalancer.runMaxSteps"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.conn.aborted"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.runMaxSteps"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(260, "HMasterInstance.asyncClusterConnection.conn.aborted == HMasterInstance.balancer.internalBalancer.stopped"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.conn.aborted"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.stopped"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(261, "HMasterInstance.asyncClusterConnection.conn.aborted == HMasterInstance.balancerChore.timeMeasurement.oneRound"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.conn.aborted"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeMeasurement.oneRound"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(262, "HMasterInstance.asyncClusterConnection.conn.aborted == HMasterInstance.cleanerPool.reconfigNotification"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.conn.aborted"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.cleanerPool.reconfigNotification"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(263, "HMasterInstance.asyncClusterConnection.conn.aborted == HMasterInstance.cpHost.$assertionsDisabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.conn.aborted"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.cpHost.$assertionsDisabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(264, "HMasterInstance.asyncClusterConnection.conn.aborted == HMasterInstance.drainingServerTracker.watcher.aborted"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.conn.aborted"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.drainingServerTracker.watcher.aborted"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(265, "HMasterInstance.asyncClusterConnection.conn.aborted == HMasterInstance.fileSystemManager.isSecurityEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.conn.aborted"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.fileSystemManager.isSecurityEnabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(266, "HMasterInstance.asyncClusterConnection.conn.aborted == HMasterInstance.hfileCleaner.pool.reconfigNotification"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.conn.aborted"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.pool.reconfigNotification"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(267, "HMasterInstance.asyncClusterConnection.conn.aborted == HMasterInstance.hfileCleaner.timeMeasurement.oneRound"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.conn.aborted"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeMeasurement.oneRound"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(268, "HMasterInstance.asyncClusterConnection.conn.aborted == HMasterInstance.logCleaner.pool.reconfigNotification"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.conn.aborted"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.logCleaner.pool.reconfigNotification"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(269, "HMasterInstance.asyncClusterConnection.conn.aborted == HMasterInstance.logCleaner.timeMeasurement.oneRound"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.conn.aborted"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeMeasurement.oneRound"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(270, "HMasterInstance.asyncClusterConnection.conn.aborted == HMasterInstance.procedureExecutor.$assertionsDisabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.conn.aborted"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.$assertionsDisabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(271, "HMasterInstance.asyncClusterConnection.conn.aborted == HMasterInstance.procedureStore.TABLE_NAME.systemTable"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.conn.aborted"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.TABLE_NAME.systemTable"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(272, "HMasterInstance.asyncClusterConnection.conn.aborted == HMasterInstance.procedureStore.flusherAndCompactor.$assertionsDisabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.conn.aborted"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.$assertionsDisabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(273, "HMasterInstance.asyncClusterConnection.conn.aborted == HMasterInstance.replicationBarrierCleaner.conn.aborted"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.conn.aborted"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.conn.aborted"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(274, "HMasterInstance.asyncClusterConnection.conn.aborted == HMasterInstance.replicationBarrierCleaner.timeMeasurement.oneRound"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.conn.aborted"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeMeasurement.oneRound"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(275, "HMasterInstance.asyncClusterConnection.conn.aborted == HMasterInstance.rpcClient.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.conn.aborted"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcClient.running"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(276, "HMasterInstance.asyncClusterConnection.conn.aborted == HMasterInstance.snapshotCleanerChore.timeMeasurement.oneRound"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.conn.aborted"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeMeasurement.oneRound"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(277, "HMasterInstance.asyncClusterConnection.connConf.metaOperationTimeoutNs == HMasterInstance.asyncClusterConnection.connConf.operationTimeoutNs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.metaOperationTimeoutNs"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.operationTimeoutNs"))).intValue());
			}
		});
		invariants999.add(new Invariant(278, "HMasterInstance.asyncClusterConnection.connConf.metaScannerCaching == HMasterInstance.asyncClusterConnection.rpcClient.failureSleep"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.metaScannerCaching"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.failureSleep"))).intValue());
			}
		});
		invariants999.add(new Invariant(279, "HMasterInstance.asyncClusterConnection.connConf.metaScannerCaching == HMasterInstance.procedureStore.walRoller.threadWakeFrequency"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.metaScannerCaching"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.threadWakeFrequency"))).intValue());
			}
		});
		invariants999.add(new Invariant(280, "HMasterInstance.asyncClusterConnection.connConf.metaScannerCaching == HMasterInstance.rpcClient.failureSleep"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.metaScannerCaching"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failureSleep"))).intValue());
			}
		});
		invariants999.add(new Invariant(281, "HMasterInstance.asyncClusterConnection.connConf.pauseForCQTBENs == HMasterInstance.asyncClusterConnection.connConf.pauseNs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.pauseForCQTBENs"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.pauseNs"))).intValue());
			}
		});
		invariants999.add(new Invariant(282, "HMasterInstance.asyncClusterConnection.connConf.primaryMetaScanTimeoutNs == HMasterInstance.asyncClusterConnection.connConf.primaryScanTimeoutNs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.primaryMetaScanTimeoutNs"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.primaryScanTimeoutNs"))).intValue());
			}
		});
		invariants999.add(new Invariant(283, "HMasterInstance.asyncClusterConnection.connConf.primaryMetaScanTimeoutNs == HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.primaryMetaScanTimeoutNs"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"))).intValue());
			}
		});
		invariants999.add(new Invariant(284, "HMasterInstance.asyncClusterConnection.connConf.readRpcTimeoutNs == HMasterInstance.asyncClusterConnection.connConf.writeRpcTimeoutNs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.readRpcTimeoutNs"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.writeRpcTimeoutNs"))).intValue());
			}
		});
		invariants999.add(new Invariant(285, "HMasterInstance.asyncClusterConnection.connConf.rpcTimeoutNs == HMasterInstance.asyncClusterConnection.connConf.scanTimeoutNs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.rpcTimeoutNs"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.scanTimeoutNs"))).intValue());
			}
		});
		invariants999.add(new Invariant(286, "HMasterInstance.asyncClusterConnection.connConf.scannerCaching == HMasterInstance.asyncClusterConnection.rpcClient.maxConcurrentCallsPerServer"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.scannerCaching"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.maxConcurrentCallsPerServer"))).intValue());
			}
		});
		invariants999.add(new Invariant(287, "HMasterInstance.asyncClusterConnection.connConf.scannerCaching == HMasterInstance.rpcClient.maxConcurrentCallsPerServer"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.scannerCaching"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.maxConcurrentCallsPerServer"))).intValue());
			}
		});
		invariants999.add(new Invariant(288, "HMasterInstance.asyncClusterConnection.connConf.scannerMaxResultSize == HMasterInstance.asyncClusterConnection.connConf.writeBufferSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.scannerMaxResultSize"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.writeBufferSize"))).intValue());
			}
		});
		invariants999.add(new Invariant(289, "HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs == HMasterInstance.asyncClusterConnection.rpcClient.maxRetries"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.maxRetries"))).intValue());
			}
		});
		invariants999.add(new Invariant(290, "HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs == HMasterInstance.balancer.clusterStatus.masterInfoPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.balancer.clusterStatus.masterInfoPort"))).intValue());
			}
		});
		invariants999.add(new Invariant(291, "HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs == HMasterInstance.cleanerPool.cleanerLatch"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.cleanerPool.cleanerLatch"))).intValue());
			}
		});
		invariants999.add(new Invariant(292, "HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs == HMasterInstance.procedureStore.cleanerPool.cleanerLatch"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue());
			}
		});
		invariants999.add(new Invariant(293, "HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs == HMasterInstance.procedureStore.region.majorInProgress"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue());
			}
		});
		invariants999.add(new Invariant(294, "HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs == HMasterInstance.rpcClient.failedServers.latestExpiry"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue());
			}
		});
		invariants999.add(new Invariant(295, "HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs == daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(296, "HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs == daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])))-1);
			}
		});
		invariants999.add(new Invariant(297, "HMasterInstance.asyncClusterConnection.hostnameCanChange == HMasterInstance.asyncClusterConnection.rpcClient.fallbackAllowed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.hostnameCanChange"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.fallbackAllowed"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(298, "HMasterInstance.asyncClusterConnection.hostnameCanChange == HMasterInstance.asyncClusterConnection.rpcClient.tcpKeepAlive"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.hostnameCanChange"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.tcpKeepAlive"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(299, "HMasterInstance.asyncClusterConnection.hostnameCanChange == HMasterInstance.asyncClusterConnection.rpcClient.tcpNoDelay"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.hostnameCanChange"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.tcpNoDelay"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(300, "HMasterInstance.asyncClusterConnection.hostnameCanChange == HMasterInstance.balancer.internalBalancer.useRegionFinder"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.hostnameCanChange"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.useRegionFinder"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(301, "HMasterInstance.asyncClusterConnection.hostnameCanChange == HMasterInstance.balancerChore.initialChoreComplete"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.hostnameCanChange"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.balancerChore.initialChoreComplete"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(302, "HMasterInstance.asyncClusterConnection.hostnameCanChange == HMasterInstance.procedureExecutor.store.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.hostnameCanChange"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.running"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(303, "HMasterInstance.asyncClusterConnection.hostnameCanChange == HMasterInstance.procedureStore.cleaner.enabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.hostnameCanChange"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.enabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(304, "HMasterInstance.asyncClusterConnection.hostnameCanChange == HMasterInstance.procedureStore.walRoller.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.hostnameCanChange"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.running"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(305, "HMasterInstance.asyncClusterConnection.hostnameCanChange == HMasterInstance.rpcClient.fallbackAllowed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.hostnameCanChange"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcClient.fallbackAllowed"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(306, "HMasterInstance.asyncClusterConnection.hostnameCanChange == HMasterInstance.serverManager.persistFlushedSequenceId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.hostnameCanChange"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.serverManager.persistFlushedSequenceId"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(307, "HMasterInstance.asyncClusterConnection.hostnameCanChange == HMasterInstance.tableDescriptors.fsvisited"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.hostnameCanChange"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.fsvisited"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(308, "HMasterInstance.asyncClusterConnection.hostnameCanChange == HMasterInstance.tableDescriptors.usecache"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.hostnameCanChange"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.usecache"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(309, "HMasterInstance.asyncClusterConnection.hostnameCanChange == HMasterInstance.walManager.fsOk"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.hostnameCanChange"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.walManager.fsOk"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(310, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt == HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants999.add(new Invariant(311, "HMasterInstance.asyncClusterConnection.rpcClient.connectTO == HMasterInstance.rpcClient.connectTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.connectTO"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connectTO"))).intValue());
			}
		});
		invariants999.add(new Invariant(312, "HMasterInstance.asyncClusterConnection.rpcClient.connectTO == HMasterInstance.serverManager.warningSkew"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.connectTO"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.warningSkew"))).intValue());
			}
		});
		invariants999.add(new Invariant(313, "HMasterInstance.asyncClusterConnection.rpcClient.minIdleTimeBeforeClose == HMasterInstance.csm.splitLogManagerCoordination.timeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.minIdleTimeBeforeClose"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue());
			}
		});
		invariants999.add(new Invariant(314, "HMasterInstance.asyncClusterConnection.rpcClient.minIdleTimeBeforeClose == HMasterInstance.procedureStore.region.maxBusyWaitDuration"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.minIdleTimeBeforeClose"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitDuration"))).intValue());
			}
		});
		invariants999.add(new Invariant(315, "HMasterInstance.asyncClusterConnection.rpcClient.minIdleTimeBeforeClose == HMasterInstance.rpcClient.minIdleTimeBeforeClose"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.minIdleTimeBeforeClose"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.minIdleTimeBeforeClose"))).intValue());
			}
		});
		invariants999.add(new Invariant(316, "HMasterInstance.asyncClusterConnection.rpcClient.readTO == HMasterInstance.rpcClient.readTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.readTO"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.readTO"))).intValue());
			}
		});
		invariants999.add(new Invariant(317, "HMasterInstance.asyncClusterConnection.rpcClient.running == HMasterInstance.rpcClient.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.running"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcClient.running"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(318, "HMasterInstance.asyncClusterConnection.rpcClient.shutdownGroupWhenClose == HMasterInstance.balancerChore.timeMeasurement.oneRound"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.shutdownGroupWhenClose"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeMeasurement.oneRound"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(319, "HMasterInstance.asyncClusterConnection.rpcClient.shutdownGroupWhenClose == HMasterInstance.cleanerPool.reconfigNotification"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.shutdownGroupWhenClose"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.cleanerPool.reconfigNotification"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(320, "HMasterInstance.asyncClusterConnection.rpcClient.shutdownGroupWhenClose == HMasterInstance.drainingServerTracker.watcher.aborted"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.shutdownGroupWhenClose"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.drainingServerTracker.watcher.aborted"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(321, "HMasterInstance.asyncClusterConnection.rpcClient.shutdownGroupWhenClose == HMasterInstance.fileSystemManager.isSecurityEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.shutdownGroupWhenClose"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.fileSystemManager.isSecurityEnabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(322, "HMasterInstance.asyncClusterConnection.rpcClient.shutdownGroupWhenClose == HMasterInstance.procedureExecutor.$assertionsDisabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.shutdownGroupWhenClose"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.$assertionsDisabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(323, "HMasterInstance.asyncClusterConnection.rpcClient.shutdownGroupWhenClose == HMasterInstance.procedureStore.TABLE_NAME.systemTable"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.shutdownGroupWhenClose"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.TABLE_NAME.systemTable"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(324, "HMasterInstance.asyncClusterConnection.rpcClient.shutdownGroupWhenClose == HMasterInstance.procedureStore.flusherAndCompactor.$assertionsDisabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.shutdownGroupWhenClose"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.$assertionsDisabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(325, "HMasterInstance.asyncClusterConnection.rpcClient.shutdownGroupWhenClose == HMasterInstance.rpcClient.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.shutdownGroupWhenClose"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcClient.running"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(326, "HMasterInstance.asyncClusterConnection.rpcClient.writeTO == HMasterInstance.asyncClusterConnection.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.writeTO"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcTimeout"))).intValue());
			}
		});
		invariants999.add(new Invariant(327, "HMasterInstance.asyncClusterConnection.rpcClient.writeTO == HMasterInstance.clusterStatusChore.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.writeTO"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.period"))).intValue());
			}
		});
		invariants999.add(new Invariant(328, "HMasterInstance.asyncClusterConnection.rpcClient.writeTO == HMasterInstance.normalizer.masterRpcServices.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.writeTO"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.rpcTimeout"))).intValue());
			}
		});
		invariants999.add(new Invariant(329, "HMasterInstance.asyncClusterConnection.rpcClient.writeTO == HMasterInstance.rpcClient.writeTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.writeTO"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.writeTO"))).intValue());
			}
		});
		invariants999.add(new Invariant(330, "HMasterInstance.asyncClusterConnection.rpcClient.writeTO == HMasterInstance.rpcServices.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.writeTO"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcTimeout"))).intValue());
			}
		});
		invariants999.add(new Invariant(331, "HMasterInstance.balancer.clusterStatus.masterInfoPort == HMasterInstance.cleanerPool.cleanerLatch"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancer.clusterStatus.masterInfoPort"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.cleanerPool.cleanerLatch"))).intValue());
			}
		});
		invariants999.add(new Invariant(332, "HMasterInstance.balancer.clusterStatus.masterInfoPort == HMasterInstance.cpHost.loadSequence"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancer.clusterStatus.masterInfoPort"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.cpHost.loadSequence"))).intValue());
			}
		});
		invariants999.add(new Invariant(333, "HMasterInstance.balancer.clusterStatus.masterInfoPort == HMasterInstance.hfileCleaner.deletedLargeFiles"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancer.clusterStatus.masterInfoPort"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.deletedLargeFiles"))).intValue());
			}
		});
		invariants999.add(new Invariant(334, "HMasterInstance.balancer.clusterStatus.masterInfoPort == HMasterInstance.hfileCleaner.deletedSmallFiles"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancer.clusterStatus.masterInfoPort"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.deletedSmallFiles"))).intValue());
			}
		});
		invariants999.add(new Invariant(335, "HMasterInstance.balancer.clusterStatus.masterInfoPort == HMasterInstance.hfileCleaner.initialDelay"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancer.clusterStatus.masterInfoPort"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.initialDelay"))).intValue());
			}
		});
		invariants999.add(new Invariant(336, "HMasterInstance.balancer.clusterStatus.masterInfoPort == HMasterInstance.hfileCleaner.pool.cleanerLatch"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancer.clusterStatus.masterInfoPort"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.pool.cleanerLatch"))).intValue());
			}
		});
		invariants999.add(new Invariant(337, "HMasterInstance.balancer.clusterStatus.masterInfoPort == HMasterInstance.logCleaner.initialDelay"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancer.clusterStatus.masterInfoPort"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.initialDelay"))).intValue());
			}
		});
		invariants999.add(new Invariant(338, "HMasterInstance.balancer.clusterStatus.masterInfoPort == HMasterInstance.logCleaner.pool.cleanerLatch"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancer.clusterStatus.masterInfoPort"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.pool.cleanerLatch"))).intValue());
			}
		});
		invariants999.add(new Invariant(339, "HMasterInstance.balancer.clusterStatus.masterInfoPort == HMasterInstance.procedureStore.cleanerPool.cleanerLatch"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancer.clusterStatus.masterInfoPort"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue());
			}
		});
		invariants999.add(new Invariant(340, "HMasterInstance.balancer.clusterStatus.masterInfoPort == HMasterInstance.procedureStore.region.majorInProgress"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancer.clusterStatus.masterInfoPort"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue());
			}
		});
		invariants999.add(new Invariant(341, "HMasterInstance.balancer.clusterStatus.masterInfoPort == HMasterInstance.replicationBarrierCleaner.initialDelay"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancer.clusterStatus.masterInfoPort"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.initialDelay"))).intValue());
			}
		});
		invariants999.add(new Invariant(342, "HMasterInstance.balancer.clusterStatus.masterInfoPort == HMasterInstance.rpcClient.failedServers.latestExpiry"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancer.clusterStatus.masterInfoPort"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue());
			}
		});
		invariants999.add(new Invariant(343, "HMasterInstance.balancer.clusterStatus.masterInfoPort == HMasterInstance.snapshotCleanerChore.initialDelay"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancer.clusterStatus.masterInfoPort"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.initialDelay"))).intValue());
			}
		});
		invariants999.add(new Invariant(344, "HMasterInstance.balancer.clusterStatus.masterInfoPort == daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancer.clusterStatus.masterInfoPort"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(345, "HMasterInstance.balancer.clusterStatus.masterInfoPort == daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancer.clusterStatus.masterInfoPort"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])))-1);
			}
		});
		invariants999.add(new Invariant(346, "HMasterInstance.balancer.internalBalancer.MIN_SERVER_BALANCE == HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.MIN_SERVER_BALANCE"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"))).intValue());
			}
		});
		invariants999.add(new Invariant(347, "HMasterInstance.balancer.internalBalancer.maxRunningTime == HMasterInstance.nonceManager.conflictWaitIterationMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.maxRunningTime"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.conflictWaitIterationMs"))).intValue());
			}
		});
		invariants999.add(new Invariant(348, "HMasterInstance.balancer.internalBalancer.maxRunningTime == HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.maxRunningTime"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"))).intValue());
			}
		});
		invariants999.add(new Invariant(349, "HMasterInstance.balancer.internalBalancer.maxRunningTime == HMasterInstance.serverManager.maxSkew"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.maxRunningTime"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.maxSkew"))).intValue());
			}
		});
		invariants999.add(new Invariant(350, "HMasterInstance.balancer.internalBalancer.useRegionFinder == HMasterInstance.balancerChore.initialChoreComplete"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.useRegionFinder"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.balancerChore.initialChoreComplete"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(351, "HMasterInstance.balancer.internalBalancer.useRegionFinder == HMasterInstance.hfileCleaner.enabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.useRegionFinder"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.enabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(352, "HMasterInstance.balancer.internalBalancer.useRegionFinder == HMasterInstance.hfileCleaner.initialChoreComplete"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.useRegionFinder"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.initialChoreComplete"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(353, "HMasterInstance.balancer.internalBalancer.useRegionFinder == HMasterInstance.hfileCleaner.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.useRegionFinder"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.running"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(354, "HMasterInstance.balancer.internalBalancer.useRegionFinder == HMasterInstance.logCleaner.enabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.useRegionFinder"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.logCleaner.enabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(355, "HMasterInstance.balancer.internalBalancer.useRegionFinder == HMasterInstance.logCleaner.initialChoreComplete"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.useRegionFinder"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.logCleaner.initialChoreComplete"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(356, "HMasterInstance.balancer.internalBalancer.useRegionFinder == HMasterInstance.procedureExecutor.store.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.useRegionFinder"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.running"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(357, "HMasterInstance.balancer.internalBalancer.useRegionFinder == HMasterInstance.procedureStore.cleaner.enabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.useRegionFinder"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.enabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(358, "HMasterInstance.balancer.internalBalancer.useRegionFinder == HMasterInstance.procedureStore.walRoller.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.useRegionFinder"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.running"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(359, "HMasterInstance.balancer.internalBalancer.useRegionFinder == HMasterInstance.replicationBarrierCleaner.initialChoreComplete"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.useRegionFinder"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.initialChoreComplete"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(360, "HMasterInstance.balancer.internalBalancer.useRegionFinder == HMasterInstance.rpcClient.fallbackAllowed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.useRegionFinder"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcClient.fallbackAllowed"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(361, "HMasterInstance.balancer.internalBalancer.useRegionFinder == HMasterInstance.snapshotCleanerChore.initialChoreComplete"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.useRegionFinder"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.initialChoreComplete"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(362, "HMasterInstance.balancer.internalBalancer.useRegionFinder == HMasterInstance.snapshotCleanerChore.snapshotManager.isSnapshotSupported"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.useRegionFinder"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.snapshotManager.isSnapshotSupported"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(363, "HMasterInstance.balancer.internalBalancer.useRegionFinder == HMasterInstance.snapshotManager.isSnapshotSupported"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.useRegionFinder"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.snapshotManager.isSnapshotSupported"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(364, "HMasterInstance.balancer.internalBalancer.useRegionFinder == HMasterInstance.tableDescriptors.fsvisited"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.useRegionFinder"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.fsvisited"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(365, "HMasterInstance.balancer.internalBalancer.useRegionFinder == HMasterInstance.tableDescriptors.usecache"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.useRegionFinder"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.usecache"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(366, "HMasterInstance.balancer.internalBalancer.useRegionFinder == HMasterInstance.walManager.fsOk"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.useRegionFinder"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.walManager.fsOk"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(367, "HMasterInstance.balancerChore.FIVE_MINUTES_IN_NANOS == HMasterInstance.catalogJanitorChore.FIVE_MINUTES_IN_NANOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.FIVE_MINUTES_IN_NANOS"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.FIVE_MINUTES_IN_NANOS"))).intValue());
			}
		});
		invariants999.add(new Invariant(368, "HMasterInstance.balancerChore.FIVE_MINUTES_IN_NANOS == HMasterInstance.clusterStatusChore.FIVE_MINUTES_IN_NANOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.FIVE_MINUTES_IN_NANOS"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.FIVE_MINUTES_IN_NANOS"))).intValue());
			}
		});
		invariants999.add(new Invariant(369, "HMasterInstance.balancerChore.FIVE_MINUTES_IN_NANOS == HMasterInstance.hbckChore.FIVE_MINUTES_IN_NANOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.FIVE_MINUTES_IN_NANOS"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.hbckChore.FIVE_MINUTES_IN_NANOS"))).intValue());
			}
		});
		invariants999.add(new Invariant(370, "HMasterInstance.balancerChore.FIVE_MINUTES_IN_NANOS == HMasterInstance.hfileCleaner.FIVE_MINUTES_IN_NANOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.FIVE_MINUTES_IN_NANOS"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.FIVE_MINUTES_IN_NANOS"))).intValue());
			}
		});
		invariants999.add(new Invariant(371, "HMasterInstance.balancerChore.FIVE_MINUTES_IN_NANOS == HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.FIVE_MINUTES_IN_NANOS"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS"))).intValue());
			}
		});
		invariants999.add(new Invariant(372, "HMasterInstance.balancerChore.FIVE_MINUTES_IN_NANOS == HMasterInstance.mobFileCompactionChore.FIVE_MINUTES_IN_NANOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.FIVE_MINUTES_IN_NANOS"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.FIVE_MINUTES_IN_NANOS"))).intValue());
			}
		});
		invariants999.add(new Invariant(373, "HMasterInstance.balancerChore.FIVE_MINUTES_IN_NANOS == HMasterInstance.normalizerChore.FIVE_MINUTES_IN_NANOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.FIVE_MINUTES_IN_NANOS"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.FIVE_MINUTES_IN_NANOS"))).intValue());
			}
		});
		invariants999.add(new Invariant(374, "HMasterInstance.balancerChore.FIVE_MINUTES_IN_NANOS == HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.FIVE_MINUTES_IN_NANOS"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"))).intValue());
			}
		});
		invariants999.add(new Invariant(375, "HMasterInstance.balancerChore.FIVE_MINUTES_IN_NANOS == HMasterInstance.serverManager.flushedSeqIdFlusher.FIVE_MINUTES_IN_NANOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.FIVE_MINUTES_IN_NANOS"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.FIVE_MINUTES_IN_NANOS"))).intValue());
			}
		});
		invariants999.add(new Invariant(376, "HMasterInstance.balancerChore.choreServicer.MIN_CORE_POOL_SIZE == HMasterInstance.catalogJanitorChore.choreServicer.MIN_CORE_POOL_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue());
			}
		});
		invariants999.add(new Invariant(377, "HMasterInstance.balancerChore.choreServicer.MIN_CORE_POOL_SIZE == HMasterInstance.choreService.MIN_CORE_POOL_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.choreService.MIN_CORE_POOL_SIZE"))).intValue());
			}
		});
		invariants999.add(new Invariant(378, "HMasterInstance.balancerChore.choreServicer.MIN_CORE_POOL_SIZE == HMasterInstance.clusterStatusChore.choreServicer.MIN_CORE_POOL_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue());
			}
		});
		invariants999.add(new Invariant(379, "HMasterInstance.balancerChore.choreServicer.MIN_CORE_POOL_SIZE == HMasterInstance.hbckChore.choreServicer.MIN_CORE_POOL_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.hbckChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue());
			}
		});
		invariants999.add(new Invariant(380, "HMasterInstance.balancerChore.choreServicer.MIN_CORE_POOL_SIZE == HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue());
			}
		});
		invariants999.add(new Invariant(381, "HMasterInstance.balancerChore.choreServicer.MIN_CORE_POOL_SIZE == HMasterInstance.mobFileCompactionChore.choreServicer.MIN_CORE_POOL_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue());
			}
		});
		invariants999.add(new Invariant(382, "HMasterInstance.balancerChore.choreServicer.MIN_CORE_POOL_SIZE == HMasterInstance.normalizerChore.choreServicer.MIN_CORE_POOL_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue());
			}
		});
		invariants999.add(new Invariant(383, "HMasterInstance.balancerChore.choreServicer.MIN_CORE_POOL_SIZE == HMasterInstance.procedureExecutor.store.REGION_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.REGION_ID"))).intValue());
			}
		});
		invariants999.add(new Invariant(384, "HMasterInstance.balancerChore.choreServicer.MIN_CORE_POOL_SIZE == HMasterInstance.procedureStore.REGION_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.REGION_ID"))).intValue());
			}
		});
		invariants999.add(new Invariant(385, "HMasterInstance.balancerChore.choreServicer.MIN_CORE_POOL_SIZE == HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants999.add(new Invariant(386, "HMasterInstance.balancerChore.choreServicer.MIN_CORE_POOL_SIZE == HMasterInstance.rpcClient.connections.poolMaxSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue());
			}
		});
		invariants999.add(new Invariant(387, "HMasterInstance.balancerChore.choreServicer.MIN_CORE_POOL_SIZE == daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(388, "HMasterInstance.balancerChore.choreServicer.MIN_CORE_POOL_SIZE == daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(389, "HMasterInstance.balancerChore.initialChoreComplete == HMasterInstance.catalogJanitorChore.enabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancerChore.initialChoreComplete"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.enabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(390, "HMasterInstance.balancerChore.initialChoreComplete == HMasterInstance.catalogJanitorChore.initialChoreComplete"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancerChore.initialChoreComplete"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.initialChoreComplete"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(391, "HMasterInstance.balancerChore.initialChoreComplete == HMasterInstance.clusterStatusChore.initialChoreComplete"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancerChore.initialChoreComplete"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.initialChoreComplete"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(392, "HMasterInstance.balancerChore.initialChoreComplete == HMasterInstance.hbckChore.initialChoreComplete"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancerChore.initialChoreComplete"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.hbckChore.initialChoreComplete"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(393, "HMasterInstance.balancerChore.initialChoreComplete == HMasterInstance.initialized.ready"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancerChore.initialChoreComplete"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.initialized.ready"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(394, "HMasterInstance.balancerChore.initialChoreComplete == HMasterInstance.normalizerChore.initialChoreComplete"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancerChore.initialChoreComplete"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.normalizerChore.initialChoreComplete"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(395, "HMasterInstance.balancerChore.initialChoreComplete == HMasterInstance.procedureExecutor.store.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancerChore.initialChoreComplete"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.running"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(396, "HMasterInstance.balancerChore.initialChoreComplete == HMasterInstance.procedureStore.cleaner.enabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancerChore.initialChoreComplete"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.enabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(397, "HMasterInstance.balancerChore.initialChoreComplete == HMasterInstance.procedureStore.walRoller.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancerChore.initialChoreComplete"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.running"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(398, "HMasterInstance.balancerChore.initialChoreComplete == HMasterInstance.rpcClient.fallbackAllowed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancerChore.initialChoreComplete"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcClient.fallbackAllowed"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(399, "HMasterInstance.balancerChore.initialChoreComplete == HMasterInstance.snapshotManager.isSnapshotSupported"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancerChore.initialChoreComplete"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.snapshotManager.isSnapshotSupported"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(400, "HMasterInstance.balancerChore.initialChoreComplete == HMasterInstance.tableDescriptors.fsvisited"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancerChore.initialChoreComplete"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.fsvisited"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(401, "HMasterInstance.balancerChore.initialChoreComplete == HMasterInstance.tableDescriptors.usecache"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancerChore.initialChoreComplete"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.usecache"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(402, "HMasterInstance.balancerChore.initialChoreComplete == HMasterInstance.walManager.fsOk"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancerChore.initialChoreComplete"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.walManager.fsOk"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(403, "HMasterInstance.balancerChore.period == HMasterInstance.catalogJanitorChore.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.period"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.period"))).intValue());
			}
		});
		invariants999.add(new Invariant(404, "HMasterInstance.balancerChore.period == HMasterInstance.normalizerChore.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.period"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.period"))).intValue());
			}
		});
		invariants999.add(new Invariant(405, "HMasterInstance.balancerChore.period == HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.period"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"))).intValue());
			}
		});
		invariants999.add(new Invariant(406, "HMasterInstance.balancerChore.period == HMasterInstance.procedureStore.walFactory.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.period"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walFactory.timeoutMillis"))).intValue());
			}
		});
		invariants999.add(new Invariant(407, "HMasterInstance.balancerChore.period == HMasterInstance.snapshotManager.coordinator.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.period"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotManager.coordinator.timeoutMillis"))).intValue());
			}
		});
		invariants999.add(new Invariant(408, "HMasterInstance.balancerChore.timeMeasurement.mostRecent == HMasterInstance.catalogJanitorChore.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeMeasurement.mostRecent"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants999.add(new Invariant(409, "HMasterInstance.balancerChore.timeMeasurement.mostRecent == HMasterInstance.hbckChore.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeMeasurement.mostRecent"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.hbckChore.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants999.add(new Invariant(410, "HMasterInstance.balancerChore.timeMeasurement.mostRecent == HMasterInstance.hfileCleaner.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeMeasurement.mostRecent"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants999.add(new Invariant(411, "HMasterInstance.balancerChore.timeMeasurement.mostRecent == HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeMeasurement.mostRecent"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants999.add(new Invariant(412, "HMasterInstance.balancerChore.timeMeasurement.mostRecent == HMasterInstance.mobFileCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeMeasurement.mostRecent"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants999.add(new Invariant(413, "HMasterInstance.balancerChore.timeMeasurement.mostRecent == HMasterInstance.mobFileCompactionChore.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeMeasurement.mostRecent"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants999.add(new Invariant(414, "HMasterInstance.balancerChore.timeMeasurement.mostRecent == HMasterInstance.mobFileCompactionChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeMeasurement.mostRecent"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfLastRun"))).intValue());
			}
		});
		invariants999.add(new Invariant(415, "HMasterInstance.balancerChore.timeMeasurement.mostRecent == HMasterInstance.normalizerChore.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeMeasurement.mostRecent"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants999.add(new Invariant(416, "HMasterInstance.balancerChore.timeMeasurement.mostRecent == HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeMeasurement.mostRecent"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants999.add(new Invariant(417, "HMasterInstance.balancerChore.timeMeasurement.mostRecent == daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeMeasurement.mostRecent"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0])))-1);
			}
		});
		invariants999.add(new Invariant(418, "HMasterInstance.balancerChore.timeMeasurement.oneRound == HMasterInstance.catalogJanitorChore.alreadyRunning"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeMeasurement.oneRound"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.alreadyRunning"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(419, "HMasterInstance.balancerChore.timeMeasurement.oneRound == HMasterInstance.catalogJanitorChore.timeMeasurement.oneRound"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeMeasurement.oneRound"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.timeMeasurement.oneRound"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(420, "HMasterInstance.balancerChore.timeMeasurement.oneRound == HMasterInstance.cleanerPool.reconfigNotification"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeMeasurement.oneRound"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.cleanerPool.reconfigNotification"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(421, "HMasterInstance.balancerChore.timeMeasurement.oneRound == HMasterInstance.clusterStatusChore.timeMeasurement.oneRound"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeMeasurement.oneRound"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeMeasurement.oneRound"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(422, "HMasterInstance.balancerChore.timeMeasurement.oneRound == HMasterInstance.drainingServerTracker.watcher.aborted"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeMeasurement.oneRound"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.drainingServerTracker.watcher.aborted"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(423, "HMasterInstance.balancerChore.timeMeasurement.oneRound == HMasterInstance.fileSystemManager.isSecurityEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeMeasurement.oneRound"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.fileSystemManager.isSecurityEnabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(424, "HMasterInstance.balancerChore.timeMeasurement.oneRound == HMasterInstance.hbckChore.disabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeMeasurement.oneRound"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.hbckChore.disabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(425, "HMasterInstance.balancerChore.timeMeasurement.oneRound == HMasterInstance.hbckChore.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeMeasurement.oneRound"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.hbckChore.running"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(426, "HMasterInstance.balancerChore.timeMeasurement.oneRound == HMasterInstance.hbckChore.timeMeasurement.oneRound"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeMeasurement.oneRound"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.hbckChore.timeMeasurement.oneRound"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(427, "HMasterInstance.balancerChore.timeMeasurement.oneRound == HMasterInstance.mobFileCleanerChore.initialChoreComplete"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeMeasurement.oneRound"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.initialChoreComplete"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(428, "HMasterInstance.balancerChore.timeMeasurement.oneRound == HMasterInstance.mobFileCleanerChore.timeMeasurement.oneRound"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeMeasurement.oneRound"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeMeasurement.oneRound"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(429, "HMasterInstance.balancerChore.timeMeasurement.oneRound == HMasterInstance.mobFileCompactionChore.initialChoreComplete"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeMeasurement.oneRound"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.initialChoreComplete"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(430, "HMasterInstance.balancerChore.timeMeasurement.oneRound == HMasterInstance.mobFileCompactionChore.timeMeasurement.oneRound"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeMeasurement.oneRound"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeMeasurement.oneRound"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(431, "HMasterInstance.balancerChore.timeMeasurement.oneRound == HMasterInstance.normalizerChore.timeMeasurement.oneRound"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeMeasurement.oneRound"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeMeasurement.oneRound"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(432, "HMasterInstance.balancerChore.timeMeasurement.oneRound == HMasterInstance.procedureExecutor.$assertionsDisabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeMeasurement.oneRound"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.$assertionsDisabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(433, "HMasterInstance.balancerChore.timeMeasurement.oneRound == HMasterInstance.procedureStore.TABLE_NAME.systemTable"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeMeasurement.oneRound"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.TABLE_NAME.systemTable"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(434, "HMasterInstance.balancerChore.timeMeasurement.oneRound == HMasterInstance.procedureStore.flusherAndCompactor.$assertionsDisabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeMeasurement.oneRound"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.$assertionsDisabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(435, "HMasterInstance.balancerChore.timeMeasurement.oneRound == HMasterInstance.quotaManager.$assertionsDisabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeMeasurement.oneRound"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.quotaManager.$assertionsDisabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(436, "HMasterInstance.balancerChore.timeMeasurement.oneRound == HMasterInstance.quotaManager.initialized"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeMeasurement.oneRound"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.quotaManager.initialized"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(437, "HMasterInstance.balancerChore.timeMeasurement.oneRound == HMasterInstance.rpcClient.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeMeasurement.oneRound"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcClient.running"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(438, "HMasterInstance.balancerChore.timeOfLastRun == HMasterInstance.balancerChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeOfLastRun"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeOfThisRun"))).intValue());
			}
		});
		invariants999.add(new Invariant(439, "HMasterInstance.balancerChore.timeOfLastRun == HMasterInstance.normalizerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeOfLastRun"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants999.add(new Invariant(440, "HMasterInstance.balancerChore.timeOfLastRun == HMasterInstance.normalizerChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeOfLastRun"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfThisRun"))).intValue());
			}
		});
		invariants999.add(new Invariant(441, "HMasterInstance.catalogJanitorChore.timeOfLastRun == HMasterInstance.catalogJanitorChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.timeOfLastRun"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.timeOfThisRun"))).intValue());
			}
		});
		invariants999.add(new Invariant(442, "HMasterInstance.catalogJanitorChore.timeOfLastRun == HMasterInstance.hbckChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.timeOfLastRun"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.hbckChore.timeOfLastRun"))).intValue());
			}
		});
		invariants999.add(new Invariant(443, "HMasterInstance.choreService.MIN_CORE_POOL_SIZE == HMasterInstance.procedureExecutor.store.REGION_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.choreService.MIN_CORE_POOL_SIZE"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.REGION_ID"))).intValue());
			}
		});
		invariants999.add(new Invariant(444, "HMasterInstance.choreService.MIN_CORE_POOL_SIZE == HMasterInstance.procedureStore.REGION_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.choreService.MIN_CORE_POOL_SIZE"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.REGION_ID"))).intValue());
			}
		});
		invariants999.add(new Invariant(445, "HMasterInstance.choreService.MIN_CORE_POOL_SIZE == HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.choreService.MIN_CORE_POOL_SIZE"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants999.add(new Invariant(446, "HMasterInstance.choreService.MIN_CORE_POOL_SIZE == HMasterInstance.rpcClient.connections.poolMaxSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.choreService.MIN_CORE_POOL_SIZE"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue());
			}
		});
		invariants999.add(new Invariant(447, "HMasterInstance.choreService.MIN_CORE_POOL_SIZE == daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.choreService.MIN_CORE_POOL_SIZE"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(448, "HMasterInstance.cleanerPool.cleanerLatch == HMasterInstance.procedureStore.cleanerPool.cleanerLatch"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.cleanerPool.cleanerLatch"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue());
			}
		});
		invariants999.add(new Invariant(449, "HMasterInstance.cleanerPool.cleanerLatch == HMasterInstance.procedureStore.region.majorInProgress"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.cleanerPool.cleanerLatch"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue());
			}
		});
		invariants999.add(new Invariant(450, "HMasterInstance.cleanerPool.cleanerLatch == daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.cleanerPool.cleanerLatch"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(451, "HMasterInstance.cleanerPool.cleanerLatch == daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.cleanerPool.cleanerLatch"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])))-1);
			}
		});
		invariants999.add(new Invariant(452, "HMasterInstance.cleanerPool.reconfigNotification == HMasterInstance.drainingServerTracker.watcher.aborted"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.cleanerPool.reconfigNotification"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.drainingServerTracker.watcher.aborted"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(453, "HMasterInstance.cleanerPool.reconfigNotification == HMasterInstance.fileSystemManager.isSecurityEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.cleanerPool.reconfigNotification"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.fileSystemManager.isSecurityEnabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(454, "HMasterInstance.cleanerPool.reconfigNotification == HMasterInstance.procedureExecutor.$assertionsDisabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.cleanerPool.reconfigNotification"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.$assertionsDisabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(455, "HMasterInstance.cleanerPool.reconfigNotification == HMasterInstance.procedureStore.TABLE_NAME.systemTable"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.cleanerPool.reconfigNotification"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.TABLE_NAME.systemTable"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(456, "HMasterInstance.cleanerPool.reconfigNotification == HMasterInstance.procedureStore.flusherAndCompactor.$assertionsDisabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.cleanerPool.reconfigNotification"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.$assertionsDisabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(457, "HMasterInstance.cleanerPool.reconfigNotification == HMasterInstance.procedureStore.flusherAndCompactor.closed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.cleanerPool.reconfigNotification"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.closed"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(458, "HMasterInstance.cleanerPool.reconfigNotification == HMasterInstance.serverManager.isFlushSeqIdPersistInProgress"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.cleanerPool.reconfigNotification"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.serverManager.isFlushSeqIdPersistInProgress"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(459, "HMasterInstance.cleanerPool.reconfigNotification == HMasterInstance.snapshotCleanerChore.snapshotManager.stopped"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.cleanerPool.reconfigNotification"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.snapshotManager.stopped"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(460, "HMasterInstance.cleanerPool.reconfigNotification == HMasterInstance.snapshotManager.stopped"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.cleanerPool.reconfigNotification"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.snapshotManager.stopped"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(461, "HMasterInstance.cleanerPool.size == HMasterInstance.hfileCleaner.pool.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.cleanerPool.size"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.pool.size"))).intValue());
			}
		});
		invariants999.add(new Invariant(462, "HMasterInstance.cleanerPool.size == HMasterInstance.procedureStore.cleanerPool.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.cleanerPool.size"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.size"))).intValue());
			}
		});
		invariants999.add(new Invariant(463, "HMasterInstance.clusterStatusChore.period == HMasterInstance.normalizer.masterRpcServices.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.period"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.rpcTimeout"))).intValue());
			}
		});
		invariants999.add(new Invariant(464, "HMasterInstance.clusterStatusChore.period == HMasterInstance.rpcClient.writeTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.period"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.writeTO"))).intValue());
			}
		});
		invariants999.add(new Invariant(465, "HMasterInstance.clusterStatusChore.period == HMasterInstance.rpcServices.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.period"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcTimeout"))).intValue());
			}
		});
		invariants999.add(new Invariant(466, "HMasterInstance.clusterStatusChore.period == HMasterInstance.serverManager.flushedSeqIdFlusher.initialDelay"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.period"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.initialDelay"))).intValue());
			}
		});
		invariants999.add(new Invariant(467, "HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent == HMasterInstance.rpcClient.connections.poolMaxSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue());
			}
		});
		invariants999.add(new Invariant(468, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold == HMasterInstance.csm.splitLogManagerCoordination.zkretries"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.zkretries"))).intValue());
			}
		});
		invariants999.add(new Invariant(469, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold == HMasterInstance.normalizer.minRegionCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.minRegionCount"))).intValue());
			}
		});
		invariants999.add(new Invariant(470, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold == HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"))).intValue());
			}
		});
		invariants999.add(new Invariant(471, "HMasterInstance.csm.splitLogManagerCoordination.timeout == HMasterInstance.procedureStore.region.maxBusyWaitDuration"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitDuration"))).intValue());
			}
		});
		invariants999.add(new Invariant(472, "HMasterInstance.csm.splitLogManagerCoordination.timeout == HMasterInstance.rpcClient.minIdleTimeBeforeClose"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.minIdleTimeBeforeClose"))).intValue());
			}
		});
		invariants999.add(new Invariant(473, "HMasterInstance.csm.splitLogWorkerCoordination.checkInterval == HMasterInstance.rpcServices.rowSizeWarnThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.checkInterval"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rowSizeWarnThreshold"))).intValue());
			}
		});
		invariants999.add(new Invariant(474, "HMasterInstance.dataFs.unspecifiedStoragePolicyId == HMasterInstance.walFs.unspecifiedStoragePolicyId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.dataFs.unspecifiedStoragePolicyId"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.walFs.unspecifiedStoragePolicyId"))).intValue());
			}
		});
		invariants999.add(new Invariant(475, "HMasterInstance.drainingServerTracker.watcher.aborted == HMasterInstance.fileSystemManager.isSecurityEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.drainingServerTracker.watcher.aborted"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.fileSystemManager.isSecurityEnabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(476, "HMasterInstance.drainingServerTracker.watcher.aborted == HMasterInstance.loadBalancerTracker.stopped"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.drainingServerTracker.watcher.aborted"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.loadBalancerTracker.stopped"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(477, "HMasterInstance.drainingServerTracker.watcher.aborted == HMasterInstance.loadBalancerTracker.watcher.aborted"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.drainingServerTracker.watcher.aborted"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.loadBalancerTracker.watcher.aborted"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(478, "HMasterInstance.drainingServerTracker.watcher.aborted == HMasterInstance.normalizer.masterRpcServices.$assertionsDisabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.drainingServerTracker.watcher.aborted"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.$assertionsDisabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(479, "HMasterInstance.drainingServerTracker.watcher.aborted == HMasterInstance.normalizer.masterRpcServices.clearCompactionQueues"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.drainingServerTracker.watcher.aborted"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.clearCompactionQueues"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(480, "HMasterInstance.drainingServerTracker.watcher.aborted == HMasterInstance.normalizer.masterRpcServices.rejectRowsWithSizeOverThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.drainingServerTracker.watcher.aborted"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.rejectRowsWithSizeOverThreshold"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(481, "HMasterInstance.drainingServerTracker.watcher.aborted == HMasterInstance.procedureExecutor.$assertionsDisabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.drainingServerTracker.watcher.aborted"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.$assertionsDisabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(482, "HMasterInstance.drainingServerTracker.watcher.aborted == HMasterInstance.procedureStore.TABLE_NAME.systemTable"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.drainingServerTracker.watcher.aborted"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.TABLE_NAME.systemTable"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(483, "HMasterInstance.drainingServerTracker.watcher.aborted == HMasterInstance.procedureStore.flusherAndCompactor.$assertionsDisabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.drainingServerTracker.watcher.aborted"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.$assertionsDisabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(484, "HMasterInstance.drainingServerTracker.watcher.aborted == HMasterInstance.regionNormalizerTracker.stopped"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.drainingServerTracker.watcher.aborted"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.regionNormalizerTracker.stopped"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(485, "HMasterInstance.drainingServerTracker.watcher.aborted == HMasterInstance.regionNormalizerTracker.watcher.aborted"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.drainingServerTracker.watcher.aborted"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.regionNormalizerTracker.watcher.aborted"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(486, "HMasterInstance.drainingServerTracker.watcher.aborted == HMasterInstance.rpcClient.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.drainingServerTracker.watcher.aborted"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcClient.running"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(487, "HMasterInstance.drainingServerTracker.watcher.aborted == HMasterInstance.snapshotCleanupTracker.stopped"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.drainingServerTracker.watcher.aborted"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.snapshotCleanupTracker.stopped"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(488, "HMasterInstance.drainingServerTracker.watcher.aborted == HMasterInstance.snapshotCleanupTracker.watcher.aborted"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.drainingServerTracker.watcher.aborted"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.snapshotCleanupTracker.watcher.aborted"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(489, "HMasterInstance.drainingServerTracker.watcher.aborted == HMasterInstance.splitOrMergeTracker.mergeStateTracker.stopped"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.drainingServerTracker.watcher.aborted"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.splitOrMergeTracker.mergeStateTracker.stopped"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(490, "HMasterInstance.drainingServerTracker.watcher.aborted == HMasterInstance.splitOrMergeTracker.splitStateTracker.stopped"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.drainingServerTracker.watcher.aborted"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.splitOrMergeTracker.splitStateTracker.stopped"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(491, "HMasterInstance.fileSystemManager.isSecurityEnabled == HMasterInstance.procedureExecutor.$assertionsDisabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.fileSystemManager.isSecurityEnabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.$assertionsDisabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(492, "HMasterInstance.fileSystemManager.isSecurityEnabled == HMasterInstance.procedureStore.TABLE_NAME.systemTable"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.fileSystemManager.isSecurityEnabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.TABLE_NAME.systemTable"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(493, "HMasterInstance.fileSystemManager.isSecurityEnabled == HMasterInstance.procedureStore.flusherAndCompactor.$assertionsDisabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.fileSystemManager.isSecurityEnabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.$assertionsDisabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(494, "HMasterInstance.fileSystemManager.isSecurityEnabled == HMasterInstance.rpcClient.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.fileSystemManager.isSecurityEnabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcClient.running"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(495, "HMasterInstance.fileSystemManager.isSecurityEnabled == HMasterInstance.walManager.splitLogManager.$assertionsDisabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.fileSystemManager.isSecurityEnabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.$assertionsDisabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(496, "HMasterInstance.hfileCleaner.AVAIL_PROCESSORS == HMasterInstance.logCleaner.AVAIL_PROCESSORS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.AVAIL_PROCESSORS"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.AVAIL_PROCESSORS"))).intValue());
			}
		});
		invariants999.add(new Invariant(497, "HMasterInstance.hfileCleaner.AVAIL_PROCESSORS == HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.AVAIL_PROCESSORS"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"))).intValue());
			}
		});
		invariants999.add(new Invariant(498, "HMasterInstance.hfileCleaner.FIVE_MINUTES_IN_NANOS == HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.FIVE_MINUTES_IN_NANOS"))).intValue());
			}
		});
		invariants999.add(new Invariant(499, "HMasterInstance.hfileCleaner.FIVE_MINUTES_IN_NANOS == HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"))).intValue());
			}
		});
		invariants999.add(new Invariant(500, "HMasterInstance.hfileCleaner.FIVE_MINUTES_IN_NANOS == HMasterInstance.replicationBarrierCleaner.FIVE_MINUTES_IN_NANOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.FIVE_MINUTES_IN_NANOS"))).intValue());
			}
		});
		invariants999.add(new Invariant(501, "HMasterInstance.hfileCleaner.FIVE_MINUTES_IN_NANOS == HMasterInstance.snapshotCleanerChore.FIVE_MINUTES_IN_NANOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.FIVE_MINUTES_IN_NANOS"))).intValue());
			}
		});
		invariants999.add(new Invariant(502, "HMasterInstance.hfileCleaner.period == HMasterInstance.logCleaner.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.period"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.period"))).intValue());
			}
		});
		invariants999.add(new Invariant(503, "HMasterInstance.hfileCleaner.period == HMasterInstance.procedureStore.cleaner.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.period"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.period"))).intValue());
			}
		});
		invariants999.add(new Invariant(504, "HMasterInstance.hfileCleaner.pool.size == HMasterInstance.logCleaner.pool.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.pool.size"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.pool.size"))).intValue());
			}
		});
		invariants999.add(new Invariant(505, "HMasterInstance.hfileCleaner.pool.size == HMasterInstance.procedureStore.cleanerPool.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.pool.size"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.size"))).intValue());
			}
		});
		invariants999.add(new Invariant(506, "HMasterInstance.hfileCleaner.timeMeasurement.mostRecent == HMasterInstance.logCleaner.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeMeasurement.mostRecent"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants999.add(new Invariant(507, "HMasterInstance.hfileCleaner.timeMeasurement.mostRecent == HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeMeasurement.mostRecent"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants999.add(new Invariant(508, "HMasterInstance.hfileCleaner.timeMeasurement.mostRecent == HMasterInstance.regionsRecoveryConfigManager.prevMaxStoreFileRefCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeMeasurement.mostRecent"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.regionsRecoveryConfigManager.prevMaxStoreFileRefCount"))).intValue());
			}
		});
		invariants999.add(new Invariant(509, "HMasterInstance.hfileCleaner.timeMeasurement.mostRecent == HMasterInstance.replicationBarrierCleaner.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeMeasurement.mostRecent"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants999.add(new Invariant(510, "HMasterInstance.hfileCleaner.timeMeasurement.mostRecent == HMasterInstance.snapshotCleanerChore.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeMeasurement.mostRecent"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants999.add(new Invariant(511, "HMasterInstance.hfileCleaner.timeMeasurement.mostRecent == daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeMeasurement.mostRecent"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0])))-1);
			}
		});
		invariants999.add(new Invariant(512, "HMasterInstance.hfileCleaner.timeOfLastRun == HMasterInstance.hfileCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants999.add(new Invariant(513, "HMasterInstance.initialized.ready == HMasterInstance.rpcClient.fallbackAllowed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.initialized.ready"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcClient.fallbackAllowed"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(514, "HMasterInstance.logCleaner.timeOfLastRun == HMasterInstance.logCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants999.add(new Invariant(515, "HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES == HMasterInstance.rpcServices.minimumScanTimeLimitDelta"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.minimumScanTimeLimitDelta"))).intValue());
			}
		});
		invariants999.add(new Invariant(516, "HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES == HMasterInstance.tableDescriptors.WIDTH_OF_SEQUENCE_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.WIDTH_OF_SEQUENCE_ID"))).intValue());
			}
		});
		invariants999.add(new Invariant(517, "HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES == HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"))).intValue());
			}
		});
		invariants999.add(new Invariant(518, "HMasterInstance.mobFileCleanerChore.initialDelay == HMasterInstance.mobFileCleanerChore.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.initialDelay"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.period"))).intValue());
			}
		});
		invariants999.add(new Invariant(519, "HMasterInstance.mobFileCompactionChore.initialDelay == HMasterInstance.mobFileCompactionChore.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.initialDelay"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.period"))).intValue());
			}
		});
		invariants999.add(new Invariant(520, "HMasterInstance.nonceManager.conflictWaitIterationMs == HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.conflictWaitIterationMs"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"))).intValue());
			}
		});
		invariants999.add(new Invariant(521, "HMasterInstance.nonceManager.conflictWaitIterationMs == HMasterInstance.serverManager.maxSkew"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.conflictWaitIterationMs"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.maxSkew"))).intValue());
			}
		});
		invariants999.add(new Invariant(522, "HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize == HMasterInstance.rpcServices.maxScannerResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.maxScannerResultSize"))).intValue());
			}
		});
		invariants999.add(new Invariant(523, "HMasterInstance.normalizer.masterRpcServices.rpcTimeout == HMasterInstance.normalizer.masterRpcServices.scannerLeaseTimeoutPeriod"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.rpcTimeout"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.scannerLeaseTimeoutPeriod"))).intValue());
			}
		});
		invariants999.add(new Invariant(524, "HMasterInstance.normalizer.masterRpcServices.rpcTimeout == HMasterInstance.rpcClient.writeTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.rpcTimeout"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.writeTO"))).intValue());
			}
		});
		invariants999.add(new Invariant(525, "HMasterInstance.normalizer.masterRpcServices.rpcTimeout == HMasterInstance.rpcServices.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.rpcTimeout"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcTimeout"))).intValue());
			}
		});
		invariants999.add(new Invariant(526, "HMasterInstance.normalizer.minRegionCount == HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.minRegionCount"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"))).intValue());
			}
		});
		invariants999.add(new Invariant(527, "HMasterInstance.procedureExecutor.$assertionsDisabled == HMasterInstance.procedureExecutor.checkOwnerSet"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.checkOwnerSet"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(528, "HMasterInstance.procedureExecutor.$assertionsDisabled == HMasterInstance.procedureExecutor.procExecutionLock.$assertionsDisabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.$assertionsDisabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(529, "HMasterInstance.procedureExecutor.$assertionsDisabled == HMasterInstance.procedureExecutor.scheduler.$assertionsDisabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.$assertionsDisabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(530, "HMasterInstance.procedureExecutor.$assertionsDisabled == HMasterInstance.procedureStore.TABLE_NAME.systemTable"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.TABLE_NAME.systemTable"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(531, "HMasterInstance.procedureExecutor.$assertionsDisabled == HMasterInstance.procedureStore.flusherAndCompactor.$assertionsDisabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.$assertionsDisabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(532, "HMasterInstance.procedureExecutor.$assertionsDisabled == HMasterInstance.procedureStore.flusherAndCompactor.closed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.closed"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(533, "HMasterInstance.procedureExecutor.$assertionsDisabled == HMasterInstance.rpcClient.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcClient.running"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(534, "HMasterInstance.procedureExecutor.$assertionsDisabled == HMasterInstance.snapshotCleanerChore.snapshotManager.stopped"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.snapshotManager.stopped"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(535, "HMasterInstance.procedureExecutor.$assertionsDisabled == HMasterInstance.snapshotManager.stopped"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.snapshotManager.stopped"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(536, "HMasterInstance.procedureExecutor.activeExecutorCount == HMasterInstance.rpcClient.failedServers.latestExpiry"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue());
			}
		});
		invariants999.add(new Invariant(537, "HMasterInstance.procedureExecutor.corePoolSize == HMasterInstance.procedureExecutor.store.numThreads"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.corePoolSize"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.numThreads"))).intValue());
			}
		});
		invariants999.add(new Invariant(538, "HMasterInstance.procedureExecutor.corePoolSize == HMasterInstance.procedureExecutor.workerId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.corePoolSize"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.workerId"))).intValue());
			}
		});
		invariants999.add(new Invariant(539, "HMasterInstance.procedureExecutor.corePoolSize == HMasterInstance.procedureStore.numThreads"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.corePoolSize"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.numThreads"))).intValue());
			}
		});
		invariants999.add(new Invariant(540, "HMasterInstance.procedureExecutor.running == HMasterInstance.rpcClient.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.running"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcClient.running"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(541, "HMasterInstance.procedureExecutor.scheduler.running == HMasterInstance.rpcClient.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.running"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcClient.running"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(542, "HMasterInstance.procedureExecutor.store.REGION_ID == HMasterInstance.procedureStore.REGION_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.REGION_ID"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.REGION_ID"))).intValue());
			}
		});
		invariants999.add(new Invariant(543, "HMasterInstance.procedureExecutor.store.REGION_ID == HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.REGION_ID"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants999.add(new Invariant(544, "HMasterInstance.procedureExecutor.store.REGION_ID == HMasterInstance.rpcClient.connections.poolMaxSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.REGION_ID"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue());
			}
		});
		invariants999.add(new Invariant(545, "HMasterInstance.procedureExecutor.store.REGION_ID == daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.REGION_ID"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(546, "HMasterInstance.procedureExecutor.store.running == HMasterInstance.procedureStore.cleaner.enabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.running"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.enabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(547, "HMasterInstance.procedureExecutor.store.running == HMasterInstance.procedureStore.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.running"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.running"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(548, "HMasterInstance.procedureExecutor.store.running == HMasterInstance.procedureStore.walRoller.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.running"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.running"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(549, "HMasterInstance.procedureExecutor.store.running == HMasterInstance.rpcClient.fallbackAllowed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.running"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcClient.fallbackAllowed"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(550, "HMasterInstance.procedureExecutor.store.running == HMasterInstance.rpcServices.rpcServer.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.running"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcServer.running"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(551, "HMasterInstance.procedureExecutor.store.running == HMasterInstance.tableDescriptors.fsvisited"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.running"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.fsvisited"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(552, "HMasterInstance.procedureExecutor.store.running == HMasterInstance.tableDescriptors.usecache"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.running"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.usecache"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(553, "HMasterInstance.procedureExecutor.store.running == HMasterInstance.walManager.fsOk"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.running"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.walManager.fsOk"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(554, "HMasterInstance.procedureStore.REGION_ID == HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.REGION_ID"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants999.add(new Invariant(555, "HMasterInstance.procedureStore.REGION_ID == HMasterInstance.rpcClient.connections.poolMaxSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.REGION_ID"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue());
			}
		});
		invariants999.add(new Invariant(556, "HMasterInstance.procedureStore.REGION_ID == daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.REGION_ID"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(557, "HMasterInstance.procedureStore.TABLE_NAME.systemTable == HMasterInstance.procedureStore.cleanerPool.reconfigNotification"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.TABLE_NAME.systemTable"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.reconfigNotification"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(558, "HMasterInstance.procedureStore.TABLE_NAME.systemTable == HMasterInstance.procedureStore.flusherAndCompactor.$assertionsDisabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.TABLE_NAME.systemTable"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.$assertionsDisabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(559, "HMasterInstance.procedureStore.TABLE_NAME.systemTable == HMasterInstance.rpcClient.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.TABLE_NAME.systemTable"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcClient.running"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(560, "HMasterInstance.procedureStore.TABLE_NAME.systemTable == HMasterInstance.snapshotCleanerChore.snapshotManager.stopped"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.TABLE_NAME.systemTable"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.snapshotManager.stopped"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(561, "HMasterInstance.procedureStore.TABLE_NAME.systemTable == HMasterInstance.snapshotManager.stopped"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.TABLE_NAME.systemTable"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.snapshotManager.stopped"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(562, "HMasterInstance.procedureStore.cleaner.enabled == HMasterInstance.procedureStore.cleaner.initialChoreComplete"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.enabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.initialChoreComplete"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(563, "HMasterInstance.procedureStore.cleaner.enabled == HMasterInstance.procedureStore.cleaner.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.enabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.running"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(564, "HMasterInstance.procedureStore.cleaner.enabled == HMasterInstance.procedureStore.walRoller.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.enabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.running"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(565, "HMasterInstance.procedureStore.cleaner.enabled == HMasterInstance.rpcClient.fallbackAllowed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.enabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcClient.fallbackAllowed"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(566, "HMasterInstance.procedureStore.cleaner.enabled == HMasterInstance.rpcServices.rpcServer.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.enabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcServer.running"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(567, "HMasterInstance.procedureStore.cleaner.enabled == HMasterInstance.tableDescriptors.fsvisited"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.enabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.fsvisited"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(568, "HMasterInstance.procedureStore.cleaner.enabled == HMasterInstance.tableDescriptors.usecache"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.enabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.usecache"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(569, "HMasterInstance.procedureStore.cleaner.enabled == HMasterInstance.walManager.fsOk"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.enabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.walManager.fsOk"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(570, "HMasterInstance.procedureStore.cleanerPool.cleanerLatch == HMasterInstance.procedureStore.region.majorInProgress"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue());
			}
		});
		invariants999.add(new Invariant(571, "HMasterInstance.procedureStore.cleanerPool.cleanerLatch == HMasterInstance.rpcClient.failedServers.latestExpiry"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue());
			}
		});
		invariants999.add(new Invariant(572, "HMasterInstance.procedureStore.cleanerPool.cleanerLatch == daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(573, "HMasterInstance.procedureStore.cleanerPool.cleanerLatch == daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])))-1);
			}
		});
		invariants999.add(new Invariant(574, "HMasterInstance.procedureStore.flusherAndCompactor.$assertionsDisabled == HMasterInstance.procedureStore.flusherAndCompactor.compactRequest"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.compactRequest"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(575, "HMasterInstance.procedureStore.flusherAndCompactor.$assertionsDisabled == HMasterInstance.procedureStore.flusherAndCompactor.flushRequest"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.flushRequest"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(576, "HMasterInstance.procedureStore.flusherAndCompactor.$assertionsDisabled == HMasterInstance.procedureStore.region.$assertionsDisabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.$assertionsDisabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(577, "HMasterInstance.procedureStore.flusherAndCompactor.$assertionsDisabled == HMasterInstance.procedureStore.region.closed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.closed"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(578, "HMasterInstance.procedureStore.flusherAndCompactor.$assertionsDisabled == HMasterInstance.procedureStore.region.isRestoredRegion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.isRestoredRegion"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(579, "HMasterInstance.procedureStore.flusherAndCompactor.$assertionsDisabled == HMasterInstance.procedureStore.region.regionStatsEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.regionStatsEnabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(580, "HMasterInstance.procedureStore.flusherAndCompactor.$assertionsDisabled == HMasterInstance.procedureStore.region.splitRequest"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.splitRequest"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(581, "HMasterInstance.procedureStore.flusherAndCompactor.$assertionsDisabled == HMasterInstance.rpcClient.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcClient.running"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(582, "HMasterInstance.procedureStore.flusherAndCompactor.$assertionsDisabled == HMasterInstance.snapshotCleanerChore.snapshotManager.stopped"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.snapshotManager.stopped"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(583, "HMasterInstance.procedureStore.flusherAndCompactor.$assertionsDisabled == HMasterInstance.snapshotManager.stopped"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.$assertionsDisabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.snapshotManager.stopped"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(584, "HMasterInstance.procedureStore.flusherAndCompactor.closed == HMasterInstance.procedureStore.region.closing"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.closed"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.closing"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(585, "HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL == HMasterInstance.procedureStore.walFactory.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walFactory.timeoutMillis"))).intValue());
			}
		});
		invariants999.add(new Invariant(586, "HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL == HMasterInstance.snapshotManager.coordinator.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotManager.coordinator.timeoutMillis"))).intValue());
			}
		});
		invariants999.add(new Invariant(587, "HMasterInstance.procedureStore.region.lastFlushOpSeqId == HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"))).intValue());
			}
		});
		invariants999.add(new Invariant(588, "HMasterInstance.procedureStore.region.lastFlushOpSeqId == HMasterInstance.procedureStore.region.maxFlushedSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxFlushedSeqId"))).intValue());
			}
		});
		invariants999.add(new Invariant(589, "HMasterInstance.procedureStore.region.lastFlushOpSeqId == daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0])))-1);
			}
		});
		invariants999.add(new Invariant(590, "HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId == HMasterInstance.rpcClient.connections.poolMaxSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue());
			}
		});
		invariants999.add(new Invariant(591, "HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId == daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(592, "HMasterInstance.procedureStore.region.majorInProgress == HMasterInstance.procedureStore.region.minorInProgress"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.minorInProgress"))).intValue());
			}
		});
		invariants999.add(new Invariant(593, "HMasterInstance.procedureStore.region.majorInProgress == HMasterInstance.rpcClient.failedServers.latestExpiry"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue());
			}
		});
		invariants999.add(new Invariant(594, "HMasterInstance.procedureStore.region.majorInProgress == daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(595, "HMasterInstance.procedureStore.region.majorInProgress == daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])))-1);
			}
		});
		invariants999.add(new Invariant(596, "HMasterInstance.procedureStore.region.maxBusyWaitDuration == HMasterInstance.rpcClient.minIdleTimeBeforeClose"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitDuration"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.minIdleTimeBeforeClose"))).intValue());
			}
		});
		invariants999.add(new Invariant(597, "HMasterInstance.procedureStore.region.maxBusyWaitMultiplier == HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants999.add(new Invariant(598, "HMasterInstance.procedureStore.region.timestampSlop == HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.timestampSlop"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants999.add(new Invariant(599, "HMasterInstance.procedureStore.walFactory.timeoutMillis == HMasterInstance.snapshotManager.coordinator.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walFactory.timeoutMillis"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotManager.coordinator.timeoutMillis"))).intValue());
			}
		});
		invariants999.add(new Invariant(600, "HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval == HMasterInstance.serverManager.maxSkew"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.maxSkew"))).intValue());
			}
		});
		invariants999.add(new Invariant(601, "HMasterInstance.procedureStore.walRoller.running == HMasterInstance.rpcClient.fallbackAllowed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.running"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcClient.fallbackAllowed"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(602, "HMasterInstance.procedureStore.walRoller.running == HMasterInstance.rpcServices.rpcServer.running"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.running"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcServer.running"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(603, "HMasterInstance.procedureStore.walRoller.running == HMasterInstance.tableDescriptors.fsvisited"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.running"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.fsvisited"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(604, "HMasterInstance.procedureStore.walRoller.running == HMasterInstance.tableDescriptors.usecache"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.running"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.usecache"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(605, "HMasterInstance.procedureStore.walRoller.running == HMasterInstance.walManager.fsOk"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.running"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.walManager.fsOk"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(606, "HMasterInstance.procedureStore.walRoller.threadWakeFrequency == HMasterInstance.rpcClient.failureSleep"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.threadWakeFrequency"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failureSleep"))).intValue());
			}
		});
		invariants999.add(new Invariant(607, "HMasterInstance.regionServerAccounting.globalMemStoreLimit == HMasterInstance.regionServerAccounting.globalOnHeapMemstoreLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimit"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalOnHeapMemstoreLimit"))).intValue());
			}
		});
		invariants999.add(new Invariant(608, "HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark == HMasterInstance.regionServerAccounting.globalOnHeapMemstoreLimitLowMark"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalOnHeapMemstoreLimitLowMark"))).intValue());
			}
		});
		invariants999.add(new Invariant(609, "HMasterInstance.replicationBarrierCleaner.timeOfLastRun == HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants999.add(new Invariant(610, "HMasterInstance.replicationBarrierCleaner.timeOfLastRun == HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants999.add(new Invariant(611, "HMasterInstance.rpcClient.connections.poolMaxSize == daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(612, "HMasterInstance.rpcClient.connections.poolMaxSize == daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(613, "HMasterInstance.rpcClient.failedServers.latestExpiry == HMasterInstance.rpcClient.maxRetries"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.maxRetries"))).intValue());
			}
		});
		invariants999.add(new Invariant(614, "HMasterInstance.rpcClient.failedServers.latestExpiry == daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(615, "HMasterInstance.rpcClient.failedServers.latestExpiry == daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])))-1);
			}
		});
		invariants999.add(new Invariant(616, "HMasterInstance.rpcClient.failedServers.latestExpiry == daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(617, "HMasterInstance.rpcClient.failedServers.latestExpiry == daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(618, "HMasterInstance.rpcClient.failedServers.latestExpiry == daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(619, "HMasterInstance.rpcClient.failedServers.latestExpiry == daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])))-1);
			}
		});
		invariants999.add(new Invariant(620, "HMasterInstance.rpcClient.fallbackAllowed == HMasterInstance.rpcClient.tcpKeepAlive"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcClient.fallbackAllowed"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcClient.tcpKeepAlive"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(621, "HMasterInstance.rpcClient.fallbackAllowed == HMasterInstance.rpcClient.tcpNoDelay"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcClient.fallbackAllowed"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcClient.tcpNoDelay"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(622, "HMasterInstance.rpcClient.fallbackAllowed == HMasterInstance.serverManager.flushedSeqIdFlusher.initialChoreComplete"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcClient.fallbackAllowed"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.initialChoreComplete"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(623, "HMasterInstance.rpcClient.fallbackAllowed == HMasterInstance.snapshotManager.isSnapshotSupported"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcClient.fallbackAllowed"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.snapshotManager.isSnapshotSupported"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(624, "HMasterInstance.rpcClient.fallbackAllowed == HMasterInstance.tableDescriptors.fsvisited"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcClient.fallbackAllowed"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.fsvisited"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(625, "HMasterInstance.rpcClient.fallbackAllowed == HMasterInstance.tableDescriptors.usecache"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcClient.fallbackAllowed"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.usecache"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(626, "HMasterInstance.rpcClient.fallbackAllowed == HMasterInstance.walManager.fsOk"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcClient.fallbackAllowed"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.walManager.fsOk"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(627, "HMasterInstance.rpcClient.running == HMasterInstance.rpcClient.shutdownGroupWhenClose"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcClient.running"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcClient.shutdownGroupWhenClose"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(628, "HMasterInstance.rpcClient.writeTO == HMasterInstance.rpcServices.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.writeTO"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcTimeout"))).intValue());
			}
		});
		invariants999.add(new Invariant(629, "HMasterInstance.rpcServices.maxScannerResultSize == HMasterInstance.rpcServices.rpcServer.warnResponseSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.maxScannerResultSize"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcServer.warnResponseSize"))).intValue());
			}
		});
		invariants999.add(new Invariant(630, "HMasterInstance.rpcServices.rpcTimeout == HMasterInstance.rpcServices.scannerLeaseTimeoutPeriod"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcTimeout"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerLeaseTimeoutPeriod"))).intValue());
			}
		});
		invariants999.add(new Invariant(631, "HMasterInstance.rsFatals.maxSizeBytes == HMasterInstance.zooKeeper.recoverableZooKeeper.maxMultiSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.maxSizeBytes"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.zooKeeper.recoverableZooKeeper.maxMultiSize"))).intValue());
			}
		});
		invariants999.add(new Invariant(632, "HMasterInstance.snapshotCleanerChore.snapshotManager.stopped == HMasterInstance.snapshotManager.stopped"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.snapshotManager.stopped"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.snapshotManager.stopped"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(633, "HMasterInstance.tableDescriptors.usecache == HMasterInstance.walManager.fsOk"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.usecache"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("HMasterInstance.walManager.fsOk"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(634, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.activeMasterManager.master.mergePlanCount) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.activeMasterManager.master.splitPlanCount)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.splitPlanCount"))).intValue()));
			}
		});
		invariants999.add(new Invariant(635, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.activeMasterManager.master.mergePlanCount) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.assignmentManager.deadMetricChore.childrenLatch)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.childrenLatch"))).intValue()));
			}
		});
		invariants999.add(new Invariant(636, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.activeMasterManager.master.mergePlanCount) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs"))).intValue()));
			}
		});
		invariants999.add(new Invariant(637, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.activeMasterManager.master.mergePlanCount) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.balancer.clusterStatus.masterInfoPort)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.balancer.clusterStatus.masterInfoPort"))).intValue()));
			}
		});
		invariants999.add(new Invariant(638, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.activeMasterManager.master.mergePlanCount) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.cachedClusterId.cacheMisses)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.cachedClusterId.cacheMisses"))).intValue()));
			}
		});
		invariants999.add(new Invariant(639, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.activeMasterManager.master.mergePlanCount) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.choreService.MIN_CORE_POOL_SIZE-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.choreService.MIN_CORE_POOL_SIZE"))).intValue()-1));
			}
		});
		invariants999.add(new Invariant(640, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.activeMasterManager.master.mergePlanCount) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.cleanerPool.cleanerLatch)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.cleanerPool.cleanerLatch"))).intValue()));
			}
		});
		invariants999.add(new Invariant(641, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.activeMasterManager.master.mergePlanCount) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.csm.splitLogWorkerCoordination.currentVersion)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.currentVersion"))).intValue()));
			}
		});
		invariants999.add(new Invariant(642, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.activeMasterManager.master.mergePlanCount) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.maxConcurrentTasks"))).intValue()));
			}
		});
		invariants999.add(new Invariant(643, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.activeMasterManager.master.mergePlanCount) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.reportPeriod"))).intValue()));
			}
		});
		invariants999.add(new Invariant(644, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.activeMasterManager.master.mergePlanCount) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.csm.splitLogWorkerCoordination.taskReadySeq)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.taskReadySeq"))).intValue()));
			}
		});
		invariants999.add(new Invariant(645, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.activeMasterManager.master.mergePlanCount) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.csm.splitLogWorkerCoordination.tasksInProgress)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.tasksInProgress"))).intValue()));
			}
		});
		invariants999.add(new Invariant(646, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.activeMasterManager.master.mergePlanCount) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.mergePlanCount)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.mergePlanCount"))).intValue()));
			}
		});
		invariants999.add(new Invariant(647, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.activeMasterManager.master.mergePlanCount) == daikon.Quant.getElement_Object(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE, HMasterInstance.rpcClient.failedServers.latestExpiry)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue()));
			}
		});
		invariants999.add(new Invariant(648, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.activeMasterManager.master.mergePlanCount) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.procedureExecutor.store.REGION_ID-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.REGION_ID"))).intValue()-1));
			}
		});
		invariants999.add(new Invariant(649, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.activeMasterManager.master.mergePlanCount) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.procedureStore.cleanerPool.cleanerLatch)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue()));
			}
		});
		invariants999.add(new Invariant(650, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.activeMasterManager.master.mergePlanCount) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.procedureStore.region.majorInProgress)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue()));
			}
		});
		invariants999.add(new Invariant(651, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.activeMasterManager.master.mergePlanCount) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.rpcServices.regionServer.mergePlanCount)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.regionServer.mergePlanCount"))).intValue()));
			}
		});
		invariants999.add(new Invariant(652, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.activeMasterManager.master.mergePlanCount) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.rpcServices.regionServer.splitPlanCount)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.regionServer.splitPlanCount"))).intValue()));
			}
		});
		invariants999.add(new Invariant(653, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.activeMasterManager.master.mergePlanCount) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.rpcServices.rpcServer.CURRENT_VERSION)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcServer.CURRENT_VERSION"))).intValue()));
			}
		});
		invariants999.add(new Invariant(654, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.activeMasterManager.master.mergePlanCount) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.rpcServices.scannerIdGenerator.scannerIdGen)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.scannerIdGen"))).intValue()));
			}
		});
		invariants999.add(new Invariant(655, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.activeMasterManager.master.mergePlanCount) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue()));
			}
		});
		invariants999.add(new Invariant(656, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.activeMasterManager.master.mergePlanCount) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.rsFatals.usage)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue()));
			}
		});
		invariants999.add(new Invariant(657, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.activeMasterManager.master.mergePlanCount) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.splitPlanCount)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.splitPlanCount"))).intValue()));
			}
		});
		invariants999.add(new Invariant(658, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.assignmentManager.deadMetricChore.childrenLatch) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.assignmentManager.deadMetricChore.submittedTime)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.childrenLatch"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.submittedTime"))).intValue()));
			}
		});
		invariants999.add(new Invariant(659, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.assignmentManager.deadMetricChore.childrenLatch) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.assignmentManager.ritChore.childrenLatch)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.childrenLatch"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.childrenLatch"))).intValue()));
			}
		});
		invariants999.add(new Invariant(660, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.assignmentManager.deadMetricChore.childrenLatch) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.assignmentManager.ritChore.submittedTime)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.childrenLatch"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.submittedTime"))).intValue()));
			}
		});
		invariants999.add(new Invariant(661, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.assignmentManager.deadMetricChore.childrenLatch) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.childrenLatch"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs"))).intValue()));
			}
		});
		invariants999.add(new Invariant(662, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.assignmentManager.deadMetricChore.childrenLatch) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.balancer.clusterStatus.masterInfoPort)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.childrenLatch"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.balancer.clusterStatus.masterInfoPort"))).intValue()));
			}
		});
		invariants999.add(new Invariant(663, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.assignmentManager.deadMetricChore.childrenLatch) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.cleanerPool.cleanerLatch)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.childrenLatch"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.cleanerPool.cleanerLatch"))).intValue()));
			}
		});
		invariants999.add(new Invariant(664, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.assignmentManager.deadMetricChore.childrenLatch) == daikon.Quant.getElement_Object(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE, HMasterInstance.rpcClient.failedServers.latestExpiry)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.childrenLatch"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue()));
			}
		});
		invariants999.add(new Invariant(665, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.assignmentManager.deadMetricChore.childrenLatch) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.procedureExecutor.store.REGION_ID-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.childrenLatch"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.REGION_ID"))).intValue()-1));
			}
		});
		invariants999.add(new Invariant(666, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.assignmentManager.deadMetricChore.childrenLatch) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.procedureStore.cleanerPool.cleanerLatch)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.childrenLatch"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue()));
			}
		});
		invariants999.add(new Invariant(667, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.assignmentManager.deadMetricChore.childrenLatch) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.procedureStore.region.majorInProgress)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.childrenLatch"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue()));
			}
		});
		invariants999.add(new Invariant(668, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.asyncClusterConnection.rpcClient.maxRetries)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.maxRetries"))).intValue()));
			}
		});
		invariants999.add(new Invariant(669, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.balancer.clusterStatus.masterInfoPort)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.balancer.clusterStatus.masterInfoPort"))).intValue()));
			}
		});
		invariants999.add(new Invariant(670, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.cleanerPool.cleanerLatch)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.cleanerPool.cleanerLatch"))).intValue()));
			}
		});
		invariants999.add(new Invariant(671, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs) == daikon.Quant.getElement_Object(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE, HMasterInstance.rpcClient.failedServers.latestExpiry)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue()));
			}
		});
		invariants999.add(new Invariant(672, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.procedureExecutor.store.REGION_ID-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.REGION_ID"))).intValue()-1));
			}
		});
		invariants999.add(new Invariant(673, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.procedureStore.cleanerPool.cleanerLatch)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue()));
			}
		});
		invariants999.add(new Invariant(674, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.procedureStore.region.majorInProgress)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue()));
			}
		});
		invariants999.add(new Invariant(675, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.balancer.clusterStatus.masterInfoPort) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.cleanerPool.cleanerLatch)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.balancer.clusterStatus.masterInfoPort"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.cleanerPool.cleanerLatch"))).intValue()));
			}
		});
		invariants999.add(new Invariant(676, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.balancer.clusterStatus.masterInfoPort) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.cpHost.loadSequence)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.balancer.clusterStatus.masterInfoPort"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.cpHost.loadSequence"))).intValue()));
			}
		});
		invariants999.add(new Invariant(677, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.balancer.clusterStatus.masterInfoPort) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.hfileCleaner.choreServicer.MIN_CORE_POOL_SIZE-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.balancer.clusterStatus.masterInfoPort"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.choreServicer.MIN_CORE_POOL_SIZE"))).intValue()-1));
			}
		});
		invariants999.add(new Invariant(678, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.balancer.clusterStatus.masterInfoPort) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.hfileCleaner.deletedLargeFiles)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.balancer.clusterStatus.masterInfoPort"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.deletedLargeFiles"))).intValue()));
			}
		});
		invariants999.add(new Invariant(679, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.balancer.clusterStatus.masterInfoPort) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.hfileCleaner.deletedSmallFiles)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.balancer.clusterStatus.masterInfoPort"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.deletedSmallFiles"))).intValue()));
			}
		});
		invariants999.add(new Invariant(680, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.balancer.clusterStatus.masterInfoPort) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.hfileCleaner.initialDelay)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.balancer.clusterStatus.masterInfoPort"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.initialDelay"))).intValue()));
			}
		});
		invariants999.add(new Invariant(681, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.balancer.clusterStatus.masterInfoPort) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.hfileCleaner.largeFileDeleteThreadNumber-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.balancer.clusterStatus.masterInfoPort"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.largeFileDeleteThreadNumber"))).intValue()-1));
			}
		});
		invariants999.add(new Invariant(682, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.balancer.clusterStatus.masterInfoPort) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.hfileCleaner.pool.cleanerLatch)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.balancer.clusterStatus.masterInfoPort"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.pool.cleanerLatch"))).intValue()));
			}
		});
		invariants999.add(new Invariant(683, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.balancer.clusterStatus.masterInfoPort) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.hfileCleaner.smallFileDeleteThreadNumber-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.balancer.clusterStatus.masterInfoPort"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.smallFileDeleteThreadNumber"))).intValue()-1));
			}
		});
		invariants999.add(new Invariant(684, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.balancer.clusterStatus.masterInfoPort) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.balancer.clusterStatus.masterInfoPort"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.choreServicer.MIN_CORE_POOL_SIZE"))).intValue()-1));
			}
		});
		invariants999.add(new Invariant(685, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.balancer.clusterStatus.masterInfoPort) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.logCleaner.initialDelay)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.balancer.clusterStatus.masterInfoPort"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.initialDelay"))).intValue()));
			}
		});
		invariants999.add(new Invariant(686, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.balancer.clusterStatus.masterInfoPort) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.logCleaner.pool.cleanerLatch)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.balancer.clusterStatus.masterInfoPort"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.pool.cleanerLatch"))).intValue()));
			}
		});
		invariants999.add(new Invariant(687, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.balancer.clusterStatus.masterInfoPort) == daikon.Quant.getElement_Object(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE, HMasterInstance.rpcClient.failedServers.latestExpiry)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.balancer.clusterStatus.masterInfoPort"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue()));
			}
		});
		invariants999.add(new Invariant(688, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.balancer.clusterStatus.masterInfoPort) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.procedureExecutor.store.REGION_ID-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.balancer.clusterStatus.masterInfoPort"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.REGION_ID"))).intValue()-1));
			}
		});
		invariants999.add(new Invariant(689, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.balancer.clusterStatus.masterInfoPort) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.procedureStore.cleanerPool.cleanerLatch)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.balancer.clusterStatus.masterInfoPort"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue()));
			}
		});
		invariants999.add(new Invariant(690, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.balancer.clusterStatus.masterInfoPort) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.procedureStore.region.majorInProgress)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.balancer.clusterStatus.masterInfoPort"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue()));
			}
		});
		invariants999.add(new Invariant(691, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.balancer.clusterStatus.masterInfoPort) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.replicationBarrierCleaner.choreServicer.MIN_CORE_POOL_SIZE-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.balancer.clusterStatus.masterInfoPort"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.choreServicer.MIN_CORE_POOL_SIZE"))).intValue()-1));
			}
		});
		invariants999.add(new Invariant(692, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.balancer.clusterStatus.masterInfoPort) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.replicationBarrierCleaner.initialDelay)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.balancer.clusterStatus.masterInfoPort"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.initialDelay"))).intValue()));
			}
		});
		invariants999.add(new Invariant(693, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.balancer.clusterStatus.masterInfoPort) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.snapshotCleanerChore.choreServicer.MIN_CORE_POOL_SIZE-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.balancer.clusterStatus.masterInfoPort"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue()-1));
			}
		});
		invariants999.add(new Invariant(694, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.balancer.clusterStatus.masterInfoPort) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.snapshotCleanerChore.initialDelay)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.balancer.clusterStatus.masterInfoPort"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.initialDelay"))).intValue()));
			}
		});
		invariants999.add(new Invariant(695, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.cleanerPool.cleanerLatch) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.procedureExecutor.store.REGION_ID-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.cleanerPool.cleanerLatch"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.REGION_ID"))).intValue()-1));
			}
		});
		invariants999.add(new Invariant(696, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.cleanerPool.cleanerLatch) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.procedureStore.cleanerPool.cleanerLatch)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.cleanerPool.cleanerLatch"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue()));
			}
		});
		invariants999.add(new Invariant(697, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.cleanerPool.cleanerLatch) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.procedureStore.region.majorInProgress)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.cleanerPool.cleanerLatch"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue()));
			}
		});
		invariants999.add(new Invariant(698, "daikon.Quant.getElement_Object(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE, HMasterInstance.rpcClient.connections.poolMaxSize-1) == daikon.Quant.getElement_Object(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE, HMasterInstance.rpcClient.failedServers.latestExpiry)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue()-1) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue()));
			}
		});
		invariants999.add(new Invariant(699, "daikon.Quant.getElement_Object(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE, HMasterInstance.rpcClient.failedServers.latestExpiry) == daikon.Quant.getElement_Object(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE, HMasterInstance.rpcClient.maxRetries)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.maxRetries"))).intValue()));
			}
		});
		invariants999.add(new Invariant(700, "daikon.Quant.getElement_Object(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE, HMasterInstance.rpcClient.failedServers.latestExpiry) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.procedureExecutor.store.REGION_ID-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.REGION_ID"))).intValue()-1));
			}
		});
		invariants999.add(new Invariant(701, "daikon.Quant.getElement_Object(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE, HMasterInstance.rpcClient.failedServers.latestExpiry) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.procedureStore.cleanerPool.cleanerLatch)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue()));
			}
		});
		invariants999.add(new Invariant(702, "daikon.Quant.getElement_Object(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE, HMasterInstance.rpcClient.failedServers.latestExpiry) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.procedureStore.region.majorInProgress)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue()));
			}
		});
		invariants999.add(new Invariant(703, "daikon.Quant.getElement_Object(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE, HMasterInstance.rpcClient.failedServers.latestExpiry) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.rpcClient.connections.poolMaxSize-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue()-1));
			}
		});
		invariants999.add(new Invariant(704, "daikon.Quant.getElement_Object(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE, HMasterInstance.rpcClient.failedServers.latestExpiry) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.rpcClient.failedServers.latestExpiry)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue()));
			}
		});
		invariants999.add(new Invariant(705, "daikon.Quant.getElement_Object(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE, HMasterInstance.rpcClient.failedServers.latestExpiry) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.rpcClient.maxRetries)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.maxRetries"))).intValue()));
			}
		});
		invariants999.add(new Invariant(706, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.procedureExecutor.store.REGION_ID-1) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.procedureStore.cleanerPool.cleanerLatch)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.REGION_ID"))).intValue()-1) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue()));
			}
		});
		invariants999.add(new Invariant(707, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.procedureExecutor.store.REGION_ID-1) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.procedureStore.region.majorInProgress)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.REGION_ID"))).intValue()-1) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue()));
			}
		});
		invariants999.add(new Invariant(708, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.procedureStore.REGION_ID-1) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.procedureStore.cleanerPool.cleanerLatch)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.REGION_ID"))).intValue()-1) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue()));
			}
		});
		invariants999.add(new Invariant(709, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.procedureStore.cleanerPool.cleanerLatch) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.procedureStore.region.majorInProgress)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue()));
			}
		});
		invariants999.add(new Invariant(710, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId-1) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.procedureStore.region.majorInProgress)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue()-1) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue()));
			}
		});
		invariants999.add(new Invariant(711, "daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.procedureStore.region.majorInProgress) == daikon.Quant.getElement_Object(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, HMasterInstance.procedureStore.region.minorInProgress)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.minorInProgress"))).intValue()));
			}
		});
		invariants999.add(new Invariant(712, "HMasterInstance.$assertionsDisabled == false"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.$assertionsDisabled"))).booleanValue() == false);
			}
		});
		invariants999.add(new Invariant(713, "HMasterInstance.TIMEOUT_REGION_MOVED == 120000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.TIMEOUT_REGION_MOVED"))).intValue() == 120000);
			}
		});
		invariants999.add(new Invariant(714, "HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE == -1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE"))).intValue() == -1);
			}
		});
		invariants999.add(new Invariant(715, "HMasterInstance.activeMasterManager.activeMasterServerName.VERSION == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Short)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.VERSION"))).shortValue() == 0);
			}
		});
		invariants999.add(new Invariant(716, "HMasterInstance.activeMasterManager.activeMasterServerName.serialVersionUID == 1367463982557264981L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.serialVersionUID"))).intValue() == 1367463982557264981L);
			}
		});
		invariants999.add(new Invariant(717, "HMasterInstance.activeMasterManager.activeMasterServerName.startcode == 1692765783063L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.startcode"))).intValue() == 1692765783063L);
			}
		});
		invariants999.add(new Invariant(718, "HMasterInstance.activeMasterManager.clusterHasActiveMaster == true"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.clusterHasActiveMaster"))).booleanValue() == true);
			}
		});
		invariants999.add(new Invariant(719, "HMasterInstance.activeMasterManager.master.compactionCheckFrequency == 100"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.compactionCheckFrequency"))).intValue() == 100);
			}
		});
		invariants999.add(new Invariant(720, "HMasterInstance.activeMasterManager.master.masterActiveTime == 1692765784614L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterActiveTime"))).intValue() == 1692765784614L);
			}
		});
		invariants999.add(new Invariant(721, "HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime == 0 || HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime == 1692765792121L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue() == 1692765792121L);
			}
		});
		invariants999.add(new Invariant(722, "HMasterInstance.activeMasterManager.master.maxBalancingTime == 300000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.maxBalancingTime"))).intValue() == 300000);
			}
		});
		invariants999.add(new Invariant(723, "daikon.Quant.fuzzy.eq(HMasterInstance.activeMasterManager.master.maxRitPercent, 1.0)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.fuzzy.eq(((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.maxRitPercent"))).doubleValue(), 1.0));
			}
		});
		invariants999.add(new Invariant(724, "HMasterInstance.activeMasterManager.master.mergePlanCount == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.mergePlanCount"))).intValue() == 0);
			}
		});
		invariants999.add(new Invariant(725, "HMasterInstance.activeMasterManager.master.shortOperationTimeout == 10000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.shortOperationTimeout"))).intValue() == 10000);
			}
		});
		invariants999.add(new Invariant(726, "HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE != null"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return ((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0])) != null);
			}
		});
		invariants999.add(new Invariant(727, "HMasterInstance.assignmentManager.$assertionsDisabled == false"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.assignmentManager.$assertionsDisabled"))).booleanValue() == false);
			}
		});
		invariants999.add(new Invariant(728, "HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID == -1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.NO_PROC_ID"))).intValue() == -1);
			}
		});
		invariants999.add(new Invariant(729, "HMasterInstance.assignmentManager.deadMetricChore.childrenLatch == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.childrenLatch"))).intValue() == 0);
			}
		});
		invariants999.add(new Invariant(730, "HMasterInstance.assignmentManager.deadMetricChore.lastUpdate == 0 || HMasterInstance.assignmentManager.deadMetricChore.lastUpdate == 1692765792043L || HMasterInstance.assignmentManager.deadMetricChore.lastUpdate == 1692765933809L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() == 1692765792043L || ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue() == 1692765933809L);
			}
		});
		invariants999.add(new Invariant(731, "HMasterInstance.assignmentManager.deadMetricChore.persist == true"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.persist"))).booleanValue() == true);
			}
		});
		invariants999.add(new Invariant(732, "HMasterInstance.assignmentManager.regionStateStore.META_REPLICA_ID_DELIMITER == 95"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Character)(InvariantChecker.getValue("HMasterInstance.assignmentManager.regionStateStore.META_REPLICA_ID_DELIMITER"))).charValue() == 95);
			}
		});
		invariants999.add(new Invariant(733, "HMasterInstance.assignmentManager.ritChore.lastUpdate >= 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue() >= 0);
			}
		});
		invariants999.add(new Invariant(734, "HMasterInstance.asyncClusterConnection.conn.aborted == false"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.conn.aborted"))).booleanValue() == false);
			}
		});
		invariants999.add(new Invariant(735, "HMasterInstance.asyncClusterConnection.connConf.maxKeyValueSize == 10485760"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.maxKeyValueSize"))).intValue() == 10485760);
			}
		});
		invariants999.add(new Invariant(736, "HMasterInstance.asyncClusterConnection.connConf.maxRetries == 45"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.maxRetries"))).intValue() == 45);
			}
		});
		invariants999.add(new Invariant(737, "HMasterInstance.asyncClusterConnection.connConf.metaOperationTimeoutNs == 1200000000000L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.metaOperationTimeoutNs"))).intValue() == 1200000000000L);
			}
		});
		invariants999.add(new Invariant(738, "HMasterInstance.asyncClusterConnection.connConf.metaScannerCaching == 100"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.metaScannerCaching"))).intValue() == 100);
			}
		});
		invariants999.add(new Invariant(739, "HMasterInstance.asyncClusterConnection.connConf.pauseForCQTBENs == 100000000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.pauseForCQTBENs"))).intValue() == 100000000);
			}
		});
		invariants999.add(new Invariant(740, "HMasterInstance.asyncClusterConnection.connConf.primaryCallTimeoutNs == 10000000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.primaryCallTimeoutNs"))).intValue() == 10000000);
			}
		});
		invariants999.add(new Invariant(741, "HMasterInstance.asyncClusterConnection.connConf.primaryMetaScanTimeoutNs == 1000000000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.primaryMetaScanTimeoutNs"))).intValue() == 1000000000);
			}
		});
		invariants999.add(new Invariant(742, "HMasterInstance.asyncClusterConnection.connConf.readRpcTimeoutNs == 60000000000000000L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.readRpcTimeoutNs"))).intValue() == 60000000000000000L);
			}
		});
		invariants999.add(new Invariant(743, "HMasterInstance.asyncClusterConnection.connConf.rpcTimeoutNs == 60000000000L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.rpcTimeoutNs"))).intValue() == 60000000000L);
			}
		});
		invariants999.add(new Invariant(744, "HMasterInstance.asyncClusterConnection.connConf.scannerCaching == 2147483647"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.scannerCaching"))).intValue() == 2147483647);
			}
		});
		invariants999.add(new Invariant(745, "HMasterInstance.asyncClusterConnection.connConf.scannerMaxResultSize == 2097152"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.scannerMaxResultSize"))).intValue() == 2097152);
			}
		});
		invariants999.add(new Invariant(746, "HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.connConf.writeBufferPeriodicFlushTimeoutNs"))).intValue() == 0);
			}
		});
		invariants999.add(new Invariant(747, "HMasterInstance.asyncClusterConnection.hostnameCanChange == true"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.hostnameCanChange"))).booleanValue() == true);
			}
		});
		invariants999.add(new Invariant(748, "HMasterInstance.asyncClusterConnection.nonceGenerator.clientId == -6794818757989729703L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.nonceGenerator.clientId"))).intValue() == -6794818757989729703L);
			}
		});
		invariants999.add(new Invariant(749, "HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt >= 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue() >= 0);
			}
		});
		invariants999.add(new Invariant(750, "HMasterInstance.asyncClusterConnection.rpcClient.connectTO == 10000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.connectTO"))).intValue() == 10000);
			}
		});
		invariants999.add(new Invariant(751, "HMasterInstance.asyncClusterConnection.rpcClient.minIdleTimeBeforeClose == 120000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.minIdleTimeBeforeClose"))).intValue() == 120000);
			}
		});
		invariants999.add(new Invariant(752, "HMasterInstance.asyncClusterConnection.rpcClient.readTO == 20000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.readTO"))).intValue() == 20000);
			}
		});
		invariants999.add(new Invariant(753, "HMasterInstance.asyncClusterConnection.rpcClient.shutdownGroupWhenClose == false"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.shutdownGroupWhenClose"))).booleanValue() == false);
			}
		});
		invariants999.add(new Invariant(754, "HMasterInstance.asyncClusterConnection.rpcClient.writeTO == 60000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.writeTO"))).intValue() == 60000);
			}
		});
		invariants999.add(new Invariant(755, "HMasterInstance.balancer.clusterStatus.masterInfoPort == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancer.clusterStatus.masterInfoPort"))).intValue() == 0);
			}
		});
		invariants999.add(new Invariant(756, "HMasterInstance.balancer.internalBalancer.MIN_SERVER_BALANCE == 2"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.MIN_SERVER_BALANCE"))).intValue() == 2);
			}
		});
		invariants999.add(new Invariant(757, "HMasterInstance.balancer.internalBalancer.maxRunningTime == 30000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.maxRunningTime"))).intValue() == 30000);
			}
		});
		invariants999.add(new Invariant(758, "HMasterInstance.balancer.internalBalancer.maxSteps == 1000000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.maxSteps"))).intValue() == 1000000);
			}
		});
		invariants999.add(new Invariant(759, "daikon.Quant.fuzzy.eq(HMasterInstance.balancer.internalBalancer.minCostNeedBalance, 0.05)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.fuzzy.eq(((Number)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.minCostNeedBalance"))).doubleValue(), 0.05));
			}
		});
		invariants999.add(new Invariant(760, "HMasterInstance.balancer.internalBalancer.numRegionLoadsToRemember == 15"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.numRegionLoadsToRemember"))).intValue() == 15);
			}
		});
		invariants999.add(new Invariant(761, "daikon.Quant.fuzzy.eq(HMasterInstance.balancer.internalBalancer.overallSlop, 0.0)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.fuzzy.eq(((Number)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.overallSlop"))).doubleValue(), 0.0));
			}
		});
		invariants999.add(new Invariant(762, "daikon.Quant.fuzzy.eq(HMasterInstance.balancer.internalBalancer.slop, 0.001)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.fuzzy.eq(((Number)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.slop"))).doubleValue(), 0.001));
			}
		});
		invariants999.add(new Invariant(763, "HMasterInstance.balancer.internalBalancer.stepsPerRegion == 800"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.stepsPerRegion"))).intValue() == 800);
			}
		});
		invariants999.add(new Invariant(764, "HMasterInstance.balancer.internalBalancer.useRegionFinder == true"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancer.internalBalancer.useRegionFinder"))).booleanValue() == true);
			}
		});
		invariants999.add(new Invariant(765, "HMasterInstance.balancerChore.FIVE_MINUTES_IN_NANOS == 300000000000L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.FIVE_MINUTES_IN_NANOS"))).intValue() == 300000000000L);
			}
		});
		invariants999.add(new Invariant(766, "HMasterInstance.balancerChore.choreServicer.MIN_CORE_POOL_SIZE == 1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() == 1);
			}
		});
		invariants999.add(new Invariant(767, "HMasterInstance.balancerChore.initialChoreComplete == true"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancerChore.initialChoreComplete"))).booleanValue() == true);
			}
		});
		invariants999.add(new Invariant(768, "HMasterInstance.balancerChore.lastLog == 20059428626283L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.lastLog"))).intValue() == 20059428626283L);
			}
		});
		invariants999.add(new Invariant(769, "HMasterInstance.balancerChore.period == 300000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.period"))).intValue() == 300000);
			}
		});
		invariants999.add(new Invariant(770, "HMasterInstance.balancerChore.timeMeasurement.mostRecent == -1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeMeasurement.mostRecent"))).intValue() == -1);
			}
		});
		invariants999.add(new Invariant(771, "HMasterInstance.balancerChore.timeMeasurement.oneRound == false"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeMeasurement.oneRound"))).booleanValue() == false);
			}
		});
		invariants999.add(new Invariant(772, "HMasterInstance.balancerChore.timeOfLastRun == 1692765792065L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.balancerChore.timeOfLastRun"))).intValue() == 1692765792065L);
			}
		});
		invariants999.add(new Invariant(773, "HMasterInstance.catalogJanitorChore.lastLog == 20059430679739L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastLog"))).intValue() == 20059430679739L);
			}
		});
		invariants999.add(new Invariant(774, "HMasterInstance.catalogJanitorChore.lastReport.count == 0 || HMasterInstance.catalogJanitorChore.lastReport.count == 79"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.count"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.count"))).intValue() == 79);
			}
		});
		invariants999.add(new Invariant(775, "HMasterInstance.catalogJanitorChore.lastReport.now == 1692765792069L || HMasterInstance.catalogJanitorChore.lastReport.now == 1692765908733L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.now"))).intValue() == 1692765792069L || ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.now"))).intValue() == 1692765908733L);
			}
		});
		invariants999.add(new Invariant(776, "HMasterInstance.catalogJanitorChore.timeOfLastRun == 1692765792067L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.timeOfLastRun"))).intValue() == 1692765792067L);
			}
		});
		invariants999.add(new Invariant(777, "HMasterInstance.choreService.MIN_CORE_POOL_SIZE == 1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.choreService.MIN_CORE_POOL_SIZE"))).intValue() == 1);
			}
		});
		invariants999.add(new Invariant(778, "HMasterInstance.cleanerPool.cleanerLatch == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.cleanerPool.cleanerLatch"))).intValue() == 0);
			}
		});
		invariants999.add(new Invariant(779, "HMasterInstance.cleanerPool.reconfigNotification == false"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.cleanerPool.reconfigNotification"))).booleanValue() == false);
			}
		});
		invariants999.add(new Invariant(780, "HMasterInstance.cleanerPool.size == 4"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.cleanerPool.size"))).intValue() == 4);
			}
		});
		invariants999.add(new Invariant(781, "HMasterInstance.clusterStatusChore.lastLog == 20059427856980L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.lastLog"))).intValue() == 20059427856980L);
			}
		});
		invariants999.add(new Invariant(782, "HMasterInstance.clusterStatusChore.period == 60000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.period"))).intValue() == 60000);
			}
		});
		invariants999.add(new Invariant(783, "HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent == -1 || HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent == 0 || HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent == 1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent"))).intValue() == -1 || ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent"))).intValue() == 1);
			}
		});
		invariants999.add(new Invariant(784, "HMasterInstance.clusterStatusChore.timeOfLastRun == 1692765792064L || HMasterInstance.clusterStatusChore.timeOfLastRun == 1692765792065L || HMasterInstance.clusterStatusChore.timeOfLastRun == 1692765854288L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfLastRun"))).intValue() == 1692765792064L || ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfLastRun"))).intValue() == 1692765792065L || ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfLastRun"))).intValue() == 1692765854288L);
			}
		});
		invariants999.add(new Invariant(785, "HMasterInstance.clusterStatusChore.timeOfThisRun == 1692765792065L || HMasterInstance.clusterStatusChore.timeOfThisRun == 1692765854288L || HMasterInstance.clusterStatusChore.timeOfThisRun == 1692765915596L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfThisRun"))).intValue() == 1692765792065L || ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfThisRun"))).intValue() == 1692765854288L || ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfThisRun"))).intValue() == 1692765915596L);
			}
		});
		invariants999.add(new Invariant(786, "HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold == 0 || HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold == 3"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue() == 3);
			}
		});
		invariants999.add(new Invariant(787, "HMasterInstance.csm.splitLogManagerCoordination.timeout == 0 || HMasterInstance.csm.splitLogManagerCoordination.timeout == 120000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue() == 120000);
			}
		});
		invariants999.add(new Invariant(788, "HMasterInstance.csm.splitLogWorkerCoordination.checkInterval == 5000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogWorkerCoordination.checkInterval"))).intValue() == 5000);
			}
		});
		invariants999.add(new Invariant(789, "HMasterInstance.dataFs.unspecifiedStoragePolicyId == -128"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.dataFs.unspecifiedStoragePolicyId"))).intValue() == -128);
			}
		});
		invariants999.add(new Invariant(790, "HMasterInstance.drainingServerTracker.watcher.aborted == false"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.drainingServerTracker.watcher.aborted"))).booleanValue() == false);
			}
		});
		invariants999.add(new Invariant(791, "HMasterInstance.fileSystemManager.isSecurityEnabled == false"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.fileSystemManager.isSecurityEnabled"))).booleanValue() == false);
			}
		});
		invariants999.add(new Invariant(792, "HMasterInstance.hbckChore.lastLog == 20059431274290L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hbckChore.lastLog"))).intValue() == 20059431274290L);
			}
		});
		invariants999.add(new Invariant(793, "HMasterInstance.hbckChore.timeOfThisRun == 1692765792075L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hbckChore.timeOfThisRun"))).intValue() == 1692765792075L);
			}
		});
		invariants999.add(new Invariant(794, "HMasterInstance.hfileCleaner.AVAIL_PROCESSORS == 16"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.AVAIL_PROCESSORS"))).intValue() == 16);
			}
		});
		invariants999.add(new Invariant(795, "HMasterInstance.hfileCleaner.FIVE_MINUTES_IN_NANOS == 300000000000L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.FIVE_MINUTES_IN_NANOS"))).intValue() == 300000000000L);
			}
		});
		invariants999.add(new Invariant(796, "HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID == -6334572230936888291L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.largeFileQueue.serialVersionUID"))).intValue() == -6334572230936888291L);
			}
		});
		invariants999.add(new Invariant(797, "HMasterInstance.hfileCleaner.lastLog == 20056881503948L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.lastLog"))).intValue() == 20056881503948L);
			}
		});
		invariants999.add(new Invariant(798, "HMasterInstance.hfileCleaner.period == 600000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.period"))).intValue() == 600000);
			}
		});
		invariants999.add(new Invariant(799, "HMasterInstance.hfileCleaner.pool.size == 4"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.pool.size"))).intValue() == 4);
			}
		});
		invariants999.add(new Invariant(800, "HMasterInstance.hfileCleaner.timeMeasurement.mostRecent == -1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeMeasurement.mostRecent"))).intValue() == -1);
			}
		});
		invariants999.add(new Invariant(801, "HMasterInstance.hfileCleaner.timeOfLastRun == 1692765789526L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.hfileCleaner.timeOfLastRun"))).intValue() == 1692765789526L);
			}
		});
		invariants999.add(new Invariant(802, "HMasterInstance.logCleaner.lastLog == 20056573253883L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.lastLog"))).intValue() == 20056573253883L);
			}
		});
		invariants999.add(new Invariant(803, "HMasterInstance.logCleaner.timeOfLastRun == 1692765789517L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.logCleaner.timeOfLastRun"))).intValue() == 1692765789517L);
			}
		});
		invariants999.add(new Invariant(804, "HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES == 10"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.MAX_ZK_META_FETCH_RETRIES"))).intValue() == 10);
			}
		});
		invariants999.add(new Invariant(805, "HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES == 1000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.SLEEP_INTERVAL_MS_BETWEEN_RETRIES"))).intValue() == 1000);
			}
		});
		invariants999.add(new Invariant(806, "daikon.Quant.eltsEqual(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE, null)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.eltsEqual((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])), null));
			}
		});
		invariants999.add(new Invariant(807, "HMasterInstance.mobFileCleanerChore.initialDelay == 86400"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.initialDelay"))).intValue() == 86400);
			}
		});
		invariants999.add(new Invariant(808, "HMasterInstance.mobFileCleanerChore.lastLog == 20059492386634L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() == 20059492386634L);
			}
		});
		invariants999.add(new Invariant(809, "HMasterInstance.mobFileCleanerChore.timeOfThisRun == 1692765792130L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() == 1692765792130L);
			}
		});
		invariants999.add(new Invariant(810, "HMasterInstance.mobFileCompactionChore.initialDelay == 604800"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.initialDelay"))).intValue() == 604800);
			}
		});
		invariants999.add(new Invariant(811, "HMasterInstance.mobFileCompactionChore.lastLog == 20059494358725L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() == 20059494358725L);
			}
		});
		invariants999.add(new Invariant(812, "HMasterInstance.mobFileCompactionChore.timeOfThisRun == 1692765792131L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() == 1692765792131L);
			}
		});
		invariants999.add(new Invariant(813, "HMasterInstance.nonceManager.conflictWaitIterationMs == 30000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.conflictWaitIterationMs"))).intValue() == 30000);
			}
		});
		invariants999.add(new Invariant(814, "HMasterInstance.nonceManager.deleteNonceGracePeriod == 1800000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.deleteNonceGracePeriod"))).intValue() == 1800000);
			}
		});
		invariants999.add(new Invariant(815, "HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize == 104857600"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize"))).intValue() == 104857600);
			}
		});
		invariants999.add(new Invariant(816, "HMasterInstance.normalizer.masterRpcServices.rpcTimeout == 60000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.rpcTimeout"))).intValue() == 60000);
			}
		});
		invariants999.add(new Invariant(817, "HMasterInstance.normalizer.minRegionCount == 3"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.minRegionCount"))).intValue() == 3);
			}
		});
		invariants999.add(new Invariant(818, "HMasterInstance.normalizerChore.lastLog == 20059428840580L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() == 20059428840580L);
			}
		});
		invariants999.add(new Invariant(819, "HMasterInstance.procedureExecutor.$assertionsDisabled == false"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.$assertionsDisabled"))).booleanValue() == false);
			}
		});
		invariants999.add(new Invariant(820, "HMasterInstance.procedureExecutor.activeExecutorCount >= 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue() >= 0);
			}
		});
		invariants999.add(new Invariant(821, "daikon.Quant.eltsNotEqual(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE, null)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.eltsNotEqual((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])), null));
			}
		});
		invariants999.add(new Invariant(822, "HMasterInstance.procedureExecutor.corePoolSize == 5"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.corePoolSize"))).intValue() == 5);
			}
		});
		invariants999.add(new Invariant(823, "HMasterInstance.procedureExecutor.maxPoolSize == 50"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.maxPoolSize"))).intValue() == 50);
			}
		});
		invariants999.add(new Invariant(824, "daikon.Quant.eltsNotEqual(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE, null)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.eltsNotEqual((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0])), null));
			}
		});
		invariants999.add(new Invariant(825, "daikon.Quant.eltsNotEqual(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE, null)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.eltsNotEqual((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0])), null));
			}
		});
		invariants999.add(new Invariant(826, "daikon.Quant.eltsNotEqual(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE, null)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.eltsNotEqual((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0])), null));
			}
		});
		invariants999.add(new Invariant(827, "HMasterInstance.procedureExecutor.scheduler.nullPollCalls >= 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.nullPollCalls"))).intValue() >= 0);
			}
		});
		invariants999.add(new Invariant(828, "HMasterInstance.procedureExecutor.scheduler.pollCalls >= 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.pollCalls"))).intValue() >= 0);
			}
		});
		invariants999.add(new Invariant(829, "HMasterInstance.procedureExecutor.store.REGION_ID == 1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.REGION_ID"))).intValue() == 1);
			}
		});
		invariants999.add(new Invariant(830, "HMasterInstance.procedureExecutor.store.running == true"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.running"))).booleanValue() == true);
			}
		});
		invariants999.add(new Invariant(831, "HMasterInstance.procedureStore.REGION_ID == 1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.REGION_ID"))).intValue() == 1);
			}
		});
		invariants999.add(new Invariant(832, "HMasterInstance.procedureStore.TABLE_NAME.NAMESPACE_DELIM == 58"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Character)(InvariantChecker.getValue("HMasterInstance.procedureStore.TABLE_NAME.NAMESPACE_DELIM"))).charValue() == 58);
			}
		});
		invariants999.add(new Invariant(833, "HMasterInstance.procedureStore.TABLE_NAME.hashCode == 260651963"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.TABLE_NAME.hashCode"))).intValue() == 260651963);
			}
		});
		invariants999.add(new Invariant(834, "HMasterInstance.procedureStore.TABLE_NAME.systemTable == false"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.TABLE_NAME.systemTable"))).booleanValue() == false);
			}
		});
		invariants999.add(new Invariant(835, "HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS == 16"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"))).intValue() == 16);
			}
		});
		invariants999.add(new Invariant(836, "HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS == 300000000000L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"))).intValue() == 300000000000L);
			}
		});
		invariants999.add(new Invariant(837, "HMasterInstance.procedureStore.cleaner.enabled == true"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.enabled"))).booleanValue() == true);
			}
		});
		invariants999.add(new Invariant(838, "HMasterInstance.procedureStore.cleaner.lastLog == 20055725436328L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() == 20055725436328L);
			}
		});
		invariants999.add(new Invariant(839, "HMasterInstance.procedureStore.cleaner.period == 600000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.period"))).intValue() == 600000);
			}
		});
		invariants999.add(new Invariant(840, "HMasterInstance.procedureStore.cleaner.timeOfLastRun == 1692765788366L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() == 1692765788366L);
			}
		});
		invariants999.add(new Invariant(841, "HMasterInstance.procedureStore.cleaner.timeOfThisRun == 1692765788368L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue() == 1692765788368L);
			}
		});
		invariants999.add(new Invariant(842, "HMasterInstance.procedureStore.cleanerPool.cleanerLatch == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue() == 0);
			}
		});
		invariants999.add(new Invariant(843, "HMasterInstance.procedureStore.cleanerPool.size == 4"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.size"))).intValue() == 4);
			}
		});
		invariants999.add(new Invariant(844, "HMasterInstance.procedureStore.flusherAndCompactor.$assertionsDisabled == false"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.$assertionsDisabled"))).booleanValue() == false);
			}
		});
		invariants999.add(new Invariant(845, "HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush >= 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue() >= 0);
			}
		});
		invariants999.add(new Invariant(846, "HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime == 1692765788318L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue() == 1692765788318L);
			}
		});
		invariants999.add(new Invariant(847, "HMasterInstance.procedureStore.numThreads == 5"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.numThreads"))).intValue() == 5);
			}
		});
		invariants999.add(new Invariant(848, "HMasterInstance.procedureStore.region.DEEP_OVERHEAD == 1124"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.DEEP_OVERHEAD"))).intValue() == 1124);
			}
		});
		invariants999.add(new Invariant(849, "HMasterInstance.procedureStore.region.FIXED_OVERHEAD == 384"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.FIXED_OVERHEAD"))).intValue() == 384);
			}
		});
		invariants999.add(new Invariant(850, "HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES == 1000000000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"))).intValue() == 1000000000);
			}
		});
		invariants999.add(new Invariant(851, "HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL == 300000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"))).intValue() == 300000);
			}
		});
		invariants999.add(new Invariant(852, "HMasterInstance.procedureStore.region.blockingMemStoreSize == 536870912"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.blockingMemStoreSize"))).intValue() == 536870912);
			}
		});
		invariants999.add(new Invariant(853, "HMasterInstance.procedureStore.region.lastFlushOpSeqId == -1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue() == -1);
			}
		});
		invariants999.add(new Invariant(854, "HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId == 1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue() == 1);
			}
		});
		invariants999.add(new Invariant(855, "HMasterInstance.procedureStore.region.majorInProgress == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue() == 0);
			}
		});
		invariants999.add(new Invariant(856, "HMasterInstance.procedureStore.region.maxBusyWaitDuration == 120000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitDuration"))).intValue() == 120000);
			}
		});
		invariants999.add(new Invariant(857, "HMasterInstance.procedureStore.region.maxBusyWaitMultiplier == 2"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"))).intValue() == 2);
			}
		});
		invariants999.add(new Invariant(858, "HMasterInstance.procedureStore.region.timestampSlop == 9223372036854775807L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.timestampSlop"))).intValue() == 9223372036854775807L);
			}
		});
		invariants999.add(new Invariant(859, "HMasterInstance.procedureStore.walFactory.timeoutMillis == 300000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walFactory.timeoutMillis"))).intValue() == 300000);
			}
		});
		invariants999.add(new Invariant(860, "HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval == 30000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"))).intValue() == 30000);
			}
		});
		invariants999.add(new Invariant(861, "HMasterInstance.procedureStore.walRoller.lastRollTime == 1692765787015L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue() == 1692765787015L);
			}
		});
		invariants999.add(new Invariant(862, "HMasterInstance.procedureStore.walRoller.running == true"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.running"))).booleanValue() == true);
			}
		});
		invariants999.add(new Invariant(863, "HMasterInstance.procedureStore.walRoller.threadWakeFrequency == 100"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.threadWakeFrequency"))).intValue() == 100);
			}
		});
		invariants999.add(new Invariant(864, "HMasterInstance.regionServerAccounting.globalMemStoreLimit == 6108584448L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimit"))).intValue() == 6108584448L);
			}
		});
		invariants999.add(new Invariant(865, "HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark == 5803154944L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"))).intValue() == 5803154944L);
			}
		});
		invariants999.add(new Invariant(866, "daikon.Quant.fuzzy.eq(HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMarkPercent, 0.95)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.fuzzy.eq(((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMarkPercent"))).doubleValue(), 0.95));
			}
		});
		invariants999.add(new Invariant(867, "HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval == 1200000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"))).intValue() == 1200000);
			}
		});
		invariants999.add(new Invariant(868, "HMasterInstance.replicationBarrierCleaner.lastLog == 20056899650539L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue() == 20056899650539L);
			}
		});
		invariants999.add(new Invariant(869, "HMasterInstance.replicationBarrierCleaner.timeOfLastRun == 1692765789536L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue() == 1692765789536L);
			}
		});
		invariants999.add(new Invariant(870, "HMasterInstance.rpcClient.callIdCnt == 188"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue() == 188);
			}
		});
		invariants999.add(new Invariant(871, "HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize == 16384"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"))).intValue() == 16384);
			}
		});
		invariants999.add(new Invariant(872, "HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier == 3"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"))).intValue() == 3);
			}
		});
		invariants999.add(new Invariant(873, "HMasterInstance.rpcClient.connectTO == 10000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connectTO"))).intValue() == 10000);
			}
		});
		invariants999.add(new Invariant(874, "HMasterInstance.rpcClient.connections.poolMaxSize == 1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue() == 1);
			}
		});
		invariants999.add(new Invariant(875, "HMasterInstance.rpcClient.failedServers.latestExpiry == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue() == 0);
			}
		});
		invariants999.add(new Invariant(876, "HMasterInstance.rpcClient.failedServers.recheckServersTimeout == 2000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.recheckServersTimeout"))).intValue() == 2000);
			}
		});
		invariants999.add(new Invariant(877, "HMasterInstance.rpcClient.failureSleep == 100"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failureSleep"))).intValue() == 100);
			}
		});
		invariants999.add(new Invariant(878, "HMasterInstance.rpcClient.fallbackAllowed == true"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcClient.fallbackAllowed"))).booleanValue() == true);
			}
		});
		invariants999.add(new Invariant(879, "HMasterInstance.rpcClient.maxConcurrentCallsPerServer == 2147483647"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.maxConcurrentCallsPerServer"))).intValue() == 2147483647);
			}
		});
		invariants999.add(new Invariant(880, "HMasterInstance.rpcClient.minIdleTimeBeforeClose == 120000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.minIdleTimeBeforeClose"))).intValue() == 120000);
			}
		});
		invariants999.add(new Invariant(881, "HMasterInstance.rpcClient.readTO == 20000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.readTO"))).intValue() == 20000);
			}
		});
		invariants999.add(new Invariant(882, "HMasterInstance.rpcClient.running == false"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.rpcClient.running"))).booleanValue() == false);
			}
		});
		invariants999.add(new Invariant(883, "HMasterInstance.rpcClient.writeTO == 60000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.writeTO"))).intValue() == 60000);
			}
		});
		invariants999.add(new Invariant(884, "HMasterInstance.rpcServices.maxScannerResultSize == 104857600"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.maxScannerResultSize"))).intValue() == 104857600);
			}
		});
		invariants999.add(new Invariant(885, "HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT == 65536"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"))).intValue() == 65536);
			}
		});
		invariants999.add(new Invariant(886, "HMasterInstance.rpcServices.rpcTimeout == 60000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcTimeout"))).intValue() == 60000);
			}
		});
		invariants999.add(new Invariant(887, "HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash == -4292208131699638272L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue() == -4292208131699638272L);
			}
		});
		invariants999.add(new Invariant(888, "HMasterInstance.rsFatals.maxSizeBytes == 1048576"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.maxSizeBytes"))).intValue() == 1048576);
			}
		});
		invariants999.add(new Invariant(889, "HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog == 20059431561276L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue() == 20059431561276L);
			}
		});
		invariants999.add(new Invariant(890, "HMasterInstance.serverManager.flushedSeqIdFlusher.period == 10800000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.period"))).intValue() == 10800000);
			}
		});
		invariants999.add(new Invariant(891, "HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun == -1 || HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun == 1692765792068L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue() == -1 || ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue() == 1692765792068L);
			}
		});
		invariants999.add(new Invariant(892, "HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun != 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue() != 0);
			}
		});
		invariants999.add(new Invariant(893, "HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun == 1692765792068L || HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun == 1692765854292L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue() == 1692765792068L || ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue() == 1692765854292L);
			}
		});
		invariants999.add(new Invariant(894, "HMasterInstance.serverManager.maxSkew == 30000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.maxSkew"))).intValue() == 30000);
			}
		});
		invariants999.add(new Invariant(895, "HMasterInstance.snapshotCleanerChore.lastLog == 20056900273244L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue() == 20056900273244L);
			}
		});
		invariants999.add(new Invariant(896, "HMasterInstance.snapshotCleanerChore.timeOfThisRun == 1692765789537L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfThisRun"))).intValue() == 1692765789537L);
			}
		});
		invariants999.add(new Invariant(897, "HMasterInstance.snapshotManager.coordinator.timeoutMillis == 300000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.snapshotManager.coordinator.timeoutMillis"))).intValue() == 300000);
			}
		});
		invariants999.add(new Invariant(898, "HMasterInstance.tableDescriptors.cachehits >= 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue() >= 0);
			}
		});
		invariants999.add(new Invariant(899, "HMasterInstance.tableDescriptors.invocations >= 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue() >= 0);
			}
		});
		invariants999.add(new Invariant(900, "HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS == 1000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"))).intValue() == 1000);
			}
		});
		invariants999.add(new Invariant(901, "HMasterInstance.walManager.fsOk == true"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("HMasterInstance.walManager.fsOk"))).booleanValue() == true);
			}
		});
		invariants999.add(new Invariant(902, "HMasterInstance.walManager.splitLogManager.lastTaskCreateTime == 9223372036854775807L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue() == 9223372036854775807L);
			}
		});
		invariants999.add(new Invariant(903, "HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout == 90000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"))).intValue() == 90000);
			}
		});
		invariants999.add(new Invariant(904, "HMasterInstance.zooKeeper.znodePaths.ZNODE_PATH_SEPARATOR == 47"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Character)(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.ZNODE_PATH_SEPARATOR"))).charValue() == 47);
			}
		});
		invariants999.add(new Invariant(905, "daikon.Quant.eltsEqual(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE, null)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.eltsEqual((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])), null));
			}
		});
		invariants999.add(new Invariant(906, "daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE) == 0 || daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE) == 1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))) == 0 || daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))) == 1);
			}
		});
		invariants999.add(new Invariant(907, "daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE) == 0 || daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE) == 1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))) == 0 || daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))) == 1);
			}
		});
		invariants999.add(new Invariant(908, "daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE) == 0 || daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE) == 1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))) == 0 || daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))) == 1);
			}
		});
		invariants999.add(new Invariant(909, "HMasterInstance.TIMEOUT_REGION_MOVED != HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.TIMEOUT_REGION_MOVED"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue());
			}
		});
		invariants999.add(new Invariant(910, "HMasterInstance.TIMEOUT_REGION_MOVED != HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.TIMEOUT_REGION_MOVED"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue());
			}
		});
		invariants999.add(new Invariant(911, "HMasterInstance.TIMEOUT_REGION_MOVED != HMasterInstance.assignmentManager.ritChore.lastUpdate"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.TIMEOUT_REGION_MOVED"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue());
			}
		});
		invariants999.add(new Invariant(912, "HMasterInstance.TIMEOUT_REGION_MOVED > HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.TIMEOUT_REGION_MOVED"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants999.add(new Invariant(913, "HMasterInstance.TIMEOUT_REGION_MOVED > HMasterInstance.catalogJanitorChore.lastReport.count"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.TIMEOUT_REGION_MOVED"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.count"))).intValue());
			}
		});
		invariants999.add(new Invariant(914, "HMasterInstance.TIMEOUT_REGION_MOVED < HMasterInstance.catalogJanitorChore.lastReport.now"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.TIMEOUT_REGION_MOVED"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.now"))).intValue());
			}
		});
		invariants999.add(new Invariant(915, "HMasterInstance.TIMEOUT_REGION_MOVED > HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.TIMEOUT_REGION_MOVED"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants999.add(new Invariant(916, "HMasterInstance.TIMEOUT_REGION_MOVED < HMasterInstance.clusterStatusChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.TIMEOUT_REGION_MOVED"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfLastRun"))).intValue());
			}
		});
		invariants999.add(new Invariant(917, "HMasterInstance.TIMEOUT_REGION_MOVED < HMasterInstance.clusterStatusChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.TIMEOUT_REGION_MOVED"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfThisRun"))).intValue());
			}
		});
		invariants999.add(new Invariant(918, "HMasterInstance.TIMEOUT_REGION_MOVED > HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.TIMEOUT_REGION_MOVED"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue());
			}
		});
		invariants999.add(new Invariant(919, "HMasterInstance.TIMEOUT_REGION_MOVED >= HMasterInstance.csm.splitLogManagerCoordination.timeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.TIMEOUT_REGION_MOVED"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue());
			}
		});
		invariants999.add(new Invariant(920, "HMasterInstance.TIMEOUT_REGION_MOVED > HMasterInstance.procedureExecutor.activeExecutorCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.TIMEOUT_REGION_MOVED"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue());
			}
		});
		invariants999.add(new Invariant(921, "HMasterInstance.TIMEOUT_REGION_MOVED > HMasterInstance.procedureExecutor.lastProcId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.TIMEOUT_REGION_MOVED"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.lastProcId"))).intValue());
			}
		});
		invariants999.add(new Invariant(922, "HMasterInstance.TIMEOUT_REGION_MOVED > HMasterInstance.procedureExecutor.scheduler.nullPollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.TIMEOUT_REGION_MOVED"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.nullPollCalls"))).intValue());
			}
		});
		invariants999.add(new Invariant(923, "HMasterInstance.TIMEOUT_REGION_MOVED > HMasterInstance.procedureExecutor.scheduler.pollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.TIMEOUT_REGION_MOVED"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.pollCalls"))).intValue());
			}
		});
		invariants999.add(new Invariant(924, "HMasterInstance.TIMEOUT_REGION_MOVED > HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.TIMEOUT_REGION_MOVED"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue());
			}
		});
		invariants999.add(new Invariant(925, "HMasterInstance.TIMEOUT_REGION_MOVED != HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.TIMEOUT_REGION_MOVED"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants999.add(new Invariant(926, "HMasterInstance.TIMEOUT_REGION_MOVED < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.TIMEOUT_REGION_MOVED"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants999.add(new Invariant(927, "HMasterInstance.TIMEOUT_REGION_MOVED > HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.TIMEOUT_REGION_MOVED"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants999.add(new Invariant(928, "HMasterInstance.TIMEOUT_REGION_MOVED > HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.TIMEOUT_REGION_MOVED"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants999.add(new Invariant(929, "HMasterInstance.TIMEOUT_REGION_MOVED > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.TIMEOUT_REGION_MOVED"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(930, "HMasterInstance.TIMEOUT_REGION_MOVED > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.TIMEOUT_REGION_MOVED"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(931, "HMasterInstance.TIMEOUT_REGION_MOVED > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.TIMEOUT_REGION_MOVED"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(932, "HMasterInstance.TIMEOUT_REGION_MOVED > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.TIMEOUT_REGION_MOVED"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(933, "HMasterInstance.TIMEOUT_REGION_MOVED > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.TIMEOUT_REGION_MOVED"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(934, "HMasterInstance.TIMEOUT_REGION_MOVED > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.TIMEOUT_REGION_MOVED"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(935, "HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE < HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue());
			}
		});
		invariants999.add(new Invariant(936, "HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE < HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue());
			}
		});
		invariants999.add(new Invariant(937, "HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE < HMasterInstance.assignmentManager.ritChore.lastUpdate"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue());
			}
		});
		invariants999.add(new Invariant(938, "HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE < HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants999.add(new Invariant(939, "HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE < HMasterInstance.catalogJanitorChore.lastReport.count"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.count"))).intValue());
			}
		});
		invariants999.add(new Invariant(940, "HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE < HMasterInstance.catalogJanitorChore.lastReport.now"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.now"))).intValue());
			}
		});
		invariants999.add(new Invariant(941, "HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE <= HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants999.add(new Invariant(942, "HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE < HMasterInstance.clusterStatusChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfLastRun"))).intValue());
			}
		});
		invariants999.add(new Invariant(943, "HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE < HMasterInstance.clusterStatusChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfThisRun"))).intValue());
			}
		});
		invariants999.add(new Invariant(944, "HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE < HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue());
			}
		});
		invariants999.add(new Invariant(945, "HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE < HMasterInstance.csm.splitLogManagerCoordination.timeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue());
			}
		});
		invariants999.add(new Invariant(946, "HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE < HMasterInstance.procedureExecutor.activeExecutorCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue());
			}
		});
		invariants999.add(new Invariant(947, "HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE <= HMasterInstance.procedureExecutor.lastProcId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.lastProcId"))).intValue());
			}
		});
		invariants999.add(new Invariant(948, "HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE < HMasterInstance.procedureExecutor.scheduler.nullPollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.nullPollCalls"))).intValue());
			}
		});
		invariants999.add(new Invariant(949, "HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE < HMasterInstance.procedureExecutor.scheduler.pollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.pollCalls"))).intValue());
			}
		});
		invariants999.add(new Invariant(950, "HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE < HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue());
			}
		});
		invariants999.add(new Invariant(951, "HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE <= HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants999.add(new Invariant(952, "HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants999.add(new Invariant(953, "HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE < HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants999.add(new Invariant(954, "HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE < HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants999.add(new Invariant(955, "HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE <= daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])))-1);
			}
		});
		invariants999.add(new Invariant(956, "HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE <= daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1);
			}
		});
		invariants999.add(new Invariant(957, "HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE <= daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0])))-1);
			}
		});
		invariants999.add(new Invariant(958, "HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE <= daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0])))-1);
			}
		});
		invariants999.add(new Invariant(959, "HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE <= daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0])))-1);
			}
		});
		invariants999.add(new Invariant(960, "HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE < daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.NON_STARTCODE"))).intValue() < daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])))-1);
			}
		});
		invariants999.add(new Invariant(961, "HMasterInstance.activeMasterManager.activeMasterServerName.serialVersionUID > HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.serialVersionUID"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue());
			}
		});
		invariants999.add(new Invariant(962, "HMasterInstance.activeMasterManager.activeMasterServerName.serialVersionUID > HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.serialVersionUID"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue());
			}
		});
		invariants999.add(new Invariant(963, "HMasterInstance.activeMasterManager.activeMasterServerName.serialVersionUID > HMasterInstance.assignmentManager.ritChore.lastUpdate"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.serialVersionUID"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue());
			}
		});
		invariants999.add(new Invariant(964, "HMasterInstance.activeMasterManager.activeMasterServerName.serialVersionUID > HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.serialVersionUID"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants999.add(new Invariant(965, "HMasterInstance.activeMasterManager.activeMasterServerName.serialVersionUID > HMasterInstance.catalogJanitorChore.lastReport.count"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.serialVersionUID"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.count"))).intValue());
			}
		});
		invariants999.add(new Invariant(966, "HMasterInstance.activeMasterManager.activeMasterServerName.serialVersionUID > HMasterInstance.catalogJanitorChore.lastReport.now"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.serialVersionUID"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.now"))).intValue());
			}
		});
		invariants999.add(new Invariant(967, "HMasterInstance.activeMasterManager.activeMasterServerName.serialVersionUID > HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.serialVersionUID"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants999.add(new Invariant(968, "HMasterInstance.activeMasterManager.activeMasterServerName.serialVersionUID > HMasterInstance.clusterStatusChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.serialVersionUID"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfLastRun"))).intValue());
			}
		});
		invariants999.add(new Invariant(969, "HMasterInstance.activeMasterManager.activeMasterServerName.serialVersionUID > HMasterInstance.clusterStatusChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.serialVersionUID"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfThisRun"))).intValue());
			}
		});
		invariants999.add(new Invariant(970, "HMasterInstance.activeMasterManager.activeMasterServerName.serialVersionUID > HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.serialVersionUID"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue());
			}
		});
		invariants999.add(new Invariant(971, "HMasterInstance.activeMasterManager.activeMasterServerName.serialVersionUID > HMasterInstance.csm.splitLogManagerCoordination.timeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.serialVersionUID"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue());
			}
		});
		invariants999.add(new Invariant(972, "HMasterInstance.activeMasterManager.activeMasterServerName.serialVersionUID > HMasterInstance.procedureExecutor.activeExecutorCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.serialVersionUID"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue());
			}
		});
		invariants999.add(new Invariant(973, "HMasterInstance.activeMasterManager.activeMasterServerName.serialVersionUID > HMasterInstance.procedureExecutor.lastProcId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.serialVersionUID"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.lastProcId"))).intValue());
			}
		});
		invariants999.add(new Invariant(974, "HMasterInstance.activeMasterManager.activeMasterServerName.serialVersionUID > HMasterInstance.procedureExecutor.scheduler.nullPollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.serialVersionUID"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.nullPollCalls"))).intValue());
			}
		});
		invariants999.add(new Invariant(975, "HMasterInstance.activeMasterManager.activeMasterServerName.serialVersionUID > HMasterInstance.procedureExecutor.scheduler.pollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.serialVersionUID"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.pollCalls"))).intValue());
			}
		});
		invariants999.add(new Invariant(976, "HMasterInstance.activeMasterManager.activeMasterServerName.serialVersionUID > HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.serialVersionUID"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue());
			}
		});
		invariants999.add(new Invariant(977, "HMasterInstance.activeMasterManager.activeMasterServerName.serialVersionUID > HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.serialVersionUID"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfLastRun"))).intValue());
			}
		});
		invariants999.add(new Invariant(978, "HMasterInstance.activeMasterManager.activeMasterServerName.serialVersionUID > HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.serialVersionUID"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants999.add(new Invariant(979, "HMasterInstance.activeMasterManager.activeMasterServerName.serialVersionUID > HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.serialVersionUID"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants999.add(new Invariant(980, "HMasterInstance.activeMasterManager.activeMasterServerName.serialVersionUID > HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.serialVersionUID"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants999.add(new Invariant(981, "HMasterInstance.activeMasterManager.activeMasterServerName.serialVersionUID > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.serialVersionUID"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(982, "HMasterInstance.activeMasterManager.activeMasterServerName.serialVersionUID > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.serialVersionUID"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(983, "HMasterInstance.activeMasterManager.activeMasterServerName.serialVersionUID > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.serialVersionUID"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(984, "HMasterInstance.activeMasterManager.activeMasterServerName.serialVersionUID > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.serialVersionUID"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(985, "HMasterInstance.activeMasterManager.activeMasterServerName.serialVersionUID > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.serialVersionUID"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(986, "HMasterInstance.activeMasterManager.activeMasterServerName.serialVersionUID > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.serialVersionUID"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(987, "HMasterInstance.activeMasterManager.activeMasterServerName.startcode != HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.startcode"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.masterFinishedInitializationTime"))).intValue());
			}
		});
		invariants999.add(new Invariant(988, "HMasterInstance.activeMasterManager.activeMasterServerName.startcode != HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.startcode"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.deadMetricChore.lastUpdate"))).intValue());
			}
		});
		invariants999.add(new Invariant(989, "HMasterInstance.activeMasterManager.activeMasterServerName.startcode != HMasterInstance.assignmentManager.ritChore.lastUpdate"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.startcode"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.assignmentManager.ritChore.lastUpdate"))).intValue());
			}
		});
		invariants999.add(new Invariant(990, "HMasterInstance.activeMasterManager.activeMasterServerName.startcode > HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.startcode"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.asyncClusterConnection.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants999.add(new Invariant(991, "HMasterInstance.activeMasterManager.activeMasterServerName.startcode > HMasterInstance.catalogJanitorChore.lastReport.count"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.startcode"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.count"))).intValue());
			}
		});
		invariants999.add(new Invariant(992, "HMasterInstance.activeMasterManager.activeMasterServerName.startcode < HMasterInstance.catalogJanitorChore.lastReport.now"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.startcode"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.catalogJanitorChore.lastReport.now"))).intValue());
			}
		});
		invariants999.add(new Invariant(993, "HMasterInstance.activeMasterManager.activeMasterServerName.startcode > HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.startcode"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants999.add(new Invariant(994, "HMasterInstance.activeMasterManager.activeMasterServerName.startcode < HMasterInstance.clusterStatusChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.startcode"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfLastRun"))).intValue());
			}
		});
		invariants999.add(new Invariant(995, "HMasterInstance.activeMasterManager.activeMasterServerName.startcode < HMasterInstance.clusterStatusChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.startcode"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.clusterStatusChore.timeOfThisRun"))).intValue());
			}
		});
		invariants999.add(new Invariant(996, "HMasterInstance.activeMasterManager.activeMasterServerName.startcode > HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.startcode"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.resubmitThreshold"))).intValue());
			}
		});
		invariants999.add(new Invariant(997, "HMasterInstance.activeMasterManager.activeMasterServerName.startcode > HMasterInstance.csm.splitLogManagerCoordination.timeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.startcode"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.csm.splitLogManagerCoordination.timeout"))).intValue());
			}
		});
		invariants999.add(new Invariant(998, "HMasterInstance.activeMasterManager.activeMasterServerName.startcode > HMasterInstance.procedureExecutor.activeExecutorCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.startcode"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue());
			}
		});
		invariants999.add(new Invariant(999, "HMasterInstance.activeMasterManager.activeMasterServerName.startcode > HMasterInstance.procedureExecutor.lastProcId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.activeMasterManager.activeMasterServerName.startcode"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.lastProcId"))).intValue());
			}
		});
	}
	static {
installInv999();	}
}
