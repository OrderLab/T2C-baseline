package daikon.hbase;
import daikon.*;
import java.util.Set;
import java.util.ArrayList;
import java.util.List;
//this class is automatically generated by our scripts
public class InvariantPool9999{

	public static List<Invariant> invariants9999 = new ArrayList<>();

	public static void installInv9999(){
		invariants9999.add(new Invariant(9000, "HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9001, "HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9002, "HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9003, "HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9004, "HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS > HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9005, "HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS > HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9006, "HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9007, "HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants9999.add(new Invariant(9008, "HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants9999.add(new Invariant(9009, "HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants9999.add(new Invariant(9010, "HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants9999.add(new Invariant(9011, "HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants9999.add(new Invariant(9012, "HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.FIVE_MINUTES_IN_NANOS"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants9999.add(new Invariant(9013, "HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE < HMasterInstance.mobFileCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9014, "HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE < HMasterInstance.mobFileCleanerChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9015, "HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE < HMasterInstance.mobFileCompactionChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9016, "HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE < HMasterInstance.mobFileCompactionChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9017, "HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE < HMasterInstance.normalizerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9018, "HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE < HMasterInstance.normalizerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9019, "HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE < HMasterInstance.procedureExecutor.lastProcId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.lastProcId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9020, "HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE < HMasterInstance.procedureExecutor.scheduler.pollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.pollCalls"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9021, "HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE < HMasterInstance.procedureStore.cleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9022, "HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE < HMasterInstance.procedureStore.cleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9023, "HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE < HMasterInstance.procedureStore.cleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9024, "HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE < HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9025, "HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE < HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9026, "HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE != HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9027, "HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE <= HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9028, "HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE < HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9029, "HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE < HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9030, "HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9031, "HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE < HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9032, "HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE < HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9033, "HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE < HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9034, "HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9035, "HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE != HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9036, "HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9037, "HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9038, "HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9039, "HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9040, "HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE < HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9041, "HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE < HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9042, "HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9043, "HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE != daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.choreServicer.MIN_CORE_POOL_SIZE"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0])))-1);
			}
		});
		invariants9999.add(new Invariant(9044, "HMasterInstance.mobFileCleanerChore.initialDelay < HMasterInstance.mobFileCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.initialDelay"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9045, "HMasterInstance.mobFileCleanerChore.initialDelay < HMasterInstance.mobFileCleanerChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.initialDelay"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9046, "HMasterInstance.mobFileCleanerChore.initialDelay < HMasterInstance.mobFileCompactionChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.initialDelay"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9047, "HMasterInstance.mobFileCleanerChore.initialDelay < HMasterInstance.mobFileCompactionChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.initialDelay"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9048, "HMasterInstance.mobFileCleanerChore.initialDelay < HMasterInstance.normalizerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.initialDelay"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9049, "HMasterInstance.mobFileCleanerChore.initialDelay < HMasterInstance.normalizerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.initialDelay"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9050, "HMasterInstance.mobFileCleanerChore.initialDelay < HMasterInstance.procedureStore.cleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.initialDelay"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9051, "HMasterInstance.mobFileCleanerChore.initialDelay < HMasterInstance.procedureStore.cleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.initialDelay"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9052, "HMasterInstance.mobFileCleanerChore.initialDelay < HMasterInstance.procedureStore.cleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.initialDelay"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9053, "HMasterInstance.mobFileCleanerChore.initialDelay < HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.initialDelay"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9054, "HMasterInstance.mobFileCleanerChore.initialDelay > HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.initialDelay"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9055, "HMasterInstance.mobFileCleanerChore.initialDelay > HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.initialDelay"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9056, "HMasterInstance.mobFileCleanerChore.initialDelay > HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.initialDelay"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9057, "HMasterInstance.mobFileCleanerChore.initialDelay < HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.initialDelay"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9058, "HMasterInstance.mobFileCleanerChore.initialDelay < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.initialDelay"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9059, "HMasterInstance.mobFileCleanerChore.initialDelay < HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.initialDelay"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9060, "HMasterInstance.mobFileCleanerChore.initialDelay < HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.initialDelay"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9061, "HMasterInstance.mobFileCleanerChore.initialDelay > HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.initialDelay"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9062, "HMasterInstance.mobFileCleanerChore.initialDelay < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.initialDelay"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9063, "HMasterInstance.mobFileCleanerChore.initialDelay > HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.initialDelay"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9064, "HMasterInstance.mobFileCleanerChore.initialDelay < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.initialDelay"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9065, "HMasterInstance.mobFileCleanerChore.initialDelay < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.initialDelay"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9066, "HMasterInstance.mobFileCleanerChore.initialDelay < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.initialDelay"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9067, "HMasterInstance.mobFileCleanerChore.initialDelay < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.initialDelay"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9068, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9069, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.mobFileCleanerChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9070, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.mobFileCompactionChore.initialDelay"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.initialDelay"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9071, "HMasterInstance.mobFileCleanerChore.lastLog < HMasterInstance.mobFileCompactionChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9072, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.mobFileCompactionChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9073, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.nonceManager.conflictWaitIterationMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.conflictWaitIterationMs"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9074, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.nonceManager.deleteNonceGracePeriod"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.deleteNonceGracePeriod"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9075, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9076, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.normalizer.masterRpcServices.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.rpcTimeout"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9077, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.normalizer.minRegionCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.minRegionCount"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9078, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.normalizerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9079, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.normalizerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9080, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.procedureExecutor.corePoolSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.corePoolSize"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9081, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.procedureExecutor.maxPoolSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.maxPoolSize"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9082, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.procedureExecutor.store.REGION_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.REGION_ID"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9083, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.procedureStore.REGION_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.REGION_ID"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9084, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.procedureStore.TABLE_NAME.hashCode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.TABLE_NAME.hashCode"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9085, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9086, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9087, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.procedureStore.cleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9088, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.procedureStore.cleaner.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.period"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9089, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.procedureStore.cleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9090, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.procedureStore.cleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9091, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.procedureStore.cleanerPool.cleanerLatch"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9092, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.procedureStore.cleanerPool.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.size"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9093, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9094, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.procedureStore.numThreads"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.numThreads"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9095, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.procedureStore.region.DEEP_OVERHEAD"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.DEEP_OVERHEAD"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9096, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.procedureStore.region.FIXED_OVERHEAD"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.FIXED_OVERHEAD"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9097, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9098, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9099, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.procedureStore.region.blockingMemStoreSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.blockingMemStoreSize"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9100, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9101, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9102, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9103, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.procedureStore.region.majorInProgress"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9104, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.procedureStore.region.maxBusyWaitDuration"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitDuration"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9105, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9106, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9107, "HMasterInstance.mobFileCleanerChore.lastLog < HMasterInstance.procedureStore.region.timestampSlop"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.timestampSlop"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9108, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.procedureStore.walFactory.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walFactory.timeoutMillis"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9109, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9110, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9111, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.procedureStore.walRoller.threadWakeFrequency"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.threadWakeFrequency"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9112, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.regionServerAccounting.globalMemStoreLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimit"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9113, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9114, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9115, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9116, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9117, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9118, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9119, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9120, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9121, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.rpcClient.connectTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connectTO"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9122, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.rpcClient.connections.poolMaxSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9123, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.rpcClient.failedServers.latestExpiry"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9124, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.rpcClient.failedServers.recheckServersTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.recheckServersTimeout"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9125, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.rpcClient.failureSleep"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failureSleep"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9126, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.rpcClient.maxConcurrentCallsPerServer"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.maxConcurrentCallsPerServer"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9127, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.rpcClient.minIdleTimeBeforeClose"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.minIdleTimeBeforeClose"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9128, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.rpcClient.readTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.readTO"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9129, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.rpcClient.writeTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.writeTO"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9130, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.rpcServices.maxScannerResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.maxScannerResultSize"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9131, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9132, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.rpcServices.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcTimeout"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9133, "HMasterInstance.mobFileCleanerChore.lastLog < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9134, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.rsFatals.maxSizeBytes"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.maxSizeBytes"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9135, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9136, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9137, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.serverManager.flushedSeqIdFlusher.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.period"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9138, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.serverManager.maxSkew"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.maxSkew"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9139, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9140, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9141, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.snapshotManager.coordinator.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotManager.coordinator.timeoutMillis"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9142, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9143, "HMasterInstance.mobFileCleanerChore.lastLog != HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9144, "HMasterInstance.mobFileCleanerChore.lastLog > HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9145, "HMasterInstance.mobFileCleanerChore.lastLog > daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.lastLog"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0]))));
			}
		});
		invariants9999.add(new Invariant(9146, "HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent < HMasterInstance.mobFileCleanerChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9147, "HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent < HMasterInstance.mobFileCompactionChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9148, "HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent < HMasterInstance.mobFileCompactionChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9149, "HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent < HMasterInstance.normalizerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9150, "HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent < HMasterInstance.normalizerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9151, "HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent < HMasterInstance.procedureExecutor.activeExecutorCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9152, "HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent < HMasterInstance.procedureExecutor.lastProcId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.lastProcId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9153, "HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent < HMasterInstance.procedureExecutor.scheduler.nullPollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.nullPollCalls"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9154, "HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent < HMasterInstance.procedureExecutor.scheduler.pollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.pollCalls"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9155, "HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent < HMasterInstance.procedureStore.cleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9156, "HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent < HMasterInstance.procedureStore.cleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9157, "HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent < HMasterInstance.procedureStore.cleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9158, "HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent < HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9159, "HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent < HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9160, "HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent <= HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9161, "HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent < HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9162, "HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent < HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9163, "HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent < HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9164, "HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9165, "HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent < HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9166, "HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent < HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9167, "HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent < HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9168, "HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9169, "HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent < HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9170, "HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9171, "HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9172, "HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9173, "HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9174, "HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent < HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9175, "HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent < HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9176, "HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9177, "HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent < daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"))).intValue() < daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])))-1);
			}
		});
		invariants9999.add(new Invariant(9178, "HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent <= daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1);
			}
		});
		invariants9999.add(new Invariant(9179, "HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent <= daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0])))-1);
			}
		});
		invariants9999.add(new Invariant(9180, "HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent <= daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0])))-1);
			}
		});
		invariants9999.add(new Invariant(9181, "HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent <= daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0])))-1);
			}
		});
		invariants9999.add(new Invariant(9182, "HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent < daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeMeasurement.mostRecent"))).intValue() < daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0])))-1);
			}
		});
		invariants9999.add(new Invariant(9183, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > HMasterInstance.mobFileCompactionChore.initialDelay"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.initialDelay"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9184, "HMasterInstance.mobFileCleanerChore.timeOfThisRun < HMasterInstance.mobFileCompactionChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9185, "HMasterInstance.mobFileCleanerChore.timeOfThisRun <= HMasterInstance.mobFileCompactionChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9186, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > HMasterInstance.nonceManager.conflictWaitIterationMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.conflictWaitIterationMs"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9187, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > HMasterInstance.nonceManager.deleteNonceGracePeriod"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.deleteNonceGracePeriod"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9188, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9189, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > HMasterInstance.normalizer.masterRpcServices.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.rpcTimeout"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9190, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > HMasterInstance.normalizer.minRegionCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.minRegionCount"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9191, "HMasterInstance.mobFileCleanerChore.timeOfThisRun < HMasterInstance.normalizerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9192, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > HMasterInstance.normalizerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9193, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > HMasterInstance.procedureExecutor.corePoolSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.corePoolSize"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9194, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > HMasterInstance.procedureExecutor.maxPoolSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.maxPoolSize"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9195, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > HMasterInstance.procedureExecutor.store.REGION_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.REGION_ID"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9196, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > HMasterInstance.procedureStore.REGION_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.REGION_ID"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9197, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > HMasterInstance.procedureStore.TABLE_NAME.hashCode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.TABLE_NAME.hashCode"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9198, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9199, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9200, "HMasterInstance.mobFileCleanerChore.timeOfThisRun < HMasterInstance.procedureStore.cleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9201, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > HMasterInstance.procedureStore.cleaner.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.period"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9202, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > HMasterInstance.procedureStore.cleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9203, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > HMasterInstance.procedureStore.cleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9204, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > HMasterInstance.procedureStore.cleanerPool.cleanerLatch"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9205, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > HMasterInstance.procedureStore.cleanerPool.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.size"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9206, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9207, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > HMasterInstance.procedureStore.numThreads"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.numThreads"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9208, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > HMasterInstance.procedureStore.region.DEEP_OVERHEAD"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.DEEP_OVERHEAD"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9209, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > HMasterInstance.procedureStore.region.FIXED_OVERHEAD"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.FIXED_OVERHEAD"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9210, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9211, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9212, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > HMasterInstance.procedureStore.region.blockingMemStoreSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.blockingMemStoreSize"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9213, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9214, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9215, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9216, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > HMasterInstance.procedureStore.region.majorInProgress"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9217, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > HMasterInstance.procedureStore.region.maxBusyWaitDuration"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitDuration"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9218, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9219, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9220, "HMasterInstance.mobFileCleanerChore.timeOfThisRun < HMasterInstance.procedureStore.region.timestampSlop"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.timestampSlop"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9221, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > HMasterInstance.procedureStore.walFactory.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walFactory.timeoutMillis"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9222, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9223, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9224, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > HMasterInstance.procedureStore.walRoller.threadWakeFrequency"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.threadWakeFrequency"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9225, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > HMasterInstance.regionServerAccounting.globalMemStoreLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimit"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9226, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9227, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9228, "HMasterInstance.mobFileCleanerChore.timeOfThisRun < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9229, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9230, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9231, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9232, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9233, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9234, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > HMasterInstance.rpcClient.connectTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connectTO"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9235, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > HMasterInstance.rpcClient.connections.poolMaxSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9236, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > HMasterInstance.rpcClient.failedServers.latestExpiry"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9237, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > HMasterInstance.rpcClient.failedServers.recheckServersTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.recheckServersTimeout"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9238, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > HMasterInstance.rpcClient.failureSleep"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failureSleep"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9239, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > HMasterInstance.rpcClient.maxConcurrentCallsPerServer"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.maxConcurrentCallsPerServer"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9240, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > HMasterInstance.rpcClient.minIdleTimeBeforeClose"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.minIdleTimeBeforeClose"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9241, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > HMasterInstance.rpcClient.readTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.readTO"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9242, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > HMasterInstance.rpcClient.writeTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.writeTO"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9243, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > HMasterInstance.rpcServices.maxScannerResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.maxScannerResultSize"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9244, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9245, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > HMasterInstance.rpcServices.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcTimeout"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9246, "HMasterInstance.mobFileCleanerChore.timeOfThisRun < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9247, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > HMasterInstance.rsFatals.maxSizeBytes"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.maxSizeBytes"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9248, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9249, "HMasterInstance.mobFileCleanerChore.timeOfThisRun < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9250, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > HMasterInstance.serverManager.flushedSeqIdFlusher.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.period"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9251, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > HMasterInstance.serverManager.maxSkew"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.maxSkew"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9252, "HMasterInstance.mobFileCleanerChore.timeOfThisRun < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9253, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9254, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > HMasterInstance.snapshotManager.coordinator.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotManager.coordinator.timeoutMillis"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9255, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9256, "HMasterInstance.mobFileCleanerChore.timeOfThisRun != HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9257, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9258, "HMasterInstance.mobFileCleanerChore.timeOfThisRun > daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCleanerChore.timeOfThisRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0]))));
			}
		});
		invariants9999.add(new Invariant(9259, "HMasterInstance.mobFileCompactionChore.initialDelay < HMasterInstance.mobFileCompactionChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.initialDelay"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9260, "HMasterInstance.mobFileCompactionChore.initialDelay < HMasterInstance.mobFileCompactionChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.initialDelay"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9261, "HMasterInstance.mobFileCompactionChore.initialDelay < HMasterInstance.normalizerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.initialDelay"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9262, "HMasterInstance.mobFileCompactionChore.initialDelay < HMasterInstance.normalizerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.initialDelay"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9263, "HMasterInstance.mobFileCompactionChore.initialDelay < HMasterInstance.procedureStore.cleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.initialDelay"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9264, "HMasterInstance.mobFileCompactionChore.initialDelay < HMasterInstance.procedureStore.cleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.initialDelay"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9265, "HMasterInstance.mobFileCompactionChore.initialDelay < HMasterInstance.procedureStore.cleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.initialDelay"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9266, "HMasterInstance.mobFileCompactionChore.initialDelay < HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.initialDelay"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9267, "HMasterInstance.mobFileCompactionChore.initialDelay > HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.initialDelay"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9268, "HMasterInstance.mobFileCompactionChore.initialDelay > HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.initialDelay"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9269, "HMasterInstance.mobFileCompactionChore.initialDelay > HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.initialDelay"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9270, "HMasterInstance.mobFileCompactionChore.initialDelay < HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.initialDelay"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9271, "HMasterInstance.mobFileCompactionChore.initialDelay < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.initialDelay"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9272, "HMasterInstance.mobFileCompactionChore.initialDelay < HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.initialDelay"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9273, "HMasterInstance.mobFileCompactionChore.initialDelay < HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.initialDelay"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9274, "HMasterInstance.mobFileCompactionChore.initialDelay > HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.initialDelay"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9275, "HMasterInstance.mobFileCompactionChore.initialDelay < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.initialDelay"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9276, "HMasterInstance.mobFileCompactionChore.initialDelay > HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.initialDelay"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9277, "HMasterInstance.mobFileCompactionChore.initialDelay < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.initialDelay"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9278, "HMasterInstance.mobFileCompactionChore.initialDelay < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.initialDelay"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9279, "HMasterInstance.mobFileCompactionChore.initialDelay < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.initialDelay"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9280, "HMasterInstance.mobFileCompactionChore.initialDelay < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.initialDelay"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9281, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.mobFileCompactionChore.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9282, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.nonceManager.conflictWaitIterationMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.conflictWaitIterationMs"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9283, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.nonceManager.deleteNonceGracePeriod"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.deleteNonceGracePeriod"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9284, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9285, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.normalizer.masterRpcServices.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.rpcTimeout"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9286, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.normalizer.minRegionCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.minRegionCount"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9287, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.normalizerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9288, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.normalizerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9289, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.procedureExecutor.corePoolSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.corePoolSize"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9290, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.procedureExecutor.maxPoolSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.maxPoolSize"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9291, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.procedureExecutor.store.REGION_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.REGION_ID"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9292, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.procedureStore.REGION_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.REGION_ID"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9293, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.procedureStore.TABLE_NAME.hashCode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.TABLE_NAME.hashCode"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9294, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9295, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9296, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.procedureStore.cleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9297, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.procedureStore.cleaner.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.period"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9298, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.procedureStore.cleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9299, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.procedureStore.cleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9300, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.procedureStore.cleanerPool.cleanerLatch"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9301, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.procedureStore.cleanerPool.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.size"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9302, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9303, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.procedureStore.numThreads"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.numThreads"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9304, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.procedureStore.region.DEEP_OVERHEAD"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.DEEP_OVERHEAD"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9305, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.procedureStore.region.FIXED_OVERHEAD"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.FIXED_OVERHEAD"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9306, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9307, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9308, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.procedureStore.region.blockingMemStoreSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.blockingMemStoreSize"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9309, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9310, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9311, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9312, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.procedureStore.region.majorInProgress"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9313, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.procedureStore.region.maxBusyWaitDuration"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitDuration"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9314, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9315, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9316, "HMasterInstance.mobFileCompactionChore.lastLog < HMasterInstance.procedureStore.region.timestampSlop"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.timestampSlop"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9317, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.procedureStore.walFactory.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walFactory.timeoutMillis"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9318, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9319, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9320, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.procedureStore.walRoller.threadWakeFrequency"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.threadWakeFrequency"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9321, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.regionServerAccounting.globalMemStoreLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimit"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9322, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9323, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9324, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9325, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9326, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9327, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9328, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9329, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9330, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.rpcClient.connectTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connectTO"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9331, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.rpcClient.connections.poolMaxSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9332, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.rpcClient.failedServers.latestExpiry"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9333, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.rpcClient.failedServers.recheckServersTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.recheckServersTimeout"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9334, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.rpcClient.failureSleep"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failureSleep"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9335, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.rpcClient.maxConcurrentCallsPerServer"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.maxConcurrentCallsPerServer"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9336, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.rpcClient.minIdleTimeBeforeClose"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.minIdleTimeBeforeClose"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9337, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.rpcClient.readTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.readTO"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9338, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.rpcClient.writeTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.writeTO"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9339, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.rpcServices.maxScannerResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.maxScannerResultSize"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9340, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9341, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.rpcServices.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcTimeout"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9342, "HMasterInstance.mobFileCompactionChore.lastLog < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9343, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.rsFatals.maxSizeBytes"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.maxSizeBytes"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9344, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9345, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9346, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.serverManager.flushedSeqIdFlusher.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.period"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9347, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.serverManager.maxSkew"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.maxSkew"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9348, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9349, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9350, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.snapshotManager.coordinator.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotManager.coordinator.timeoutMillis"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9351, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9352, "HMasterInstance.mobFileCompactionChore.lastLog != HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9353, "HMasterInstance.mobFileCompactionChore.lastLog > HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9354, "HMasterInstance.mobFileCompactionChore.lastLog > daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.lastLog"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0]))));
			}
		});
		invariants9999.add(new Invariant(9355, "HMasterInstance.mobFileCompactionChore.timeOfThisRun > HMasterInstance.nonceManager.conflictWaitIterationMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.conflictWaitIterationMs"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9356, "HMasterInstance.mobFileCompactionChore.timeOfThisRun > HMasterInstance.nonceManager.deleteNonceGracePeriod"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.deleteNonceGracePeriod"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9357, "HMasterInstance.mobFileCompactionChore.timeOfThisRun > HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9358, "HMasterInstance.mobFileCompactionChore.timeOfThisRun > HMasterInstance.normalizer.masterRpcServices.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.rpcTimeout"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9359, "HMasterInstance.mobFileCompactionChore.timeOfThisRun > HMasterInstance.normalizer.minRegionCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.minRegionCount"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9360, "HMasterInstance.mobFileCompactionChore.timeOfThisRun < HMasterInstance.normalizerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9361, "HMasterInstance.mobFileCompactionChore.timeOfThisRun > HMasterInstance.normalizerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9362, "HMasterInstance.mobFileCompactionChore.timeOfThisRun > HMasterInstance.procedureExecutor.corePoolSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.corePoolSize"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9363, "HMasterInstance.mobFileCompactionChore.timeOfThisRun > HMasterInstance.procedureExecutor.maxPoolSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.maxPoolSize"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9364, "HMasterInstance.mobFileCompactionChore.timeOfThisRun > HMasterInstance.procedureExecutor.store.REGION_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.REGION_ID"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9365, "HMasterInstance.mobFileCompactionChore.timeOfThisRun > HMasterInstance.procedureStore.REGION_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.REGION_ID"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9366, "HMasterInstance.mobFileCompactionChore.timeOfThisRun > HMasterInstance.procedureStore.TABLE_NAME.hashCode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.TABLE_NAME.hashCode"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9367, "HMasterInstance.mobFileCompactionChore.timeOfThisRun > HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9368, "HMasterInstance.mobFileCompactionChore.timeOfThisRun > HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9369, "HMasterInstance.mobFileCompactionChore.timeOfThisRun < HMasterInstance.procedureStore.cleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9370, "HMasterInstance.mobFileCompactionChore.timeOfThisRun > HMasterInstance.procedureStore.cleaner.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.period"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9371, "HMasterInstance.mobFileCompactionChore.timeOfThisRun > HMasterInstance.procedureStore.cleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9372, "HMasterInstance.mobFileCompactionChore.timeOfThisRun > HMasterInstance.procedureStore.cleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9373, "HMasterInstance.mobFileCompactionChore.timeOfThisRun > HMasterInstance.procedureStore.cleanerPool.cleanerLatch"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9374, "HMasterInstance.mobFileCompactionChore.timeOfThisRun > HMasterInstance.procedureStore.cleanerPool.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.size"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9375, "HMasterInstance.mobFileCompactionChore.timeOfThisRun > HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9376, "HMasterInstance.mobFileCompactionChore.timeOfThisRun > HMasterInstance.procedureStore.numThreads"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.numThreads"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9377, "HMasterInstance.mobFileCompactionChore.timeOfThisRun > HMasterInstance.procedureStore.region.DEEP_OVERHEAD"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.DEEP_OVERHEAD"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9378, "HMasterInstance.mobFileCompactionChore.timeOfThisRun > HMasterInstance.procedureStore.region.FIXED_OVERHEAD"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.FIXED_OVERHEAD"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9379, "HMasterInstance.mobFileCompactionChore.timeOfThisRun > HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9380, "HMasterInstance.mobFileCompactionChore.timeOfThisRun > HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9381, "HMasterInstance.mobFileCompactionChore.timeOfThisRun > HMasterInstance.procedureStore.region.blockingMemStoreSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.blockingMemStoreSize"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9382, "HMasterInstance.mobFileCompactionChore.timeOfThisRun > HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9383, "HMasterInstance.mobFileCompactionChore.timeOfThisRun > HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9384, "HMasterInstance.mobFileCompactionChore.timeOfThisRun > HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9385, "HMasterInstance.mobFileCompactionChore.timeOfThisRun > HMasterInstance.procedureStore.region.majorInProgress"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9386, "HMasterInstance.mobFileCompactionChore.timeOfThisRun > HMasterInstance.procedureStore.region.maxBusyWaitDuration"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitDuration"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9387, "HMasterInstance.mobFileCompactionChore.timeOfThisRun > HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9388, "HMasterInstance.mobFileCompactionChore.timeOfThisRun > HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9389, "HMasterInstance.mobFileCompactionChore.timeOfThisRun < HMasterInstance.procedureStore.region.timestampSlop"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.timestampSlop"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9390, "HMasterInstance.mobFileCompactionChore.timeOfThisRun > HMasterInstance.procedureStore.walFactory.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walFactory.timeoutMillis"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9391, "HMasterInstance.mobFileCompactionChore.timeOfThisRun > HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9392, "HMasterInstance.mobFileCompactionChore.timeOfThisRun > HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9393, "HMasterInstance.mobFileCompactionChore.timeOfThisRun > HMasterInstance.procedureStore.walRoller.threadWakeFrequency"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.threadWakeFrequency"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9394, "HMasterInstance.mobFileCompactionChore.timeOfThisRun > HMasterInstance.regionServerAccounting.globalMemStoreLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimit"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9395, "HMasterInstance.mobFileCompactionChore.timeOfThisRun > HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9396, "HMasterInstance.mobFileCompactionChore.timeOfThisRun > HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9397, "HMasterInstance.mobFileCompactionChore.timeOfThisRun < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9398, "HMasterInstance.mobFileCompactionChore.timeOfThisRun > HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9399, "HMasterInstance.mobFileCompactionChore.timeOfThisRun > HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9400, "HMasterInstance.mobFileCompactionChore.timeOfThisRun > HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9401, "HMasterInstance.mobFileCompactionChore.timeOfThisRun > HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9402, "HMasterInstance.mobFileCompactionChore.timeOfThisRun > HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9403, "HMasterInstance.mobFileCompactionChore.timeOfThisRun > HMasterInstance.rpcClient.connectTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connectTO"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9404, "HMasterInstance.mobFileCompactionChore.timeOfThisRun > HMasterInstance.rpcClient.connections.poolMaxSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9405, "HMasterInstance.mobFileCompactionChore.timeOfThisRun > HMasterInstance.rpcClient.failedServers.latestExpiry"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9406, "HMasterInstance.mobFileCompactionChore.timeOfThisRun > HMasterInstance.rpcClient.failedServers.recheckServersTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.recheckServersTimeout"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9407, "HMasterInstance.mobFileCompactionChore.timeOfThisRun > HMasterInstance.rpcClient.failureSleep"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failureSleep"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9408, "HMasterInstance.mobFileCompactionChore.timeOfThisRun > HMasterInstance.rpcClient.maxConcurrentCallsPerServer"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.maxConcurrentCallsPerServer"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9409, "HMasterInstance.mobFileCompactionChore.timeOfThisRun > HMasterInstance.rpcClient.minIdleTimeBeforeClose"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.minIdleTimeBeforeClose"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9410, "HMasterInstance.mobFileCompactionChore.timeOfThisRun > HMasterInstance.rpcClient.readTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.readTO"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9411, "HMasterInstance.mobFileCompactionChore.timeOfThisRun > HMasterInstance.rpcClient.writeTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.writeTO"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9412, "HMasterInstance.mobFileCompactionChore.timeOfThisRun > HMasterInstance.rpcServices.maxScannerResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.maxScannerResultSize"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9413, "HMasterInstance.mobFileCompactionChore.timeOfThisRun > HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9414, "HMasterInstance.mobFileCompactionChore.timeOfThisRun > HMasterInstance.rpcServices.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcTimeout"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9415, "HMasterInstance.mobFileCompactionChore.timeOfThisRun < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9416, "HMasterInstance.mobFileCompactionChore.timeOfThisRun > HMasterInstance.rsFatals.maxSizeBytes"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.maxSizeBytes"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9417, "HMasterInstance.mobFileCompactionChore.timeOfThisRun > HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9418, "HMasterInstance.mobFileCompactionChore.timeOfThisRun < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9419, "HMasterInstance.mobFileCompactionChore.timeOfThisRun > HMasterInstance.serverManager.flushedSeqIdFlusher.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.period"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9420, "HMasterInstance.mobFileCompactionChore.timeOfThisRun > HMasterInstance.serverManager.maxSkew"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.maxSkew"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9421, "HMasterInstance.mobFileCompactionChore.timeOfThisRun < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9422, "HMasterInstance.mobFileCompactionChore.timeOfThisRun > HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9423, "HMasterInstance.mobFileCompactionChore.timeOfThisRun > HMasterInstance.snapshotManager.coordinator.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotManager.coordinator.timeoutMillis"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9424, "HMasterInstance.mobFileCompactionChore.timeOfThisRun > HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9425, "HMasterInstance.mobFileCompactionChore.timeOfThisRun != HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9426, "HMasterInstance.mobFileCompactionChore.timeOfThisRun > HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9427, "HMasterInstance.mobFileCompactionChore.timeOfThisRun > daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.mobFileCompactionChore.timeOfThisRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0]))));
			}
		});
		invariants9999.add(new Invariant(9428, "HMasterInstance.nonceManager.conflictWaitIterationMs < HMasterInstance.normalizerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.conflictWaitIterationMs"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9429, "HMasterInstance.nonceManager.conflictWaitIterationMs < HMasterInstance.normalizerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.conflictWaitIterationMs"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9430, "HMasterInstance.nonceManager.conflictWaitIterationMs < HMasterInstance.procedureStore.cleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.conflictWaitIterationMs"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9431, "HMasterInstance.nonceManager.conflictWaitIterationMs < HMasterInstance.procedureStore.cleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.conflictWaitIterationMs"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9432, "HMasterInstance.nonceManager.conflictWaitIterationMs < HMasterInstance.procedureStore.cleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.conflictWaitIterationMs"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9433, "HMasterInstance.nonceManager.conflictWaitIterationMs < HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.conflictWaitIterationMs"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9434, "HMasterInstance.nonceManager.conflictWaitIterationMs > HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.conflictWaitIterationMs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9435, "HMasterInstance.nonceManager.conflictWaitIterationMs > HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.conflictWaitIterationMs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9436, "HMasterInstance.nonceManager.conflictWaitIterationMs > HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.conflictWaitIterationMs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9437, "HMasterInstance.nonceManager.conflictWaitIterationMs < HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.conflictWaitIterationMs"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9438, "HMasterInstance.nonceManager.conflictWaitIterationMs < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.conflictWaitIterationMs"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9439, "HMasterInstance.nonceManager.conflictWaitIterationMs < HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.conflictWaitIterationMs"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9440, "HMasterInstance.nonceManager.conflictWaitIterationMs < HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.conflictWaitIterationMs"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9441, "HMasterInstance.nonceManager.conflictWaitIterationMs > HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.conflictWaitIterationMs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9442, "HMasterInstance.nonceManager.conflictWaitIterationMs < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.conflictWaitIterationMs"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9443, "HMasterInstance.nonceManager.conflictWaitIterationMs > HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.conflictWaitIterationMs"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9444, "HMasterInstance.nonceManager.conflictWaitIterationMs < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.conflictWaitIterationMs"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9445, "HMasterInstance.nonceManager.conflictWaitIterationMs < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.conflictWaitIterationMs"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9446, "HMasterInstance.nonceManager.conflictWaitIterationMs < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.conflictWaitIterationMs"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9447, "HMasterInstance.nonceManager.conflictWaitIterationMs < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.conflictWaitIterationMs"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9448, "HMasterInstance.nonceManager.deleteNonceGracePeriod < HMasterInstance.normalizerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.deleteNonceGracePeriod"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9449, "HMasterInstance.nonceManager.deleteNonceGracePeriod < HMasterInstance.normalizerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.deleteNonceGracePeriod"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9450, "HMasterInstance.nonceManager.deleteNonceGracePeriod < HMasterInstance.procedureStore.cleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.deleteNonceGracePeriod"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9451, "HMasterInstance.nonceManager.deleteNonceGracePeriod < HMasterInstance.procedureStore.cleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.deleteNonceGracePeriod"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9452, "HMasterInstance.nonceManager.deleteNonceGracePeriod < HMasterInstance.procedureStore.cleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.deleteNonceGracePeriod"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9453, "HMasterInstance.nonceManager.deleteNonceGracePeriod < HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.deleteNonceGracePeriod"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9454, "HMasterInstance.nonceManager.deleteNonceGracePeriod > HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.deleteNonceGracePeriod"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9455, "HMasterInstance.nonceManager.deleteNonceGracePeriod > HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.deleteNonceGracePeriod"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9456, "HMasterInstance.nonceManager.deleteNonceGracePeriod > HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.deleteNonceGracePeriod"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9457, "HMasterInstance.nonceManager.deleteNonceGracePeriod < HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.deleteNonceGracePeriod"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9458, "HMasterInstance.nonceManager.deleteNonceGracePeriod < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.deleteNonceGracePeriod"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9459, "HMasterInstance.nonceManager.deleteNonceGracePeriod < HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.deleteNonceGracePeriod"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9460, "HMasterInstance.nonceManager.deleteNonceGracePeriod < HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.deleteNonceGracePeriod"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9461, "HMasterInstance.nonceManager.deleteNonceGracePeriod > HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.deleteNonceGracePeriod"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9462, "HMasterInstance.nonceManager.deleteNonceGracePeriod < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.deleteNonceGracePeriod"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9463, "HMasterInstance.nonceManager.deleteNonceGracePeriod > HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.deleteNonceGracePeriod"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9464, "HMasterInstance.nonceManager.deleteNonceGracePeriod < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.deleteNonceGracePeriod"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9465, "HMasterInstance.nonceManager.deleteNonceGracePeriod < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.deleteNonceGracePeriod"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9466, "HMasterInstance.nonceManager.deleteNonceGracePeriod < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.deleteNonceGracePeriod"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9467, "HMasterInstance.nonceManager.deleteNonceGracePeriod < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.nonceManager.deleteNonceGracePeriod"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9468, "HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize < HMasterInstance.normalizerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9469, "HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize < HMasterInstance.normalizerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9470, "HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize < HMasterInstance.procedureStore.cleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9471, "HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize < HMasterInstance.procedureStore.cleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9472, "HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize < HMasterInstance.procedureStore.cleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9473, "HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize < HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9474, "HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize > HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9475, "HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize > HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9476, "HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize > HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9477, "HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize < HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9478, "HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9479, "HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize < HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9480, "HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize < HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9481, "HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize > HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9482, "HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9483, "HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize > HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9484, "HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9485, "HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9486, "HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9487, "HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.maxScannerResultSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9488, "HMasterInstance.normalizer.masterRpcServices.rpcTimeout < HMasterInstance.normalizerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.rpcTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9489, "HMasterInstance.normalizer.masterRpcServices.rpcTimeout < HMasterInstance.normalizerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.rpcTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9490, "HMasterInstance.normalizer.masterRpcServices.rpcTimeout < HMasterInstance.procedureStore.cleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.rpcTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9491, "HMasterInstance.normalizer.masterRpcServices.rpcTimeout < HMasterInstance.procedureStore.cleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.rpcTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9492, "HMasterInstance.normalizer.masterRpcServices.rpcTimeout < HMasterInstance.procedureStore.cleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.rpcTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9493, "HMasterInstance.normalizer.masterRpcServices.rpcTimeout < HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.rpcTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9494, "HMasterInstance.normalizer.masterRpcServices.rpcTimeout > HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.rpcTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9495, "HMasterInstance.normalizer.masterRpcServices.rpcTimeout > HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.rpcTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9496, "HMasterInstance.normalizer.masterRpcServices.rpcTimeout > HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.rpcTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9497, "HMasterInstance.normalizer.masterRpcServices.rpcTimeout < HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.rpcTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9498, "HMasterInstance.normalizer.masterRpcServices.rpcTimeout < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.rpcTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9499, "HMasterInstance.normalizer.masterRpcServices.rpcTimeout < HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.rpcTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9500, "HMasterInstance.normalizer.masterRpcServices.rpcTimeout < HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.rpcTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9501, "HMasterInstance.normalizer.masterRpcServices.rpcTimeout > HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.rpcTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9502, "HMasterInstance.normalizer.masterRpcServices.rpcTimeout < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.rpcTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9503, "HMasterInstance.normalizer.masterRpcServices.rpcTimeout > HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.rpcTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9504, "HMasterInstance.normalizer.masterRpcServices.rpcTimeout < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.rpcTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9505, "HMasterInstance.normalizer.masterRpcServices.rpcTimeout < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.rpcTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9506, "HMasterInstance.normalizer.masterRpcServices.rpcTimeout < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.rpcTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9507, "HMasterInstance.normalizer.masterRpcServices.rpcTimeout < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.masterRpcServices.rpcTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9508, "HMasterInstance.normalizer.minRegionCount < HMasterInstance.normalizerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.minRegionCount"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9509, "HMasterInstance.normalizer.minRegionCount < HMasterInstance.normalizerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.minRegionCount"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9510, "HMasterInstance.normalizer.minRegionCount < HMasterInstance.procedureStore.cleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.minRegionCount"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9511, "HMasterInstance.normalizer.minRegionCount < HMasterInstance.procedureStore.cleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.minRegionCount"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9512, "HMasterInstance.normalizer.minRegionCount < HMasterInstance.procedureStore.cleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.minRegionCount"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9513, "HMasterInstance.normalizer.minRegionCount < HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.minRegionCount"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9514, "HMasterInstance.normalizer.minRegionCount != HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.minRegionCount"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9515, "HMasterInstance.normalizer.minRegionCount != HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.minRegionCount"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9516, "HMasterInstance.normalizer.minRegionCount != HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.minRegionCount"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9517, "HMasterInstance.normalizer.minRegionCount < HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.minRegionCount"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9518, "HMasterInstance.normalizer.minRegionCount < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.minRegionCount"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9519, "HMasterInstance.normalizer.minRegionCount < HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.minRegionCount"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9520, "HMasterInstance.normalizer.minRegionCount < HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.minRegionCount"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9521, "HMasterInstance.normalizer.minRegionCount < HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.minRegionCount"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9522, "HMasterInstance.normalizer.minRegionCount < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.minRegionCount"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9523, "HMasterInstance.normalizer.minRegionCount != HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.minRegionCount"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9524, "HMasterInstance.normalizer.minRegionCount < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.minRegionCount"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9525, "HMasterInstance.normalizer.minRegionCount < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.minRegionCount"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9526, "HMasterInstance.normalizer.minRegionCount < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.minRegionCount"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9527, "HMasterInstance.normalizer.minRegionCount < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.minRegionCount"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9528, "HMasterInstance.normalizer.minRegionCount >= daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizer.minRegionCount"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants9999.add(new Invariant(9529, "HMasterInstance.normalizerChore.lastLog > HMasterInstance.normalizerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9530, "HMasterInstance.normalizerChore.lastLog > HMasterInstance.procedureExecutor.corePoolSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.corePoolSize"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9531, "HMasterInstance.normalizerChore.lastLog > HMasterInstance.procedureExecutor.maxPoolSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.maxPoolSize"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9532, "HMasterInstance.normalizerChore.lastLog > HMasterInstance.procedureExecutor.store.REGION_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.REGION_ID"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9533, "HMasterInstance.normalizerChore.lastLog > HMasterInstance.procedureStore.REGION_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.REGION_ID"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9534, "HMasterInstance.normalizerChore.lastLog > HMasterInstance.procedureStore.TABLE_NAME.hashCode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.TABLE_NAME.hashCode"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9535, "HMasterInstance.normalizerChore.lastLog > HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9536, "HMasterInstance.normalizerChore.lastLog > HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9537, "HMasterInstance.normalizerChore.lastLog > HMasterInstance.procedureStore.cleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9538, "HMasterInstance.normalizerChore.lastLog > HMasterInstance.procedureStore.cleaner.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.period"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9539, "HMasterInstance.normalizerChore.lastLog > HMasterInstance.procedureStore.cleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9540, "HMasterInstance.normalizerChore.lastLog > HMasterInstance.procedureStore.cleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9541, "HMasterInstance.normalizerChore.lastLog > HMasterInstance.procedureStore.cleanerPool.cleanerLatch"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9542, "HMasterInstance.normalizerChore.lastLog > HMasterInstance.procedureStore.cleanerPool.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.size"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9543, "HMasterInstance.normalizerChore.lastLog > HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9544, "HMasterInstance.normalizerChore.lastLog > HMasterInstance.procedureStore.numThreads"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.numThreads"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9545, "HMasterInstance.normalizerChore.lastLog > HMasterInstance.procedureStore.region.DEEP_OVERHEAD"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.DEEP_OVERHEAD"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9546, "HMasterInstance.normalizerChore.lastLog > HMasterInstance.procedureStore.region.FIXED_OVERHEAD"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.FIXED_OVERHEAD"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9547, "HMasterInstance.normalizerChore.lastLog > HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9548, "HMasterInstance.normalizerChore.lastLog > HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9549, "HMasterInstance.normalizerChore.lastLog > HMasterInstance.procedureStore.region.blockingMemStoreSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.blockingMemStoreSize"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9550, "HMasterInstance.normalizerChore.lastLog > HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9551, "HMasterInstance.normalizerChore.lastLog > HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9552, "HMasterInstance.normalizerChore.lastLog > HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9553, "HMasterInstance.normalizerChore.lastLog > HMasterInstance.procedureStore.region.majorInProgress"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9554, "HMasterInstance.normalizerChore.lastLog > HMasterInstance.procedureStore.region.maxBusyWaitDuration"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitDuration"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9555, "HMasterInstance.normalizerChore.lastLog > HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9556, "HMasterInstance.normalizerChore.lastLog > HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9557, "HMasterInstance.normalizerChore.lastLog < HMasterInstance.procedureStore.region.timestampSlop"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.timestampSlop"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9558, "HMasterInstance.normalizerChore.lastLog > HMasterInstance.procedureStore.walFactory.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walFactory.timeoutMillis"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9559, "HMasterInstance.normalizerChore.lastLog > HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9560, "HMasterInstance.normalizerChore.lastLog > HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9561, "HMasterInstance.normalizerChore.lastLog > HMasterInstance.procedureStore.walRoller.threadWakeFrequency"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.threadWakeFrequency"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9562, "HMasterInstance.normalizerChore.lastLog > HMasterInstance.regionServerAccounting.globalMemStoreLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimit"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9563, "HMasterInstance.normalizerChore.lastLog > HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9564, "HMasterInstance.normalizerChore.lastLog > HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9565, "HMasterInstance.normalizerChore.lastLog > HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9566, "HMasterInstance.normalizerChore.lastLog > HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9567, "HMasterInstance.normalizerChore.lastLog > HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9568, "HMasterInstance.normalizerChore.lastLog > HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9569, "HMasterInstance.normalizerChore.lastLog > HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9570, "HMasterInstance.normalizerChore.lastLog > HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9571, "HMasterInstance.normalizerChore.lastLog > HMasterInstance.rpcClient.connectTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connectTO"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9572, "HMasterInstance.normalizerChore.lastLog > HMasterInstance.rpcClient.connections.poolMaxSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9573, "HMasterInstance.normalizerChore.lastLog > HMasterInstance.rpcClient.failedServers.latestExpiry"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9574, "HMasterInstance.normalizerChore.lastLog > HMasterInstance.rpcClient.failedServers.recheckServersTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.recheckServersTimeout"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9575, "HMasterInstance.normalizerChore.lastLog > HMasterInstance.rpcClient.failureSleep"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failureSleep"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9576, "HMasterInstance.normalizerChore.lastLog > HMasterInstance.rpcClient.maxConcurrentCallsPerServer"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.maxConcurrentCallsPerServer"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9577, "HMasterInstance.normalizerChore.lastLog > HMasterInstance.rpcClient.minIdleTimeBeforeClose"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.minIdleTimeBeforeClose"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9578, "HMasterInstance.normalizerChore.lastLog > HMasterInstance.rpcClient.readTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.readTO"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9579, "HMasterInstance.normalizerChore.lastLog > HMasterInstance.rpcClient.writeTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.writeTO"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9580, "HMasterInstance.normalizerChore.lastLog > HMasterInstance.rpcServices.maxScannerResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.maxScannerResultSize"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9581, "HMasterInstance.normalizerChore.lastLog > HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9582, "HMasterInstance.normalizerChore.lastLog > HMasterInstance.rpcServices.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcTimeout"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9583, "HMasterInstance.normalizerChore.lastLog < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9584, "HMasterInstance.normalizerChore.lastLog > HMasterInstance.rsFatals.maxSizeBytes"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.maxSizeBytes"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9585, "HMasterInstance.normalizerChore.lastLog > HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9586, "HMasterInstance.normalizerChore.lastLog < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9587, "HMasterInstance.normalizerChore.lastLog > HMasterInstance.serverManager.flushedSeqIdFlusher.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.period"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9588, "HMasterInstance.normalizerChore.lastLog > HMasterInstance.serverManager.maxSkew"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.maxSkew"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9589, "HMasterInstance.normalizerChore.lastLog > HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9590, "HMasterInstance.normalizerChore.lastLog > HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9591, "HMasterInstance.normalizerChore.lastLog > HMasterInstance.snapshotManager.coordinator.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotManager.coordinator.timeoutMillis"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9592, "HMasterInstance.normalizerChore.lastLog > HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9593, "HMasterInstance.normalizerChore.lastLog != HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9594, "HMasterInstance.normalizerChore.lastLog > HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9595, "HMasterInstance.normalizerChore.lastLog > daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.lastLog"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0]))));
			}
		});
		invariants9999.add(new Invariant(9596, "HMasterInstance.normalizerChore.timeOfLastRun > HMasterInstance.procedureExecutor.activeExecutorCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9597, "HMasterInstance.normalizerChore.timeOfLastRun > HMasterInstance.procedureExecutor.corePoolSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.corePoolSize"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9598, "HMasterInstance.normalizerChore.timeOfLastRun > HMasterInstance.procedureExecutor.lastProcId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.lastProcId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9599, "HMasterInstance.normalizerChore.timeOfLastRun > HMasterInstance.procedureExecutor.maxPoolSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.maxPoolSize"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9600, "HMasterInstance.normalizerChore.timeOfLastRun > HMasterInstance.procedureExecutor.scheduler.nullPollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.nullPollCalls"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9601, "HMasterInstance.normalizerChore.timeOfLastRun > HMasterInstance.procedureExecutor.scheduler.pollCalls"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.pollCalls"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9602, "HMasterInstance.normalizerChore.timeOfLastRun > HMasterInstance.procedureExecutor.store.REGION_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.REGION_ID"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9603, "HMasterInstance.normalizerChore.timeOfLastRun > HMasterInstance.procedureStore.REGION_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.REGION_ID"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9604, "HMasterInstance.normalizerChore.timeOfLastRun > HMasterInstance.procedureStore.TABLE_NAME.hashCode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.TABLE_NAME.hashCode"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9605, "HMasterInstance.normalizerChore.timeOfLastRun > HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9606, "HMasterInstance.normalizerChore.timeOfLastRun > HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9607, "HMasterInstance.normalizerChore.timeOfLastRun < HMasterInstance.procedureStore.cleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9608, "HMasterInstance.normalizerChore.timeOfLastRun > HMasterInstance.procedureStore.cleaner.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.period"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9609, "HMasterInstance.normalizerChore.timeOfLastRun > HMasterInstance.procedureStore.cleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9610, "HMasterInstance.normalizerChore.timeOfLastRun > HMasterInstance.procedureStore.cleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9611, "HMasterInstance.normalizerChore.timeOfLastRun > HMasterInstance.procedureStore.cleanerPool.cleanerLatch"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9612, "HMasterInstance.normalizerChore.timeOfLastRun > HMasterInstance.procedureStore.cleanerPool.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.size"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9613, "HMasterInstance.normalizerChore.timeOfLastRun > HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.changesAfterLastFlush"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9614, "HMasterInstance.normalizerChore.timeOfLastRun > HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9615, "HMasterInstance.normalizerChore.timeOfLastRun > HMasterInstance.procedureStore.numThreads"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.numThreads"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9616, "HMasterInstance.normalizerChore.timeOfLastRun > HMasterInstance.procedureStore.region.DEEP_OVERHEAD"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.DEEP_OVERHEAD"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9617, "HMasterInstance.normalizerChore.timeOfLastRun > HMasterInstance.procedureStore.region.FIXED_OVERHEAD"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.FIXED_OVERHEAD"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9618, "HMasterInstance.normalizerChore.timeOfLastRun > HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9619, "HMasterInstance.normalizerChore.timeOfLastRun > HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9620, "HMasterInstance.normalizerChore.timeOfLastRun > HMasterInstance.procedureStore.region.blockingMemStoreSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.blockingMemStoreSize"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9621, "HMasterInstance.normalizerChore.timeOfLastRun > HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9622, "HMasterInstance.normalizerChore.timeOfLastRun > HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9623, "HMasterInstance.normalizerChore.timeOfLastRun > HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9624, "HMasterInstance.normalizerChore.timeOfLastRun > HMasterInstance.procedureStore.region.majorInProgress"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9625, "HMasterInstance.normalizerChore.timeOfLastRun > HMasterInstance.procedureStore.region.maxBusyWaitDuration"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitDuration"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9626, "HMasterInstance.normalizerChore.timeOfLastRun > HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9627, "HMasterInstance.normalizerChore.timeOfLastRun > HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9628, "HMasterInstance.normalizerChore.timeOfLastRun < HMasterInstance.procedureStore.region.timestampSlop"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.timestampSlop"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9629, "HMasterInstance.normalizerChore.timeOfLastRun > HMasterInstance.procedureStore.walFactory.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walFactory.timeoutMillis"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9630, "HMasterInstance.normalizerChore.timeOfLastRun > HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9631, "HMasterInstance.normalizerChore.timeOfLastRun > HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9632, "HMasterInstance.normalizerChore.timeOfLastRun > HMasterInstance.procedureStore.walRoller.threadWakeFrequency"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.threadWakeFrequency"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9633, "HMasterInstance.normalizerChore.timeOfLastRun > HMasterInstance.regionServerAccounting.globalMemStoreLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimit"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9634, "HMasterInstance.normalizerChore.timeOfLastRun > HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9635, "HMasterInstance.normalizerChore.timeOfLastRun > HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9636, "HMasterInstance.normalizerChore.timeOfLastRun < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9637, "HMasterInstance.normalizerChore.timeOfLastRun > HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9638, "HMasterInstance.normalizerChore.timeOfLastRun > HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9639, "HMasterInstance.normalizerChore.timeOfLastRun > HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9640, "HMasterInstance.normalizerChore.timeOfLastRun > HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9641, "HMasterInstance.normalizerChore.timeOfLastRun > HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9642, "HMasterInstance.normalizerChore.timeOfLastRun > HMasterInstance.rpcClient.connectTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connectTO"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9643, "HMasterInstance.normalizerChore.timeOfLastRun > HMasterInstance.rpcClient.connections.poolMaxSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9644, "HMasterInstance.normalizerChore.timeOfLastRun > HMasterInstance.rpcClient.failedServers.latestExpiry"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9645, "HMasterInstance.normalizerChore.timeOfLastRun > HMasterInstance.rpcClient.failedServers.recheckServersTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.recheckServersTimeout"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9646, "HMasterInstance.normalizerChore.timeOfLastRun > HMasterInstance.rpcClient.failureSleep"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failureSleep"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9647, "HMasterInstance.normalizerChore.timeOfLastRun > HMasterInstance.rpcClient.maxConcurrentCallsPerServer"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.maxConcurrentCallsPerServer"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9648, "HMasterInstance.normalizerChore.timeOfLastRun > HMasterInstance.rpcClient.minIdleTimeBeforeClose"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.minIdleTimeBeforeClose"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9649, "HMasterInstance.normalizerChore.timeOfLastRun > HMasterInstance.rpcClient.readTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.readTO"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9650, "HMasterInstance.normalizerChore.timeOfLastRun > HMasterInstance.rpcClient.writeTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.writeTO"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9651, "HMasterInstance.normalizerChore.timeOfLastRun > HMasterInstance.rpcServices.maxScannerResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.maxScannerResultSize"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9652, "HMasterInstance.normalizerChore.timeOfLastRun > HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9653, "HMasterInstance.normalizerChore.timeOfLastRun > HMasterInstance.rpcServices.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcTimeout"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9654, "HMasterInstance.normalizerChore.timeOfLastRun < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9655, "HMasterInstance.normalizerChore.timeOfLastRun > HMasterInstance.rsFatals.maxSizeBytes"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.maxSizeBytes"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9656, "HMasterInstance.normalizerChore.timeOfLastRun > HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9657, "HMasterInstance.normalizerChore.timeOfLastRun < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9658, "HMasterInstance.normalizerChore.timeOfLastRun > HMasterInstance.serverManager.flushedSeqIdFlusher.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.period"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9659, "HMasterInstance.normalizerChore.timeOfLastRun < HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9660, "HMasterInstance.normalizerChore.timeOfLastRun > HMasterInstance.serverManager.maxSkew"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.maxSkew"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9661, "HMasterInstance.normalizerChore.timeOfLastRun < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9662, "HMasterInstance.normalizerChore.timeOfLastRun > HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9663, "HMasterInstance.normalizerChore.timeOfLastRun > HMasterInstance.snapshotManager.coordinator.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotManager.coordinator.timeoutMillis"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9664, "HMasterInstance.normalizerChore.timeOfLastRun > HMasterInstance.tableDescriptors.cachehits"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.cachehits"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9665, "HMasterInstance.normalizerChore.timeOfLastRun > HMasterInstance.tableDescriptors.invocations"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableDescriptors.invocations"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9666, "HMasterInstance.normalizerChore.timeOfLastRun > HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9667, "HMasterInstance.normalizerChore.timeOfLastRun != HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9668, "HMasterInstance.normalizerChore.timeOfLastRun > HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9669, "HMasterInstance.normalizerChore.timeOfLastRun > daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0]))));
			}
		});
		invariants9999.add(new Invariant(9670, "HMasterInstance.normalizerChore.timeOfLastRun > daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0]))));
			}
		});
		invariants9999.add(new Invariant(9671, "HMasterInstance.normalizerChore.timeOfLastRun > daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0]))));
			}
		});
		invariants9999.add(new Invariant(9672, "HMasterInstance.normalizerChore.timeOfLastRun > daikon.Quant.size(HMasterInstance.procedureExecutor.procExecutionLock.map_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procExecutionLock.map")).toArray(new Object[0]))));
			}
		});
		invariants9999.add(new Invariant(9673, "HMasterInstance.normalizerChore.timeOfLastRun > daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0]))));
			}
		});
		invariants9999.add(new Invariant(9674, "HMasterInstance.normalizerChore.timeOfLastRun > daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0]))));
			}
		});
		invariants9999.add(new Invariant(9675, "HMasterInstance.normalizerChore.timeOfLastRun > daikon.Quant.size(HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.normalizerChore.timeOfLastRun"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.zooKeeper.znodePaths.metaReplicaZNodes")).toArray(new Object[0]))));
			}
		});
		invariants9999.add(new Invariant(9676, "HMasterInstance.procedureExecutor.activeExecutorCount != HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9677, "HMasterInstance.procedureExecutor.activeExecutorCount > HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9678, "HMasterInstance.procedureExecutor.activeExecutorCount <= HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9679, "HMasterInstance.procedureExecutor.activeExecutorCount < HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9680, "HMasterInstance.procedureExecutor.activeExecutorCount % HMasterInstance.rpcClient.callIdCnt == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue() % ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue() == 0);
			}
		});
		invariants9999.add(new Invariant(9681, "HMasterInstance.procedureExecutor.activeExecutorCount < HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9682, "HMasterInstance.procedureExecutor.activeExecutorCount % HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue() % ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"))).intValue() == 0);
			}
		});
		invariants9999.add(new Invariant(9683, "HMasterInstance.procedureExecutor.activeExecutorCount < HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9684, "HMasterInstance.procedureExecutor.activeExecutorCount % HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue() % ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"))).intValue() == 0);
			}
		});
		invariants9999.add(new Invariant(9685, "HMasterInstance.procedureExecutor.activeExecutorCount < HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9686, "HMasterInstance.procedureExecutor.activeExecutorCount % HMasterInstance.rpcClient.connectTO == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue() % ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connectTO"))).intValue() == 0);
			}
		});
		invariants9999.add(new Invariant(9687, "HMasterInstance.procedureExecutor.activeExecutorCount < HMasterInstance.rpcClient.connectTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connectTO"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9688, "HMasterInstance.procedureExecutor.activeExecutorCount < HMasterInstance.rpcClient.connections.poolMaxSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9689, "HMasterInstance.procedureExecutor.activeExecutorCount == HMasterInstance.rpcClient.failedServers.latestExpiry*HMasterInstance.rpcClient.failedServers.latestExpiry"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue()*((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9690, "HMasterInstance.rpcClient.failedServers.latestExpiry == HMasterInstance.procedureExecutor.activeExecutorCount*HMasterInstance.procedureExecutor.activeExecutorCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue() == ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue()*((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9691, "HMasterInstance.procedureExecutor.activeExecutorCount % HMasterInstance.rpcClient.failedServers.recheckServersTimeout == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue() % ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.recheckServersTimeout"))).intValue() == 0);
			}
		});
		invariants9999.add(new Invariant(9692, "HMasterInstance.procedureExecutor.activeExecutorCount < HMasterInstance.rpcClient.failedServers.recheckServersTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.recheckServersTimeout"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9693, "HMasterInstance.procedureExecutor.activeExecutorCount % HMasterInstance.rpcClient.failureSleep == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue() % ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failureSleep"))).intValue() == 0);
			}
		});
		invariants9999.add(new Invariant(9694, "HMasterInstance.procedureExecutor.activeExecutorCount < HMasterInstance.rpcClient.failureSleep"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failureSleep"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9695, "HMasterInstance.procedureExecutor.activeExecutorCount % HMasterInstance.rpcClient.maxConcurrentCallsPerServer == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue() % ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.maxConcurrentCallsPerServer"))).intValue() == 0);
			}
		});
		invariants9999.add(new Invariant(9696, "HMasterInstance.procedureExecutor.activeExecutorCount < HMasterInstance.rpcClient.maxConcurrentCallsPerServer"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.maxConcurrentCallsPerServer"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9697, "HMasterInstance.procedureExecutor.activeExecutorCount % HMasterInstance.rpcClient.minIdleTimeBeforeClose == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue() % ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.minIdleTimeBeforeClose"))).intValue() == 0);
			}
		});
		invariants9999.add(new Invariant(9698, "HMasterInstance.procedureExecutor.activeExecutorCount < HMasterInstance.rpcClient.minIdleTimeBeforeClose"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.minIdleTimeBeforeClose"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9699, "HMasterInstance.procedureExecutor.activeExecutorCount % HMasterInstance.rpcClient.readTO == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue() % ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.readTO"))).intValue() == 0);
			}
		});
		invariants9999.add(new Invariant(9700, "HMasterInstance.procedureExecutor.activeExecutorCount < HMasterInstance.rpcClient.readTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.readTO"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9701, "HMasterInstance.procedureExecutor.activeExecutorCount % HMasterInstance.rpcClient.writeTO == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue() % ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.writeTO"))).intValue() == 0);
			}
		});
		invariants9999.add(new Invariant(9702, "HMasterInstance.procedureExecutor.activeExecutorCount < HMasterInstance.rpcClient.writeTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.writeTO"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9703, "HMasterInstance.procedureExecutor.activeExecutorCount < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9704, "HMasterInstance.procedureExecutor.activeExecutorCount < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.activeExecutorCount"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9705, "HMasterInstance.procedureExecutor.corePoolSize < HMasterInstance.procedureStore.cleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.corePoolSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9706, "HMasterInstance.procedureExecutor.corePoolSize < HMasterInstance.procedureStore.cleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.corePoolSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9707, "HMasterInstance.procedureExecutor.corePoolSize < HMasterInstance.procedureStore.cleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.corePoolSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9708, "HMasterInstance.procedureExecutor.corePoolSize < HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.corePoolSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9709, "HMasterInstance.procedureExecutor.corePoolSize != HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.corePoolSize"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9710, "HMasterInstance.procedureExecutor.corePoolSize != HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.corePoolSize"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9711, "HMasterInstance.procedureExecutor.corePoolSize != HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.corePoolSize"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9712, "HMasterInstance.procedureExecutor.corePoolSize < HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.corePoolSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9713, "HMasterInstance.procedureExecutor.corePoolSize < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.corePoolSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9714, "HMasterInstance.procedureExecutor.corePoolSize < HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.corePoolSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9715, "HMasterInstance.procedureExecutor.corePoolSize < HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.corePoolSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9716, "HMasterInstance.procedureExecutor.corePoolSize < HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.corePoolSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9717, "HMasterInstance.procedureExecutor.corePoolSize < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.corePoolSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9718, "HMasterInstance.procedureExecutor.corePoolSize != HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.corePoolSize"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9719, "HMasterInstance.procedureExecutor.corePoolSize < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.corePoolSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9720, "HMasterInstance.procedureExecutor.corePoolSize < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.corePoolSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9721, "HMasterInstance.procedureExecutor.corePoolSize < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.corePoolSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9722, "HMasterInstance.procedureExecutor.corePoolSize < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.corePoolSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9723, "HMasterInstance.procedureExecutor.corePoolSize >= daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.corePoolSize"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1);
			}
		});
		invariants9999.add(new Invariant(9724, "HMasterInstance.procedureExecutor.lastProcId != HMasterInstance.procedureExecutor.maxPoolSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.lastProcId"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.maxPoolSize"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9725, "HMasterInstance.procedureExecutor.lastProcId >= HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.lastProcId"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9726, "HMasterInstance.procedureExecutor.lastProcId < HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.lastProcId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9727, "HMasterInstance.procedureExecutor.lastProcId != HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.lastProcId"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9728, "HMasterInstance.procedureExecutor.lastProcId < HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.lastProcId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9729, "HMasterInstance.procedureExecutor.lastProcId > HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.lastProcId"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9730, "HMasterInstance.procedureExecutor.lastProcId < HMasterInstance.rpcClient.connectTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.lastProcId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connectTO"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9731, "HMasterInstance.procedureExecutor.lastProcId > HMasterInstance.rpcClient.connections.poolMaxSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.lastProcId"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9732, "HMasterInstance.procedureExecutor.lastProcId > HMasterInstance.rpcClient.failedServers.latestExpiry"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.lastProcId"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9733, "HMasterInstance.rpcClient.failedServers.latestExpiry % HMasterInstance.procedureExecutor.lastProcId == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue() % ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.lastProcId"))).intValue() == 0);
			}
		});
		invariants9999.add(new Invariant(9734, "HMasterInstance.procedureExecutor.lastProcId < HMasterInstance.rpcClient.failedServers.recheckServersTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.lastProcId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.recheckServersTimeout"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9735, "HMasterInstance.procedureExecutor.lastProcId != HMasterInstance.rpcClient.failureSleep"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.lastProcId"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failureSleep"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9736, "HMasterInstance.procedureExecutor.lastProcId < HMasterInstance.rpcClient.maxConcurrentCallsPerServer"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.lastProcId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.maxConcurrentCallsPerServer"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9737, "HMasterInstance.procedureExecutor.lastProcId < HMasterInstance.rpcClient.minIdleTimeBeforeClose"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.lastProcId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.minIdleTimeBeforeClose"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9738, "HMasterInstance.procedureExecutor.lastProcId < HMasterInstance.rpcClient.readTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.lastProcId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.readTO"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9739, "HMasterInstance.procedureExecutor.lastProcId < HMasterInstance.rpcClient.writeTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.lastProcId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.writeTO"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9740, "HMasterInstance.procedureExecutor.lastProcId < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.lastProcId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9741, "HMasterInstance.procedureExecutor.lastProcId < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.lastProcId"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9742, "HMasterInstance.procedureExecutor.maxPoolSize < HMasterInstance.procedureStore.cleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.maxPoolSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9743, "HMasterInstance.procedureExecutor.maxPoolSize < HMasterInstance.procedureStore.cleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.maxPoolSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9744, "HMasterInstance.procedureExecutor.maxPoolSize < HMasterInstance.procedureStore.cleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.maxPoolSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9745, "HMasterInstance.procedureExecutor.maxPoolSize < HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.maxPoolSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9746, "HMasterInstance.procedureExecutor.maxPoolSize != HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.maxPoolSize"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9747, "HMasterInstance.procedureExecutor.maxPoolSize != HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.maxPoolSize"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9748, "HMasterInstance.procedureExecutor.maxPoolSize != HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.maxPoolSize"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9749, "HMasterInstance.procedureExecutor.maxPoolSize < HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.maxPoolSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9750, "HMasterInstance.procedureExecutor.maxPoolSize < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.maxPoolSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9751, "HMasterInstance.procedureExecutor.maxPoolSize < HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.maxPoolSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9752, "HMasterInstance.procedureExecutor.maxPoolSize < HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.maxPoolSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9753, "HMasterInstance.procedureExecutor.maxPoolSize < HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.maxPoolSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9754, "HMasterInstance.procedureExecutor.maxPoolSize < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.maxPoolSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9755, "HMasterInstance.procedureExecutor.maxPoolSize != HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.maxPoolSize"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9756, "HMasterInstance.procedureExecutor.maxPoolSize < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.maxPoolSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9757, "HMasterInstance.procedureExecutor.maxPoolSize < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.maxPoolSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9758, "HMasterInstance.procedureExecutor.maxPoolSize < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.maxPoolSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9759, "HMasterInstance.procedureExecutor.maxPoolSize < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.maxPoolSize"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9760, "HMasterInstance.procedureExecutor.scheduler.nullPollCalls < HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.nullPollCalls"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9761, "HMasterInstance.procedureExecutor.scheduler.nullPollCalls != HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.nullPollCalls"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9762, "HMasterInstance.procedureExecutor.scheduler.nullPollCalls > HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.nullPollCalls"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9763, "HMasterInstance.procedureExecutor.scheduler.nullPollCalls < HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.nullPollCalls"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9764, "HMasterInstance.procedureExecutor.scheduler.nullPollCalls < HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.nullPollCalls"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9765, "HMasterInstance.procedureExecutor.scheduler.nullPollCalls < HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.nullPollCalls"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9766, "HMasterInstance.procedureExecutor.scheduler.nullPollCalls >= HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.nullPollCalls"))).intValue() >= ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9767, "HMasterInstance.procedureExecutor.scheduler.nullPollCalls < HMasterInstance.rpcClient.connectTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.nullPollCalls"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connectTO"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9768, "HMasterInstance.procedureExecutor.scheduler.nullPollCalls > HMasterInstance.rpcClient.connections.poolMaxSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.nullPollCalls"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9769, "HMasterInstance.procedureExecutor.scheduler.nullPollCalls > HMasterInstance.rpcClient.failedServers.latestExpiry"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.nullPollCalls"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9770, "HMasterInstance.rpcClient.failedServers.latestExpiry % HMasterInstance.procedureExecutor.scheduler.nullPollCalls == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue() % ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.nullPollCalls"))).intValue() == 0);
			}
		});
		invariants9999.add(new Invariant(9771, "HMasterInstance.procedureExecutor.scheduler.nullPollCalls < HMasterInstance.rpcClient.failedServers.recheckServersTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.nullPollCalls"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.recheckServersTimeout"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9772, "HMasterInstance.procedureExecutor.scheduler.nullPollCalls < HMasterInstance.rpcClient.failureSleep"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.nullPollCalls"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failureSleep"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9773, "HMasterInstance.procedureExecutor.scheduler.nullPollCalls < HMasterInstance.rpcClient.maxConcurrentCallsPerServer"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.nullPollCalls"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.maxConcurrentCallsPerServer"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9774, "HMasterInstance.procedureExecutor.scheduler.nullPollCalls < HMasterInstance.rpcClient.minIdleTimeBeforeClose"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.nullPollCalls"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.minIdleTimeBeforeClose"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9775, "HMasterInstance.rpcClient.minIdleTimeBeforeClose % HMasterInstance.procedureExecutor.scheduler.nullPollCalls == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.minIdleTimeBeforeClose"))).intValue() % ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.nullPollCalls"))).intValue() == 0);
			}
		});
		invariants9999.add(new Invariant(9776, "HMasterInstance.procedureExecutor.scheduler.nullPollCalls < HMasterInstance.rpcClient.readTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.nullPollCalls"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.readTO"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9777, "HMasterInstance.procedureExecutor.scheduler.nullPollCalls < HMasterInstance.rpcClient.writeTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.nullPollCalls"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.writeTO"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9778, "HMasterInstance.rpcClient.writeTO % HMasterInstance.procedureExecutor.scheduler.nullPollCalls == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.writeTO"))).intValue() % ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.nullPollCalls"))).intValue() == 0);
			}
		});
		invariants9999.add(new Invariant(9779, "HMasterInstance.procedureExecutor.scheduler.nullPollCalls < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.nullPollCalls"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9780, "HMasterInstance.procedureExecutor.scheduler.nullPollCalls < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.nullPollCalls"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9781, "HMasterInstance.procedureExecutor.scheduler.pollCalls < HMasterInstance.procedureStore.region.FIXED_OVERHEAD"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.pollCalls"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.FIXED_OVERHEAD"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9782, "HMasterInstance.procedureExecutor.scheduler.pollCalls != HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.pollCalls"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9783, "HMasterInstance.procedureExecutor.scheduler.pollCalls > HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.pollCalls"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9784, "HMasterInstance.procedureExecutor.scheduler.pollCalls < HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.pollCalls"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9785, "HMasterInstance.procedureExecutor.scheduler.pollCalls > HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.pollCalls"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9786, "HMasterInstance.procedureExecutor.scheduler.pollCalls < HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.pollCalls"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9787, "HMasterInstance.procedureExecutor.scheduler.pollCalls > HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.pollCalls"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9788, "HMasterInstance.procedureExecutor.scheduler.pollCalls < HMasterInstance.rpcClient.connectTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.pollCalls"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connectTO"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9789, "HMasterInstance.procedureExecutor.scheduler.pollCalls > HMasterInstance.rpcClient.connections.poolMaxSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.pollCalls"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9790, "HMasterInstance.procedureExecutor.scheduler.pollCalls > HMasterInstance.rpcClient.failedServers.latestExpiry"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.pollCalls"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9791, "HMasterInstance.rpcClient.failedServers.latestExpiry % HMasterInstance.procedureExecutor.scheduler.pollCalls == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue() % ((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.pollCalls"))).intValue() == 0);
			}
		});
		invariants9999.add(new Invariant(9792, "HMasterInstance.procedureExecutor.scheduler.pollCalls < HMasterInstance.rpcClient.failedServers.recheckServersTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.pollCalls"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.recheckServersTimeout"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9793, "HMasterInstance.procedureExecutor.scheduler.pollCalls > HMasterInstance.rpcClient.failureSleep"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.pollCalls"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failureSleep"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9794, "HMasterInstance.procedureExecutor.scheduler.pollCalls < HMasterInstance.rpcClient.maxConcurrentCallsPerServer"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.pollCalls"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.maxConcurrentCallsPerServer"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9795, "HMasterInstance.procedureExecutor.scheduler.pollCalls < HMasterInstance.rpcClient.minIdleTimeBeforeClose"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.pollCalls"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.minIdleTimeBeforeClose"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9796, "HMasterInstance.procedureExecutor.scheduler.pollCalls < HMasterInstance.rpcClient.readTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.pollCalls"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.readTO"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9797, "HMasterInstance.procedureExecutor.scheduler.pollCalls < HMasterInstance.rpcClient.writeTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.pollCalls"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.writeTO"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9798, "HMasterInstance.procedureExecutor.scheduler.pollCalls < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.pollCalls"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9799, "HMasterInstance.procedureExecutor.scheduler.pollCalls < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.pollCalls"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9800, "HMasterInstance.procedureExecutor.scheduler.pollCalls >= daikon.Quant.size(HMasterInstance.metaRegionLocationCache.cachedMetaLocations_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.pollCalls"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.metaRegionLocationCache.cachedMetaLocations")).toArray(new Object[0])))-1);
			}
		});
		invariants9999.add(new Invariant(9801, "HMasterInstance.procedureExecutor.scheduler.pollCalls != daikon.Quant.size(HMasterInstance.procedureExecutor.completed_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.pollCalls"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.completed")).toArray(new Object[0])))-1);
			}
		});
		invariants9999.add(new Invariant(9802, "HMasterInstance.procedureExecutor.scheduler.pollCalls != daikon.Quant.size(HMasterInstance.procedureExecutor.procedures_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.pollCalls"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.procedures")).toArray(new Object[0])))-1);
			}
		});
		invariants9999.add(new Invariant(9803, "HMasterInstance.procedureExecutor.scheduler.pollCalls != daikon.Quant.size(HMasterInstance.procedureExecutor.rollbackStack_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.scheduler.pollCalls"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.procedureExecutor.rollbackStack")).toArray(new Object[0])))-1);
			}
		});
		invariants9999.add(new Invariant(9804, "HMasterInstance.procedureExecutor.store.REGION_ID < HMasterInstance.procedureStore.cleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.REGION_ID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9805, "HMasterInstance.procedureExecutor.store.REGION_ID < HMasterInstance.procedureStore.cleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.REGION_ID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9806, "HMasterInstance.procedureExecutor.store.REGION_ID < HMasterInstance.procedureStore.cleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.REGION_ID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9807, "HMasterInstance.procedureExecutor.store.REGION_ID < HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.REGION_ID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9808, "HMasterInstance.procedureExecutor.store.REGION_ID != HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.REGION_ID"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9809, "HMasterInstance.procedureExecutor.store.REGION_ID <= HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.REGION_ID"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9810, "HMasterInstance.procedureExecutor.store.REGION_ID < HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.REGION_ID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9811, "HMasterInstance.procedureExecutor.store.REGION_ID < HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.REGION_ID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9812, "HMasterInstance.procedureExecutor.store.REGION_ID < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.REGION_ID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9813, "HMasterInstance.procedureExecutor.store.REGION_ID < HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.REGION_ID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9814, "HMasterInstance.procedureExecutor.store.REGION_ID < HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.REGION_ID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9815, "HMasterInstance.procedureExecutor.store.REGION_ID < HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.REGION_ID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9816, "HMasterInstance.procedureExecutor.store.REGION_ID < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.REGION_ID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9817, "HMasterInstance.procedureExecutor.store.REGION_ID != HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.REGION_ID"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9818, "HMasterInstance.procedureExecutor.store.REGION_ID < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.REGION_ID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9819, "HMasterInstance.procedureExecutor.store.REGION_ID < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.REGION_ID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9820, "HMasterInstance.procedureExecutor.store.REGION_ID < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.REGION_ID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9821, "HMasterInstance.procedureExecutor.store.REGION_ID < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureExecutor.store.REGION_ID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9822, "HMasterInstance.procedureStore.REGION_ID < HMasterInstance.procedureStore.cleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.REGION_ID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9823, "HMasterInstance.procedureStore.REGION_ID < HMasterInstance.procedureStore.cleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.REGION_ID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9824, "HMasterInstance.procedureStore.REGION_ID < HMasterInstance.procedureStore.cleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.REGION_ID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9825, "HMasterInstance.procedureStore.REGION_ID < HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.REGION_ID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9826, "HMasterInstance.procedureStore.REGION_ID != HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.REGION_ID"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9827, "HMasterInstance.procedureStore.REGION_ID <= HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.REGION_ID"))).intValue() <= ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9828, "HMasterInstance.procedureStore.REGION_ID < HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.REGION_ID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9829, "HMasterInstance.procedureStore.REGION_ID < HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.REGION_ID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9830, "HMasterInstance.procedureStore.REGION_ID < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.REGION_ID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9831, "HMasterInstance.procedureStore.REGION_ID < HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.REGION_ID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9832, "HMasterInstance.procedureStore.REGION_ID < HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.REGION_ID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9833, "HMasterInstance.procedureStore.REGION_ID < HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.REGION_ID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9834, "HMasterInstance.procedureStore.REGION_ID < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.REGION_ID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9835, "HMasterInstance.procedureStore.REGION_ID != HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.REGION_ID"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9836, "HMasterInstance.procedureStore.REGION_ID < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.REGION_ID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9837, "HMasterInstance.procedureStore.REGION_ID < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.REGION_ID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9838, "HMasterInstance.procedureStore.REGION_ID < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.REGION_ID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9839, "HMasterInstance.procedureStore.REGION_ID < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.REGION_ID"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9840, "HMasterInstance.procedureStore.TABLE_NAME.hashCode < HMasterInstance.procedureStore.cleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.TABLE_NAME.hashCode"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9841, "HMasterInstance.procedureStore.TABLE_NAME.hashCode < HMasterInstance.procedureStore.cleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.TABLE_NAME.hashCode"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9842, "HMasterInstance.procedureStore.TABLE_NAME.hashCode < HMasterInstance.procedureStore.cleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.TABLE_NAME.hashCode"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9843, "HMasterInstance.procedureStore.TABLE_NAME.hashCode < HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.TABLE_NAME.hashCode"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9844, "HMasterInstance.procedureStore.TABLE_NAME.hashCode > HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.TABLE_NAME.hashCode"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9845, "HMasterInstance.procedureStore.TABLE_NAME.hashCode > HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.TABLE_NAME.hashCode"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9846, "HMasterInstance.procedureStore.TABLE_NAME.hashCode > HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.TABLE_NAME.hashCode"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9847, "HMasterInstance.procedureStore.TABLE_NAME.hashCode < HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.TABLE_NAME.hashCode"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9848, "HMasterInstance.procedureStore.TABLE_NAME.hashCode < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.TABLE_NAME.hashCode"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9849, "HMasterInstance.procedureStore.TABLE_NAME.hashCode < HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.TABLE_NAME.hashCode"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9850, "HMasterInstance.procedureStore.TABLE_NAME.hashCode < HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.TABLE_NAME.hashCode"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9851, "HMasterInstance.procedureStore.TABLE_NAME.hashCode > HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.TABLE_NAME.hashCode"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9852, "HMasterInstance.procedureStore.TABLE_NAME.hashCode < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.TABLE_NAME.hashCode"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9853, "HMasterInstance.procedureStore.TABLE_NAME.hashCode > HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.TABLE_NAME.hashCode"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9854, "HMasterInstance.procedureStore.TABLE_NAME.hashCode < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.TABLE_NAME.hashCode"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9855, "HMasterInstance.procedureStore.TABLE_NAME.hashCode < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.TABLE_NAME.hashCode"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9856, "HMasterInstance.procedureStore.TABLE_NAME.hashCode < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.TABLE_NAME.hashCode"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9857, "HMasterInstance.procedureStore.TABLE_NAME.hashCode < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.TABLE_NAME.hashCode"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9858, "HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS < HMasterInstance.procedureStore.cleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9859, "HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS < HMasterInstance.procedureStore.cleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9860, "HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS < HMasterInstance.procedureStore.cleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9861, "HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS < HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9862, "HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS != HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9863, "HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS != HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9864, "HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS != HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9865, "HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS < HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9866, "HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9867, "HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS < HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9868, "HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS < HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9869, "HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS < HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9870, "HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9871, "HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS != HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9872, "HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9873, "HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9874, "HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9875, "HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.AVAIL_PROCESSORS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9876, "HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS < HMasterInstance.procedureStore.cleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9877, "HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS < HMasterInstance.procedureStore.cleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9878, "HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS < HMasterInstance.procedureStore.cleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9879, "HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS < HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9880, "HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS > HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9881, "HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS > HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9882, "HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS > HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9883, "HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS < HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9884, "HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9885, "HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS < HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9886, "HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS < HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9887, "HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS > HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9888, "HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9889, "HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS > HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9890, "HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9891, "HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9892, "HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9893, "HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.FIVE_MINUTES_IN_NANOS"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9894, "HMasterInstance.procedureStore.cleaner.lastLog > HMasterInstance.procedureStore.cleaner.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.period"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9895, "HMasterInstance.procedureStore.cleaner.lastLog > HMasterInstance.procedureStore.cleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9896, "HMasterInstance.procedureStore.cleaner.lastLog > HMasterInstance.procedureStore.cleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9897, "HMasterInstance.procedureStore.cleaner.lastLog > HMasterInstance.procedureStore.cleanerPool.cleanerLatch"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9898, "HMasterInstance.procedureStore.cleaner.lastLog > HMasterInstance.procedureStore.cleanerPool.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.size"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9899, "HMasterInstance.procedureStore.cleaner.lastLog > HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9900, "HMasterInstance.procedureStore.cleaner.lastLog > HMasterInstance.procedureStore.numThreads"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.numThreads"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9901, "HMasterInstance.procedureStore.cleaner.lastLog > HMasterInstance.procedureStore.region.DEEP_OVERHEAD"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.DEEP_OVERHEAD"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9902, "HMasterInstance.procedureStore.cleaner.lastLog > HMasterInstance.procedureStore.region.FIXED_OVERHEAD"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.FIXED_OVERHEAD"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9903, "HMasterInstance.procedureStore.cleaner.lastLog > HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9904, "HMasterInstance.procedureStore.cleaner.lastLog > HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9905, "HMasterInstance.procedureStore.cleaner.lastLog > HMasterInstance.procedureStore.region.blockingMemStoreSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.blockingMemStoreSize"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9906, "HMasterInstance.procedureStore.cleaner.lastLog > HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9907, "HMasterInstance.procedureStore.cleaner.lastLog > HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9908, "HMasterInstance.procedureStore.cleaner.lastLog > HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9909, "HMasterInstance.procedureStore.cleaner.lastLog > HMasterInstance.procedureStore.region.majorInProgress"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9910, "HMasterInstance.procedureStore.cleaner.lastLog > HMasterInstance.procedureStore.region.maxBusyWaitDuration"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitDuration"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9911, "HMasterInstance.procedureStore.cleaner.lastLog > HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9912, "HMasterInstance.procedureStore.cleaner.lastLog > HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9913, "HMasterInstance.procedureStore.cleaner.lastLog < HMasterInstance.procedureStore.region.timestampSlop"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.timestampSlop"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9914, "HMasterInstance.procedureStore.cleaner.lastLog > HMasterInstance.procedureStore.walFactory.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walFactory.timeoutMillis"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9915, "HMasterInstance.procedureStore.cleaner.lastLog > HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9916, "HMasterInstance.procedureStore.cleaner.lastLog > HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9917, "HMasterInstance.procedureStore.cleaner.lastLog > HMasterInstance.procedureStore.walRoller.threadWakeFrequency"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.threadWakeFrequency"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9918, "HMasterInstance.procedureStore.cleaner.lastLog > HMasterInstance.regionServerAccounting.globalMemStoreLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimit"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9919, "HMasterInstance.procedureStore.cleaner.lastLog > HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9920, "HMasterInstance.procedureStore.cleaner.lastLog > HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9921, "HMasterInstance.procedureStore.cleaner.lastLog < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9922, "HMasterInstance.procedureStore.cleaner.lastLog > HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9923, "HMasterInstance.procedureStore.cleaner.lastLog > HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9924, "HMasterInstance.procedureStore.cleaner.lastLog > HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9925, "HMasterInstance.procedureStore.cleaner.lastLog > HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9926, "HMasterInstance.procedureStore.cleaner.lastLog > HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9927, "HMasterInstance.procedureStore.cleaner.lastLog > HMasterInstance.rpcClient.connectTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connectTO"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9928, "HMasterInstance.procedureStore.cleaner.lastLog > HMasterInstance.rpcClient.connections.poolMaxSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.connections.poolMaxSize"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9929, "HMasterInstance.procedureStore.cleaner.lastLog > HMasterInstance.rpcClient.failedServers.latestExpiry"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.latestExpiry"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9930, "HMasterInstance.procedureStore.cleaner.lastLog > HMasterInstance.rpcClient.failedServers.recheckServersTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failedServers.recheckServersTimeout"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9931, "HMasterInstance.procedureStore.cleaner.lastLog > HMasterInstance.rpcClient.failureSleep"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.failureSleep"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9932, "HMasterInstance.procedureStore.cleaner.lastLog > HMasterInstance.rpcClient.maxConcurrentCallsPerServer"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.maxConcurrentCallsPerServer"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9933, "HMasterInstance.procedureStore.cleaner.lastLog > HMasterInstance.rpcClient.minIdleTimeBeforeClose"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.minIdleTimeBeforeClose"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9934, "HMasterInstance.procedureStore.cleaner.lastLog > HMasterInstance.rpcClient.readTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.readTO"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9935, "HMasterInstance.procedureStore.cleaner.lastLog > HMasterInstance.rpcClient.writeTO"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.writeTO"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9936, "HMasterInstance.procedureStore.cleaner.lastLog > HMasterInstance.rpcServices.maxScannerResultSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.maxScannerResultSize"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9937, "HMasterInstance.procedureStore.cleaner.lastLog > HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcServer.NIO_BUFFER_LIMIT"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9938, "HMasterInstance.procedureStore.cleaner.lastLog > HMasterInstance.rpcServices.rpcTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.rpcTimeout"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9939, "HMasterInstance.procedureStore.cleaner.lastLog < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9940, "HMasterInstance.procedureStore.cleaner.lastLog > HMasterInstance.rsFatals.maxSizeBytes"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.maxSizeBytes"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9941, "HMasterInstance.procedureStore.cleaner.lastLog > HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9942, "HMasterInstance.procedureStore.cleaner.lastLog < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9943, "HMasterInstance.procedureStore.cleaner.lastLog > HMasterInstance.serverManager.flushedSeqIdFlusher.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.period"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9944, "HMasterInstance.procedureStore.cleaner.lastLog > HMasterInstance.serverManager.maxSkew"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.maxSkew"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9945, "HMasterInstance.procedureStore.cleaner.lastLog < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9946, "HMasterInstance.procedureStore.cleaner.lastLog > HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9947, "HMasterInstance.procedureStore.cleaner.lastLog > HMasterInstance.snapshotManager.coordinator.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotManager.coordinator.timeoutMillis"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9948, "HMasterInstance.procedureStore.cleaner.lastLog > HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.tableStateManager.tnLock.NB_CONCURRENT_LOCKS"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9949, "HMasterInstance.procedureStore.cleaner.lastLog != HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() != ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9950, "HMasterInstance.procedureStore.cleaner.lastLog > HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.zooKeeper.recoverableZooKeeper.sessionTimeout"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9951, "HMasterInstance.procedureStore.cleaner.lastLog > daikon.Quant.size(HMasterInstance.activeMasterManager.master.submittedRegionProcedures_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.lastLog"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("HMasterInstance.activeMasterManager.master.submittedRegionProcedures")).toArray(new Object[0]))));
			}
		});
		invariants9999.add(new Invariant(9952, "HMasterInstance.procedureStore.cleaner.period < HMasterInstance.procedureStore.cleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.period"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9953, "HMasterInstance.procedureStore.cleaner.period < HMasterInstance.procedureStore.cleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.period"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9954, "HMasterInstance.procedureStore.cleaner.period < HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.period"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9955, "HMasterInstance.procedureStore.cleaner.period > HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.period"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9956, "HMasterInstance.procedureStore.cleaner.period > HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.period"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9957, "HMasterInstance.procedureStore.cleaner.period > HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.period"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9958, "HMasterInstance.procedureStore.cleaner.period < HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.period"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9959, "HMasterInstance.procedureStore.cleaner.period < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.period"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9960, "HMasterInstance.procedureStore.cleaner.period < HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.period"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9961, "HMasterInstance.procedureStore.cleaner.period < HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.period"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9962, "HMasterInstance.procedureStore.cleaner.period > HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.period"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9963, "HMasterInstance.procedureStore.cleaner.period < HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.period"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.rpcServices.scannerIdGenerator.serverNameHash"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9964, "HMasterInstance.procedureStore.cleaner.period > HMasterInstance.rsFatals.usage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.period"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rsFatals.usage"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9965, "HMasterInstance.procedureStore.cleaner.period < HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.period"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.serverManager.flushedSeqIdFlusher.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9966, "HMasterInstance.procedureStore.cleaner.period < HMasterInstance.snapshotCleanerChore.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.period"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9967, "HMasterInstance.procedureStore.cleaner.period < HMasterInstance.snapshotCleanerChore.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.period"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.snapshotCleanerChore.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9968, "HMasterInstance.procedureStore.cleaner.period < HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.period"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.walManager.splitLogManager.lastTaskCreateTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9969, "HMasterInstance.procedureStore.cleaner.timeOfLastRun < HMasterInstance.procedureStore.cleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9970, "HMasterInstance.procedureStore.cleaner.timeOfLastRun > HMasterInstance.procedureStore.cleanerPool.cleanerLatch"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.cleanerLatch"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9971, "HMasterInstance.procedureStore.cleaner.timeOfLastRun > HMasterInstance.procedureStore.cleanerPool.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleanerPool.size"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9972, "HMasterInstance.procedureStore.cleaner.timeOfLastRun > HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.flusherAndCompactor.lastFlushTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9973, "HMasterInstance.procedureStore.cleaner.timeOfLastRun > HMasterInstance.procedureStore.numThreads"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.numThreads"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9974, "HMasterInstance.procedureStore.cleaner.timeOfLastRun > HMasterInstance.procedureStore.region.DEEP_OVERHEAD"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.DEEP_OVERHEAD"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9975, "HMasterInstance.procedureStore.cleaner.timeOfLastRun > HMasterInstance.procedureStore.region.FIXED_OVERHEAD"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.FIXED_OVERHEAD"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9976, "HMasterInstance.procedureStore.cleaner.timeOfLastRun > HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.MAX_FLUSH_PER_CHANGES"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9977, "HMasterInstance.procedureStore.cleaner.timeOfLastRun > HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.SYSTEM_CACHE_FLUSH_INTERVAL"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9978, "HMasterInstance.procedureStore.cleaner.timeOfLastRun > HMasterInstance.procedureStore.region.blockingMemStoreSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.blockingMemStoreSize"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9979, "HMasterInstance.procedureStore.cleaner.timeOfLastRun > HMasterInstance.procedureStore.region.lastFlushOpSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastFlushOpSeqId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9980, "HMasterInstance.procedureStore.cleaner.timeOfLastRun > HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedCompactionSeqId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9981, "HMasterInstance.procedureStore.cleaner.timeOfLastRun > HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.lastReplayedOpenRegionSeqId"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9982, "HMasterInstance.procedureStore.cleaner.timeOfLastRun > HMasterInstance.procedureStore.region.majorInProgress"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.majorInProgress"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9983, "HMasterInstance.procedureStore.cleaner.timeOfLastRun > HMasterInstance.procedureStore.region.maxBusyWaitDuration"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitDuration"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9984, "HMasterInstance.procedureStore.cleaner.timeOfLastRun > HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.maxBusyWaitMultiplier"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9985, "HMasterInstance.procedureStore.cleaner.timeOfLastRun > HMasterInstance.procedureStore.region.openSeqNum"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.openSeqNum"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9986, "HMasterInstance.procedureStore.cleaner.timeOfLastRun < HMasterInstance.procedureStore.region.timestampSlop"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.region.timestampSlop"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9987, "HMasterInstance.procedureStore.cleaner.timeOfLastRun > HMasterInstance.procedureStore.walFactory.timeoutMillis"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walFactory.timeoutMillis"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9988, "HMasterInstance.procedureStore.cleaner.timeOfLastRun > HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.checkLowReplicationInterval"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9989, "HMasterInstance.procedureStore.cleaner.timeOfLastRun > HMasterInstance.procedureStore.walRoller.lastRollTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.lastRollTime"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9990, "HMasterInstance.procedureStore.cleaner.timeOfLastRun > HMasterInstance.procedureStore.walRoller.threadWakeFrequency"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.walRoller.threadWakeFrequency"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9991, "HMasterInstance.procedureStore.cleaner.timeOfLastRun > HMasterInstance.regionServerAccounting.globalMemStoreLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimit"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9992, "HMasterInstance.procedureStore.cleaner.timeOfLastRun > HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.regionServerAccounting.globalMemStoreLimitLowMark"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9993, "HMasterInstance.procedureStore.cleaner.timeOfLastRun > HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.regionsRecoveryConfigManager.prevRegionsRecoveryInterval"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9994, "HMasterInstance.procedureStore.cleaner.timeOfLastRun < HMasterInstance.replicationBarrierCleaner.lastLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.lastLog"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9995, "HMasterInstance.procedureStore.cleaner.timeOfLastRun < HMasterInstance.replicationBarrierCleaner.timeOfLastRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfLastRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9996, "HMasterInstance.procedureStore.cleaner.timeOfLastRun < HMasterInstance.replicationBarrierCleaner.timeOfThisRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() < ((Number)(InvariantChecker.getValue("HMasterInstance.replicationBarrierCleaner.timeOfThisRun"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9997, "HMasterInstance.procedureStore.cleaner.timeOfLastRun > HMasterInstance.rpcClient.callIdCnt"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.callIdCnt"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9998, "HMasterInstance.procedureStore.cleaner.timeOfLastRun > HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockBuildingInitialBufferSize"))).intValue());
			}
		});
		invariants9999.add(new Invariant(9999, "HMasterInstance.procedureStore.cleaner.timeOfLastRun > HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("HMasterInstance.procedureStore.cleaner.timeOfLastRun"))).intValue() > ((Number)(InvariantChecker.getValue("HMasterInstance.rpcClient.cellBlockBuilder.cellBlockDecompressionMultiplier"))).intValue());
			}
		});
	}
	static {
installInv9999();	}
}
