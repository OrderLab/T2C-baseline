package daikon.hdfs;
import daikon.*;
import java.util.Set;
import java.util.ArrayList;
import java.util.List;
//this class is automatically generated by our scripts
public class InvariantPool7999{

	public static List<Invariant> invariants7999 = new ArrayList<>();

	public static void installInv7999(){
		invariants7999.add(new Invariant(7000, "DataNode.instance.xserver.balanceThrottler.periodExtension < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.periodExtension"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7001, "DataNode.instance.xserver.balanceThrottler.periodExtension != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.periodExtension"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7002, "DataNode.instance.xserver.balanceThrottler.periodExtension != blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.periodExtension"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7003, "DataNode.instance.xserver.balanceThrottler.periodExtension < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.periodExtension"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7004, "DataNode.instance.xserver.estimateBlockSize > NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.estimateBlockSize"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7005, "DataNode.instance.xserver.estimateBlockSize > NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.estimateBlockSize"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7006, "DataNode.instance.xserver.estimateBlockSize != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.estimateBlockSize"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7007, "DataNode.instance.xserver.estimateBlockSize > blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.estimateBlockSize"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7008, "DataNode.instance.xserver.maxXceiverCount > NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.maxXceiverCount"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7009, "DataNode.instance.xserver.maxXceiverCount < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.maxXceiverCount"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7010, "DataNode.instance.xserver.maxXceiverCount != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.maxXceiverCount"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7011, "DataNode.instance.xserver.maxXceiverCount != blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.maxXceiverCount"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7012, "DataNode.instance.xserver.maxXceiverCount < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.maxXceiverCount"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7013, "NameNode.instance.DEFAULT_PORT > NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.DEFAULT_PORT"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7014, "NameNode.instance.DEFAULT_PORT < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.DEFAULT_PORT"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7015, "NameNode.instance.DEFAULT_PORT != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.DEFAULT_PORT"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7016, "NameNode.instance.DEFAULT_PORT != blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.DEFAULT_PORT"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7017, "NameNode.instance.DEFAULT_PORT < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.DEFAULT_PORT"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7018, "NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS > NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7019, "NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7020, "NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7021, "NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS != blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7022, "NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7023, "NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL > NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7024, "NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7025, "NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7026, "NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7027, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE != NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() != ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7028, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7029, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE > blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7030, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7031, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE != blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7032, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE < blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7033, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size < NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7034, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7035, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7036, "NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses > NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7037, "NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7038, "NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7039, "NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses != blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7040, "NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7041, "NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval > NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7042, "NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7043, "NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7044, "NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7045, "NameNode.instance.namesystem.dir.maxComponentLength > NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxComponentLength"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7046, "NameNode.instance.namesystem.dir.maxComponentLength < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxComponentLength"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7047, "NameNode.instance.namesystem.dir.maxComponentLength != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxComponentLength"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7048, "NameNode.instance.namesystem.dir.maxComponentLength != blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxComponentLength"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7049, "NameNode.instance.namesystem.dir.maxComponentLength < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxComponentLength"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7050, "NameNode.instance.namesystem.dir.maxDirItems > NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxDirItems"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7051, "NameNode.instance.namesystem.dir.maxDirItems < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxDirItems"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7052, "NameNode.instance.namesystem.dir.maxDirItems != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxDirItems"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7053, "NameNode.instance.namesystem.dir.maxDirItems < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxDirItems"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7054, "NameNode.instance.namesystem.dir.xattrMaxSize > NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.xattrMaxSize"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7055, "NameNode.instance.namesystem.dir.xattrMaxSize < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.xattrMaxSize"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7056, "NameNode.instance.namesystem.dir.xattrMaxSize != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.xattrMaxSize"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7057, "NameNode.instance.namesystem.dir.xattrMaxSize != blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.xattrMaxSize"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7058, "NameNode.instance.namesystem.dir.xattrMaxSize < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.xattrMaxSize"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7059, "NameNode.instance.namesystem.editLogRollerThreshold > NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogRollerThreshold"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7060, "NameNode.instance.namesystem.editLogRollerThreshold < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogRollerThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7061, "NameNode.instance.namesystem.editLogRollerThreshold != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogRollerThreshold"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7062, "NameNode.instance.namesystem.editLogRollerThreshold < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogRollerThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7063, "NameNode.instance.namesystem.fsImage.lastAppliedTxId < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7064, "NameNode.instance.namesystem.fsImage.lastAppliedTxId < NameNode.instance.namesystem.leaseManager.hardLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.hardLimit"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7065, "NameNode.instance.namesystem.fsImage.lastAppliedTxId < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7066, "NameNode.instance.namesystem.fsImage.lastAppliedTxId < NameNode.instance.namesystem.leaseRecheckIntervalMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseRecheckIntervalMs"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7067, "NameNode.instance.namesystem.fsImage.lastAppliedTxId != NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() != ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7068, "NameNode.instance.namesystem.fsImage.lastAppliedTxId < NameNode.instance.namesystem.nnResourceChecker.duReserved"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.nnResourceChecker.duReserved"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7069, "NameNode.instance.namesystem.fsImage.lastAppliedTxId != NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() != ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7070, "NameNode.instance.namesystem.fsImage.lastAppliedTxId < NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7071, "NameNode.instance.namesystem.fsImage.lastAppliedTxId < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7072, "NameNode.instance.namesystem.fsImage.lastAppliedTxId != blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7073, "NameNode.instance.namesystem.fsImage.lastAppliedTxId < blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7074, "NameNode.instance.namesystem.fsImage.lastAppliedTxId != blockManagerInstance.blockReportLeaseManager.maxPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.maxPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7075, "NameNode.instance.namesystem.fsImage.lastAppliedTxId != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7076, "NameNode.instance.namesystem.fsImage.lastAppliedTxId < blockManagerInstance.blocksMap.capacity"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blocksMap.capacity"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7077, "NameNode.instance.namesystem.fsImage.lastAppliedTxId != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7078, "NameNode.instance.namesystem.fsImage.lastAppliedTxId < blockManagerInstance.datanodeManager.defaultInfoPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoPort"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7079, "NameNode.instance.namesystem.fsImage.lastAppliedTxId < blockManagerInstance.datanodeManager.defaultInfoSecurePort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoSecurePort"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7080, "NameNode.instance.namesystem.fsImage.lastAppliedTxId < blockManagerInstance.datanodeManager.defaultIpcPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultIpcPort"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7081, "NameNode.instance.namesystem.fsImage.lastAppliedTxId < blockManagerInstance.datanodeManager.defaultXferPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultXferPort"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7082, "NameNode.instance.namesystem.fsImage.lastAppliedTxId < blockManagerInstance.datanodeManager.heartbeatExpireInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatExpireInterval"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7083, "NameNode.instance.namesystem.fsImage.lastAppliedTxId != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7084, "NameNode.instance.namesystem.fsImage.lastAppliedTxId != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7085, "NameNode.instance.namesystem.fsImage.lastAppliedTxId != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7086, "NameNode.instance.namesystem.fsImage.lastAppliedTxId != blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7087, "NameNode.instance.namesystem.fsImage.lastAppliedTxId != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7088, "NameNode.instance.namesystem.fsImage.lastAppliedTxId != blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7089, "NameNode.instance.namesystem.fsImage.lastAppliedTxId < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7090, "NameNode.instance.namesystem.fsImage.lastAppliedTxId != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7091, "NameNode.instance.namesystem.fsImage.lastAppliedTxId % blockManagerInstance.lastRedundancyCycleTS == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() % ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7092, "NameNode.instance.namesystem.fsImage.lastAppliedTxId != blockManagerInstance.neededReconstruction.LEVEL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.LEVEL"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7093, "NameNode.instance.namesystem.fsImage.lastAppliedTxId < blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7094, "NameNode.instance.namesystem.fsImage.lastAppliedTxId != blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7095, "NameNode.instance.namesystem.fsImage.lastAppliedTxId != blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7096, "NameNode.instance.namesystem.fsImage.lastAppliedTxId != blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7097, "NameNode.instance.namesystem.fsImage.lastAppliedTxId != blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7098, "NameNode.instance.namesystem.fsImage.lastAppliedTxId < blockManagerInstance.replQueueResetToHeadThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueResetToHeadThreshold"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7099, "NameNode.instance.namesystem.fsImage.lastAppliedTxId != blockManagerInstance.storagePolicySuite.defaultPolicyID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.storagePolicySuite.defaultPolicyID"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7100, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7101, "NameNode.instance.namesystem.lazyPersistFileScrubberTS > NameNode.instance.namesystem.leaseManager.hardLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.hardLimit"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7102, "NameNode.instance.namesystem.lazyPersistFileScrubberTS > NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7103, "NameNode.instance.namesystem.lazyPersistFileScrubberTS > NameNode.instance.namesystem.leaseRecheckIntervalMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseRecheckIntervalMs"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7104, "NameNode.instance.namesystem.lazyPersistFileScrubberTS > NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7105, "NameNode.instance.namesystem.lazyPersistFileScrubberTS > NameNode.instance.namesystem.nnResourceChecker.duReserved"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.nnResourceChecker.duReserved"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7106, "NameNode.instance.namesystem.lazyPersistFileScrubberTS > NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7107, "NameNode.instance.namesystem.lazyPersistFileScrubberTS > NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7108, "NameNode.instance.namesystem.lazyPersistFileScrubberTS < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7109, "NameNode.instance.namesystem.lazyPersistFileScrubberTS > blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7110, "NameNode.instance.namesystem.lazyPersistFileScrubberTS < blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7111, "NameNode.instance.namesystem.lazyPersistFileScrubberTS > blockManagerInstance.blockReportLeaseManager.maxPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.maxPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7112, "NameNode.instance.namesystem.lazyPersistFileScrubberTS != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7113, "NameNode.instance.namesystem.lazyPersistFileScrubberTS > blockManagerInstance.blocksMap.capacity"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blocksMap.capacity"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7114, "NameNode.instance.namesystem.lazyPersistFileScrubberTS > blockManagerInstance.datanodeManager.defaultInfoPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoPort"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7115, "NameNode.instance.namesystem.lazyPersistFileScrubberTS > blockManagerInstance.datanodeManager.defaultInfoSecurePort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoSecurePort"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7116, "NameNode.instance.namesystem.lazyPersistFileScrubberTS > blockManagerInstance.datanodeManager.defaultIpcPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultIpcPort"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7117, "NameNode.instance.namesystem.lazyPersistFileScrubberTS > blockManagerInstance.datanodeManager.defaultXferPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultXferPort"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7118, "NameNode.instance.namesystem.lazyPersistFileScrubberTS > blockManagerInstance.datanodeManager.heartbeatExpireInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatExpireInterval"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7119, "NameNode.instance.namesystem.lazyPersistFileScrubberTS != blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7120, "NameNode.instance.namesystem.lazyPersistFileScrubberTS > blockManagerInstance.neededReconstruction.LEVEL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.LEVEL"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7121, "NameNode.instance.namesystem.lazyPersistFileScrubberTS > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7122, "NameNode.instance.namesystem.lazyPersistFileScrubberTS > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7123, "NameNode.instance.namesystem.lazyPersistFileScrubberTS > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7124, "NameNode.instance.namesystem.lazyPersistFileScrubberTS > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7125, "NameNode.instance.namesystem.lazyPersistFileScrubberTS > blockManagerInstance.replQueueResetToHeadThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueResetToHeadThreshold"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7126, "NameNode.instance.namesystem.lazyPersistFileScrubberTS > blockManagerInstance.storagePolicySuite.defaultPolicyID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.storagePolicySuite.defaultPolicyID"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7127, "NameNode.instance.namesystem.leaseManager.hardLimit != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.hardLimit"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7128, "NameNode.instance.namesystem.leaseManager.hardLimit < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.hardLimit"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7129, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime - NameNode.instance.namesystem.startTime + 2147483647 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() - ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() + 2147483647 == 0);
			}
		});
		invariants7999.add(new Invariant(7130, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7131, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7132, "NameNode.instance.namesystem.leaseRecheckIntervalMs != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseRecheckIntervalMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7133, "NameNode.instance.namesystem.leaseRecheckIntervalMs != blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseRecheckIntervalMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7134, "NameNode.instance.namesystem.leaseRecheckIntervalMs < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseRecheckIntervalMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7135, "NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7136, "NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs != blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7137, "NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7138, "NameNode.instance.namesystem.nnResourceChecker.duReserved != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.nnResourceChecker.duReserved"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7139, "NameNode.instance.namesystem.nnResourceChecker.duReserved < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.nnResourceChecker.duReserved"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7140, "NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7141, "NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH != blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7142, "NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7143, "NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7144, "NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit != blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7145, "NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7146, "NameNode.instance.namesystem.startTime != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7147, "NameNode.instance.namesystem.startTime > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7148, "blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7149, "blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER != blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7150, "blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7151, "blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7152, "blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID > blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7153, "blockManagerInstance.blockReportLeaseManager.maxPending != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.maxPending"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7154, "blockManagerInstance.blockReportLeaseManager.maxPending != blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.maxPending"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7155, "blockManagerInstance.blockReportLeaseManager.maxPending < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.maxPending"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7156, "blockManagerInstance.blockReportLeaseManager.nextId != blockManagerInstance.blocksMap.capacity"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blocksMap.capacity"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7157, "blockManagerInstance.blockReportLeaseManager.nextId != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7158, "blockManagerInstance.blockReportLeaseManager.nextId != blockManagerInstance.datanodeManager.defaultInfoPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoPort"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7159, "blockManagerInstance.blockReportLeaseManager.nextId != blockManagerInstance.datanodeManager.defaultInfoSecurePort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoSecurePort"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7160, "blockManagerInstance.blockReportLeaseManager.nextId != blockManagerInstance.datanodeManager.defaultIpcPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultIpcPort"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7161, "blockManagerInstance.blockReportLeaseManager.nextId != blockManagerInstance.datanodeManager.defaultXferPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultXferPort"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7162, "blockManagerInstance.blockReportLeaseManager.nextId != blockManagerInstance.datanodeManager.heartbeatExpireInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatExpireInterval"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7163, "blockManagerInstance.blockReportLeaseManager.nextId != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7164, "blockManagerInstance.blockReportLeaseManager.nextId != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7165, "blockManagerInstance.blockReportLeaseManager.nextId != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7166, "blockManagerInstance.blockReportLeaseManager.nextId != blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7167, "blockManagerInstance.blockReportLeaseManager.nextId != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7168, "blockManagerInstance.blockReportLeaseManager.nextId != blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7169, "blockManagerInstance.blockReportLeaseManager.nextId != blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7170, "blockManagerInstance.blockReportLeaseManager.nextId != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7171, "blockManagerInstance.blockReportLeaseManager.nextId != blockManagerInstance.neededReconstruction.LEVEL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.LEVEL"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7172, "blockManagerInstance.blockReportLeaseManager.nextId != blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7173, "blockManagerInstance.blockReportLeaseManager.nextId != blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7174, "blockManagerInstance.blockReportLeaseManager.nextId != blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7175, "blockManagerInstance.blockReportLeaseManager.nextId != blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7176, "blockManagerInstance.blockReportLeaseManager.nextId != blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7177, "blockManagerInstance.blockReportLeaseManager.nextId != blockManagerInstance.replQueueResetToHeadThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueResetToHeadThreshold"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7178, "blockManagerInstance.blockReportLeaseManager.nextId != blockManagerInstance.storagePolicySuite.defaultPolicyID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.storagePolicySuite.defaultPolicyID"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7179, "blockManagerInstance.blocksMap.capacity < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blocksMap.capacity"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7180, "blockManagerInstance.bmSafeMode.startTime >= blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() >= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7181, "blockManagerInstance.datanodeManager.defaultInfoPort != blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoPort"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7182, "blockManagerInstance.datanodeManager.defaultInfoPort < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoPort"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7183, "blockManagerInstance.datanodeManager.defaultInfoSecurePort != blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoSecurePort"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7184, "blockManagerInstance.datanodeManager.defaultInfoSecurePort < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoSecurePort"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7185, "blockManagerInstance.datanodeManager.defaultIpcPort != blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultIpcPort"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7186, "blockManagerInstance.datanodeManager.defaultIpcPort < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultIpcPort"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7187, "blockManagerInstance.datanodeManager.defaultXferPort != blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultXferPort"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7188, "blockManagerInstance.datanodeManager.defaultXferPort < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultXferPort"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7189, "blockManagerInstance.datanodeManager.heartbeatExpireInterval < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatExpireInterval"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7190, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed <= blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7191, "blockManagerInstance.heartbeatManager.stats.capacityRemaining >= blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() >= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7192, "blockManagerInstance.heartbeatManager.stats.capacityTotal >= blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue() >= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7193, "blockManagerInstance.heartbeatManager.stats.capacityUsed <= blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7194, "blockManagerInstance.heartbeatManager.stats.capacityUsed >= blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() >= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7195, "blockManagerInstance.heartbeatManager.stats.capacityUsed != blockManagerInstance.neededReconstruction.LEVEL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.LEVEL"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7196, "blockManagerInstance.heartbeatManager.stats.capacityUsed != blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7197, "blockManagerInstance.heartbeatManager.stats.capacityUsed != blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7198, "blockManagerInstance.heartbeatManager.stats.capacityUsed != blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7199, "blockManagerInstance.heartbeatManager.stats.capacityUsed != blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7200, "blockManagerInstance.heartbeatManager.stats.capacityUsed >= blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() >= ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7201, "blockManagerInstance.heartbeatManager.stats.capacityUsed != blockManagerInstance.replQueueResetToHeadThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueResetToHeadThreshold"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7202, "blockManagerInstance.heartbeatManager.stats.capacityUsed != blockManagerInstance.storagePolicySuite.defaultPolicyID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.storagePolicySuite.defaultPolicyID"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7203, "blockManagerInstance.invalidateBlocks.startupTime > blockManagerInstance.neededReconstruction.LEVEL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.LEVEL"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7204, "blockManagerInstance.invalidateBlocks.startupTime > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7205, "blockManagerInstance.invalidateBlocks.startupTime > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7206, "blockManagerInstance.invalidateBlocks.startupTime > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7207, "blockManagerInstance.invalidateBlocks.startupTime > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7208, "blockManagerInstance.invalidateBlocks.startupTime > blockManagerInstance.replQueueResetToHeadThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueResetToHeadThreshold"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7209, "blockManagerInstance.invalidateBlocks.startupTime > blockManagerInstance.storagePolicySuite.defaultPolicyID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.storagePolicySuite.defaultPolicyID"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7210, "1.4392623175E10 * NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE + 1496234931 * NameNode.instance.namesystem.fsImage.lastAppliedTxId - 96 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos + 1.1382344950439542E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (1.4392623175E10 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() + 1496234931 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() - 96 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() + 1.1382344950439542E16 == 0);
			}
		});
		invariants7999.add(new Invariant(7211, "238529025 * NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE - 4 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 1527778592 * blockManagerInstance.heartbeatManager.stats.nodesInService + 4.74282680487834E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (238529025 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() - 4 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 1527778592 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() + 4.74282680487834E14 == 0);
			}
		});
		invariants7999.add(new Invariant(7212, "238529025 * NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE - 4 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 4.583335776E9 * blockManagerInstance.replQueueCallsSinceReset + 4.74282680487834E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (238529025 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() - 4 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 4.583335776E9 * ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue() + 4.74282680487834E14 == 0);
			}
		});
		invariants7999.add(new Invariant(7213, "4.7686475747E10 * NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE - 118573914 * NameNode.instance.namesystem.lazyPersistFileScrubberTS - 2109 * blockManagerInstance.bmSafeMode.startTime + 1.4057357572552664E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (4.7686475747E10 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() - 118573914 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() - 2109 * ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() + 1.4057357572552664E16 == 0);
			}
		});
		invariants7999.add(new Invariant(7214, "5.7093339591E10 * NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE - 118573914 * NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime - 2599 * blockManagerInstance.bmSafeMode.startTime + 1.4056855570125426E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (5.7093339591E10 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() - 118573914 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() - 2599 * ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() + 1.4056855570125426E16 == 0);
			}
		});
		invariants7999.add(new Invariant(7215, "1.19858464735E11 * NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE - 6065 * blockManagerInstance.bmSafeMode.startTime - 355716618 * blockManagerInstance.invalidateBlocks.startupTime + 4.21726337315944E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (1.19858464735E11 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() - 6065 * ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() - 355716618 * ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue() + 4.21726337315944E16 == 0);
			}
		});
		invariants7999.add(new Invariant(7216, "2813952 * NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE - 2689 * blockManagerInstance.heartbeatManager.stats.blockPoolUsed - 73728 * blockManagerInstance.invalidateBlocks.startupTime + 8.742042329088E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2813952 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() - 2689 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() - 73728 * ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue() + 8.742042329088E12 == 0);
			}
		});
		invariants7999.add(new Invariant(7217, "4689920 * NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE - 2689 * blockManagerInstance.heartbeatManager.stats.capacityUsed - 122880 * blockManagerInstance.invalidateBlocks.startupTime + 1.457007054848E13 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (4689920 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() - 2689 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() - 122880 * ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue() + 1.457007054848E13 == 0);
			}
		});
		invariants7999.add(new Invariant(7218, "9.050980199E9 * NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE - 237143586 * blockManagerInstance.invalidateBlocks.startupTime - 10756 * blockManagerInstance.lastRedundancyCycleTS + 2.8118479639796652E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (9.050980199E9 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() - 237143586 * ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue() - 10756 * ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() + 2.8118479639796652E16 == 0);
			}
		});
		invariants7999.add(new Invariant(7219, "3969414 * NameNode.instance.namesystem.fsImage.lastAppliedTxId + NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos + 625766225 * blockManagerInstance.heartbeatManager.stats.nodesInService - 1.18573667612427E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (3969414 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() + ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() + 625766225 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() - 1.18573667612427E14 == 0);
			}
		});
		invariants7999.add(new Invariant(7220, "3969414 * NameNode.instance.namesystem.fsImage.lastAppliedTxId + NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos + 1877298675 * blockManagerInstance.replQueueCallsSinceReset - 1.18573667612427E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (3969414 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() + ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() + 1877298675 * ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue() - 1.18573667612427E14 == 0);
			}
		});
		invariants7999.add(new Invariant(7221, "8158426 * NameNode.instance.namesystem.fsImage.lastAppliedTxId + 687 * NameNode.instance.namesystem.startTime - 6068 * blockManagerInstance.invalidateBlocks.startupTime - 1.188740283616046E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (8158426 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() + 687 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() - 6068 * ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue() - 1.188740283616046E15 == 0);
			}
		});
		invariants7999.add(new Invariant(7222, "4826 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 715587075 * NameNode.instance.namesystem.lazyPersistFileScrubberTS + 1.843264871248E12 * blockManagerInstance.heartbeatManager.stats.nodesInService - 4.8738667118084403E17 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (4826 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 715587075 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() + 1.843264871248E12 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() - 4.8738667118084403E17 == 0);
			}
		});
		invariants7999.add(new Invariant(7223, "4826 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 715587075 * NameNode.instance.namesystem.lazyPersistFileScrubberTS + 5.529794613744E12 * blockManagerInstance.replQueueCallsSinceReset - 4.8738667118084403E17 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (4826 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 715587075 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() + 5.529794613744E12 * ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue() - 4.8738667118084403E17 == 0);
			}
		});
		invariants7999.add(new Invariant(7224, "214 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 26503225 * NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime + 8.1736154672E10 * blockManagerInstance.heartbeatManager.stats.nodesInService - 2.2232184396077592E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (214 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 26503225 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() + 8.1736154672E10 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() - 2.2232184396077592E16 == 0);
			}
		});
		invariants7999.add(new Invariant(7225, "214 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 26503225 * NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime + 2.45208464016E11 * blockManagerInstance.replQueueCallsSinceReset - 2.2232184396077592E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (214 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 26503225 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() + 2.45208464016E11 * ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue() - 2.2232184396077592E16 == 0);
			}
		});
		invariants7999.add(new Invariant(7226, "145 * NameNode.instance.namesystem.lazyPersistFileScrubberTS - 152 * NameNode.instance.namesystem.startTime - 178486 * blockManagerInstance.replQueueCallsSinceReset + 2.63152942028957E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (145 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() - 152 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() - 178486 * ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue() + 2.63152942028957E14 == 0);
			}
		});
		invariants7999.add(new Invariant(7227, "937984 * NameNode.instance.namesystem.lazyPersistFileScrubberTS - 255455 * blockManagerInstance.heartbeatManager.stats.blockPoolUsed - 7004160 * blockManagerInstance.invalidateBlocks.startupTime + 7.1928851888128E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (937984 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() - 255455 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() - 7004160 * ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue() + 7.1928851888128E14 == 0);
			}
		});
		invariants7999.add(new Invariant(7228, "937984 * NameNode.instance.namesystem.lazyPersistFileScrubberTS - 153273 * blockManagerInstance.heartbeatManager.stats.capacityUsed - 7004160 * blockManagerInstance.invalidateBlocks.startupTime + 7.1928851888128E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (937984 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() - 153273 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() - 7004160 * ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue() + 7.1928851888128E14 == 0);
			}
		});
		invariants7999.add(new Invariant(7229, "229 * NameNode.instance.namesystem.lazyPersistFileScrubberTS - 3065460 * blockManagerInstance.heartbeatManager.stats.nodesInService - 1710 * blockManagerInstance.invalidateBlocks.startupTime + 1.75607548555E11 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (229 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() - 3065460 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() - 1710 * ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue() + 1.75607548555E11 == 0);
			}
		});
		invariants7999.add(new Invariant(7230, "229 * NameNode.instance.namesystem.lazyPersistFileScrubberTS - 1710 * blockManagerInstance.invalidateBlocks.startupTime - 9196380 * blockManagerInstance.replQueueCallsSinceReset + 1.75607548555E11 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (229 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() - 1710 * ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue() - 9196380 * ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue() + 1.75607548555E11 == 0);
			}
		});
		invariants7999.add(new Invariant(7231, "12662784 * NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime - 4079213 * blockManagerInstance.heartbeatManager.stats.blockPoolUsed - 111845376 * blockManagerInstance.invalidateBlocks.startupTime + 1.1760444442128384E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (12662784 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() - 4079213 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() - 111845376 * ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue() + 1.1760444442128384E16 == 0);
			}
		});
		invariants7999.add(new Invariant(7232, "21104640 * NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime - 4079213 * blockManagerInstance.heartbeatManager.stats.capacityUsed - 186408960 * blockManagerInstance.invalidateBlocks.startupTime + 1.960074073688064E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (21104640 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() - 4079213 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() - 186408960 * ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue() + 1.960074073688064E16 == 0);
			}
		});
		invariants7999.add(new Invariant(7233, "2061 * NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime - 32633704 * blockManagerInstance.heartbeatManager.stats.nodesInService - 18204 * blockManagerInstance.invalidateBlocks.startupTime + 1.914134837586E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2061 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() - 32633704 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() - 18204 * ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue() + 1.914134837586E12 == 0);
			}
		});
		invariants7999.add(new Invariant(7234, "687 * NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime - 6068 * blockManagerInstance.invalidateBlocks.startupTime - 32633704 * blockManagerInstance.replQueueCallsSinceReset + 6.38044945862E11 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (687 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() - 6068 * ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue() - 32633704 * ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue() + 6.38044945862E11 == 0);
			}
		});
		invariants7999.add(new Invariant(7235, "2061 * NameNode.instance.namesystem.startTime - 32633704 * blockManagerInstance.heartbeatManager.stats.nodesInService - 18204 * blockManagerInstance.invalidateBlocks.startupTime - 3.566220752947026E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2061 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() - 32633704 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() - 18204 * ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue() - 3.566220752947026E15 == 0);
			}
		});
		invariants7999.add(new Invariant(7236, "687 * NameNode.instance.namesystem.startTime - 6068 * blockManagerInstance.invalidateBlocks.startupTime - 32633704 * blockManagerInstance.replQueueCallsSinceReset - 1.188740250982342E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (687 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() - 6068 * ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue() - 32633704 * ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue() - 1.188740250982342E15 == 0);
			}
		});
		invariants7999.add(new Invariant(7237, "18195 * blockManagerInstance.heartbeatManager.stats.blockPoolUsed - 6065 * blockManagerInstance.heartbeatManager.stats.capacityUsed + 196608 * blockManagerInstance.invalidateBlocks.startupTime - 2.33125330944E13 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (18195 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() - 6065 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() + 196608 * ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue() - 2.33125330944E13 == 0);
			}
		});
		invariants7999.add(new Invariant(7238, "8.1458821791E10 * blockManagerInstance.heartbeatManager.stats.nodesInService - 237143586 * blockManagerInstance.invalidateBlocks.startupTime - 12817 * blockManagerInstance.lastRedundancyCycleTS + 2.8118823577042152E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (8.1458821791E10 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() - 237143586 * ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue() - 12817 * ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() + 2.8118823577042152E16 == 0);
			}
		});
		invariants7999.add(new Invariant(7239, "DataNode.instance.dnConf.allowNonLocalLazyPersist == blockManagerInstance.shouldPostponeBlocksFromFuture"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.allowNonLocalLazyPersist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.shouldPostponeBlocksFromFuture"))).booleanValue());
			}
		});
		invariants7999.add(new Invariant(7240, "NameNode.instance.namesystem.blockDeletionIncrement == blockManagerInstance.blockIdManager.impendingGenerationStamp.LAST_RESERVED_STAMP"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.blockDeletionIncrement"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.impendingGenerationStamp.LAST_RESERVED_STAMP"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7241, "NameNode.instance.namesystem.blockDeletionIncrement == blockManagerInstance.blockIdManager.legacyGenerationStamp.LAST_RESERVED_STAMP"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.blockDeletionIncrement"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStamp.LAST_RESERVED_STAMP"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7242, "NameNode.instance.namesystem.blockDeletionIncrement == blockManagerInstance.datanodeManager.blockInvalidateLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.blockDeletionIncrement"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.blockInvalidateLimit"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7243, "NameNode.instance.namesystem.blockDeletionIncrement == blockManagerInstance.invalidateBlocks.blockInvalidateLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.blockDeletionIncrement"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.blockInvalidateLimit"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7244, "NameNode.instance.namesystem.blockDeletionIncrement == blockManagerInstance.maxNumBlocksToLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.blockDeletionIncrement"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.maxNumBlocksToLog"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7245, "NameNode.instance.namesystem.fsRunning == blockManagerInstance.datanodeManager.shouldSendCachingCommands"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.fsRunning"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.shouldSendCachingCommands"))).booleanValue());
			}
		});
		invariants7999.add(new Invariant(7246, "NameNode.instance.namesystem.fsRunning == blockManagerInstance.initializedReplQueues"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.fsRunning"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.initializedReplQueues"))).booleanValue());
			}
		});
		invariants7999.add(new Invariant(7247, "blockManagerInstance.datanodeManager.heartbeatIntervalSeconds == daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatIntervalSeconds"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants7999.add(new Invariant(7248, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.dnConf.volsConfigured) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, blockManagerInstance.datanodeManager.heartbeatIntervalSeconds-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.volsConfigured"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatIntervalSeconds"))).intValue()-1));
			}
		});
		invariants7999.add(new Invariant(7249, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.dnConf.volsConfigured) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, blockManagerInstance.defaultReplication-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.volsConfigured"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.defaultReplication"))).intValue()-1));
			}
		});
		invariants7999.add(new Invariant(7250, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache == 0 || DataNode.instance.data.cacheManager.numBlocksFailedToUncache == 1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() == 1);
			}
		});
		invariants7999.add(new Invariant(7251, "DataNode.instance.id.infoPort == 39005"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() == 39005);
			}
		});
		invariants7999.add(new Invariant(7252, "DataNode.instance.id.ipcPort == 44847"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() == 44847);
			}
		});
		invariants7999.add(new Invariant(7253, "DataNode.instance.id.nsInfo.cTime == 1731381572103L || DataNode.instance.id.nsInfo.cTime == 1731381574916L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() == 1731381572103L || ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() == 1731381574916L);
			}
		});
		invariants7999.add(new Invariant(7254, "DataNode.instance.id.nsInfo.namespaceID == 56678422 || DataNode.instance.id.nsInfo.namespaceID == 1398609070"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() == 56678422 || ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() == 1398609070);
			}
		});
		invariants7999.add(new Invariant(7255, "DataNode.instance.id.xferPort == 42537"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() == 42537);
			}
		});
		invariants7999.add(new Invariant(7256, "DataNode.instance.lastDiskErrorCheck == 117681588"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() == 117681588);
			}
		});
		invariants7999.add(new Invariant(7257, "DataNode.instance.storage.namespaceID == 56678422 || DataNode.instance.storage.namespaceID == 1398609070"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() == 56678422 || ((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() == 1398609070);
			}
		});
		invariants7999.add(new Invariant(7258, "DataNode.instance.volumeChecker.lastAllVolumesCheck == 116780989 || DataNode.instance.volumeChecker.lastAllVolumesCheck == 117678295 || DataNode.instance.volumeChecker.lastAllVolumesCheck == 117681586"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() == 116780989 || ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() == 117678295 || ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() == 117681586);
			}
		});
		invariants7999.add(new Invariant(7259, "DataNode.instance.xserver.balanceThrottler.curPeriodStart == 117677763 || DataNode.instance.xserver.balanceThrottler.curPeriodStart == 117680990"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() == 117677763 || ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() == 117680990);
			}
		});
		invariants7999.add(new Invariant(7260, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE == 106 || NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE == 110"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() == 106 || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() == 110);
			}
		});
		invariants7999.add(new Invariant(7261, "NameNode.instance.namesystem.fsImage.lastAppliedTxId == 0 || NameNode.instance.namesystem.fsImage.lastAppliedTxId == 15"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() == 15);
			}
		});
		invariants7999.add(new Invariant(7262, "NameNode.instance.namesystem.lazyPersistFileScrubberTS == 117677478 || NameNode.instance.namesystem.lazyPersistFileScrubberTS == 117680630"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() == 117677478 || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() == 117680630);
			}
		});
		invariants7999.add(new Invariant(7263, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime == 117677186 || NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime == 117680070"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() == 117677186 || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() == 117680070);
			}
		});
		invariants7999.add(new Invariant(7264, "NameNode.instance.namesystem.startTime == 1731381572277L || NameNode.instance.namesystem.startTime == 1731381575162L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() == 1731381572277L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() == 1731381575162L);
			}
		});
		invariants7999.add(new Invariant(7265, "blockManagerInstance.bmSafeMode.startTime == 0 || blockManagerInstance.bmSafeMode.startTime == 117680486"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() == 117680486);
			}
		});
		invariants7999.add(new Invariant(7266, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed >= 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() >= 0);
			}
		});
		invariants7999.add(new Invariant(7267, "blockManagerInstance.heartbeatManager.stats.capacityTotal >= 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue() >= 0);
			}
		});
		invariants7999.add(new Invariant(7268, "blockManagerInstance.heartbeatManager.stats.nodesInService >= 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() >= 0);
			}
		});
		invariants7999.add(new Invariant(7269, "blockManagerInstance.invalidateBlocks.startupTime == 117680071"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue() == 117680071);
			}
		});
		invariants7999.add(new Invariant(7270, "DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT < DataNode.instance.data.cacheManager.numBlocksFailedToUncache"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7271, "DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT < DataNode.instance.id.nsInfo.cTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7272, "DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT < DataNode.instance.id.nsInfo.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7273, "DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT < DataNode.instance.xserver.balanceThrottler.curPeriodStart"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7274, "DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT < NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7275, "DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT < NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7276, "DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7277, "DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7278, "DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7279, "DataNode.instance.NUM_CORES < DataNode.instance.xserver.balanceThrottler.curPeriodStart"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.NUM_CORES"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7280, "DataNode.instance.NUM_CORES > NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.NUM_CORES"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7281, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed % DataNode.instance.NUM_CORES == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() % ((Number)(InvariantChecker.getValue("DataNode.instance.NUM_CORES"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7282, "blockManagerInstance.heartbeatManager.stats.capacityRemaining % DataNode.instance.NUM_CORES == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() % ((Number)(InvariantChecker.getValue("DataNode.instance.NUM_CORES"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7283, "blockManagerInstance.heartbeatManager.stats.capacityTotal % DataNode.instance.NUM_CORES == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue() % ((Number)(InvariantChecker.getValue("DataNode.instance.NUM_CORES"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7284, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs % DataNode.instance.NUM_CORES == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() % ((Number)(InvariantChecker.getValue("DataNode.instance.NUM_CORES"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7285, "DataNode.instance.NUM_CORES % blockManagerInstance.heartbeatManager.stats.nodesInService == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.NUM_CORES"))).intValue() % ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7286, "DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs < DataNode.instance.xserver.balanceThrottler.curPeriodStart"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7287, "DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs % blockManagerInstance.heartbeatManager.stats.nodesInService == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs"))).intValue() % ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7288, "DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION > DataNode.instance.data.cacheManager.numBlocksFailedToUncache"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7289, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed % DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() % ((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7290, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME >= DataNode.instance.data.cacheManager.numBlocksFailedToUncache"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() >= ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7291, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME < DataNode.instance.xserver.balanceThrottler.curPeriodStart"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7292, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME > NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7293, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME > DataNode.instance.data.cacheManager.numBlocksFailedToUncache"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7294, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME < DataNode.instance.xserver.balanceThrottler.curPeriodStart"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7295, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME > NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7296, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed % DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() % ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7297, "blockManagerInstance.heartbeatManager.stats.capacityRemaining % DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() % ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7298, "blockManagerInstance.heartbeatManager.stats.capacityTotal % DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue() % ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7299, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs % DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() % ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7300, "DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS < DataNode.instance.xserver.balanceThrottler.curPeriodStart"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7301, "DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS < NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7302, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed % DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() % ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7303, "blockManagerInstance.heartbeatManager.stats.capacityRemaining % DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() % ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7304, "blockManagerInstance.heartbeatManager.stats.capacityTotal % DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue() % ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7305, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs % DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() % ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7306, "DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS % blockManagerInstance.heartbeatManager.stats.nodesInService == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS"))).intValue() % ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7307, "DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS < DataNode.instance.xserver.balanceThrottler.curPeriodStart"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7308, "DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS < NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7309, "DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS % blockManagerInstance.heartbeatManager.stats.nodesInService == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() % ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7310, "DataNode.instance.data.asyncDiskService.numDeletedBlocks % blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() % ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7311, "DataNode.instance.data.asyncDiskService.numDeletedBlocks % blockManagerInstance.heartbeatManager.stats.capacityRemaining == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() % ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7312, "DataNode.instance.data.asyncDiskService.numDeletedBlocks % blockManagerInstance.heartbeatManager.stats.capacityTotal == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() % ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7313, "DataNode.instance.data.asyncDiskService.numDeletedBlocks % blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() % ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7314, "DataNode.instance.data.asyncDiskService.numDeletedBlocks % blockManagerInstance.heartbeatManager.stats.nodesInService == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() % ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7315, "DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME >= DataNode.instance.data.cacheManager.numBlocksFailedToUncache"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME"))).intValue() >= ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7316, "DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME != NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME"))).intValue() != ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7317, "DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7318, "DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS > DataNode.instance.data.cacheManager.numBlocksFailedToUncache"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7319, "DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS < NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7320, "DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS > NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7321, "DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7322, "DataNode.instance.data.cacheManager.numBlocksCached <= DataNode.instance.data.cacheManager.numBlocksFailedToUncache"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() <= ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7323, "DataNode.instance.data.cacheManager.numBlocksCached <= NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() <= ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7324, "DataNode.instance.data.cacheManager.numBlocksCached < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7325, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < DataNode.instance.data.volsConfigured"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7326, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache <= DataNode.instance.directoryScanner.diffs.serialVersionUID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() <= ((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.diffs.serialVersionUID"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7327, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < DataNode.instance.diskBalancer.bandwidth"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.bandwidth"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7328, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < DataNode.instance.dnConf.blockReportInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportInterval"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7329, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < DataNode.instance.dnConf.bpReadyTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.bpReadyTimeout"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7330, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache >= DataNode.instance.dnConf.ibrInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() >= ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7331, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < DataNode.instance.dnConf.maxDataLength"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.maxDataLength"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7332, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < DataNode.instance.dnConf.volsConfigured"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.volsConfigured"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7333, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache <= DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() <= ((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7334, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < DataNode.instance.httpServer.HTTP_MAX_THREADS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_MAX_THREADS"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7335, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7336, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache <= DataNode.instance.volumeChecker.numSyncDatasetChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() <= ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7337, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < DataNode.instance.xserver.balanceThrottler.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.period"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7338, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < NameNode.instance.namesystem.blockDeletionIncrement"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.blockDeletionIncrement"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7339, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7340, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < NameNode.instance.namesystem.dir.inodeXAttrsLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.inodeXAttrsLimit"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7341, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7342, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7343, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7344, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < blockManagerInstance.blockReportLeaseManager.maxPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.maxPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7345, "4 * DataNode.instance.data.cacheManager.numBlocksFailedToUncache - blockManagerInstance.blockReportLeaseManager.nextId - -2147483648 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (4 * ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() - ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() - -2147483648 == 0);
			}
		});
		invariants7999.add(new Invariant(7346, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache <= blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7347, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache <= blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7348, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache <= blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7349, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache <= blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7350, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache <= blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7351, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache <= blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7352, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < blockManagerInstance.neededReconstruction.LEVEL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.LEVEL"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7353, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7354, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7355, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7356, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < blockManagerInstance.storagePolicySuite.defaultPolicyID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.storagePolicySuite.defaultPolicyID"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7357, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache >= daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0])))-1);
			}
		});
		invariants7999.add(new Invariant(7358, "DataNode.instance.data.maxDataLength != DataNode.instance.id.nsInfo.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.maxDataLength"))).intValue() != ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7359, "DataNode.instance.data.maxDataLength != DataNode.instance.storage.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.maxDataLength"))).intValue() != ((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7360, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed % DataNode.instance.data.smallBufferSize == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() % ((Number)(InvariantChecker.getValue("DataNode.instance.data.smallBufferSize"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7361, "blockManagerInstance.heartbeatManager.stats.capacityRemaining % DataNode.instance.data.smallBufferSize == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() % ((Number)(InvariantChecker.getValue("DataNode.instance.data.smallBufferSize"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7362, "blockManagerInstance.heartbeatManager.stats.capacityTotal % DataNode.instance.data.smallBufferSize == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue() % ((Number)(InvariantChecker.getValue("DataNode.instance.data.smallBufferSize"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7363, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs % DataNode.instance.data.smallBufferSize == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() % ((Number)(InvariantChecker.getValue("DataNode.instance.data.smallBufferSize"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7364, "DataNode.instance.data.volsConfigured < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7365, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed % DataNode.instance.data.volsConfigured == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() % ((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7366, "blockManagerInstance.heartbeatManager.stats.capacityRemaining % DataNode.instance.data.volsConfigured == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() % ((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7367, "blockManagerInstance.heartbeatManager.stats.capacityTotal % DataNode.instance.data.volsConfigured == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue() % ((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7368, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs % DataNode.instance.data.volsConfigured == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() % ((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7369, "DataNode.instance.directoryScanner.MILLIS_PER_SECOND < DataNode.instance.xserver.balanceThrottler.curPeriodStart"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.MILLIS_PER_SECOND"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7370, "DataNode.instance.directoryScanner.MILLIS_PER_SECOND % blockManagerInstance.heartbeatManager.stats.nodesInService == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.MILLIS_PER_SECOND"))).intValue() % ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7371, "DataNode.instance.directoryScanner.diffs.serialVersionUID != NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.diffs.serialVersionUID"))).intValue() != ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7372, "DataNode.instance.directoryScanner.diffs.serialVersionUID < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.diffs.serialVersionUID"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7373, "DataNode.instance.directoryScanner.scanPeriodMsecs < DataNode.instance.xserver.balanceThrottler.curPeriodStart"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.scanPeriodMsecs"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7374, "DataNode.instance.directoryScanner.scanPeriodMsecs % blockManagerInstance.heartbeatManager.stats.nodesInService == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.scanPeriodMsecs"))).intValue() % ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7375, "DataNode.instance.diskBalancer.bandwidth < DataNode.instance.xserver.balanceThrottler.curPeriodStart"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.bandwidth"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7376, "DataNode.instance.diskBalancer.bandwidth > NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.bandwidth"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7377, "DataNode.instance.diskBalancer.planValidityInterval > DataNode.instance.id.nsInfo.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.planValidityInterval"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7378, "DataNode.instance.diskBalancer.planValidityInterval > DataNode.instance.storage.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.planValidityInterval"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7379, "DataNode.instance.diskBalancer.planValidityInterval < DataNode.instance.xserver.balanceThrottler.curPeriodStart"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.planValidityInterval"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7380, "DataNode.instance.diskBalancer.planValidityInterval % blockManagerInstance.heartbeatManager.stats.nodesInService == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.planValidityInterval"))).intValue() % ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7381, "DataNode.instance.dnConf.blockReportInterval < DataNode.instance.storage.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportInterval"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7382, "DataNode.instance.dnConf.blockReportInterval > NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportInterval"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7383, "DataNode.instance.dnConf.blockReportInterval < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportInterval"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7384, "DataNode.instance.dnConf.blockReportSplitThreshold < DataNode.instance.storage.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportSplitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7385, "DataNode.instance.dnConf.bpReadyTimeout < DataNode.instance.storage.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.bpReadyTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7386, "DataNode.instance.dnConf.bpReadyTimeout > NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.bpReadyTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7387, "DataNode.instance.dnConf.cacheReportInterval < DataNode.instance.storage.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.cacheReportInterval"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7388, "DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs < DataNode.instance.storage.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7389, "DataNode.instance.dnConf.heartBeatInterval < DataNode.instance.storage.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.heartBeatInterval"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7390, "DataNode.instance.dnConf.ibrInterval < DataNode.instance.storage.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7391, "DataNode.instance.dnConf.ibrInterval <= NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() <= ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7392, "DataNode.instance.dnConf.ibrInterval < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7393, "DataNode.instance.dnConf.lifelineIntervalMs < DataNode.instance.storage.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.lifelineIntervalMs"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7394, "DataNode.instance.dnConf.maxDataLength != DataNode.instance.id.nsInfo.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.maxDataLength"))).intValue() != ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7395, "DataNode.instance.dnConf.maxDataLength > NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.maxDataLength"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7396, "DataNode.instance.dnConf.maxDataLength < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.maxDataLength"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7397, "DataNode.instance.dnConf.outliersReportIntervalMs < DataNode.instance.storage.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.outliersReportIntervalMs"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7398, "DataNode.instance.dnConf.readaheadLength < DataNode.instance.storage.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.readaheadLength"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7399, "DataNode.instance.dnConf.restartReplicaExpiry < DataNode.instance.storage.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.restartReplicaExpiry"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7400, "DataNode.instance.dnConf.socketKeepaliveTimeout < DataNode.instance.storage.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketKeepaliveTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7401, "DataNode.instance.dnConf.socketTimeout < DataNode.instance.storage.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7402, "DataNode.instance.dnConf.socketWriteTimeout < DataNode.instance.storage.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketWriteTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7403, "DataNode.instance.dnConf.volsConfigured != NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.volsConfigured"))).intValue() != ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7404, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed % DataNode.instance.dnConf.volsConfigured == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() % ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.volsConfigured"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7405, "blockManagerInstance.heartbeatManager.stats.capacityRemaining % DataNode.instance.dnConf.volsConfigured == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() % ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.volsConfigured"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7406, "blockManagerInstance.heartbeatManager.stats.capacityTotal % DataNode.instance.dnConf.volsConfigured == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue() % ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.volsConfigured"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7407, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs % DataNode.instance.dnConf.volsConfigured == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() % ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.volsConfigured"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7408, "DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS < DataNode.instance.storage.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7409, "DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS != NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue() != ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7410, "DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7411, "DataNode.instance.httpServer.HTTP_MAX_THREADS < DataNode.instance.storage.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_MAX_THREADS"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7412, "DataNode.instance.httpServer.HTTP_MAX_THREADS != NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_MAX_THREADS"))).intValue() != ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7413, "DataNode.instance.httpServer.HTTP_MAX_THREADS < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_MAX_THREADS"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7414, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed % DataNode.instance.httpServer.HTTP_MAX_THREADS == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() % ((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_MAX_THREADS"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7415, "blockManagerInstance.heartbeatManager.stats.capacityRemaining % DataNode.instance.httpServer.HTTP_MAX_THREADS == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() % ((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_MAX_THREADS"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7416, "blockManagerInstance.heartbeatManager.stats.capacityTotal % DataNode.instance.httpServer.HTTP_MAX_THREADS == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue() % ((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_MAX_THREADS"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7417, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs % DataNode.instance.httpServer.HTTP_MAX_THREADS == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() % ((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_MAX_THREADS"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7418, "DataNode.instance.httpServer.HTTP_MAX_THREADS >= blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_MAX_THREADS"))).intValue() >= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7419, "DataNode.instance.id.infoPort < DataNode.instance.xserver.balanceThrottler.curPeriodStart"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7420, "DataNode.instance.id.ipcPort < DataNode.instance.xserver.balanceThrottler.curPeriodStart"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7421, "DataNode.instance.id.nsInfo.cTime > NameNode.instance.namesystem.blockDeletionIncrement"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.blockDeletionIncrement"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7422, "DataNode.instance.id.nsInfo.cTime > blockManagerInstance.datanodeManager.heartbeatIntervalSeconds"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatIntervalSeconds"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7423, "DataNode.instance.id.nsInfo.namespaceID < DataNode.instance.lastDiskErrorCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7424, "DataNode.instance.id.nsInfo.namespaceID != DataNode.instance.volumeChecker.lastAllVolumesCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7425, "DataNode.instance.id.nsInfo.namespaceID != DataNode.instance.xserver.balanceThrottler.curPeriodStart"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7426, "DataNode.instance.id.nsInfo.namespaceID != DataNode.instance.xserver.estimateBlockSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.estimateBlockSize"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7427, "DataNode.instance.id.nsInfo.namespaceID > NameNode.instance.namesystem.blockDeletionIncrement"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.blockDeletionIncrement"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7428, "DataNode.instance.id.nsInfo.namespaceID != NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7429, "DataNode.instance.id.nsInfo.namespaceID != NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7430, "DataNode.instance.id.nsInfo.namespaceID != NameNode.instance.namesystem.nnResourceChecker.duReserved"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.nnResourceChecker.duReserved"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7431, "DataNode.instance.id.nsInfo.namespaceID != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7432, "DataNode.instance.id.nsInfo.namespaceID > blockManagerInstance.datanodeManager.heartbeatIntervalSeconds"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatIntervalSeconds"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7433, "DataNode.instance.id.nsInfo.namespaceID != blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7434, "DataNode.instance.id.xferPort < DataNode.instance.xserver.balanceThrottler.curPeriodStart"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7435, "DataNode.instance.lastDiskErrorCheck > DataNode.instance.storage.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7436, "DataNode.instance.lastDiskErrorCheck > DataNode.instance.xserver.balanceThrottler.curPeriodStart"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7437, "DataNode.instance.lastDiskErrorCheck > NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7438, "DataNode.instance.lastDiskErrorCheck > NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7439, "DataNode.instance.lastDiskErrorCheck % blockManagerInstance.heartbeatManager.stats.nodesInService == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() % ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7440, "DataNode.instance.shortCircuitRegistry.SHM_LENGTH < DataNode.instance.xserver.balanceThrottler.curPeriodStart"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.shortCircuitRegistry.SHM_LENGTH"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7441, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed % DataNode.instance.shortCircuitRegistry.SHM_LENGTH == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() % ((Number)(InvariantChecker.getValue("DataNode.instance.shortCircuitRegistry.SHM_LENGTH"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7442, "blockManagerInstance.heartbeatManager.stats.capacityRemaining % DataNode.instance.shortCircuitRegistry.SHM_LENGTH == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() % ((Number)(InvariantChecker.getValue("DataNode.instance.shortCircuitRegistry.SHM_LENGTH"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7443, "blockManagerInstance.heartbeatManager.stats.capacityTotal % DataNode.instance.shortCircuitRegistry.SHM_LENGTH == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue() % ((Number)(InvariantChecker.getValue("DataNode.instance.shortCircuitRegistry.SHM_LENGTH"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7444, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs % DataNode.instance.shortCircuitRegistry.SHM_LENGTH == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() % ((Number)(InvariantChecker.getValue("DataNode.instance.shortCircuitRegistry.SHM_LENGTH"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7445, "DataNode.instance.shortCircuitRegistry.SHM_LENGTH % blockManagerInstance.heartbeatManager.stats.nodesInService == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.shortCircuitRegistry.SHM_LENGTH"))).intValue() % ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7446, "DataNode.instance.storage.layoutVersion < DataNode.instance.storage.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7447, "DataNode.instance.storage.namespaceID > DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7448, "DataNode.instance.storage.namespaceID > DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7449, "DataNode.instance.storage.namespaceID > DataNode.instance.xserver.balanceThrottler.bytesPerPeriod"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.bytesPerPeriod"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7450, "DataNode.instance.storage.namespaceID > DataNode.instance.xserver.balanceThrottler.maxThreads"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.maxThreads"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7451, "DataNode.instance.storage.namespaceID > DataNode.instance.xserver.balanceThrottler.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.period"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7452, "DataNode.instance.storage.namespaceID > DataNode.instance.xserver.balanceThrottler.periodExtension"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.periodExtension"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7453, "DataNode.instance.storage.namespaceID > DataNode.instance.xserver.maxXceiverCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.maxXceiverCount"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7454, "DataNode.instance.storage.namespaceID > NameNode.instance.DEFAULT_PORT"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.DEFAULT_PORT"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7455, "DataNode.instance.storage.namespaceID > NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7456, "DataNode.instance.storage.namespaceID > NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7457, "DataNode.instance.storage.namespaceID > NameNode.instance.namesystem.blockDeletionIncrement"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.blockDeletionIncrement"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7458, "DataNode.instance.storage.namespaceID > NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7459, "DataNode.instance.storage.namespaceID > NameNode.instance.namesystem.cacheManager.scanIntervalMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.scanIntervalMs"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7460, "DataNode.instance.storage.namespaceID > NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7461, "DataNode.instance.storage.namespaceID > NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7462, "DataNode.instance.storage.namespaceID > NameNode.instance.namesystem.dir.inodeXAttrsLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.inodeXAttrsLimit"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7463, "DataNode.instance.storage.namespaceID > NameNode.instance.namesystem.dir.maxComponentLength"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxComponentLength"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7464, "DataNode.instance.storage.namespaceID > NameNode.instance.namesystem.dir.maxDirItems"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxDirItems"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7465, "DataNode.instance.storage.namespaceID > NameNode.instance.namesystem.dir.xattrMaxSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.xattrMaxSize"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7466, "DataNode.instance.storage.namespaceID > NameNode.instance.namesystem.editLogRollerThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogRollerThreshold"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7467, "DataNode.instance.storage.namespaceID > NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7468, "DataNode.instance.storage.namespaceID > NameNode.instance.namesystem.leaseManager.hardLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.hardLimit"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7469, "DataNode.instance.storage.namespaceID > NameNode.instance.namesystem.leaseRecheckIntervalMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseRecheckIntervalMs"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7470, "DataNode.instance.storage.namespaceID > NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7471, "DataNode.instance.storage.namespaceID > NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7472, "DataNode.instance.storage.namespaceID > NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7473, "DataNode.instance.storage.namespaceID > blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7474, "DataNode.instance.storage.namespaceID > blockManagerInstance.blockReportLeaseManager.maxPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.maxPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7475, "DataNode.instance.storage.namespaceID > blockManagerInstance.blocksMap.capacity"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blocksMap.capacity"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7476, "DataNode.instance.storage.namespaceID > blockManagerInstance.datanodeManager.defaultInfoPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoPort"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7477, "DataNode.instance.storage.namespaceID > blockManagerInstance.datanodeManager.defaultInfoSecurePort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoSecurePort"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7478, "DataNode.instance.storage.namespaceID > blockManagerInstance.datanodeManager.defaultIpcPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultIpcPort"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7479, "DataNode.instance.storage.namespaceID > blockManagerInstance.datanodeManager.defaultXferPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultXferPort"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7480, "DataNode.instance.storage.namespaceID > blockManagerInstance.datanodeManager.heartbeatExpireInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatExpireInterval"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7481, "DataNode.instance.storage.namespaceID > blockManagerInstance.datanodeManager.heartbeatIntervalSeconds"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatIntervalSeconds"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7482, "DataNode.instance.storage.namespaceID > blockManagerInstance.neededReconstruction.LEVEL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.LEVEL"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7483, "DataNode.instance.storage.namespaceID > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7484, "DataNode.instance.storage.namespaceID > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7485, "DataNode.instance.storage.namespaceID > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7486, "DataNode.instance.storage.namespaceID > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7487, "DataNode.instance.storage.namespaceID > blockManagerInstance.replQueueResetToHeadThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueResetToHeadThreshold"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7488, "DataNode.instance.storage.namespaceID > blockManagerInstance.storagePolicySuite.defaultPolicyID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.storagePolicySuite.defaultPolicyID"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7489, "DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks > NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7490, "DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7491, "2 * DataNode.instance.volumeChecker.numSyncDatasetChecks + blockManagerInstance.blockReportLeaseManager.nextId + 2147483647 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() + ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() + 2147483647 == 0);
			}
		});
		invariants7999.add(new Invariant(7492, "DataNode.instance.xserver.balanceThrottler.curPeriodStart > NameNode.instance.namesystem.blockDeletionIncrement"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.blockDeletionIncrement"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7493, "DataNode.instance.xserver.balanceThrottler.curPeriodStart > NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7494, "DataNode.instance.xserver.balanceThrottler.curPeriodStart > blockManagerInstance.datanodeManager.heartbeatIntervalSeconds"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatIntervalSeconds"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7495, "DataNode.instance.xserver.balanceThrottler.curPeriodStart > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7496, "DataNode.instance.xserver.balanceThrottler.maxThreads < NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.maxThreads"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7497, "DataNode.instance.xserver.balanceThrottler.maxThreads > NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.maxThreads"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7498, "DataNode.instance.xserver.balanceThrottler.period > NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.period"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7499, "DataNode.instance.xserver.balanceThrottler.period < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.period"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7500, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed % DataNode.instance.xserver.maxXceiverCount == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() % ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.maxXceiverCount"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7501, "blockManagerInstance.heartbeatManager.stats.capacityRemaining % DataNode.instance.xserver.maxXceiverCount == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() % ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.maxXceiverCount"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7502, "blockManagerInstance.heartbeatManager.stats.capacityTotal % DataNode.instance.xserver.maxXceiverCount == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue() % ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.maxXceiverCount"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7503, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs % DataNode.instance.xserver.maxXceiverCount == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() % ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.maxXceiverCount"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7504, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE < NameNode.instance.namesystem.blockDeletionIncrement"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.blockDeletionIncrement"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7505, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE > NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7506, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE > NameNode.instance.namesystem.dir.inodeXAttrsLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.inodeXAttrsLimit"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7507, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE > NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7508, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE > blockManagerInstance.datanodeManager.heartbeatIntervalSeconds"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatIntervalSeconds"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7509, "NameNode.instance.namesystem.blockDeletionIncrement > NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.blockDeletionIncrement"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7510, "NameNode.instance.namesystem.blockDeletionIncrement < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.blockDeletionIncrement"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7511, "NameNode.instance.namesystem.blockDeletionIncrement < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.blockDeletionIncrement"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7512, "NameNode.instance.namesystem.blockDeletionIncrement < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.blockDeletionIncrement"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7513, "NameNode.instance.namesystem.blockDeletionIncrement != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.blockDeletionIncrement"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7514, "NameNode.instance.namesystem.cacheManager.scanIntervalMs > NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.scanIntervalMs"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7515, "NameNode.instance.namesystem.cacheManager.scanIntervalMs < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.scanIntervalMs"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7516, "NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE != NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE"))).intValue() != ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7517, "NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7518, "NameNode.instance.namesystem.dir.inodeXAttrsLimit > NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.inodeXAttrsLimit"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7519, "NameNode.instance.namesystem.dir.inodeXAttrsLimit < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.inodeXAttrsLimit"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7520, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed % NameNode.instance.namesystem.dir.inodeXAttrsLimit == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() % ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.inodeXAttrsLimit"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7521, "blockManagerInstance.heartbeatManager.stats.capacityRemaining % NameNode.instance.namesystem.dir.inodeXAttrsLimit == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() % ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.inodeXAttrsLimit"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7522, "blockManagerInstance.heartbeatManager.stats.capacityTotal % NameNode.instance.namesystem.dir.inodeXAttrsLimit == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue() % ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.inodeXAttrsLimit"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7523, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs % NameNode.instance.namesystem.dir.inodeXAttrsLimit == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() % ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.inodeXAttrsLimit"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7524, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed % NameNode.instance.namesystem.dir.xattrMaxSize == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() % ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.xattrMaxSize"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7525, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs % NameNode.instance.namesystem.dir.xattrMaxSize == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() % ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.xattrMaxSize"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7526, "NameNode.instance.namesystem.fsImage.lastAppliedTxId < NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7527, "NameNode.instance.namesystem.fsImage.lastAppliedTxId < NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7528, "NameNode.instance.namesystem.fsImage.lastAppliedTxId < NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7529, "NameNode.instance.namesystem.fsImage.lastAppliedTxId < blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7530, "NameNode.instance.namesystem.fsImage.lastAppliedTxId > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7531, "NameNode.instance.namesystem.fsImage.lastAppliedTxId != blockManagerInstance.datanodeManager.heartbeatIntervalSeconds"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatIntervalSeconds"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7532, "NameNode.instance.namesystem.fsImage.lastAppliedTxId < blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7533, "NameNode.instance.namesystem.fsImage.lastAppliedTxId <= blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7534, "NameNode.instance.namesystem.fsImage.lastAppliedTxId >= daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0])))-1);
			}
		});
		invariants7999.add(new Invariant(7535, "NameNode.instance.namesystem.lazyPersistFileScrubberTS > NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7536, "NameNode.instance.namesystem.lazyPersistFileScrubberTS > blockManagerInstance.datanodeManager.heartbeatIntervalSeconds"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatIntervalSeconds"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7537, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed % NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() % ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7538, "blockManagerInstance.heartbeatManager.stats.capacityRemaining % NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() % ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7539, "blockManagerInstance.heartbeatManager.stats.capacityTotal % NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue() % ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7540, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs % NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() % ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7541, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime > blockManagerInstance.datanodeManager.heartbeatIntervalSeconds"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatIntervalSeconds"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7542, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed % NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() % ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7543, "NameNode.instance.namesystem.startTime > blockManagerInstance.datanodeManager.heartbeatIntervalSeconds"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatIntervalSeconds"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7544, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed % blockManagerInstance.blockReportLeaseManager.maxPending == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() % ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.maxPending"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7545, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed % blockManagerInstance.datanodeManager.heartbeatIntervalSeconds == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() % ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatIntervalSeconds"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7546, "16369651 * blockManagerInstance.heartbeatManager.stats.blockPoolUsed - 6 * blockManagerInstance.heartbeatManager.stats.capacityTotal == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (16369651 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() - 6 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7547, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed - 49152 * blockManagerInstance.heartbeatManager.stats.nodesInService == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() - 49152 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7548, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed % blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() % ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7549, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed % blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() % ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7550, "blockManagerInstance.heartbeatManager.stats.capacityRemaining % blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() % ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7551, "blockManagerInstance.heartbeatManager.stats.capacityTotal - -2147483648 * blockManagerInstance.heartbeatManager.stats.nodesInService == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue() - -2147483648 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7552, "blockManagerInstance.heartbeatManager.stats.capacityTotal % blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue() % ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7553, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs % blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() % ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7554, "2813 * DataNode.instance.data.cacheManager.numBlocksFailedToUncache - DataNode.instance.id.nsInfo.cTime + 2813 * daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE) + 1.731381572103E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2813 * ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() - ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() + 2813 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))) + 1.731381572103E12 == 0);
			}
		});
		invariants7999.add(new Invariant(7555, "2813 * DataNode.instance.data.cacheManager.numBlocksFailedToUncache - DataNode.instance.id.nsInfo.cTime + 2813 * daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)-1 + 1.731381574916E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2813 * ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() - ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() + 2813 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0])))-1 + 1.731381574916E12 == 0);
			}
		});
		invariants7999.add(new Invariant(7556, "3291 * DataNode.instance.data.cacheManager.numBlocksFailedToUncache - DataNode.instance.volumeChecker.lastAllVolumesCheck + 3291 * daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE) + 117678295 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (3291 * ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() - ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() + 3291 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))) + 117678295 == 0);
			}
		});
		invariants7999.add(new Invariant(7557, "3291 * DataNode.instance.data.cacheManager.numBlocksFailedToUncache - DataNode.instance.volumeChecker.lastAllVolumesCheck + 3291 * daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)-1 + 117681586 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (3291 * ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() - ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() + 3291 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0])))-1 + 117681586 == 0);
			}
		});
		invariants7999.add(new Invariant(7558, "3227 * DataNode.instance.data.cacheManager.numBlocksFailedToUncache - DataNode.instance.xserver.balanceThrottler.curPeriodStart + 3227 * daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE) + 117677763 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (3227 * ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() - ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() + 3227 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))) + 117677763 == 0);
			}
		});
		invariants7999.add(new Invariant(7559, "3227 * DataNode.instance.data.cacheManager.numBlocksFailedToUncache - DataNode.instance.xserver.balanceThrottler.curPeriodStart + 3227 * daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)-1 + 117680990 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (3227 * ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() - ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() + 3227 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0])))-1 + 117680990 == 0);
			}
		});
		invariants7999.add(new Invariant(7560, "894884714 * DataNode.instance.data.cacheManager.numBlocksFailedToUncache + 1019900951 * NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE - 2 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos + 2.3525085306088E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (894884714 * ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() + 1019900951 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() - 2 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() + 2.3525085306088E14 == 0);
			}
		});
		invariants7999.add(new Invariant(7561, "6.711635355E9 * DataNode.instance.data.cacheManager.numBlocksFailedToUncache - 2039801902 * NameNode.instance.namesystem.fsImage.lastAppliedTxId - 15 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos + 1.765222816241175E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (6.711635355E9 * ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() - 2039801902 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() - 15 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() + 1.765222816241175E15 == 0);
			}
		});
		invariants7999.add(new Invariant(7562, "3152 * DataNode.instance.data.cacheManager.numBlocksFailedToUncache - NameNode.instance.namesystem.lazyPersistFileScrubberTS + 3152 * daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE) + 117677478 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (3152 * ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() - ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() + 3152 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))) + 117677478 == 0);
			}
		});
		invariants7999.add(new Invariant(7563, "3152 * DataNode.instance.data.cacheManager.numBlocksFailedToUncache - NameNode.instance.namesystem.lazyPersistFileScrubberTS + 3152 * daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)-1 + 117680630 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (3152 * ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() - ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() + 3152 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0])))-1 + 117680630 == 0);
			}
		});
		invariants7999.add(new Invariant(7564, "2884 * DataNode.instance.data.cacheManager.numBlocksFailedToUncache - NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime + 2884 * daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE) + 117677186 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2884 * ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() - ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() + 2884 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))) + 117677186 == 0);
			}
		});
		invariants7999.add(new Invariant(7565, "2884 * DataNode.instance.data.cacheManager.numBlocksFailedToUncache - NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime + 2884 * daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)-1 + 117680070 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2884 * ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() - ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() + 2884 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0])))-1 + 117680070 == 0);
			}
		});
		invariants7999.add(new Invariant(7566, "2885 * DataNode.instance.data.cacheManager.numBlocksFailedToUncache - NameNode.instance.namesystem.startTime + 2885 * daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE) + 1.731381572277E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2885 * ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() - ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() + 2885 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))) + 1.731381572277E12 == 0);
			}
		});
		invariants7999.add(new Invariant(7567, "2885 * DataNode.instance.data.cacheManager.numBlocksFailedToUncache - NameNode.instance.namesystem.startTime + 2885 * daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)-1 + 1.731381575162E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2885 * ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() - ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() + 2885 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0])))-1 + 1.731381575162E12 == 0);
			}
		});
		invariants7999.add(new Invariant(7568, "1781721000 * DataNode.instance.volumeChecker.numSyncDatasetChecks + 1019900951 * NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE - 2 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos + 2.3524907133988E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (1781721000 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() + 1019900951 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() - 2 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() + 2.3524907133988E14 == 0);
			}
		});
		invariants7999.add(new Invariant(7569, "1.33629075E10 * DataNode.instance.volumeChecker.numSyncDatasetChecks - 2039801902 * NameNode.instance.namesystem.fsImage.lastAppliedTxId - 15 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos + 1.765209453333675E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (1.33629075E10 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() - 2039801902 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() - 15 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() + 1.765209453333675E15 == 0);
			}
		});
		invariants7999.add(new Invariant(7570, "3.114927529984E13 * DataNode.instance.volumeChecker.numSyncDatasetChecks + 16384 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 15400113 * blockManagerInstance.heartbeatManager.stats.blockPoolUsed - 1.92809177058063155E18 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (3.114927529984E13 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() + 16384 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 15400113 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() - 1.92809177058063155E18 == 0);
			}
		});
		invariants7999.add(new Invariant(7571, "1148941402 * DataNode.instance.volumeChecker.numSyncDatasetChecks + NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 296953500 * blockManagerInstance.heartbeatManager.stats.nodesInService - 1.17680630222245E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (1148941402 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() + ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 296953500 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() - 1.17680630222245E14 == 0);
			}
		});
		invariants7999.add(new Invariant(7572, "164134486 * DataNode.instance.xserver.balanceThrottler.curPeriodStart - 461 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos + 1.368955635E11 * blockManagerInstance.heartbeatManager.stats.nodesInService + 3.4935261726833804E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (164134486 * ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() - 461 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() + 1.368955635E11 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() + 3.4935261726833804E16 == 0);
			}
		});
		invariants7999.add(new Invariant(7573, "574470701 * NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE - 2 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos + 593907000 * blockManagerInstance.heartbeatManager.stats.nodesInService + 2.3529806866738E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (574470701 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() - 2 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() + 593907000 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() + 2.3529806866738E14 == 0);
			}
		});
		invariants7999.add(new Invariant(7574, "1148941402 * NameNode.instance.namesystem.fsImage.lastAppliedTxId + 15 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 4.4543025E9 * blockManagerInstance.heartbeatManager.stats.nodesInService - 1.765209453333675E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (1148941402 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() + 15 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 4.4543025E9 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() - 1.765209453333675E15 == 0);
			}
		});
		invariants7999.add(new Invariant(7575, "1576 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 574470701 * NameNode.instance.namesystem.lazyPersistFileScrubberTS - 4.67998716E11 * blockManagerInstance.heartbeatManager.stats.nodesInService - 1.1786059922003648E17 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (1576 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 574470701 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() - 4.67998716E11 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() - 1.1786059922003648E17 == 0);
			}
		});
		invariants7999.add(new Invariant(7576, "206 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 82067243 * NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime - 6.1172421E10 * blockManagerInstance.heartbeatManager.stats.nodesInService - 1.458453092483546E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (206 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 82067243 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() - 6.1172421E10 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() - 1.458453092483546E16 == 0);
			}
		});
		invariants7999.add(new Invariant(7577, "DataNode.instance.id.infoPort == 34369"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() == 34369);
			}
		});
		invariants7999.add(new Invariant(7578, "DataNode.instance.id.ipcPort == 38305"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() == 38305);
			}
		});
		invariants7999.add(new Invariant(7579, "DataNode.instance.id.nsInfo.cTime == 1731381540746L || DataNode.instance.id.nsInfo.cTime == 1731381543964L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() == 1731381540746L || ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() == 1731381543964L);
			}
		});
		invariants7999.add(new Invariant(7580, "DataNode.instance.id.nsInfo.namespaceID == 331602514 || DataNode.instance.id.nsInfo.namespaceID == 900269145"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() == 331602514 || ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() == 900269145);
			}
		});
		invariants7999.add(new Invariant(7581, "DataNode.instance.id.xferPort == 41539"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() == 41539);
			}
		});
		invariants7999.add(new Invariant(7582, "DataNode.instance.lastDiskErrorCheck == 117650267"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() == 117650267);
			}
		});
		invariants7999.add(new Invariant(7583, "DataNode.instance.storage.namespaceID == 0 || DataNode.instance.storage.namespaceID == 331602514 || DataNode.instance.storage.namespaceID == 900269145"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() == 331602514 || ((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() == 900269145);
			}
		});
		invariants7999.add(new Invariant(7584, "DataNode.instance.volumeChecker.lastAllVolumesCheck == 116749682 || DataNode.instance.volumeChecker.lastAllVolumesCheck == 117647123 || DataNode.instance.volumeChecker.lastAllVolumesCheck == 117650264"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() == 116749682 || ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() == 117647123 || ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() == 117650264);
			}
		});
		invariants7999.add(new Invariant(7585, "DataNode.instance.xserver.balanceThrottler.curPeriodStart == 117646544 || DataNode.instance.xserver.balanceThrottler.curPeriodStart == 117649683"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() == 117646544 || ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() == 117649683);
			}
		});
		invariants7999.add(new Invariant(7586, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE == 58 || NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE == 62"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() == 58 || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() == 62);
			}
		});
		invariants7999.add(new Invariant(7587, "NameNode.instance.namesystem.fsImage.lastAppliedTxId == 0 || NameNode.instance.namesystem.fsImage.lastAppliedTxId == 10"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() == 10);
			}
		});
		invariants7999.add(new Invariant(7588, "NameNode.instance.namesystem.lazyPersistFileScrubberTS == 117646267 || NameNode.instance.namesystem.lazyPersistFileScrubberTS == 117649432"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() == 117646267 || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() == 117649432);
			}
		});
		invariants7999.add(new Invariant(7589, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime == 117645875 || NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime == 117649076"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() == 117645875 || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() == 117649076);
			}
		});
		invariants7999.add(new Invariant(7590, "NameNode.instance.namesystem.startTime == 1731381540967L || NameNode.instance.namesystem.startTime == 1731381544168L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() == 1731381540967L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() == 1731381544168L);
			}
		});
		invariants7999.add(new Invariant(7591, "blockManagerInstance.bmSafeMode.startTime == 0 || blockManagerInstance.bmSafeMode.startTime == 117649366"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() == 117649366);
			}
		});
		invariants7999.add(new Invariant(7592, "blockManagerInstance.invalidateBlocks.startupTime == 117649077"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue() == 117649077);
			}
		});
		invariants7999.add(new Invariant(7593, "DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS != NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() != ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7594, "blockManagerInstance.heartbeatManager.stats.capacityRemaining % DataNode.instance.diskBalancer.bandwidth == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() % ((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.bandwidth"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7595, "DataNode.instance.id.nsInfo.namespaceID < blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7596, "DataNode.instance.storage.layoutVersion <= NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() <= ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7597, "DataNode.instance.storage.namespaceID >= NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() >= ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7598, "DataNode.instance.storage.namespaceID < blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7599, "2 * DataNode.instance.volumeChecker.numSyncDatasetChecks + blockManagerInstance.blockReportLeaseManager.nextId - -2147483648 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() + ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() - -2147483648 == 0);
			}
		});
		invariants7999.add(new Invariant(7600, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE - 2 * blockManagerInstance.blockReportLeaseManager.nextId + 2147483647 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() - 2 * ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() + 2147483647 == 0);
			}
		});
		invariants7999.add(new Invariant(7601, "NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE >= NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE"))).intValue() >= ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7602, "NameNode.instance.namesystem.fsImage.lastAppliedTxId < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7603, "NameNode.instance.namesystem.fsImage.lastAppliedTxId < blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7604, "NameNode.instance.namesystem.fsImage.lastAppliedTxId < blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7605, "blockManagerInstance.blockReportLeaseManager.nextId - blockManagerInstance.heartbeatManager.stats.nodesInService - -2147483648 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() - ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() - -2147483648 == 0);
			}
		});
		invariants7999.add(new Invariant(7606, "246657322 * DataNode.instance.storage.layoutVersion + 2.720254814E10 * DataNode.instance.volumeChecker.numSyncDatasetChecks + 19 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 2.235339224525136E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (246657322 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() + 2.720254814E10 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() + 19 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 2.235339224525136E15 == 0);
			}
		});
		invariants7999.add(new Invariant(7607, "102858752 * DataNode.instance.storage.layoutVersion - 1867776 * DataNode.instance.xserver.balanceThrottler.curPeriodStart + 59641 * blockManagerInstance.heartbeatManager.stats.blockPoolUsed + 2.19743254315008E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (102858752 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() - 1867776 * ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() + 59641 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() + 2.19743254315008E14 == 0);
			}
		});
		invariants7999.add(new Invariant(7608, "6278 * DataNode.instance.storage.layoutVersion - 114 * DataNode.instance.xserver.balanceThrottler.curPeriodStart + 178923 * blockManagerInstance.heartbeatManager.stats.nodesInService + 1.3412063862E10 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (6278 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() - 114 * ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() + 178923 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() + 1.3412063862E10 == 0);
			}
		});
		invariants7999.add(new Invariant(7609, "246657322 * DataNode.instance.storage.layoutVersion - 6.800637035E9 * NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE + 19 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 2.234917585028966E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (246657322 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() - 6.800637035E9 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() + 19 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 2.234917585028966E15 == 0);
			}
		});
		invariants7999.add(new Invariant(7610, "246657322 * DataNode.instance.storage.layoutVersion + 2.720254814E9 * NameNode.instance.namesystem.fsImage.lastAppliedTxId + 19 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 2.235339224525136E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (246657322 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() + 2.720254814E9 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() + 19 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 2.235339224525136E15 == 0);
			}
		});
		invariants7999.add(new Invariant(7611, "36407426 * DataNode.instance.storage.layoutVersion - 3 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos + 2.14756959E9 * blockManagerInstance.heartbeatManager.stats.nodesInService + 3.52948298609232E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (36407426 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() - 3 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() + 2.14756959E9 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() + 3.52948298609232E14 == 0);
			}
		});
		invariants7999.add(new Invariant(7612, "34570240 * DataNode.instance.storage.layoutVersion - 622592 * NameNode.instance.namesystem.lazyPersistFileScrubberTS + 20045 * blockManagerInstance.heartbeatManager.stats.blockPoolUsed + 7.3247595167744E13 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (34570240 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() - 622592 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() + 20045 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() + 7.3247595167744E13 == 0);
			}
		});
		invariants7999.add(new Invariant(7613, "2110 * DataNode.instance.storage.layoutVersion - 38 * NameNode.instance.namesystem.lazyPersistFileScrubberTS + 60135 * blockManagerInstance.heartbeatManager.stats.nodesInService + 4.470678416E9 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2110 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() - 38 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() + 60135 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() + 4.470678416E9 == 0);
			}
		});
		invariants7999.add(new Invariant(7614, "34963456 * DataNode.instance.storage.layoutVersion - 622592 * NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime + 20273 * blockManagerInstance.heartbeatManager.stats.blockPoolUsed + 7.3247373524992E13 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (34963456 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() - 622592 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() + 20273 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() + 7.3247373524992E13 == 0);
			}
		});
		invariants7999.add(new Invariant(7615, "2134 * DataNode.instance.storage.layoutVersion - 38 * NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime + 60819 * blockManagerInstance.heartbeatManager.stats.nodesInService + 4.470664888E9 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2134 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() - 38 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() + 60819 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() + 4.470664888E9 == 0);
			}
		});
		invariants7999.add(new Invariant(7616, "2134 * DataNode.instance.storage.layoutVersion - 38 * NameNode.instance.namesystem.startTime + 60819 * blockManagerInstance.heartbeatManager.stats.nodesInService + 6.5792498678384E13 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2134 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() - 38 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() + 60819 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() + 6.5792498678384E13 == 0);
			}
		});
		invariants7999.add(new Invariant(7617, "1607221712 * DataNode.instance.volumeChecker.numSyncDatasetChecks + 747675975 * NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE - 2 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos + 2.35252509829038E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (1607221712 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() + 747675975 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() - 2 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() + 2.35252509829038E14 == 0);
			}
		});
		invariants7999.add(new Invariant(7618, "12 * DataNode.instance.volumeChecker.numSyncDatasetChecks + 3 * NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE - 4 * blockManagerInstance.blockReportLeaseManager.nextId + 7.1777909030030264E18 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (12 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() + 3 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() - 4 * ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() + 7.1777909030030264E18 == 0);
			}
		});
		invariants7999.add(new Invariant(7619, "803610856 * DataNode.instance.volumeChecker.numSyncDatasetChecks - 149535195 * NameNode.instance.namesystem.fsImage.lastAppliedTxId - NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos + 1.17649432869744E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (803610856 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() - 149535195 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() - ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() + 1.17649432869744E14 == 0);
			}
		});
		invariants7999.add(new Invariant(7620, "3.205780144128E13 * DataNode.instance.volumeChecker.numSyncDatasetChecks + 24576 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 31819445 * blockManagerInstance.heartbeatManager.stats.blockPoolUsed - 2.8913675197791437E18 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (3.205780144128E13 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() + 24576 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 31819445 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() - 2.8913675197791437E18 == 0);
			}
		});
		invariants7999.add(new Invariant(7621, "2075223282 * DataNode.instance.volumeChecker.numSyncDatasetChecks + 3 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 803610856 * blockManagerInstance.heartbeatManager.stats.nodesInService - 3.52948298609232E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2075223282 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() + 3 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 803610856 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() - 3.52948298609232E14 == 0);
			}
		});
		invariants7999.add(new Invariant(7622, "2075223282 * DataNode.instance.xserver.balanceThrottler.curPeriodStart - 9417 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos + 2.522534476984E12 * blockManagerInstance.heartbeatManager.stats.nodesInService + 8.6375534805285965E17 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2075223282 * ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() - 9417 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() + 2.522534476984E12 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() + 8.6375534805285965E17 == 0);
			}
		});
		invariants7999.add(new Invariant(7623, "1037611641 * NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE - 6 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos + 1607221712 * blockManagerInstance.heartbeatManager.stats.nodesInService + 7.05832265296722E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (1037611641 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() - 6 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() + 1607221712 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() + 7.05832265296722E14 == 0);
			}
		});
		invariants7999.add(new Invariant(7624, "1037611641 * NameNode.instance.namesystem.fsImage.lastAppliedTxId + 15 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 4.01805428E9 * blockManagerInstance.heartbeatManager.stats.nodesInService - 1.76474149304616E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (1037611641 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() + 15 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 4.01805428E9 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() - 1.76474149304616E15 == 0);
			}
		});
		invariants7999.add(new Invariant(7625, "3165 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 691741094 * NameNode.instance.namesystem.lazyPersistFileScrubberTS - 8.4780945308E11 * blockManagerInstance.heartbeatManager.stats.nodesInService - 2.9097750823258118E17 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (3165 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 691741094 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() - 8.4780945308E11 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() - 2.9097750823258118E17 == 0);
			}
		});
		invariants7999.add(new Invariant(7626, "291 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 62885554 * NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime - 7.7950253032E10 * blockManagerInstance.heartbeatManager.stats.nodesInService - 2.68375576432474E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (291 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 62885554 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() - 7.7950253032E10 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() - 2.68375576432474E16 == 0);
			}
		});
		invariants7999.add(new Invariant(7627, "DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME == DataNode.instance.id.nsInfo.CAPABILITIES_SUPPORTED"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.CAPABILITIES_SUPPORTED"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7628, "DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS == DataNode.instance.id.nsInfo.CAPABILITIES_SUPPORTED"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.CAPABILITIES_SUPPORTED"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7629, "DataNode.instance.id.nsInfo.CAPABILITIES_SUPPORTED == DataNode.instance.id.nsInfo.capabilities"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.CAPABILITIES_SUPPORTED"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.capabilities"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7630, "DataNode.instance.id.nsInfo.CAPABILITIES_SUPPORTED == DataNode.instance.volumeChecker.numSyncDatasetChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.CAPABILITIES_SUPPORTED"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7631, "DataNode.instance.id.infoPort == 38731"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() == 38731);
			}
		});
		invariants7999.add(new Invariant(7632, "DataNode.instance.id.ipcPort == 37797"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() == 37797);
			}
		});
		invariants7999.add(new Invariant(7633, "DataNode.instance.id.nsInfo.CAPABILITIES_SUPPORTED == 1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.CAPABILITIES_SUPPORTED"))).intValue() == 1);
			}
		});
		invariants7999.add(new Invariant(7634, "DataNode.instance.id.nsInfo.cTime == 1731381578794L || DataNode.instance.id.nsInfo.cTime == 1731381581694L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() == 1731381578794L || ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() == 1731381581694L);
			}
		});
		invariants7999.add(new Invariant(7635, "DataNode.instance.id.nsInfo.namespaceID == 1643239630 || DataNode.instance.id.nsInfo.namespaceID == 1677022604"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() == 1643239630 || ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() == 1677022604);
			}
		});
		invariants7999.add(new Invariant(7636, "DataNode.instance.id.xferPort == 38297"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() == 38297);
			}
		});
		invariants7999.add(new Invariant(7637, "DataNode.instance.lastDiskErrorCheck == 117688352"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() == 117688352);
			}
		});
		invariants7999.add(new Invariant(7638, "DataNode.instance.storage.namespaceID == 0 || DataNode.instance.storage.namespaceID == 1643239630 || DataNode.instance.storage.namespaceID == 1677022604"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() == 1643239630 || ((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() == 1677022604);
			}
		});
		invariants7999.add(new Invariant(7639, "DataNode.instance.volumeChecker.lastAllVolumesCheck == 116787673 || DataNode.instance.volumeChecker.lastAllVolumesCheck == 117685363 || DataNode.instance.volumeChecker.lastAllVolumesCheck == 117688351"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() == 116787673 || ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() == 117685363 || ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() == 117688351);
			}
		});
		invariants7999.add(new Invariant(7640, "DataNode.instance.xserver.balanceThrottler.curPeriodStart == 117684766 || DataNode.instance.xserver.balanceThrottler.curPeriodStart == 117687674"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() == 117684766 || ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() == 117687674);
			}
		});
		invariants7999.add(new Invariant(7641, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE == 130 || NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE == 134"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() == 130 || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() == 134);
			}
		});
		invariants7999.add(new Invariant(7642, "NameNode.instance.namesystem.fsImage.lastAppliedTxId == 0 || NameNode.instance.namesystem.fsImage.lastAppliedTxId == 14"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() == 14);
			}
		});
		invariants7999.add(new Invariant(7643, "NameNode.instance.namesystem.lazyPersistFileScrubberTS == 117684367 || NameNode.instance.namesystem.lazyPersistFileScrubberTS == 117687336"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() == 117684367 || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() == 117687336);
			}
		});
		invariants7999.add(new Invariant(7644, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime == 117683926 || NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime == 117686852"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() == 117683926 || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() == 117686852);
			}
		});
		invariants7999.add(new Invariant(7645, "NameNode.instance.namesystem.startTime == 1731381579017L || NameNode.instance.namesystem.startTime == 1731381581944L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() == 1731381579017L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() == 1731381581944L);
			}
		});
		invariants7999.add(new Invariant(7646, "blockManagerInstance.bmSafeMode.startTime == 0 || blockManagerInstance.bmSafeMode.startTime == 117687233"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() == 117687233);
			}
		});
		invariants7999.add(new Invariant(7647, "blockManagerInstance.invalidateBlocks.startupTime == 117686855"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue() == 117686855);
			}
		});
		invariants7999.add(new Invariant(7648, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.id.nsInfo.CAPABILITIES_SUPPORTED) != null"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.CAPABILITIES_SUPPORTED"))).intValue()) != null);
			}
		});
		invariants7999.add(new Invariant(7649, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.id.nsInfo.CAPABILITIES_SUPPORTED-1) != null"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.CAPABILITIES_SUPPORTED"))).intValue()-1) != null);
			}
		});
		invariants7999.add(new Invariant(7650, "DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION != blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7651, "DataNode.instance.id.nsInfo.CAPABILITIES_SUPPORTED < DataNode.instance.id.nsInfo.cTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.CAPABILITIES_SUPPORTED"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7652, "DataNode.instance.id.nsInfo.CAPABILITIES_SUPPORTED < DataNode.instance.id.nsInfo.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.CAPABILITIES_SUPPORTED"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7653, "DataNode.instance.id.nsInfo.CAPABILITIES_SUPPORTED > DataNode.instance.storage.layoutVersion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.CAPABILITIES_SUPPORTED"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7654, "DataNode.instance.id.nsInfo.CAPABILITIES_SUPPORTED < DataNode.instance.storage.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.CAPABILITIES_SUPPORTED"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7655, "DataNode.instance.id.nsInfo.CAPABILITIES_SUPPORTED < DataNode.instance.volumeChecker.lastAllVolumesCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.CAPABILITIES_SUPPORTED"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7656, "DataNode.instance.id.nsInfo.CAPABILITIES_SUPPORTED < DataNode.instance.xserver.balanceThrottler.curPeriodStart"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.CAPABILITIES_SUPPORTED"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7657, "DataNode.instance.id.nsInfo.CAPABILITIES_SUPPORTED < NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.CAPABILITIES_SUPPORTED"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7658, "DataNode.instance.id.nsInfo.CAPABILITIES_SUPPORTED != NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.CAPABILITIES_SUPPORTED"))).intValue() != ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7659, "DataNode.instance.id.nsInfo.CAPABILITIES_SUPPORTED < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.CAPABILITIES_SUPPORTED"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7660, "DataNode.instance.id.nsInfo.CAPABILITIES_SUPPORTED < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.CAPABILITIES_SUPPORTED"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7661, "DataNode.instance.id.nsInfo.CAPABILITIES_SUPPORTED < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.CAPABILITIES_SUPPORTED"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7662, "DataNode.instance.id.nsInfo.CAPABILITIES_SUPPORTED < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.CAPABILITIES_SUPPORTED"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7663, "DataNode.instance.id.nsInfo.CAPABILITIES_SUPPORTED < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.CAPABILITIES_SUPPORTED"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7664, "DataNode.instance.id.nsInfo.CAPABILITIES_SUPPORTED != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.CAPABILITIES_SUPPORTED"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7665, "DataNode.instance.id.nsInfo.CAPABILITIES_SUPPORTED != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.CAPABILITIES_SUPPORTED"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7666, "DataNode.instance.id.nsInfo.CAPABILITIES_SUPPORTED != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.CAPABILITIES_SUPPORTED"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7667, "DataNode.instance.id.nsInfo.CAPABILITIES_SUPPORTED != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.CAPABILITIES_SUPPORTED"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7668, "DataNode.instance.id.nsInfo.CAPABILITIES_SUPPORTED != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.CAPABILITIES_SUPPORTED"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7669, "DataNode.instance.id.nsInfo.CAPABILITIES_SUPPORTED != blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.CAPABILITIES_SUPPORTED"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7670, "DataNode.instance.id.nsInfo.namespaceID > blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7671, "2 * DataNode.instance.volumeChecker.numSyncDatasetChecks - blockManagerInstance.blockReportLeaseManager.nextId + 2147483647 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() - ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() + 2147483647 == 0);
			}
		});
		invariants7999.add(new Invariant(7672, "blockManagerInstance.datanodeManager.heartbeatIntervalSeconds != blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatIntervalSeconds"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7673, "2.952917756068E12 * DataNode.instance.storage.layoutVersion - 1.16149658385E11 * DataNode.instance.xserver.balanceThrottler.curPeriodStart + 165756 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 5.8379989489875896E18 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2.952917756068E12 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() - 1.16149658385E11 * ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() + 165756 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 5.8379989489875896E18 == 0);
			}
		});
		invariants7999.add(new Invariant(7674, "23822336 * DataNode.instance.storage.layoutVersion - 466944 * DataNode.instance.xserver.balanceThrottler.curPeriodStart + 13813 * blockManagerInstance.heartbeatManager.stats.blockPoolUsed + 5.4953553248256E13 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (23822336 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() - 466944 * ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() + 13813 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() + 5.4953553248256E13 == 0);
			}
		});
		invariants7999.add(new Invariant(7675, "2908 * DataNode.instance.storage.layoutVersion - 57 * DataNode.instance.xserver.balanceThrottler.curPeriodStart + 82878 * blockManagerInstance.heartbeatManager.stats.nodesInService + 6.708197418E9 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2908 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() - 57 * ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() + 82878 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() + 6.708197418E9 == 0);
			}
		});
		invariants7999.add(new Invariant(7676, "4.061785084E9 * DataNode.instance.storage.layoutVersion - 1.16149658385E11 * NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE + 228 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 2.6817148573304384E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (4.061785084E9 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() - 1.16149658385E11 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() + 228 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 2.6817148573304384E16 == 0);
			}
		});
		invariants7999.add(new Invariant(7677, "1.4216247794E10 * DataNode.instance.storage.layoutVersion + 1.16149658385E11 * NameNode.instance.namesystem.fsImage.lastAppliedTxId + 798 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 9.3914494196347904E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (1.4216247794E10 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() + 1.16149658385E11 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() + 798 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 9.3914494196347904E16 == 0);
			}
		});
		invariants7999.add(new Invariant(7678, "3.014859978599E12 * DataNode.instance.storage.layoutVersion + 169233 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 1.16149658385E11 * NameNode.instance.namesystem.lazyPersistFileScrubberTS - 6.2472370751419249E18 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (3.014859978599E12 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() + 169233 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 1.16149658385E11 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() - 6.2472370751419249E18 == 0);
			}
		});
		invariants7999.add(new Invariant(7679, "1.56378725734E11 * DataNode.instance.storage.layoutVersion + 8778 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 6.113139915E9 * NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime - 3.1362324372792934E17 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (1.56378725734E11 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() + 8778 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 6.113139915E9 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() - 3.1362324372792934E17 == 0);
			}
		});
		invariants7999.add(new Invariant(7680, "681511356 * DataNode.instance.storage.layoutVersion - 38 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos + 3.8716552795E10 * blockManagerInstance.heartbeatManager.stats.nodesInService + 4.472118771254662E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (681511356 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() - 38 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() + 3.8716552795E10 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() + 4.472118771254662E15 == 0);
			}
		});
		invariants7999.add(new Invariant(7681, "97288192 * DataNode.instance.storage.layoutVersion - 1867776 * NameNode.instance.namesystem.lazyPersistFileScrubberTS + 56411 * blockManagerInstance.heartbeatManager.stats.blockPoolUsed + 2.19813581684736E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (97288192 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() - 1867776 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() + 56411 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() + 2.19813581684736E14 == 0);
			}
		});
		invariants7999.add(new Invariant(7682, "5938 * DataNode.instance.storage.layoutVersion - 114 * NameNode.instance.namesystem.lazyPersistFileScrubberTS + 169233 * blockManagerInstance.heartbeatManager.stats.nodesInService + 1.3416356304E10 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (5938 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() - 114 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() + 169233 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() + 1.3416356304E10 == 0);
			}
		});
		invariants7999.add(new Invariant(7683, "2523136 * DataNode.instance.storage.layoutVersion - 49152 * NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime + 1463 * blockManagerInstance.heartbeatManager.stats.blockPoolUsed + 5.784544149504E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2523136 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() - 49152 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() + 1463 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() + 5.784544149504E12 == 0);
			}
		});
		invariants7999.add(new Invariant(7684, "154 * DataNode.instance.storage.layoutVersion - 3 * NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime + 4389 * blockManagerInstance.heartbeatManager.stats.nodesInService + 353060556 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (154 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() - 3 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() + 4389 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() + 353060556 == 0);
			}
		});
		invariants7999.add(new Invariant(7685, "5854 * DataNode.instance.storage.layoutVersion - 114 * NameNode.instance.namesystem.startTime + 166839 * blockManagerInstance.heartbeatManager.stats.nodesInService + 1.97377500341616E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (5854 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() - 114 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() + 166839 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() + 1.97377500341616E14 == 0);
			}
		});
		invariants7999.add(new Invariant(7686, "1463 * DataNode.instance.storage.namespaceID + 838511302 * NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime - 1.202029789345E12 * blockManagerInstance.heartbeatManager.stats.nodesInService - 9.8681755498801312E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (1463 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() + 838511302 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() - 1.202029789345E12 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() - 9.8681755498801312E16 == 0);
			}
		});
		invariants7999.add(new Invariant(7687, "518501603 * DataNode.instance.volumeChecker.lastAllVolumesCheck - 4.66683634015584E14 * DataNode.instance.volumeChecker.numSyncDatasetChecks - 747 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos + 2.73583106913841E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (518501603 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() - 4.66683634015584E14 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() - 747 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() + 2.73583106913841E16 == 0);
			}
		});
		invariants7999.add(new Invariant(7688, "16384 * DataNode.instance.volumeChecker.lastAllVolumesCheck - 1.470775296E10 * DataNode.instance.volumeChecker.numSyncDatasetChecks - 249 * blockManagerInstance.heartbeatManager.stats.blockPoolUsed - 1.913449234432E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (16384 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() - 1.470775296E10 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() - 249 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() - 1.913449234432E12 == 0);
			}
		});
		invariants7999.add(new Invariant(7689, "1454 * DataNode.instance.volumeChecker.lastAllVolumesCheck + 448845 * DataNode.instance.xserver.balanceThrottler.curPeriodStart - 327396453 * blockManagerInstance.heartbeatManager.stats.nodesInService - 5.2993333313072E13 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (1454 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() + 448845 * ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() - 327396453 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() - 5.2993333313072E13 == 0);
			}
		});
		invariants7999.add(new Invariant(7690, "5938 * DataNode.instance.volumeChecker.lastAllVolumesCheck + 1795380 * NameNode.instance.namesystem.lazyPersistFileScrubberTS - 1337056491 * blockManagerInstance.heartbeatManager.stats.nodesInService - 2.11986974509954E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (5938 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() + 1795380 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() - 1337056491 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() - 2.11986974509954E14 == 0);
			}
		});
		invariants7999.add(new Invariant(7691, "2926 * DataNode.instance.volumeChecker.lastAllVolumesCheck + 897690 * NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime - 658845957 * blockManagerInstance.heartbeatManager.stats.nodesInService - 1.05988030903078E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2926 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() + 897690 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() - 658845957 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() - 1.05988030903078E14 == 0);
			}
		});
		invariants7999.add(new Invariant(7692, "5854 * DataNode.instance.volumeChecker.lastAllVolumesCheck + 1795380 * NameNode.instance.namesystem.startTime - 1318142253 * blockManagerInstance.heartbeatManager.stats.nodesInService - 3.1084885482656563E18 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (5854 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() + 1795380 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() - 1318142253 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() - 3.1084885482656563E18 == 0);
			}
		});
		invariants7999.add(new Invariant(7693, "7.64614527806E11 * DataNode.instance.volumeChecker.numSyncDatasetChecks + 518501603 * DataNode.instance.xserver.balanceThrottler.curPeriodStart - 727 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos + 2.45374457119254E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (7.64614527806E11 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() + 518501603 * ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() - 727 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() + 2.45374457119254E16 == 0);
			}
		});
		invariants7999.add(new Invariant(7694, "142934016 * DataNode.instance.volumeChecker.numSyncDatasetChecks + 49152 * DataNode.instance.xserver.balanceThrottler.curPeriodStart - 727 * blockManagerInstance.heartbeatManager.stats.blockPoolUsed - 5.784584552448E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (142934016 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() + 49152 * ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() - 727 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() - 5.784584552448E12 == 0);
			}
		});
		invariants7999.add(new Invariant(7695, "2908 * DataNode.instance.volumeChecker.numSyncDatasetChecks + DataNode.instance.xserver.balanceThrottler.curPeriodStart - 727 * blockManagerInstance.heartbeatManager.stats.nodesInService - 117687674 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2908 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() + ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() - 727 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() - 117687674 == 0);
			}
		});
		invariants7999.add(new Invariant(7696, "1051739378 * DataNode.instance.volumeChecker.numSyncDatasetChecks + 518501603 * NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE - NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos + 1.17617856870847E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (1051739378 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() + 518501603 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() - ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() + 1.17617856870847E14 == 0);
			}
		});
		invariants7999.add(new Invariant(7697, "7.362175646E9 * DataNode.instance.volumeChecker.numSyncDatasetChecks - 1037003206 * NameNode.instance.namesystem.fsImage.lastAppliedTxId - 7 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos + 8.23811352599543E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (7.362175646E9 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() - 1037003206 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() - 7 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() + 8.23811352599543E14 == 0);
			}
		});
		invariants7999.add(new Invariant(7698, "3.122614213282E12 * DataNode.instance.volumeChecker.numSyncDatasetChecks - 2969 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos + 2074006412 * NameNode.instance.namesystem.lazyPersistFileScrubberTS + 1.05329411363093456E17 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (3.122614213282E12 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() - 2969 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() + 2074006412 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() + 1.05329411363093456E17 == 0);
			}
		});
		invariants7999.add(new Invariant(7699, "1.538694710014E12 * DataNode.instance.volumeChecker.numSyncDatasetChecks - 1463 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos + 1037003206 * NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime + 5.0134929865256976E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (1.538694710014E12 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() - 1463 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() + 1037003206 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() + 5.0134929865256976E16 == 0);
			}
		});
		invariants7999.add(new Invariant(7700, "1022267034 * DataNode.instance.volumeChecker.numSyncDatasetChecks + NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 518501603 * blockManagerInstance.heartbeatManager.stats.nodesInService - 1.17687336085649E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (1022267034 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() + ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 518501603 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() - 1.17687336085649E14 == 0);
			}
		});
		invariants7999.add(new Invariant(7701, "583729152 * DataNode.instance.volumeChecker.numSyncDatasetChecks + 196608 * NameNode.instance.namesystem.lazyPersistFileScrubberTS - 2969 * blockManagerInstance.heartbeatManager.stats.blockPoolUsed - 2.3138271756288E13 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (583729152 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() + 196608 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() - 2969 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() - 2.3138271756288E13 == 0);
			}
		});
		invariants7999.add(new Invariant(7702, "11876 * DataNode.instance.volumeChecker.numSyncDatasetChecks + 4 * NameNode.instance.namesystem.lazyPersistFileScrubberTS - 2969 * blockManagerInstance.heartbeatManager.stats.nodesInService - 470749344 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (11876 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() + 4 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() - 2969 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() - 470749344 == 0);
			}
		});
		invariants7999.add(new Invariant(7703, "287637504 * DataNode.instance.volumeChecker.numSyncDatasetChecks + 98304 * NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime - 1463 * blockManagerInstance.heartbeatManager.stats.blockPoolUsed - 1.1569088299008E13 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (287637504 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() + 98304 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() - 1463 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() - 1.1569088299008E13 == 0);
			}
		});
		invariants7999.add(new Invariant(7704, "5852 * DataNode.instance.volumeChecker.numSyncDatasetChecks + 2 * NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime - 1463 * blockManagerInstance.heartbeatManager.stats.nodesInService - 235373704 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (5852 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() + 2 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() - 1463 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() - 235373704 == 0);
			}
		});
		invariants7999.add(new Invariant(7705, "575471616 * DataNode.instance.volumeChecker.numSyncDatasetChecks + 196608 * NameNode.instance.namesystem.startTime - 2927 * blockManagerInstance.heartbeatManager.stats.blockPoolUsed - 3.4040347006284595E17 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (575471616 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() + 196608 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() - 2927 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() - 3.4040347006284595E17 == 0);
			}
		});
		invariants7999.add(new Invariant(7706, "11708 * DataNode.instance.volumeChecker.numSyncDatasetChecks + 4 * NameNode.instance.namesystem.startTime - 2927 * blockManagerInstance.heartbeatManager.stats.nodesInService - 6.925526327776E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (11708 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() + 4 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() - 2927 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() - 6.925526327776E12 == 0);
			}
		});
		invariants7999.add(new Invariant(7707, "511133517 * DataNode.instance.xserver.balanceThrottler.curPeriodStart - 1454 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos + 3.82307263903E11 * blockManagerInstance.heartbeatManager.stats.nodesInService + 1.10963271949364192E17 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (511133517 * ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() - 1454 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() + 3.82307263903E11 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() + 1.10963271949364192E17 == 0);
			}
		});
		invariants7999.add(new Invariant(7708, "511133517 * NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE - 2 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos + 525869689 * blockManagerInstance.heartbeatManager.stats.nodesInService + 2.3530618028002E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (511133517 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() - 2 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() + 525869689 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() + 2.3530618028002E14 == 0);
			}
		});
		invariants7999.add(new Invariant(7709, "1022267034 * NameNode.instance.namesystem.fsImage.lastAppliedTxId + 14 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 3.681087823E9 * blockManagerInstance.heartbeatManager.stats.nodesInService - 1.647622705199086E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (1022267034 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() + 14 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 3.681087823E9 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() - 1.647622705199086E15 == 0);
			}
		});
		invariants7999.add(new Invariant(7710, "5938 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 2044534068 * NameNode.instance.namesystem.lazyPersistFileScrubberTS - 1.561307106641E12 * blockManagerInstance.heartbeatManager.stats.nodesInService - 4.5821163385242093E17 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (5938 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 2044534068 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() - 1.561307106641E12 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() - 4.5821163385242093E17 == 0);
			}
		});
		invariants7999.add(new Invariant(7711, "2926 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 1022267034 * NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime - 7.69347355007E11 * blockManagerInstance.heartbeatManager.stats.nodesInService - 2.24045756251772E17 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2926 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 1022267034 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() - 7.69347355007E11 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() - 2.24045756251772E17 == 0);
			}
		});
		invariants7999.add(new Invariant(7712, "DataNode.instance.id.infoPort == 42985"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() == 42985);
			}
		});
		invariants7999.add(new Invariant(7713, "DataNode.instance.id.ipcPort == 42911"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() == 42911);
			}
		});
		invariants7999.add(new Invariant(7714, "DataNode.instance.id.nsInfo.cTime == 1731381549889L || DataNode.instance.id.nsInfo.cTime == 1731381572103L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() == 1731381549889L || ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() == 1731381572103L);
			}
		});
		invariants7999.add(new Invariant(7715, "DataNode.instance.id.nsInfo.namespaceID == 452757318 || DataNode.instance.id.nsInfo.namespaceID == 1398609070"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() == 452757318 || ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() == 1398609070);
			}
		});
		invariants7999.add(new Invariant(7716, "DataNode.instance.id.xferPort == 45377"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() == 45377);
			}
		});
		invariants7999.add(new Invariant(7717, "DataNode.instance.lastDiskErrorCheck == 117678296"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() == 117678296);
			}
		});
		invariants7999.add(new Invariant(7718, "DataNode.instance.storage.namespaceID == 0 || DataNode.instance.storage.namespaceID == 452757318 || DataNode.instance.storage.namespaceID == 1398609070"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() == 452757318 || ((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() == 1398609070);
			}
		});
		invariants7999.add(new Invariant(7719, "DataNode.instance.volumeChecker.lastAllVolumesCheck == 116777762 || DataNode.instance.volumeChecker.lastAllVolumesCheck == 117656511 || DataNode.instance.volumeChecker.lastAllVolumesCheck == 117678295"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() == 116777762 || ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() == 117656511 || ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() == 117678295);
			}
		});
		invariants7999.add(new Invariant(7720, "DataNode.instance.xserver.balanceThrottler.curPeriodStart == 117655726 || DataNode.instance.xserver.balanceThrottler.curPeriodStart == 117677763"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() == 117655726 || ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() == 117677763);
			}
		});
		invariants7999.add(new Invariant(7721, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE == 94 || NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE == 98"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() == 94 || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() == 98);
			}
		});
		invariants7999.add(new Invariant(7722, "NameNode.instance.namesystem.fsImage.lastAppliedTxId == 0 || NameNode.instance.namesystem.fsImage.lastAppliedTxId == 2"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() == 2);
			}
		});
		invariants7999.add(new Invariant(7723, "NameNode.instance.namesystem.lazyPersistFileScrubberTS == 117655374 || NameNode.instance.namesystem.lazyPersistFileScrubberTS == 117677478"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() == 117655374 || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() == 117677478);
			}
		});
		invariants7999.add(new Invariant(7724, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime == 117655031 || NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime == 117677186"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() == 117655031 || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() == 117677186);
			}
		});
		invariants7999.add(new Invariant(7725, "NameNode.instance.namesystem.startTime == 1731381550123L || NameNode.instance.namesystem.startTime == 1731381572277L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() == 1731381550123L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() == 1731381572277L);
			}
		});
		invariants7999.add(new Invariant(7726, "blockManagerInstance.bmSafeMode.startTime == 0 || blockManagerInstance.bmSafeMode.startTime == 117677443"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() == 117677443);
			}
		});
		invariants7999.add(new Invariant(7727, "blockManagerInstance.invalidateBlocks.startupTime == 117677188"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue() == 117677188);
			}
		});
		invariants7999.add(new Invariant(7728, "DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION > NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7729, "DataNode.instance.data.volsConfigured >= NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue() >= ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7730, "DataNode.instance.dnConf.volsConfigured >= NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.volsConfigured"))).intValue() >= ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7731, "DataNode.instance.httpServer.HTTP_MAX_THREADS > NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_MAX_THREADS"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7732, "NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE > NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7733, "blockManagerInstance.heartbeatManager.stats.capacityRemaining % NameNode.instance.namesystem.dir.xattrMaxSize == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() % ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.xattrMaxSize"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7734, "NameNode.instance.namesystem.fsImage.lastAppliedTxId < blockManagerInstance.blockReportLeaseManager.maxPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.maxPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7735, "NameNode.instance.namesystem.fsImage.lastAppliedTxId < blockManagerInstance.neededReconstruction.LEVEL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.LEVEL"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7736, "NameNode.instance.namesystem.fsImage.lastAppliedTxId < blockManagerInstance.storagePolicySuite.defaultPolicyID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.storagePolicySuite.defaultPolicyID"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7737, "3.227402164E9 * DataNode.instance.storage.layoutVersion - 1.221275124375E12 * NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE + 228 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 2.6710780095105496E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (3.227402164E9 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() - 1.221275124375E12 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() + 228 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 2.6710780095105496E16 == 0);
			}
		});
		invariants7999.add(new Invariant(7738, "1613701082 * DataNode.instance.storage.layoutVersion + 1.221275124375E12 * NameNode.instance.namesystem.fsImage.lastAppliedTxId + 114 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 1.3415232528647124E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (1613701082 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() + 1.221275124375E12 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() + 114 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 1.3415232528647124E16 == 0);
			}
		});
		invariants7999.add(new Invariant(7739, "1166 * DataNode.instance.storage.layoutVersion - 3 * NameNode.instance.namesystem.startTime + 33231 * blockManagerInstance.heartbeatManager.stats.nodesInService + 5.194144716831E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (1166 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() - 3 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() + 33231 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() + 5.194144716831E12 == 0);
			}
		});
		invariants7999.add(new Invariant(7740, "66462 * DataNode.instance.volumeChecker.lastAllVolumesCheck + 2636247 * NameNode.instance.namesystem.startTime - 1.9950408082E10 * blockManagerInstance.heartbeatManager.stats.nodesInService - 4.5643572370541425E18 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (66462 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() + 2636247 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() - 1.9950408082E10 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() - 4.5643572370541425E18 == 0);
			}
		});
		invariants7999.add(new Invariant(7741, "1651496136 * DataNode.instance.volumeChecker.numSyncDatasetChecks + 1.0722388451E10 * NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE - 2 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos + 2.34304162574734E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (1651496136 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() + 1.0722388451E10 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() - 2 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() + 2.34304162574734E14 == 0);
			}
		});
		invariants7999.add(new Invariant(7742, "825748068 * DataNode.instance.volumeChecker.numSyncDatasetChecks - 1.0722388451E10 * NameNode.instance.namesystem.fsImage.lastAppliedTxId - NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos + 1.17677478321466E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (825748068 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() - 1.0722388451E10 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() - ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() + 1.17677478321466E14 == 0);
			}
		});
		invariants7999.add(new Invariant(7743, "1633370112 * DataNode.instance.volumeChecker.numSyncDatasetChecks + 73728 * NameNode.instance.namesystem.startTime - 11077 * blockManagerInstance.heartbeatManager.stats.blockPoolUsed - 1.27651300560838656E17 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (1633370112 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() + 73728 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() - 11077 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() - 1.27651300560838656E17 == 0);
			}
		});
		invariants7999.add(new Invariant(7744, "66462 * DataNode.instance.volumeChecker.numSyncDatasetChecks + 3 * NameNode.instance.namesystem.startTime - 22154 * blockManagerInstance.heartbeatManager.stats.nodesInService - 5.194144716831E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (66462 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() + 3 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() - 22154 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() - 5.194144716831E12 == 0);
			}
		});
		invariants7999.add(new Invariant(7745, "2.0619028834E10 * DataNode.instance.xserver.balanceThrottler.curPeriodStart - 22037 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos + 6.065670058172E12 * blockManagerInstance.heartbeatManager.stats.nodesInService + 1.66857401352527904E17 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2.0619028834E10 * ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() - 22037 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() + 6.065670058172E12 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() + 1.66857401352527904E17 == 0);
			}
		});
		invariants7999.add(new Invariant(7746, "1.0309514417E10 * NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE - 2 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos + 550498712 * blockManagerInstance.heartbeatManager.stats.nodesInService + 2.34344624230066E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (1.0309514417E10 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() - 2 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() + 550498712 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() + 2.34344624230066E14 == 0);
			}
		});
		invariants7999.add(new Invariant(7747, "1.0309514417E10 * NameNode.instance.namesystem.fsImage.lastAppliedTxId + NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 275249356 * blockManagerInstance.heartbeatManager.stats.nodesInService - 1.17677478321466E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (1.0309514417E10 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() + ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 275249356 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() - 1.17677478321466E14 == 0);
			}
		});
		invariants7999.add(new Invariant(7748, "11052 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 1.0309514417E10 * NameNode.instance.namesystem.lazyPersistFileScrubberTS - 3.042055882512E12 * blockManagerInstance.heartbeatManager.stats.nodesInService - 8.7373834411641904E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (11052 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 1.0309514417E10 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() - 3.042055882512E12 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() - 8.7373834411641904E16 == 0);
			}
		});
		invariants7999.add(new Invariant(7749, "22155 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 2.0619028834E10 * NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime - 6.09814948218E12 * blockManagerInstance.heartbeatManager.stats.nodesInService - 1.80755240974098112E17 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (22155 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 2.0619028834E10 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() - 6.09814948218E12 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() - 1.80755240974098112E17 == 0);
			}
		});
		invariants7999.add(new Invariant(7750, "DataNode.instance.id.infoPort == 37981"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() == 37981);
			}
		});
		invariants7999.add(new Invariant(7751, "DataNode.instance.id.ipcPort == 41089"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() == 41089);
			}
		});
		invariants7999.add(new Invariant(7752, "DataNode.instance.id.nsInfo.cTime == 1731381538769L || DataNode.instance.id.nsInfo.cTime == 1731381540746L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() == 1731381538769L || ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() == 1731381540746L);
			}
		});
		invariants7999.add(new Invariant(7753, "DataNode.instance.id.nsInfo.namespaceID == 900269145 || DataNode.instance.id.nsInfo.namespaceID == 1335357340"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() == 900269145 || ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() == 1335357340);
			}
		});
		invariants7999.add(new Invariant(7754, "DataNode.instance.id.xferPort == 43621"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() == 43621);
			}
		});
		invariants7999.add(new Invariant(7755, "DataNode.instance.lastDiskErrorCheck == 117647125"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() == 117647125);
			}
		});
		invariants7999.add(new Invariant(7756, "DataNode.instance.storage.namespaceID == 0 || DataNode.instance.storage.namespaceID == 900269145 || DataNode.instance.storage.namespaceID == 1335357340"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() == 900269145 || ((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() == 1335357340);
			}
		});
		invariants7999.add(new Invariant(7757, "DataNode.instance.volumeChecker.lastAllVolumesCheck == 116746542 || DataNode.instance.volumeChecker.lastAllVolumesCheck == 117645059 || DataNode.instance.volumeChecker.lastAllVolumesCheck == 117647123"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() == 116746542 || ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() == 117645059 || ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() == 117647123);
			}
		});
		invariants7999.add(new Invariant(7758, "DataNode.instance.xserver.balanceThrottler.curPeriodStart == 117644528 || DataNode.instance.xserver.balanceThrottler.curPeriodStart == 117646544"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() == 117644528 || ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() == 117646544);
			}
		});
		invariants7999.add(new Invariant(7759, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE == 46 || NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE == 50"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() == 46 || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() == 50);
			}
		});
		invariants7999.add(new Invariant(7760, "NameNode.instance.namesystem.lazyPersistFileScrubberTS == 117644269 || NameNode.instance.namesystem.lazyPersistFileScrubberTS == 117646267"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() == 117644269 || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() == 117646267);
			}
		});
		invariants7999.add(new Invariant(7761, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime == 117643945 || NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime == 117645875"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() == 117643945 || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() == 117645875);
			}
		});
		invariants7999.add(new Invariant(7762, "NameNode.instance.namesystem.startTime == 1731381539037L || NameNode.instance.namesystem.startTime == 1731381540967L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() == 1731381539037L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() == 1731381540967L);
			}
		});
		invariants7999.add(new Invariant(7763, "blockManagerInstance.bmSafeMode.startTime == 0 || blockManagerInstance.bmSafeMode.startTime == 117646230"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() == 117646230);
			}
		});
		invariants7999.add(new Invariant(7764, "blockManagerInstance.invalidateBlocks.startupTime == 117645876"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue() == 117645876);
			}
		});
		invariants7999.add(new Invariant(7765, "blockManagerInstance.blockReportLeaseManager.nextId % DataNode.instance.diskBalancer.bandwidth == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() % ((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.bandwidth"))).intValue() == 0);
			}
		});
		invariants7999.add(new Invariant(7766, "DataNode.instance.xserver.balanceThrottler.maxThreads >= NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.maxThreads"))).intValue() >= ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7767, "689812190 * DataNode.instance.storage.layoutVersion + 8.6233215111E10 * DataNode.instance.volumeChecker.numSyncDatasetChecks + 57 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 6.705837242579475E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (689812190 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() + 8.6233215111E10 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() + 57 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 6.705837242579475E15 == 0);
			}
		});
		invariants7999.add(new Invariant(7768, "4.6355379168E11 * DataNode.instance.storage.layoutVersion - 2.8744405037E10 * DataNode.instance.xserver.balanceThrottler.curPeriodStart + 38304 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 1.12464271507416512E18 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (4.6355379168E11 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() - 2.8744405037E10 * ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() + 38304 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 1.12464271507416512E18 == 0);
			}
		});
		invariants7999.add(new Invariant(7769, "688128 * DataNode.instance.storage.layoutVersion - 19456 * DataNode.instance.xserver.balanceThrottler.curPeriodStart + 399 * blockManagerInstance.heartbeatManager.stats.blockPoolUsed + 2.288931160064E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (688128 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() - 19456 * ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() + 399 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() + 2.288931160064E12 == 0);
			}
		});
		invariants7999.add(new Invariant(7770, "672 * DataNode.instance.storage.layoutVersion - 19 * DataNode.instance.xserver.balanceThrottler.curPeriodStart + 19152 * blockManagerInstance.heartbeatManager.stats.nodesInService + 2.235284336E9 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (672 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() - 19 * ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() + 19152 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() + 2.235284336E9 == 0);
			}
		});
		invariants7999.add(new Invariant(7771, "2.75924876E9 * DataNode.instance.storage.layoutVersion - 8.6233215111E10 * NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE + 228 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 2.6819037309562352E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2.75924876E9 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() - 8.6233215111E10 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() + 228 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 2.6819037309562352E16 == 0);
			}
		});
		invariants7999.add(new Invariant(7772, "1379624380 * DataNode.instance.storage.layoutVersion + 8.6233215111E10 * NameNode.instance.namesystem.fsImage.lastAppliedTxId + 114 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 1.341167448515895E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (1379624380 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() + 8.6233215111E10 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() + 114 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 1.341167448515895E16 == 0);
			}
		});
		invariants7999.add(new Invariant(7773, "4.5941491854E11 * DataNode.instance.storage.layoutVersion + 37962 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 2.8744405037E10 * NameNode.instance.namesystem.lazyPersistFileScrubberTS - 1.08441565381888346E18 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (4.5941491854E11 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() + 37962 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 2.8744405037E10 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() - 1.08441565381888346E18 == 0);
			}
		});
		invariants7999.add(new Invariant(7774, "1.3313375267E12 * DataNode.instance.storage.layoutVersion + 110010 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 8.6233215111E10 * NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime - 2.7972838323815695E18 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (1.3313375267E12 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() + 110010 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 8.6233215111E10 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() - 2.7972838323815695E18 == 0);
			}
		});
		invariants7999.add(new Invariant(7775, "548700822 * DataNode.instance.storage.layoutVersion - 38 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos + 2.8744405037E10 * blockManagerInstance.heartbeatManager.stats.nodesInService + 4.47055816171965E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (548700822 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() - 38 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() + 2.8744405037E10 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() + 4.47055816171965E15 == 0);
			}
		});
		invariants7999.add(new Invariant(7776, "10911744 * DataNode.instance.storage.layoutVersion - 311296 * NameNode.instance.namesystem.lazyPersistFileScrubberTS + 6327 * blockManagerInstance.heartbeatManager.stats.blockPoolUsed + 3.6622812332032E13 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (10911744 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() - 311296 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() + 6327 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() + 3.6622812332032E13 == 0);
			}
		});
		invariants7999.add(new Invariant(7777, "666 * DataNode.instance.storage.layoutVersion - 19 * NameNode.instance.namesystem.lazyPersistFileScrubberTS + 18981 * blockManagerInstance.heartbeatManager.stats.nodesInService + 2.235279073E9 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (666 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() - 19 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() + 18981 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() + 2.235279073E9 == 0);
			}
		});
		invariants7999.add(new Invariant(7778, "31621120 * DataNode.instance.storage.layoutVersion - 933888 * NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime + 18335 * blockManagerInstance.heartbeatManager.stats.blockPoolUsed + 1.09868070912E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (31621120 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() - 933888 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() + 18335 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() + 1.09868070912E14 == 0);
			}
		});
		invariants7999.add(new Invariant(7779, "1930 * DataNode.instance.storage.layoutVersion - 57 * NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime + 55005 * blockManagerInstance.heartbeatManager.stats.nodesInService + 6.705814875E9 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (1930 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() - 57 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() + 55005 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() + 6.705814875E9 == 0);
			}
		});
		invariants7999.add(new Invariant(7780, "1930 * DataNode.instance.storage.layoutVersion - 57 * NameNode.instance.namesystem.startTime + 55005 * blockManagerInstance.heartbeatManager.stats.nodesInService + 9.8688747835119E13 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (1930 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() - 57 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() + 55005 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() + 9.8688747835119E13 == 0);
			}
		});
		invariants7999.add(new Invariant(7781, "1496456186 * DataNode.instance.volumeChecker.numSyncDatasetChecks + 785639663 * NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE - 2 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos + 2.352532528442E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (1496456186 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() + 785639663 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() - 2 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() + 2.352532528442E14 == 0);
			}
		});
		invariants7999.add(new Invariant(7782, "748228093 * DataNode.instance.volumeChecker.numSyncDatasetChecks - 785639663 * NameNode.instance.namesystem.fsImage.lastAppliedTxId - NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos + 1.17646267413675E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (748228093 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() - 785639663 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() - ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() + 1.17646267413675E14 == 0);
			}
		});
		invariants7999.add(new Invariant(7783, "6.8617746038784E13 * DataNode.instance.volumeChecker.numSyncDatasetChecks + 49152 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 58415903 * blockManagerInstance.heartbeatManager.stats.blockPoolUsed - 5.782577499048788E18 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (6.8617746038784E13 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() + 49152 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 58415903 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() - 5.782577499048788E18 == 0);
			}
		});
		invariants7999.add(new Invariant(7784, "2.469153699E9 * DataNode.instance.volumeChecker.numSyncDatasetChecks + 3 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 748228093 * blockManagerInstance.heartbeatManager.stats.nodesInService - 3.52938802241025E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2.469153699E9 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() + 3 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 748228093 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() - 3.52938802241025E14 == 0);
			}
		});
		invariants7999.add(new Invariant(7785, "274350411 * DataNode.instance.xserver.balanceThrottler.curPeriodStart - 672 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos + 1.67603092832E11 * blockManagerInstance.heartbeatManager.stats.nodesInService + 4.6781914002860016E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (274350411 * ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() - 672 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() + 1.67603092832E11 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() + 4.6781914002860016E16 == 0);
			}
		});
		invariants7999.add(new Invariant(7786, "2.469153699E9 * NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE - 12 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos + 2.992912372E9 * blockManagerInstance.heartbeatManager.stats.nodesInService + 1.41163175127915E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2.469153699E9 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() - 12 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() + 2.992912372E9 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() + 1.41163175127915E15 == 0);
			}
		});
		invariants7999.add(new Invariant(7787, "2.469153699E9 * NameNode.instance.namesystem.fsImage.lastAppliedTxId + 6 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 1496456186 * blockManagerInstance.heartbeatManager.stats.nodesInService - 7.0587760448205E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2.469153699E9 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() + 6 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 1496456186 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() - 7.0587760448205E14 == 0);
			}
		});
		invariants7999.add(new Invariant(7788, "222 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 91450137 * NameNode.instance.namesystem.lazyPersistFileScrubberTS - 5.5368878882E10 * blockManagerInstance.heartbeatManager.stats.nodesInService - 1.5358704131147272E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (222 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 91450137 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() - 5.5368878882E10 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() - 1.5358704131147272E16 == 0);
			}
		});
		invariants7999.add(new Invariant(7789, "5790 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 2.469153699E9 * NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime - 1.44408021949E12 * blockManagerInstance.heartbeatManager.stats.nodesInService - 3.9068614089683661E17 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (5790 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 2.469153699E9 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() - 1.44408021949E12 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() - 3.9068614089683661E17 == 0);
			}
		});
		invariants7999.add(new Invariant(7790, "DataNode.instance.id.infoPort == 36801"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() == 36801);
			}
		});
		invariants7999.add(new Invariant(7791, "DataNode.instance.id.ipcPort == 46577"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() == 46577);
			}
		});
		invariants7999.add(new Invariant(7792, "DataNode.instance.id.nsInfo.cTime == 1731381980061L || DataNode.instance.id.nsInfo.cTime == 1731381986614L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() == 1731381980061L || ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() == 1731381986614L);
			}
		});
		invariants7999.add(new Invariant(7793, "DataNode.instance.id.nsInfo.namespaceID == 1166829558 || DataNode.instance.id.nsInfo.namespaceID == 1667342582"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() == 1166829558 || ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() == 1667342582);
			}
		});
		invariants7999.add(new Invariant(7794, "DataNode.instance.id.xferPort == 43011"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() == 43011);
			}
		});
		invariants7999.add(new Invariant(7795, "DataNode.instance.lastDiskErrorCheck == 118092793"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() == 118092793);
			}
		});
		invariants7999.add(new Invariant(7796, "DataNode.instance.storage.namespaceID == 0 || DataNode.instance.storage.namespaceID == 1166829558 || DataNode.instance.storage.namespaceID == 1667342582"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() == 1166829558 || ((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() == 1667342582);
			}
		});
		invariants7999.add(new Invariant(7797, "DataNode.instance.volumeChecker.lastAllVolumesCheck == 117192276 || DataNode.instance.volumeChecker.lastAllVolumesCheck == 118089239 || DataNode.instance.volumeChecker.lastAllVolumesCheck == 118092792"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() == 117192276 || ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() == 118089239 || ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() == 118092792);
			}
		});
		invariants7999.add(new Invariant(7798, "DataNode.instance.xserver.balanceThrottler.curPeriodStart == 118088484 || DataNode.instance.xserver.balanceThrottler.curPeriodStart == 118092278"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() == 118088484 || ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() == 118092278);
			}
		});
		invariants7999.add(new Invariant(7799, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE == 22 || NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE == 26"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() == 22 || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() == 26);
			}
		});
		invariants7999.add(new Invariant(7800, "NameNode.instance.namesystem.fsImage.lastAppliedTxId == 0 || NameNode.instance.namesystem.fsImage.lastAppliedTxId == 33"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() == 33);
			}
		});
		invariants7999.add(new Invariant(7801, "NameNode.instance.namesystem.lazyPersistFileScrubberTS == 118087199 || NameNode.instance.namesystem.lazyPersistFileScrubberTS == 118092057"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() == 118087199 || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() == 118092057);
			}
		});
		invariants7999.add(new Invariant(7802, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime == 118086474 || NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime == 118091754"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() == 118086474 || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() == 118091754);
			}
		});
		invariants7999.add(new Invariant(7803, "NameNode.instance.namesystem.startTime == 1731381981566L || NameNode.instance.namesystem.startTime == 1731381986846L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() == 1731381981566L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() == 1731381986846L);
			}
		});
		invariants7999.add(new Invariant(7804, "blockManagerInstance.bmSafeMode.startTime == 0 || blockManagerInstance.bmSafeMode.startTime == 118092017"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() == 118092017);
			}
		});
		invariants7999.add(new Invariant(7805, "blockManagerInstance.invalidateBlocks.startupTime == 118091757"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue() == 118091757);
			}
		});
		invariants7999.add(new Invariant(7806, "daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE) == 0 || daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE) == 1 || daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE) == 6"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))) == 0 || daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))) == 1 || daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))) == 6);
			}
		});
		invariants7999.add(new Invariant(7807, "DataNode.instance.NUM_CORES > NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.NUM_CORES"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7808, "DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION != daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants7999.add(new Invariant(7809, "DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION != daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0])))-1);
			}
		});
		invariants7999.add(new Invariant(7810, "DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME != daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0])))-1);
			}
		});
		invariants7999.add(new Invariant(7811, "DataNode.instance.data.volsConfigured != daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants7999.add(new Invariant(7812, "DataNode.instance.data.volsConfigured != daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0])))-1);
			}
		});
		invariants7999.add(new Invariant(7813, "DataNode.instance.directoryScanner.diffs.serialVersionUID != daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.diffs.serialVersionUID"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0])))-1);
			}
		});
		invariants7999.add(new Invariant(7814, "DataNode.instance.dnConf.volsConfigured != daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.volsConfigured"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants7999.add(new Invariant(7815, "DataNode.instance.dnConf.volsConfigured != daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.volsConfigured"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0])))-1);
			}
		});
		invariants7999.add(new Invariant(7816, "DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS != daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0])))-1);
			}
		});
		invariants7999.add(new Invariant(7817, "DataNode.instance.httpServer.HTTP_MAX_THREADS != daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_MAX_THREADS"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants7999.add(new Invariant(7818, "DataNode.instance.httpServer.HTTP_MAX_THREADS != daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_MAX_THREADS"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0])))-1);
			}
		});
		invariants7999.add(new Invariant(7819, "DataNode.instance.volumeChecker.numSyncDatasetChecks != daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0])))-1);
			}
		});
		invariants7999.add(new Invariant(7820, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE != NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() != ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7821, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE != NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() != ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7822, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE < blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7823, "NameNode.instance.namesystem.dir.inodeXAttrsLimit != NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.inodeXAttrsLimit"))).intValue() != ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7824, "blockManagerInstance.blockReportLeaseManager.maxPending >= daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.maxPending"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants7999.add(new Invariant(7825, "blockManagerInstance.bmSafeMode.startTime != daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants7999.add(new Invariant(7826, "blockManagerInstance.bmSafeMode.startTime != daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0])))-1);
			}
		});
		invariants7999.add(new Invariant(7827, "blockManagerInstance.datanodeManager.heartbeatIntervalSeconds != daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatIntervalSeconds"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants7999.add(new Invariant(7828, "blockManagerInstance.datanodeManager.heartbeatIntervalSeconds != daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatIntervalSeconds"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0])))-1);
			}
		});
		invariants7999.add(new Invariant(7829, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed != daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0])))-1);
			}
		});
		invariants7999.add(new Invariant(7830, "blockManagerInstance.heartbeatManager.stats.capacityRemaining != daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0])))-1);
			}
		});
		invariants7999.add(new Invariant(7831, "blockManagerInstance.heartbeatManager.stats.capacityTotal != daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0])))-1);
			}
		});
		invariants7999.add(new Invariant(7832, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs != daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0])))-1);
			}
		});
		invariants7999.add(new Invariant(7833, "blockManagerInstance.heartbeatManager.stats.nodesInService != daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0])))-1);
			}
		});
		invariants7999.add(new Invariant(7834, "blockManagerInstance.neededReconstruction.LEVEL != daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.LEVEL"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants7999.add(new Invariant(7835, "blockManagerInstance.neededReconstruction.LEVEL >= daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.LEVEL"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0])))-1);
			}
		});
		invariants7999.add(new Invariant(7836, "680226914 * DataNode.instance.storage.layoutVersion + 7.9404063522E10 * DataNode.instance.volumeChecker.numSyncDatasetChecks + 57 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 6.731247295770951E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (680226914 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() + 7.9404063522E10 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() + 57 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 6.731247295770951E15 == 0);
			}
		});
		invariants7999.add(new Invariant(7837, "62160896 * DataNode.instance.storage.layoutVersion - 933888 * DataNode.instance.xserver.balanceThrottler.curPeriodStart + 36043 * blockManagerInstance.heartbeatManager.stats.blockPoolUsed + 1.10284961316864E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (62160896 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() - 933888 * ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() + 36043 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() + 1.10284961316864E14 == 0);
			}
		});
		invariants7999.add(new Invariant(7838, "3794 * DataNode.instance.storage.layoutVersion - 57 * DataNode.instance.xserver.balanceThrottler.curPeriodStart + 108129 * blockManagerInstance.heartbeatManager.stats.nodesInService + 6.731259846E9 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (3794 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() - 57 * ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() + 108129 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() + 6.731259846E9 == 0);
			}
		});
		invariants7999.add(new Invariant(7839, "1360453828 * DataNode.instance.storage.layoutVersion - 3.9702031761E10 * NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE + 114 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 1.3461462338716116E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (1360453828 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() - 3.9702031761E10 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() + 114 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 1.3461462338716116E16 == 0);
			}
		});
		invariants7999.add(new Invariant(7840, "7.482496054E9 * DataNode.instance.storage.layoutVersion + 2.6468021174E10 * NameNode.instance.namesystem.fsImage.lastAppliedTxId + 627 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 7.4043720253480464E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (7.482496054E9 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() + 2.6468021174E10 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() + 627 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 7.4043720253480464E16 == 0);
			}
		});
		invariants7999.add(new Invariant(7841, "237608944 * DataNode.instance.storage.layoutVersion - 19 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos + 1.3234010587E10 * blockManagerInstance.heartbeatManager.stats.nodesInService + 2.243749098590317E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (237608944 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() - 19 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() + 1.3234010587E10 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() + 2.243749098590317E15 == 0);
			}
		});
		invariants7999.add(new Invariant(7842, "680226914 * DataNode.instance.storage.layoutVersion + 57 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos + 1.3234010587E10 * daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE) - 6.731247295770951E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (680226914 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() + 57 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() + 1.3234010587E10 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))) - 6.731247295770951E15 == 0);
			}
		});
		invariants7999.add(new Invariant(7843, "680226914 * DataNode.instance.storage.layoutVersion + 57 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos + 1.3234010587E10 * daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)-1 - 6.731234061760364E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (680226914 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() + 57 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() + 1.3234010587E10 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0])))-1 - 6.731234061760364E15 == 0);
			}
		});
		invariants7999.add(new Invariant(7844, "79593472 * DataNode.instance.storage.layoutVersion - 933888 * NameNode.instance.namesystem.lazyPersistFileScrubberTS + 46151 * blockManagerInstance.heartbeatManager.stats.blockPoolUsed + 1.10284754927616E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (79593472 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() - 933888 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() + 46151 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() + 1.10284754927616E14 == 0);
			}
		});
		invariants7999.add(new Invariant(7845, "4858 * DataNode.instance.storage.layoutVersion - 57 * NameNode.instance.namesystem.lazyPersistFileScrubberTS + 138453 * blockManagerInstance.heartbeatManager.stats.nodesInService + 6.731247249E9 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (4858 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() - 57 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() + 138453 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() + 6.731247249E9 == 0);
			}
		});
		invariants7999.add(new Invariant(7846, "1802240 * DataNode.instance.storage.layoutVersion - 19456 * NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime + 1045 * blockManagerInstance.heartbeatManager.stats.blockPoolUsed + 2.297593165824E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (1802240 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() - 19456 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() + 1045 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() + 2.297593165824E12 == 0);
			}
		});
		invariants7999.add(new Invariant(7847, "1760 * DataNode.instance.storage.layoutVersion - 19 * NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime + 50160 * blockManagerInstance.heartbeatManager.stats.nodesInService + 2.243743326E9 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (1760 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() - 19 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() + 50160 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() + 2.243743326E9 == 0);
			}
		});
		invariants7999.add(new Invariant(7848, "1760 * DataNode.instance.storage.layoutVersion - 19 * NameNode.instance.namesystem.startTime + 50160 * blockManagerInstance.heartbeatManager.stats.nodesInService + 3.2896257750074E13 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (1760 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() - 19 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() + 50160 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() + 3.2896257750074E13 == 0);
			}
		});
		invariants7999.add(new Invariant(7849, "81944338 * DataNode.instance.volumeChecker.lastAllVolumesCheck - 7.3792187478408E13 * DataNode.instance.volumeChecker.numSyncDatasetChecks - 209 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos + 1.5078138776385226E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (81944338 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() - 7.3792187478408E13 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() - 209 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() + 1.5078138776385226E16 == 0);
			}
		});
		invariants7999.add(new Invariant(7850, "186482688 * DataNode.instance.volumeChecker.numSyncDatasetChecks + 49152 * DataNode.instance.xserver.balanceThrottler.curPeriodStart - 1897 * blockManagerInstance.heartbeatManager.stats.blockPoolUsed - 5.804471648256E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (186482688 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() + 49152 * ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() - 1897 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() - 5.804471648256E12 == 0);
			}
		});
		invariants7999.add(new Invariant(7851, "3794 * DataNode.instance.volumeChecker.numSyncDatasetChecks + DataNode.instance.xserver.balanceThrottler.curPeriodStart - 1897 * blockManagerInstance.heartbeatManager.stats.nodesInService - 118092278 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (3794 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() + ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() - 1897 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() - 118092278 == 0);
			}
		});
		invariants7999.add(new Invariant(7852, "238780416 * DataNode.instance.volumeChecker.numSyncDatasetChecks + 49152 * NameNode.instance.namesystem.lazyPersistFileScrubberTS - 2429 * blockManagerInstance.heartbeatManager.stats.blockPoolUsed - 5.804460785664E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (238780416 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() + 49152 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() - 2429 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() - 5.804460785664E12 == 0);
			}
		});
		invariants7999.add(new Invariant(7853, "4858 * DataNode.instance.volumeChecker.numSyncDatasetChecks + NameNode.instance.namesystem.lazyPersistFileScrubberTS - 2429 * blockManagerInstance.heartbeatManager.stats.nodesInService - 118092057 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (4858 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() + ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() - 2429 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() - 118092057 == 0);
			}
		});
		invariants7999.add(new Invariant(7854, "5406720 * DataNode.instance.volumeChecker.numSyncDatasetChecks + 1024 * NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime - 55 * blockManagerInstance.heartbeatManager.stats.blockPoolUsed - 1.20925956096E11 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (5406720 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() + 1024 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() - 55 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() - 1.20925956096E11 == 0);
			}
		});
		invariants7999.add(new Invariant(7855, "5280 * DataNode.instance.volumeChecker.numSyncDatasetChecks + NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime - 2640 * blockManagerInstance.heartbeatManager.stats.nodesInService - 118091754 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (5280 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() + ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() - 2640 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() - 118091754 == 0);
			}
		});
		invariants7999.add(new Invariant(7856, "5406720 * DataNode.instance.volumeChecker.numSyncDatasetChecks + 1024 * NameNode.instance.namesystem.startTime - 55 * blockManagerInstance.heartbeatManager.stats.blockPoolUsed - 1.772935154530304E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (5406720 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() + 1024 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() - 55 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() - 1.772935154530304E15 == 0);
			}
		});
		invariants7999.add(new Invariant(7857, "5280 * DataNode.instance.volumeChecker.numSyncDatasetChecks + NameNode.instance.namesystem.startTime - 2640 * blockManagerInstance.heartbeatManager.stats.nodesInService - 1.731381986846E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (5280 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() + ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() - 2640 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() - 1.731381986846E12 == 0);
			}
		});
		invariants7999.add(new Invariant(7858, "356413416 * DataNode.instance.xserver.balanceThrottler.curPeriodStart - 1897 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos + 4.77123110835E11 * blockManagerInstance.heartbeatManager.stats.nodesInService + 1.81930961480368416E17 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (356413416 * ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() - 1897 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() + 4.77123110835E11 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() + 1.81930961480368416E17 == 0);
			}
		});
		invariants7999.add(new Invariant(7859, "511449069 * DataNode.instance.xserver.balanceThrottler.curPeriodStart - 271 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos + 2.91210282719E11 * daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE) - 2.8395237969822028E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (511449069 * ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() - 271 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() + 2.91210282719E11 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))) - 2.8395237969822028E16 == 0);
			}
		});
		invariants7999.add(new Invariant(7860, "511449069 * DataNode.instance.xserver.balanceThrottler.curPeriodStart - 271 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos + 2.91210282719E11 * daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)-1 - 2.8394946759539308E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (511449069 * ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() - 271 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() + 2.91210282719E11 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0])))-1 - 2.8394946759539308E16 == 0);
			}
		});
		invariants7999.add(new Invariant(7861, "178206708 * NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE - NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos + 251514555 * blockManagerInstance.heartbeatManager.stats.nodesInService + 1.18087424446135E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (178206708 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() - ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() + 251514555 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() + 1.18087424446135E14 == 0);
			}
		});
		invariants7999.add(new Invariant(7862, "3.580143483E9 * NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE - 2 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos + 2.149153378E9 * daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE) + 2.36091031910528E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (3.580143483E9 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() - 2 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() + 2.149153378E9 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))) + 2.36091031910528E14 == 0);
			}
		});
		invariants7999.add(new Invariant(7863, "3.580143483E9 * NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE - 2 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos + 2.149153378E9 * daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)-1 + 2.36093181063906E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (3.580143483E9 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() - 2 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() + 2.149153378E9 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0])))-1 + 2.36093181063906E14 == 0);
			}
		});
		invariants7999.add(new Invariant(7864, "237608944 * NameNode.instance.namesystem.fsImage.lastAppliedTxId + 11 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 2.766660105E9 * blockManagerInstance.heartbeatManager.stats.nodesInService - 1.299012636025973E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (237608944 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() + 11 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 2.766660105E9 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() - 1.299012636025973E15 == 0);
			}
		});
		invariants7999.add(new Invariant(7865, "2.386762322E9 * NameNode.instance.namesystem.fsImage.lastAppliedTxId + 11 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 1.1820343579E10 * daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE) - 1.299012636025973E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2.386762322E9 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() + 11 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 1.1820343579E10 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))) - 1.299012636025973E15 == 0);
			}
		});
		invariants7999.add(new Invariant(7866, "2.386762322E9 * NameNode.instance.namesystem.fsImage.lastAppliedTxId + 11 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 1.1820343579E10 * daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)-1 - 1.299024456369552E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2.386762322E9 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() + 11 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 1.1820343579E10 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0])))-1 - 1.299024456369552E15 == 0);
			}
		});
		invariants7999.add(new Invariant(7867, "7 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 1027128 * NameNode.instance.namesystem.lazyPersistFileScrubberTS - 1760601885 * blockManagerInstance.heartbeatManager.stats.nodesInService - 7.05348746421505E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (7 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 1027128 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() - 1760601885 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() - 7.05348746421505E14 == 0);
			}
		});
		invariants7999.add(new Invariant(7868, "110 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 14850559 * NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime - 2.766660105E10 * blockManagerInstance.heartbeatManager.stats.nodesInService - 1.1236397800069244E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (110 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 14850559 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() - 2.766660105E10 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() - 1.1236397800069244E16 == 0);
			}
		});
		invariants7999.add(new Invariant(7869, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 251514555 * blockManagerInstance.heartbeatManager.stats.nodesInService + 118804472 * daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE) - 1.18092057820543E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 251514555 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() + 118804472 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))) - 1.18092057820543E14 == 0);
			}
		});
		invariants7999.add(new Invariant(7870, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 251514555 * blockManagerInstance.heartbeatManager.stats.nodesInService + 118804472 * daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)-1 - 1.18091939016071E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 251514555 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() + 118804472 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0])))-1 - 1.18091939016071E14 == 0);
			}
		});
		invariants7999.add(new Invariant(7871, "DataNode.instance.id.infoPort == 45137"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() == 45137);
			}
		});
		invariants7999.add(new Invariant(7872, "DataNode.instance.id.ipcPort == 43449"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() == 43449);
			}
		});
		invariants7999.add(new Invariant(7873, "DataNode.instance.id.nsInfo.cTime == 1731381980061L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() == 1731381980061L);
			}
		});
		invariants7999.add(new Invariant(7874, "DataNode.instance.id.nsInfo.namespaceID == 1667342582"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() == 1667342582);
			}
		});
		invariants7999.add(new Invariant(7875, "DataNode.instance.id.xferPort == 45473"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() == 45473);
			}
		});
		invariants7999.add(new Invariant(7876, "DataNode.instance.lastDiskErrorCheck == 118089246"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() == 118089246);
			}
		});
		invariants7999.add(new Invariant(7877, "DataNode.instance.storage.namespaceID == 1667342582"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() == 1667342582);
			}
		});
		invariants7999.add(new Invariant(7878, "DataNode.instance.volumeChecker.lastAllVolumesCheck == 117188483 || DataNode.instance.volumeChecker.lastAllVolumesCheck == 118089239"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() == 117188483 || ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() == 118089239);
			}
		});
		invariants7999.add(new Invariant(7879, "DataNode.instance.xserver.balanceThrottler.curPeriodStart == 118088484"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() == 118088484);
			}
		});
		invariants7999.add(new Invariant(7880, "NameNode.instance.namesystem.lazyPersistFileScrubberTS == 118087199"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() == 118087199);
			}
		});
		invariants7999.add(new Invariant(7881, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime == 118086474"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() == 118086474);
			}
		});
		invariants7999.add(new Invariant(7882, "NameNode.instance.namesystem.startTime == 1731381981566L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() == 1731381981566L);
			}
		});
		invariants7999.add(new Invariant(7883, "blockManagerInstance.blockReportLeaseManager.nextId == 1250788065119299552L || blockManagerInstance.blockReportLeaseManager.nextId == 1250788065119299555L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() == 1250788065119299552L || ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() == 1250788065119299555L);
			}
		});
		invariants7999.add(new Invariant(7884, "blockManagerInstance.blockReportLeaseManager.numPending == 0 || blockManagerInstance.blockReportLeaseManager.numPending == 3"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue() == 3);
			}
		});
		invariants7999.add(new Invariant(7885, "blockManagerInstance.bmSafeMode.startTime == 0 || blockManagerInstance.bmSafeMode.startTime == 118087159"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() == 118087159);
			}
		});
		invariants7999.add(new Invariant(7886, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 0 || blockManagerInstance.heartbeatManager.stats.capacityRemaining == 280399847424L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 280399847424L);
			}
		});
		invariants7999.add(new Invariant(7887, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 0 || blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 101284724736L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 101284724736L);
			}
		});
		invariants7999.add(new Invariant(7888, "blockManagerInstance.invalidateBlocks.startupTime == 118086476"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue() == 118086476);
			}
		});
		invariants7999.add(new Invariant(7889, "blockManagerInstance.lastRedundancyCycleTS == -1 || blockManagerInstance.lastRedundancyCycleTS == 118090159"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == -1 || ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118090159);
			}
		});
		invariants7999.add(new Invariant(7890, "DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT < blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7891, "DataNode.instance.NUM_CORES > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.NUM_CORES"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7892, "DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7893, "DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION >= blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue() >= ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7894, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME != blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7895, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7896, "DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7897, "DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7898, "DataNode.instance.data.asyncDiskService.numDeletedBlocks <= blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7899, "DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME != blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7900, "DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7901, "DataNode.instance.data.cacheManager.numBlocksCached <= blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7902, "DataNode.instance.data.cacheManager.revocationMs > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7903, "DataNode.instance.data.cacheManager.revocationPollingMs > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationPollingMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7904, "DataNode.instance.data.maxDataLength > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.maxDataLength"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7905, "DataNode.instance.data.smallBufferSize > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.smallBufferSize"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7906, "DataNode.instance.data.volsConfigured != blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7907, "DataNode.instance.directoryScanner.MILLIS_PER_SECOND > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.MILLIS_PER_SECOND"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7908, "DataNode.instance.directoryScanner.scanPeriodMsecs > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.scanPeriodMsecs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7909, "DataNode.instance.diskBalancer.bandwidth > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.bandwidth"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7910, "DataNode.instance.diskBalancer.planValidityInterval > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.planValidityInterval"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7911, "DataNode.instance.dnConf.blockReportInterval > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportInterval"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7912, "DataNode.instance.dnConf.blockReportSplitThreshold > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportSplitThreshold"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7913, "DataNode.instance.dnConf.bpReadyTimeout > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.bpReadyTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7914, "DataNode.instance.dnConf.cacheReportInterval > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.cacheReportInterval"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7915, "DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7916, "DataNode.instance.dnConf.heartBeatInterval > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.heartBeatInterval"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7917, "DataNode.instance.dnConf.ibrInterval <= blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7918, "DataNode.instance.dnConf.lifelineIntervalMs > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.lifelineIntervalMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7919, "DataNode.instance.dnConf.maxDataLength > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.maxDataLength"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7920, "DataNode.instance.dnConf.outliersReportIntervalMs > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.outliersReportIntervalMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7921, "DataNode.instance.dnConf.readaheadLength > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.readaheadLength"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7922, "DataNode.instance.dnConf.restartReplicaExpiry > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.restartReplicaExpiry"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7923, "DataNode.instance.dnConf.socketKeepaliveTimeout > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketKeepaliveTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7924, "DataNode.instance.dnConf.socketTimeout > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7925, "DataNode.instance.dnConf.socketWriteTimeout > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketWriteTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7926, "DataNode.instance.dnConf.volsConfigured != blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.volsConfigured"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7927, "DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS != blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7928, "DataNode.instance.httpServer.HTTP_MAX_THREADS > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_MAX_THREADS"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7929, "DataNode.instance.id.infoPort > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7930, "DataNode.instance.id.ipcPort > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7931, "DataNode.instance.id.nsInfo.cTime > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7932, "DataNode.instance.id.nsInfo.layoutVersion < blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7933, "DataNode.instance.id.nsInfo.namespaceID > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7934, "DataNode.instance.id.xferPort > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7935, "DataNode.instance.lastDiskErrorCheck > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7936, "DataNode.instance.shortCircuitRegistry.SHM_LENGTH > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.shortCircuitRegistry.SHM_LENGTH"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7937, "DataNode.instance.storage.layoutVersion < blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7938, "DataNode.instance.storage.namespaceID > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7939, "DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7940, "DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7941, "DataNode.instance.volumeChecker.lastAllVolumesCheck > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7942, "DataNode.instance.xserver.balanceThrottler.bytesPerPeriod > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.bytesPerPeriod"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7943, "DataNode.instance.xserver.balanceThrottler.curPeriodStart > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7944, "DataNode.instance.xserver.balanceThrottler.maxThreads > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.maxThreads"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7945, "DataNode.instance.xserver.balanceThrottler.period > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.period"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7946, "DataNode.instance.xserver.balanceThrottler.periodExtension > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.periodExtension"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7947, "DataNode.instance.xserver.estimateBlockSize > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.estimateBlockSize"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7948, "DataNode.instance.xserver.maxXceiverCount > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.maxXceiverCount"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7949, "NameNode.instance.DEFAULT_PORT > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.DEFAULT_PORT"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7950, "NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7951, "NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7952, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7953, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size < blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7954, "NameNode.instance.namesystem.blockDeletionIncrement > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.blockDeletionIncrement"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7955, "NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7956, "NameNode.instance.namesystem.cacheManager.scanIntervalMs > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.scanIntervalMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7957, "NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7958, "NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7959, "NameNode.instance.namesystem.dir.inodeXAttrsLimit > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.inodeXAttrsLimit"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7960, "NameNode.instance.namesystem.dir.maxComponentLength > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxComponentLength"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7961, "NameNode.instance.namesystem.dir.maxDirItems > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxDirItems"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7962, "NameNode.instance.namesystem.dir.xattrMaxSize > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.xattrMaxSize"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7963, "NameNode.instance.namesystem.editLogRollerThreshold > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogRollerThreshold"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7964, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7965, "NameNode.instance.namesystem.lazyPersistFileScrubberTS > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7966, "NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7967, "NameNode.instance.namesystem.leaseManager.hardLimit > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.hardLimit"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7968, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7969, "NameNode.instance.namesystem.leaseRecheckIntervalMs > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseRecheckIntervalMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7970, "NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7971, "NameNode.instance.namesystem.nnResourceChecker.duReserved > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.nnResourceChecker.duReserved"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7972, "NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7973, "NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7974, "NameNode.instance.namesystem.startTime > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7975, "blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7976, "blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7977, "blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7978, "blockManagerInstance.blockIdManager.legacyGenerationStampLimit <= blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStampLimit"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7979, "blockManagerInstance.blockReportLeaseManager.leaseExpiryMs > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.leaseExpiryMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7980, "blockManagerInstance.blockReportLeaseManager.maxPending > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.maxPending"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7981, "blockManagerInstance.blockReportLeaseManager.nextId > blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7982, "2 * blockManagerInstance.blockReportLeaseManager.nextId - 3 * daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE) - -2147483648 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2 * ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() - 3 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))) - -2147483648 == 0);
			}
		});
		invariants7999.add(new Invariant(7983, "blockManagerInstance.blockReportLeaseManager.numPending < blockManagerInstance.blockReportThread.MAX_LOCK_HOLD_MS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportThread.MAX_LOCK_HOLD_MS"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7984, "blockManagerInstance.blockReportLeaseManager.numPending < blockManagerInstance.blocksMap.capacity"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blocksMap.capacity"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7985, "blockManagerInstance.blockReportLeaseManager.numPending < blockManagerInstance.blocksPerPostpondedRescan"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blocksPerPostpondedRescan"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7986, "blockManagerInstance.blockReportLeaseManager.numPending != blockManagerInstance.blocksReplWorkMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blocksReplWorkMultiplier"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7987, "blockManagerInstance.blockReportLeaseManager.numPending < blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7988, "blockManagerInstance.blockReportLeaseManager.numPending > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.size"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7989, "blockManagerInstance.blockReportLeaseManager.numPending != blockManagerInstance.bmSafeMode.safeReplication"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.safeReplication"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7990, "blockManagerInstance.blockReportLeaseManager.numPending <= blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7991, "blockManagerInstance.blockReportLeaseManager.numPending < blockManagerInstance.datanodeManager.defaultInfoPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoPort"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7992, "blockManagerInstance.blockReportLeaseManager.numPending < blockManagerInstance.datanodeManager.defaultInfoSecurePort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoSecurePort"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7993, "blockManagerInstance.blockReportLeaseManager.numPending < blockManagerInstance.datanodeManager.defaultIpcPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultIpcPort"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7994, "blockManagerInstance.blockReportLeaseManager.numPending < blockManagerInstance.datanodeManager.defaultXferPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultXferPort"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7995, "blockManagerInstance.blockReportLeaseManager.numPending < blockManagerInstance.datanodeManager.heartbeatExpireInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatExpireInterval"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7996, "blockManagerInstance.blockReportLeaseManager.numPending <= blockManagerInstance.datanodeManager.heartbeatIntervalSeconds"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatIntervalSeconds"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7997, "blockManagerInstance.blockReportLeaseManager.numPending < blockManagerInstance.datanodeManager.heartbeatManager.REPORT_STALE_NODE_NODES_PER_LINE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatManager.REPORT_STALE_NODE_NODES_PER_LINE"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7998, "blockManagerInstance.blockReportLeaseManager.numPending < blockManagerInstance.datanodeManager.staleInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.staleInterval"))).intValue());
			}
		});
		invariants7999.add(new Invariant(7999, "blockManagerInstance.blockReportLeaseManager.numPending <= blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
	}
	static {
installInv7999();	}
}
