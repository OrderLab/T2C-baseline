package daikon.hdfs;
import daikon.*;
import java.util.Set;
import java.util.ArrayList;
import java.util.List;
//this class is automatically generated by our scripts
public class InvariantPool1999{

	public static List<Invariant> invariants1999 = new ArrayList<>();

	public static void installInv1999(){
		invariants1999.add(new Invariant(1000, "DataNode.instance.dnConf.maxDataLength > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.maxDataLength"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1001, "DataNode.instance.dnConf.maxDataLength > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.maxDataLength"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1002, "DataNode.instance.dnConf.outliersReportIntervalMs < DataNode.instance.volumeChecker.lastAllVolumesCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.outliersReportIntervalMs"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1003, "DataNode.instance.dnConf.outliersReportIntervalMs > DataNode.instance.volumeChecker.numSyncDatasetChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.outliersReportIntervalMs"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1004, "DataNode.instance.dnConf.outliersReportIntervalMs < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.outliersReportIntervalMs"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1005, "DataNode.instance.dnConf.outliersReportIntervalMs < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.outliersReportIntervalMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1006, "DataNode.instance.dnConf.outliersReportIntervalMs > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.outliersReportIntervalMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1007, "DataNode.instance.dnConf.outliersReportIntervalMs < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.outliersReportIntervalMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1008, "DataNode.instance.dnConf.outliersReportIntervalMs > blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.outliersReportIntervalMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1009, "DataNode.instance.dnConf.outliersReportIntervalMs != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.outliersReportIntervalMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1010, "DataNode.instance.dnConf.outliersReportIntervalMs != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.outliersReportIntervalMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1011, "DataNode.instance.dnConf.outliersReportIntervalMs != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.outliersReportIntervalMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1012, "DataNode.instance.dnConf.outliersReportIntervalMs > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.outliersReportIntervalMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1013, "DataNode.instance.dnConf.outliersReportIntervalMs != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.outliersReportIntervalMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1014, "DataNode.instance.dnConf.outliersReportIntervalMs > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.outliersReportIntervalMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1015, "DataNode.instance.dnConf.outliersReportIntervalMs > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.outliersReportIntervalMs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1016, "DataNode.instance.dnConf.outliersReportIntervalMs > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.outliersReportIntervalMs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1017, "DataNode.instance.dnConf.readaheadLength < DataNode.instance.volumeChecker.lastAllVolumesCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.readaheadLength"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1018, "DataNode.instance.dnConf.readaheadLength > DataNode.instance.volumeChecker.numSyncDatasetChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.readaheadLength"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1019, "DataNode.instance.dnConf.readaheadLength < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.readaheadLength"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1020, "DataNode.instance.dnConf.readaheadLength < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.readaheadLength"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1021, "DataNode.instance.dnConf.readaheadLength > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.readaheadLength"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1022, "DataNode.instance.dnConf.readaheadLength < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.readaheadLength"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1023, "DataNode.instance.dnConf.readaheadLength > blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.readaheadLength"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1024, "DataNode.instance.dnConf.readaheadLength != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.readaheadLength"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1025, "DataNode.instance.dnConf.readaheadLength != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.readaheadLength"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1026, "DataNode.instance.dnConf.readaheadLength != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.readaheadLength"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1027, "DataNode.instance.dnConf.readaheadLength > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.readaheadLength"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1028, "DataNode.instance.dnConf.readaheadLength != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.readaheadLength"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1029, "DataNode.instance.dnConf.readaheadLength > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.readaheadLength"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1030, "DataNode.instance.dnConf.readaheadLength > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.readaheadLength"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1031, "DataNode.instance.dnConf.readaheadLength > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.readaheadLength"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1032, "DataNode.instance.dnConf.restartReplicaExpiry < DataNode.instance.volumeChecker.lastAllVolumesCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.restartReplicaExpiry"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1033, "DataNode.instance.dnConf.restartReplicaExpiry > DataNode.instance.volumeChecker.numSyncDatasetChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.restartReplicaExpiry"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1034, "DataNode.instance.dnConf.restartReplicaExpiry < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.restartReplicaExpiry"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1035, "DataNode.instance.dnConf.restartReplicaExpiry < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.restartReplicaExpiry"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1036, "DataNode.instance.dnConf.restartReplicaExpiry > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.restartReplicaExpiry"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1037, "DataNode.instance.dnConf.restartReplicaExpiry < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.restartReplicaExpiry"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1038, "DataNode.instance.dnConf.restartReplicaExpiry > blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.restartReplicaExpiry"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1039, "DataNode.instance.dnConf.restartReplicaExpiry != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.restartReplicaExpiry"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1040, "DataNode.instance.dnConf.restartReplicaExpiry != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.restartReplicaExpiry"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1041, "DataNode.instance.dnConf.restartReplicaExpiry != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.restartReplicaExpiry"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1042, "DataNode.instance.dnConf.restartReplicaExpiry > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.restartReplicaExpiry"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1043, "DataNode.instance.dnConf.restartReplicaExpiry != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.restartReplicaExpiry"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1044, "DataNode.instance.dnConf.restartReplicaExpiry > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.restartReplicaExpiry"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1045, "DataNode.instance.dnConf.restartReplicaExpiry > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.restartReplicaExpiry"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1046, "DataNode.instance.dnConf.restartReplicaExpiry > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.restartReplicaExpiry"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1047, "DataNode.instance.dnConf.socketKeepaliveTimeout < DataNode.instance.volumeChecker.lastAllVolumesCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketKeepaliveTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1048, "DataNode.instance.dnConf.socketKeepaliveTimeout > DataNode.instance.volumeChecker.numSyncDatasetChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketKeepaliveTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1049, "DataNode.instance.dnConf.socketKeepaliveTimeout < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketKeepaliveTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1050, "DataNode.instance.dnConf.socketKeepaliveTimeout < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketKeepaliveTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1051, "DataNode.instance.dnConf.socketKeepaliveTimeout > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketKeepaliveTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1052, "DataNode.instance.dnConf.socketKeepaliveTimeout < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketKeepaliveTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1053, "DataNode.instance.dnConf.socketKeepaliveTimeout != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketKeepaliveTimeout"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1054, "DataNode.instance.dnConf.socketKeepaliveTimeout != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketKeepaliveTimeout"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1055, "DataNode.instance.dnConf.socketKeepaliveTimeout != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketKeepaliveTimeout"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1056, "DataNode.instance.dnConf.socketKeepaliveTimeout != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketKeepaliveTimeout"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1057, "DataNode.instance.dnConf.socketKeepaliveTimeout > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketKeepaliveTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1058, "DataNode.instance.dnConf.socketKeepaliveTimeout != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketKeepaliveTimeout"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1059, "DataNode.instance.dnConf.socketKeepaliveTimeout > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketKeepaliveTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1060, "DataNode.instance.dnConf.socketKeepaliveTimeout > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketKeepaliveTimeout"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1061, "DataNode.instance.dnConf.socketKeepaliveTimeout > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketKeepaliveTimeout"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1062, "DataNode.instance.dnConf.socketTimeout < DataNode.instance.volumeChecker.lastAllVolumesCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1063, "DataNode.instance.dnConf.socketTimeout > DataNode.instance.volumeChecker.numSyncDatasetChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1064, "DataNode.instance.dnConf.socketTimeout < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1065, "DataNode.instance.dnConf.socketTimeout < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1066, "DataNode.instance.dnConf.socketTimeout > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1067, "DataNode.instance.dnConf.socketTimeout < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1068, "DataNode.instance.dnConf.socketTimeout > blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1069, "DataNode.instance.dnConf.socketTimeout != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketTimeout"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1070, "DataNode.instance.dnConf.socketTimeout != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketTimeout"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1071, "DataNode.instance.dnConf.socketTimeout != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketTimeout"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1072, "DataNode.instance.dnConf.socketTimeout > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1073, "DataNode.instance.dnConf.socketTimeout != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketTimeout"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1074, "DataNode.instance.dnConf.socketTimeout > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1075, "DataNode.instance.dnConf.socketTimeout > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketTimeout"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1076, "DataNode.instance.dnConf.socketTimeout > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketTimeout"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1077, "DataNode.instance.dnConf.socketWriteTimeout < DataNode.instance.volumeChecker.lastAllVolumesCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketWriteTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1078, "DataNode.instance.dnConf.socketWriteTimeout > DataNode.instance.volumeChecker.numSyncDatasetChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketWriteTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1079, "DataNode.instance.dnConf.socketWriteTimeout < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketWriteTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1080, "DataNode.instance.dnConf.socketWriteTimeout < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketWriteTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1081, "DataNode.instance.dnConf.socketWriteTimeout > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketWriteTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1082, "DataNode.instance.dnConf.socketWriteTimeout < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketWriteTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1083, "DataNode.instance.dnConf.socketWriteTimeout > blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketWriteTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1084, "DataNode.instance.dnConf.socketWriteTimeout != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketWriteTimeout"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1085, "DataNode.instance.dnConf.socketWriteTimeout != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketWriteTimeout"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1086, "DataNode.instance.dnConf.socketWriteTimeout != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketWriteTimeout"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1087, "DataNode.instance.dnConf.socketWriteTimeout > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketWriteTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1088, "DataNode.instance.dnConf.socketWriteTimeout != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketWriteTimeout"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1089, "DataNode.instance.dnConf.socketWriteTimeout > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketWriteTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1090, "DataNode.instance.dnConf.socketWriteTimeout > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketWriteTimeout"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1091, "DataNode.instance.dnConf.socketWriteTimeout > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketWriteTimeout"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1092, "DataNode.instance.dnConf.volsConfigured < DataNode.instance.volumeChecker.lastAllVolumesCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.volsConfigured"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1093, "DataNode.instance.dnConf.volsConfigured > DataNode.instance.volumeChecker.numSyncDatasetChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.volsConfigured"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1094, "DataNode.instance.dnConf.volsConfigured < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.volsConfigured"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1095, "DataNode.instance.dnConf.volsConfigured < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.volsConfigured"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1096, "DataNode.instance.dnConf.volsConfigured < blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.volsConfigured"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1097, "DataNode.instance.dnConf.volsConfigured < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.volsConfigured"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1098, "DataNode.instance.dnConf.volsConfigured != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.volsConfigured"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1099, "DataNode.instance.dnConf.volsConfigured != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.volsConfigured"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1100, "DataNode.instance.dnConf.volsConfigured != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.volsConfigured"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1101, "DataNode.instance.dnConf.volsConfigured != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.volsConfigured"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1102, "DataNode.instance.dnConf.volsConfigured > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.volsConfigured"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1103, "DataNode.instance.dnConf.volsConfigured != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.volsConfigured"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1104, "DataNode.instance.dnConf.volsConfigured >= blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.volsConfigured"))).intValue() >= ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1105, "DataNode.instance.dnConf.volsConfigured > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.volsConfigured"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1106, "DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS < DataNode.instance.volumeChecker.lastAllVolumesCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1107, "DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS >= DataNode.instance.volumeChecker.numSyncDatasetChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue() >= ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1108, "DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1109, "DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1110, "DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS < blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1111, "DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1112, "DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1113, "DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1114, "DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1115, "DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1116, "DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS >= blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue() >= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1117, "DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1118, "DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS >= daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1119, "DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS < daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue() < daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])))-1);
			}
		});
		invariants1999.add(new Invariant(1120, "DataNode.instance.httpServer.HTTP_MAX_THREADS < DataNode.instance.volumeChecker.lastAllVolumesCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_MAX_THREADS"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1121, "DataNode.instance.httpServer.HTTP_MAX_THREADS > DataNode.instance.volumeChecker.numSyncDatasetChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_MAX_THREADS"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1122, "DataNode.instance.httpServer.HTTP_MAX_THREADS < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_MAX_THREADS"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1123, "DataNode.instance.httpServer.HTTP_MAX_THREADS < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_MAX_THREADS"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1124, "DataNode.instance.httpServer.HTTP_MAX_THREADS < blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_MAX_THREADS"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1125, "DataNode.instance.httpServer.HTTP_MAX_THREADS < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_MAX_THREADS"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1126, "DataNode.instance.httpServer.HTTP_MAX_THREADS != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_MAX_THREADS"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1127, "DataNode.instance.httpServer.HTTP_MAX_THREADS != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_MAX_THREADS"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1128, "DataNode.instance.httpServer.HTTP_MAX_THREADS != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_MAX_THREADS"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1129, "DataNode.instance.httpServer.HTTP_MAX_THREADS != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_MAX_THREADS"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1130, "DataNode.instance.httpServer.HTTP_MAX_THREADS > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_MAX_THREADS"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1131, "DataNode.instance.httpServer.HTTP_MAX_THREADS != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_MAX_THREADS"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1132, "DataNode.instance.httpServer.HTTP_MAX_THREADS > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_MAX_THREADS"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1133, "DataNode.instance.httpServer.HTTP_MAX_THREADS > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_MAX_THREADS"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1134, "DataNode.instance.httpServer.HTTP_MAX_THREADS > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_MAX_THREADS"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1135, "DataNode.instance.id.infoPort < DataNode.instance.volumeChecker.lastAllVolumesCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1136, "DataNode.instance.id.infoPort > DataNode.instance.volumeChecker.numSyncDatasetChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1137, "DataNode.instance.id.infoPort < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1138, "DataNode.instance.id.infoPort < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1139, "DataNode.instance.id.infoPort > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1140, "DataNode.instance.id.infoPort < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1141, "DataNode.instance.id.infoPort < blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1142, "DataNode.instance.id.infoPort < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1143, "DataNode.instance.id.infoPort < blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1144, "DataNode.instance.id.infoPort < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1145, "DataNode.instance.id.infoPort > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1146, "DataNode.instance.id.infoPort != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1147, "DataNode.instance.id.infoPort > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1148, "DataNode.instance.id.infoPort > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1149, "DataNode.instance.id.infoPort > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1150, "DataNode.instance.id.ipcPort < DataNode.instance.volumeChecker.lastAllVolumesCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1151, "DataNode.instance.id.ipcPort > DataNode.instance.volumeChecker.numSyncDatasetChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1152, "DataNode.instance.id.ipcPort < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1153, "DataNode.instance.id.ipcPort < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1154, "DataNode.instance.id.ipcPort > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1155, "DataNode.instance.id.ipcPort < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1156, "DataNode.instance.id.ipcPort < blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1157, "DataNode.instance.id.ipcPort < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1158, "DataNode.instance.id.ipcPort < blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1159, "DataNode.instance.id.ipcPort < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1160, "DataNode.instance.id.ipcPort > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1161, "DataNode.instance.id.ipcPort != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1162, "DataNode.instance.id.ipcPort > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1163, "DataNode.instance.id.ipcPort > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1164, "DataNode.instance.id.ipcPort > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1165, "DataNode.instance.id.nsInfo.cTime > DataNode.instance.volumeChecker.lastAllVolumesCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1166, "DataNode.instance.id.nsInfo.cTime > DataNode.instance.volumeChecker.numSyncDatasetChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1167, "DataNode.instance.id.nsInfo.cTime < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1168, "DataNode.instance.id.nsInfo.cTime < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1169, "DataNode.instance.id.nsInfo.cTime > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1170, "DataNode.instance.id.nsInfo.cTime > blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1171, "DataNode.instance.id.nsInfo.cTime > blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1172, "DataNode.instance.id.nsInfo.cTime > blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1173, "DataNode.instance.id.nsInfo.cTime > blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1174, "DataNode.instance.id.nsInfo.cTime > blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1175, "DataNode.instance.id.nsInfo.cTime > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1176, "DataNode.instance.id.nsInfo.cTime > blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1177, "DataNode.instance.id.nsInfo.cTime > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1178, "DataNode.instance.id.nsInfo.cTime > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1179, "DataNode.instance.id.nsInfo.cTime > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1180, "DataNode.instance.id.nsInfo.layoutVersion < DataNode.instance.volumeChecker.lastAllVolumesCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1181, "DataNode.instance.id.nsInfo.layoutVersion < DataNode.instance.volumeChecker.numSyncDatasetChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1182, "DataNode.instance.id.nsInfo.layoutVersion < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1183, "DataNode.instance.id.nsInfo.layoutVersion < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1184, "DataNode.instance.id.nsInfo.layoutVersion < blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1185, "DataNode.instance.id.nsInfo.layoutVersion < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1186, "DataNode.instance.id.nsInfo.layoutVersion < blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1187, "DataNode.instance.id.nsInfo.layoutVersion < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1188, "DataNode.instance.id.nsInfo.layoutVersion < blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1189, "DataNode.instance.id.nsInfo.layoutVersion < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1190, "DataNode.instance.id.nsInfo.layoutVersion < blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1191, "DataNode.instance.id.nsInfo.layoutVersion < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1192, "DataNode.instance.id.nsInfo.layoutVersion < blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1193, "DataNode.instance.id.nsInfo.layoutVersion < daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.layoutVersion"))).intValue() < daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0])))-1);
			}
		});
		invariants1999.add(new Invariant(1194, "DataNode.instance.id.nsInfo.layoutVersion < daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.layoutVersion"))).intValue() < daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])))-1);
			}
		});
		invariants1999.add(new Invariant(1195, "DataNode.instance.id.nsInfo.namespaceID > DataNode.instance.volumeChecker.lastAllVolumesCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1196, "DataNode.instance.id.nsInfo.namespaceID > DataNode.instance.volumeChecker.numSyncDatasetChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1197, "DataNode.instance.id.nsInfo.namespaceID < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1198, "DataNode.instance.id.nsInfo.namespaceID < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1199, "DataNode.instance.id.nsInfo.namespaceID > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1200, "DataNode.instance.id.nsInfo.namespaceID > blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1201, "DataNode.instance.id.nsInfo.namespaceID > blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1202, "DataNode.instance.id.nsInfo.namespaceID < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1203, "DataNode.instance.id.nsInfo.namespaceID < blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1204, "DataNode.instance.id.nsInfo.namespaceID < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1205, "DataNode.instance.id.nsInfo.namespaceID > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1206, "DataNode.instance.id.nsInfo.namespaceID > blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1207, "DataNode.instance.id.nsInfo.namespaceID > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1208, "DataNode.instance.id.nsInfo.namespaceID > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1209, "DataNode.instance.id.nsInfo.namespaceID > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1210, "DataNode.instance.id.xferPort < DataNode.instance.volumeChecker.lastAllVolumesCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1211, "DataNode.instance.id.xferPort > DataNode.instance.volumeChecker.numSyncDatasetChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1212, "DataNode.instance.id.xferPort < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1213, "DataNode.instance.id.xferPort < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1214, "DataNode.instance.id.xferPort > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1215, "DataNode.instance.id.xferPort < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1216, "DataNode.instance.id.xferPort < blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1217, "DataNode.instance.id.xferPort < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1218, "DataNode.instance.id.xferPort < blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1219, "DataNode.instance.id.xferPort < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1220, "DataNode.instance.id.xferPort > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1221, "DataNode.instance.id.xferPort != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1222, "DataNode.instance.id.xferPort > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1223, "DataNode.instance.id.xferPort > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1224, "DataNode.instance.id.xferPort > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1225, "DataNode.instance.lastDiskErrorCheck > DataNode.instance.volumeChecker.lastAllVolumesCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1226, "DataNode.instance.lastDiskErrorCheck > DataNode.instance.volumeChecker.numSyncDatasetChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1227, "DataNode.instance.lastDiskErrorCheck < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1228, "DataNode.instance.lastDiskErrorCheck < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1229, "DataNode.instance.lastDiskErrorCheck > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1230, "DataNode.instance.lastDiskErrorCheck > blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1231, "DataNode.instance.lastDiskErrorCheck > blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1232, "DataNode.instance.lastDiskErrorCheck < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1233, "DataNode.instance.lastDiskErrorCheck < blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1234, "DataNode.instance.lastDiskErrorCheck < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1235, "DataNode.instance.lastDiskErrorCheck > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1236, "DataNode.instance.lastDiskErrorCheck != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1237, "DataNode.instance.lastDiskErrorCheck > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1238, "DataNode.instance.lastDiskErrorCheck > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1239, "DataNode.instance.lastDiskErrorCheck > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1240, "DataNode.instance.shortCircuitRegistry.SHM_LENGTH < DataNode.instance.volumeChecker.lastAllVolumesCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.shortCircuitRegistry.SHM_LENGTH"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1241, "DataNode.instance.shortCircuitRegistry.SHM_LENGTH > DataNode.instance.volumeChecker.numSyncDatasetChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.shortCircuitRegistry.SHM_LENGTH"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1242, "DataNode.instance.shortCircuitRegistry.SHM_LENGTH < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.shortCircuitRegistry.SHM_LENGTH"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1243, "DataNode.instance.shortCircuitRegistry.SHM_LENGTH < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.shortCircuitRegistry.SHM_LENGTH"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1244, "DataNode.instance.shortCircuitRegistry.SHM_LENGTH > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.shortCircuitRegistry.SHM_LENGTH"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1245, "DataNode.instance.shortCircuitRegistry.SHM_LENGTH < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.shortCircuitRegistry.SHM_LENGTH"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1246, "DataNode.instance.shortCircuitRegistry.SHM_LENGTH < blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.shortCircuitRegistry.SHM_LENGTH"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1247, "DataNode.instance.shortCircuitRegistry.SHM_LENGTH < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.shortCircuitRegistry.SHM_LENGTH"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1248, "DataNode.instance.shortCircuitRegistry.SHM_LENGTH < blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.shortCircuitRegistry.SHM_LENGTH"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1249, "DataNode.instance.shortCircuitRegistry.SHM_LENGTH < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.shortCircuitRegistry.SHM_LENGTH"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1250, "DataNode.instance.shortCircuitRegistry.SHM_LENGTH > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.shortCircuitRegistry.SHM_LENGTH"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1251, "DataNode.instance.shortCircuitRegistry.SHM_LENGTH != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.shortCircuitRegistry.SHM_LENGTH"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1252, "DataNode.instance.shortCircuitRegistry.SHM_LENGTH > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.shortCircuitRegistry.SHM_LENGTH"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1253, "DataNode.instance.shortCircuitRegistry.SHM_LENGTH > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.shortCircuitRegistry.SHM_LENGTH"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1254, "DataNode.instance.shortCircuitRegistry.SHM_LENGTH > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.shortCircuitRegistry.SHM_LENGTH"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1255, "DataNode.instance.storage.layoutVersion < DataNode.instance.volumeChecker.lastAllVolumesCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1256, "DataNode.instance.storage.layoutVersion < DataNode.instance.volumeChecker.numSyncDatasetChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1257, "DataNode.instance.storage.layoutVersion < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1258, "DataNode.instance.storage.layoutVersion < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1259, "DataNode.instance.storage.layoutVersion < blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1260, "DataNode.instance.storage.layoutVersion < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1261, "DataNode.instance.storage.layoutVersion < blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1262, "DataNode.instance.storage.layoutVersion < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1263, "DataNode.instance.storage.layoutVersion < blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1264, "DataNode.instance.storage.layoutVersion < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1265, "DataNode.instance.storage.layoutVersion < blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1266, "DataNode.instance.storage.layoutVersion < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1267, "DataNode.instance.storage.layoutVersion < blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1268, "DataNode.instance.storage.layoutVersion < daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0])))-1);
			}
		});
		invariants1999.add(new Invariant(1269, "DataNode.instance.storage.layoutVersion < daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])))-1);
			}
		});
		invariants1999.add(new Invariant(1270, "DataNode.instance.storage.namespaceID > DataNode.instance.volumeChecker.lastAllVolumesCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1271, "DataNode.instance.storage.namespaceID > DataNode.instance.volumeChecker.numSyncDatasetChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1272, "DataNode.instance.storage.namespaceID < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1273, "DataNode.instance.storage.namespaceID < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1274, "DataNode.instance.storage.namespaceID > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1275, "DataNode.instance.storage.namespaceID > blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1276, "DataNode.instance.storage.namespaceID > blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1277, "DataNode.instance.storage.namespaceID != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1278, "DataNode.instance.storage.namespaceID != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1279, "DataNode.instance.storage.namespaceID != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1280, "DataNode.instance.storage.namespaceID > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1281, "DataNode.instance.storage.namespaceID > blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1282, "DataNode.instance.storage.namespaceID > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1283, "DataNode.instance.storage.namespaceID > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1284, "DataNode.instance.storage.namespaceID > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1285, "DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks < DataNode.instance.volumeChecker.lastAllVolumesCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1286, "DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks > DataNode.instance.volumeChecker.numSyncDatasetChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1287, "DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1288, "DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1289, "DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1290, "DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1291, "DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks > blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1292, "DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1293, "DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1294, "DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1295, "DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1296, "DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1297, "DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1298, "DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1299, "DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1300, "DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout < DataNode.instance.volumeChecker.lastAllVolumesCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1301, "DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout > DataNode.instance.volumeChecker.numSyncDatasetChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1302, "DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1303, "DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1304, "DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1305, "DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1306, "DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout > blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1307, "DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1308, "DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1309, "DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1310, "DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1311, "DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1312, "DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1313, "DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1314, "DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1315, "DataNode.instance.volumeChecker.lastAllVolumesCheck > DataNode.instance.volumeChecker.numSyncDatasetChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1316, "DataNode.instance.volumeChecker.lastAllVolumesCheck > DataNode.instance.xserver.balanceThrottler.bytesPerPeriod"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.bytesPerPeriod"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1317, "DataNode.instance.volumeChecker.lastAllVolumesCheck != DataNode.instance.xserver.balanceThrottler.curPeriodStart"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() != ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1318, "DataNode.instance.volumeChecker.lastAllVolumesCheck > DataNode.instance.xserver.balanceThrottler.maxThreads"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.maxThreads"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1319, "DataNode.instance.volumeChecker.lastAllVolumesCheck > DataNode.instance.xserver.balanceThrottler.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.period"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1320, "DataNode.instance.volumeChecker.lastAllVolumesCheck > DataNode.instance.xserver.balanceThrottler.periodExtension"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.periodExtension"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1321, "DataNode.instance.volumeChecker.lastAllVolumesCheck < DataNode.instance.xserver.estimateBlockSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.estimateBlockSize"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1322, "DataNode.instance.volumeChecker.lastAllVolumesCheck > DataNode.instance.xserver.maxXceiverCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.maxXceiverCount"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1323, "DataNode.instance.volumeChecker.lastAllVolumesCheck > NameNode.instance.DEFAULT_PORT"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.DEFAULT_PORT"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1324, "DataNode.instance.volumeChecker.lastAllVolumesCheck > NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1325, "DataNode.instance.volumeChecker.lastAllVolumesCheck > NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1326, "DataNode.instance.volumeChecker.lastAllVolumesCheck > NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1327, "DataNode.instance.volumeChecker.lastAllVolumesCheck > NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1328, "DataNode.instance.volumeChecker.lastAllVolumesCheck > NameNode.instance.namesystem.blockDeletionIncrement"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.blockDeletionIncrement"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1329, "DataNode.instance.volumeChecker.lastAllVolumesCheck > NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1330, "DataNode.instance.volumeChecker.lastAllVolumesCheck > NameNode.instance.namesystem.cacheManager.scanIntervalMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.scanIntervalMs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1331, "DataNode.instance.volumeChecker.lastAllVolumesCheck > NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1332, "DataNode.instance.volumeChecker.lastAllVolumesCheck > NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1333, "DataNode.instance.volumeChecker.lastAllVolumesCheck > NameNode.instance.namesystem.dir.inodeXAttrsLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.inodeXAttrsLimit"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1334, "DataNode.instance.volumeChecker.lastAllVolumesCheck > NameNode.instance.namesystem.dir.maxComponentLength"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxComponentLength"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1335, "DataNode.instance.volumeChecker.lastAllVolumesCheck > NameNode.instance.namesystem.dir.maxDirItems"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxDirItems"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1336, "DataNode.instance.volumeChecker.lastAllVolumesCheck > NameNode.instance.namesystem.dir.xattrMaxSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.xattrMaxSize"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1337, "DataNode.instance.volumeChecker.lastAllVolumesCheck > NameNode.instance.namesystem.editLogRollerThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogRollerThreshold"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1338, "DataNode.instance.volumeChecker.lastAllVolumesCheck < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1339, "DataNode.instance.volumeChecker.lastAllVolumesCheck != NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() != ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1340, "DataNode.instance.volumeChecker.lastAllVolumesCheck > NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1341, "DataNode.instance.volumeChecker.lastAllVolumesCheck > NameNode.instance.namesystem.leaseManager.hardLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.hardLimit"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1342, "DataNode.instance.volumeChecker.lastAllVolumesCheck != NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() != ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1343, "DataNode.instance.volumeChecker.lastAllVolumesCheck > NameNode.instance.namesystem.leaseRecheckIntervalMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseRecheckIntervalMs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1344, "DataNode.instance.volumeChecker.lastAllVolumesCheck > NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1345, "DataNode.instance.volumeChecker.lastAllVolumesCheck > NameNode.instance.namesystem.nnResourceChecker.duReserved"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.nnResourceChecker.duReserved"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1346, "DataNode.instance.volumeChecker.lastAllVolumesCheck > NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1347, "DataNode.instance.volumeChecker.lastAllVolumesCheck > NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1348, "DataNode.instance.volumeChecker.lastAllVolumesCheck < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1349, "DataNode.instance.volumeChecker.lastAllVolumesCheck > blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1350, "DataNode.instance.volumeChecker.lastAllVolumesCheck < blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1351, "DataNode.instance.volumeChecker.lastAllVolumesCheck > blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1352, "DataNode.instance.volumeChecker.lastAllVolumesCheck > blockManagerInstance.blockIdManager.legacyGenerationStampLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStampLimit"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1353, "DataNode.instance.volumeChecker.lastAllVolumesCheck > blockManagerInstance.blockReportLeaseManager.leaseExpiryMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.leaseExpiryMs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1354, "DataNode.instance.volumeChecker.lastAllVolumesCheck > blockManagerInstance.blockReportLeaseManager.maxPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.maxPending"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1355, "DataNode.instance.volumeChecker.lastAllVolumesCheck < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1356, "DataNode.instance.volumeChecker.lastAllVolumesCheck > blockManagerInstance.blockReportThread.MAX_LOCK_HOLD_MS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportThread.MAX_LOCK_HOLD_MS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1357, "DataNode.instance.volumeChecker.lastAllVolumesCheck > blockManagerInstance.blocksMap.capacity"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blocksMap.capacity"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1358, "DataNode.instance.volumeChecker.lastAllVolumesCheck > blockManagerInstance.blocksPerPostpondedRescan"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blocksPerPostpondedRescan"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1359, "DataNode.instance.volumeChecker.lastAllVolumesCheck > blockManagerInstance.blocksReplWorkMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blocksReplWorkMultiplier"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1360, "DataNode.instance.volumeChecker.lastAllVolumesCheck > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1361, "DataNode.instance.volumeChecker.lastAllVolumesCheck > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.size"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1362, "DataNode.instance.volumeChecker.lastAllVolumesCheck > blockManagerInstance.bmSafeMode.safeReplication"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.safeReplication"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1363, "DataNode.instance.volumeChecker.lastAllVolumesCheck != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1364, "DataNode.instance.volumeChecker.lastAllVolumesCheck > blockManagerInstance.datanodeManager.defaultInfoPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoPort"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1365, "DataNode.instance.volumeChecker.lastAllVolumesCheck > blockManagerInstance.datanodeManager.defaultInfoSecurePort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoSecurePort"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1366, "DataNode.instance.volumeChecker.lastAllVolumesCheck > blockManagerInstance.datanodeManager.defaultIpcPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultIpcPort"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1367, "DataNode.instance.volumeChecker.lastAllVolumesCheck > blockManagerInstance.datanodeManager.defaultXferPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultXferPort"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1368, "DataNode.instance.volumeChecker.lastAllVolumesCheck > blockManagerInstance.datanodeManager.heartbeatExpireInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatExpireInterval"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1369, "DataNode.instance.volumeChecker.lastAllVolumesCheck > blockManagerInstance.datanodeManager.heartbeatIntervalSeconds"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatIntervalSeconds"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1370, "DataNode.instance.volumeChecker.lastAllVolumesCheck > blockManagerInstance.datanodeManager.heartbeatManager.REPORT_STALE_NODE_NODES_PER_LINE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatManager.REPORT_STALE_NODE_NODES_PER_LINE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1371, "DataNode.instance.volumeChecker.lastAllVolumesCheck > blockManagerInstance.datanodeManager.staleInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.staleInterval"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1372, "DataNode.instance.volumeChecker.lastAllVolumesCheck > blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1373, "DataNode.instance.volumeChecker.lastAllVolumesCheck != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1374, "DataNode.instance.volumeChecker.lastAllVolumesCheck != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1375, "DataNode.instance.volumeChecker.lastAllVolumesCheck != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1376, "DataNode.instance.volumeChecker.lastAllVolumesCheck > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1377, "DataNode.instance.volumeChecker.lastAllVolumesCheck != blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1378, "DataNode.instance.volumeChecker.lastAllVolumesCheck != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1379, "DataNode.instance.volumeChecker.lastAllVolumesCheck > blockManagerInstance.maxCorruptFilesReturned"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.maxCorruptFilesReturned"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1380, "DataNode.instance.volumeChecker.lastAllVolumesCheck > blockManagerInstance.neededReconstruction.LEVEL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.LEVEL"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1381, "DataNode.instance.volumeChecker.lastAllVolumesCheck > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1382, "DataNode.instance.volumeChecker.lastAllVolumesCheck > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1383, "DataNode.instance.volumeChecker.lastAllVolumesCheck > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1384, "DataNode.instance.volumeChecker.lastAllVolumesCheck > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1385, "DataNode.instance.volumeChecker.lastAllVolumesCheck > blockManagerInstance.placementPolicies.ecPolicy.heartbeatInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.placementPolicies.ecPolicy.heartbeatInterval"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1386, "DataNode.instance.volumeChecker.lastAllVolumesCheck > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1387, "DataNode.instance.volumeChecker.lastAllVolumesCheck > blockManagerInstance.replQueueResetToHeadThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueResetToHeadThreshold"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1388, "DataNode.instance.volumeChecker.lastAllVolumesCheck > blockManagerInstance.storageInfoDefragmentInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.storageInfoDefragmentInterval"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1389, "DataNode.instance.volumeChecker.lastAllVolumesCheck > blockManagerInstance.storagePolicySuite.defaultPolicyID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.storagePolicySuite.defaultPolicyID"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1390, "DataNode.instance.volumeChecker.lastAllVolumesCheck > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1391, "DataNode.instance.volumeChecker.lastAllVolumesCheck > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1392, "DataNode.instance.volumeChecker.numSyncDatasetChecks < DataNode.instance.xserver.balanceThrottler.bytesPerPeriod"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.bytesPerPeriod"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1393, "DataNode.instance.volumeChecker.numSyncDatasetChecks < DataNode.instance.xserver.balanceThrottler.curPeriodStart"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1394, "DataNode.instance.volumeChecker.numSyncDatasetChecks < DataNode.instance.xserver.balanceThrottler.maxThreads"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.maxThreads"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1395, "DataNode.instance.volumeChecker.numSyncDatasetChecks < DataNode.instance.xserver.balanceThrottler.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.period"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1396, "DataNode.instance.volumeChecker.numSyncDatasetChecks < DataNode.instance.xserver.balanceThrottler.periodExtension"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.periodExtension"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1397, "DataNode.instance.volumeChecker.numSyncDatasetChecks < DataNode.instance.xserver.estimateBlockSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.estimateBlockSize"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1398, "DataNode.instance.volumeChecker.numSyncDatasetChecks < DataNode.instance.xserver.maxXceiverCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.maxXceiverCount"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1399, "DataNode.instance.volumeChecker.numSyncDatasetChecks < NameNode.instance.DEFAULT_PORT"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.DEFAULT_PORT"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1400, "DataNode.instance.volumeChecker.numSyncDatasetChecks < NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1401, "DataNode.instance.volumeChecker.numSyncDatasetChecks < NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1402, "DataNode.instance.volumeChecker.numSyncDatasetChecks < NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1403, "DataNode.instance.volumeChecker.numSyncDatasetChecks > NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1404, "DataNode.instance.volumeChecker.numSyncDatasetChecks < NameNode.instance.namesystem.blockDeletionIncrement"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.blockDeletionIncrement"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1405, "DataNode.instance.volumeChecker.numSyncDatasetChecks < NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1406, "DataNode.instance.volumeChecker.numSyncDatasetChecks < NameNode.instance.namesystem.cacheManager.scanIntervalMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.scanIntervalMs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1407, "DataNode.instance.volumeChecker.numSyncDatasetChecks < NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1408, "DataNode.instance.volumeChecker.numSyncDatasetChecks < NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1409, "DataNode.instance.volumeChecker.numSyncDatasetChecks < NameNode.instance.namesystem.dir.inodeXAttrsLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.inodeXAttrsLimit"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1410, "DataNode.instance.volumeChecker.numSyncDatasetChecks < NameNode.instance.namesystem.dir.maxComponentLength"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxComponentLength"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1411, "DataNode.instance.volumeChecker.numSyncDatasetChecks < NameNode.instance.namesystem.dir.maxDirItems"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxDirItems"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1412, "DataNode.instance.volumeChecker.numSyncDatasetChecks < NameNode.instance.namesystem.dir.xattrMaxSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.xattrMaxSize"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1413, "DataNode.instance.volumeChecker.numSyncDatasetChecks < NameNode.instance.namesystem.editLogRollerThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogRollerThreshold"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1414, "DataNode.instance.volumeChecker.numSyncDatasetChecks < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1415, "DataNode.instance.volumeChecker.numSyncDatasetChecks < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1416, "DataNode.instance.volumeChecker.numSyncDatasetChecks < NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1417, "DataNode.instance.volumeChecker.numSyncDatasetChecks < NameNode.instance.namesystem.leaseManager.hardLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.hardLimit"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1418, "DataNode.instance.volumeChecker.numSyncDatasetChecks < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1419, "DataNode.instance.volumeChecker.numSyncDatasetChecks < NameNode.instance.namesystem.leaseRecheckIntervalMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseRecheckIntervalMs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1420, "DataNode.instance.volumeChecker.numSyncDatasetChecks < NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1421, "DataNode.instance.volumeChecker.numSyncDatasetChecks < NameNode.instance.namesystem.nnResourceChecker.duReserved"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.nnResourceChecker.duReserved"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1422, "DataNode.instance.volumeChecker.numSyncDatasetChecks < NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1423, "DataNode.instance.volumeChecker.numSyncDatasetChecks < NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1424, "DataNode.instance.volumeChecker.numSyncDatasetChecks < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1425, "DataNode.instance.volumeChecker.numSyncDatasetChecks < blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1426, "DataNode.instance.volumeChecker.numSyncDatasetChecks < blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1427, "DataNode.instance.volumeChecker.numSyncDatasetChecks < blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1428, "DataNode.instance.volumeChecker.numSyncDatasetChecks >= blockManagerInstance.blockIdManager.legacyGenerationStampLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() >= ((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStampLimit"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1429, "DataNode.instance.volumeChecker.numSyncDatasetChecks < blockManagerInstance.blockReportLeaseManager.leaseExpiryMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.leaseExpiryMs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1430, "DataNode.instance.volumeChecker.numSyncDatasetChecks < blockManagerInstance.blockReportLeaseManager.maxPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.maxPending"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1431, "DataNode.instance.volumeChecker.numSyncDatasetChecks < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1432, "DataNode.instance.volumeChecker.numSyncDatasetChecks < blockManagerInstance.blockReportThread.MAX_LOCK_HOLD_MS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportThread.MAX_LOCK_HOLD_MS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1433, "DataNode.instance.volumeChecker.numSyncDatasetChecks < blockManagerInstance.blocksMap.capacity"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blocksMap.capacity"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1434, "DataNode.instance.volumeChecker.numSyncDatasetChecks < blockManagerInstance.blocksPerPostpondedRescan"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blocksPerPostpondedRescan"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1435, "DataNode.instance.volumeChecker.numSyncDatasetChecks < blockManagerInstance.blocksReplWorkMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blocksReplWorkMultiplier"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1436, "DataNode.instance.volumeChecker.numSyncDatasetChecks < blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1437, "DataNode.instance.volumeChecker.numSyncDatasetChecks > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.size"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1438, "DataNode.instance.volumeChecker.numSyncDatasetChecks <= blockManagerInstance.bmSafeMode.safeReplication"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.safeReplication"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1439, "DataNode.instance.volumeChecker.numSyncDatasetChecks < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1440, "DataNode.instance.volumeChecker.numSyncDatasetChecks < blockManagerInstance.datanodeManager.defaultInfoPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoPort"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1441, "DataNode.instance.volumeChecker.numSyncDatasetChecks < blockManagerInstance.datanodeManager.defaultInfoSecurePort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoSecurePort"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1442, "DataNode.instance.volumeChecker.numSyncDatasetChecks < blockManagerInstance.datanodeManager.defaultIpcPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultIpcPort"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1443, "DataNode.instance.volumeChecker.numSyncDatasetChecks < blockManagerInstance.datanodeManager.defaultXferPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultXferPort"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1444, "DataNode.instance.volumeChecker.numSyncDatasetChecks < blockManagerInstance.datanodeManager.heartbeatExpireInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatExpireInterval"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1445, "DataNode.instance.volumeChecker.numSyncDatasetChecks < blockManagerInstance.datanodeManager.heartbeatIntervalSeconds"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatIntervalSeconds"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1446, "DataNode.instance.volumeChecker.numSyncDatasetChecks < blockManagerInstance.datanodeManager.heartbeatManager.REPORT_STALE_NODE_NODES_PER_LINE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatManager.REPORT_STALE_NODE_NODES_PER_LINE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1447, "DataNode.instance.volumeChecker.numSyncDatasetChecks < blockManagerInstance.datanodeManager.staleInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.staleInterval"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1448, "DataNode.instance.volumeChecker.numSyncDatasetChecks >= blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() >= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1449, "DataNode.instance.volumeChecker.numSyncDatasetChecks < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1450, "DataNode.instance.volumeChecker.numSyncDatasetChecks != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1451, "DataNode.instance.volumeChecker.numSyncDatasetChecks < blockManagerInstance.maxCorruptFilesReturned"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.maxCorruptFilesReturned"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1452, "DataNode.instance.volumeChecker.numSyncDatasetChecks < blockManagerInstance.neededReconstruction.LEVEL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.LEVEL"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1453, "DataNode.instance.volumeChecker.numSyncDatasetChecks < blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1454, "DataNode.instance.volumeChecker.numSyncDatasetChecks < blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1455, "DataNode.instance.volumeChecker.numSyncDatasetChecks < blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1456, "DataNode.instance.volumeChecker.numSyncDatasetChecks < blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1457, "DataNode.instance.volumeChecker.numSyncDatasetChecks < blockManagerInstance.placementPolicies.ecPolicy.heartbeatInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.placementPolicies.ecPolicy.heartbeatInterval"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1458, "DataNode.instance.volumeChecker.numSyncDatasetChecks < blockManagerInstance.replQueueResetToHeadThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueResetToHeadThreshold"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1459, "DataNode.instance.volumeChecker.numSyncDatasetChecks < blockManagerInstance.storageInfoDefragmentInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.storageInfoDefragmentInterval"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1460, "DataNode.instance.volumeChecker.numSyncDatasetChecks < blockManagerInstance.storagePolicySuite.defaultPolicyID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.storagePolicySuite.defaultPolicyID"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1461, "DataNode.instance.volumeChecker.numSyncDatasetChecks >= daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1462, "DataNode.instance.volumeChecker.numSyncDatasetChecks < daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])))-1);
			}
		});
		invariants1999.add(new Invariant(1463, "DataNode.instance.xserver.balanceThrottler.bytesPerPeriod < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.bytesPerPeriod"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1464, "DataNode.instance.xserver.balanceThrottler.bytesPerPeriod < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.bytesPerPeriod"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1465, "DataNode.instance.xserver.balanceThrottler.bytesPerPeriod > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.bytesPerPeriod"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1466, "DataNode.instance.xserver.balanceThrottler.bytesPerPeriod < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.bytesPerPeriod"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1467, "DataNode.instance.xserver.balanceThrottler.bytesPerPeriod > blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.bytesPerPeriod"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1468, "DataNode.instance.xserver.balanceThrottler.bytesPerPeriod != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.bytesPerPeriod"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1469, "DataNode.instance.xserver.balanceThrottler.bytesPerPeriod != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.bytesPerPeriod"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1470, "DataNode.instance.xserver.balanceThrottler.bytesPerPeriod != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.bytesPerPeriod"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1471, "DataNode.instance.xserver.balanceThrottler.bytesPerPeriod > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.bytesPerPeriod"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1472, "DataNode.instance.xserver.balanceThrottler.bytesPerPeriod != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.bytesPerPeriod"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1473, "DataNode.instance.xserver.balanceThrottler.bytesPerPeriod > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.bytesPerPeriod"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1474, "DataNode.instance.xserver.balanceThrottler.bytesPerPeriod > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.bytesPerPeriod"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1475, "DataNode.instance.xserver.balanceThrottler.bytesPerPeriod > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.bytesPerPeriod"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1476, "DataNode.instance.xserver.balanceThrottler.curPeriodStart < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1477, "DataNode.instance.xserver.balanceThrottler.curPeriodStart < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1478, "DataNode.instance.xserver.balanceThrottler.curPeriodStart > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1479, "DataNode.instance.xserver.balanceThrottler.curPeriodStart > blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1480, "DataNode.instance.xserver.balanceThrottler.curPeriodStart > blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1481, "DataNode.instance.xserver.balanceThrottler.curPeriodStart != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1482, "DataNode.instance.xserver.balanceThrottler.curPeriodStart != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1483, "DataNode.instance.xserver.balanceThrottler.curPeriodStart != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1484, "DataNode.instance.xserver.balanceThrottler.curPeriodStart > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1485, "DataNode.instance.xserver.balanceThrottler.curPeriodStart != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1486, "DataNode.instance.xserver.balanceThrottler.curPeriodStart > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1487, "DataNode.instance.xserver.balanceThrottler.curPeriodStart > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1488, "DataNode.instance.xserver.balanceThrottler.curPeriodStart > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1489, "DataNode.instance.xserver.balanceThrottler.maxThreads < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.maxThreads"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1490, "DataNode.instance.xserver.balanceThrottler.maxThreads < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.maxThreads"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1491, "DataNode.instance.xserver.balanceThrottler.maxThreads > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.maxThreads"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1492, "DataNode.instance.xserver.balanceThrottler.maxThreads < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.maxThreads"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1493, "DataNode.instance.xserver.balanceThrottler.maxThreads != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.maxThreads"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1494, "DataNode.instance.xserver.balanceThrottler.maxThreads != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.maxThreads"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1495, "DataNode.instance.xserver.balanceThrottler.maxThreads != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.maxThreads"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1496, "DataNode.instance.xserver.balanceThrottler.maxThreads != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.maxThreads"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1497, "DataNode.instance.xserver.balanceThrottler.maxThreads > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.maxThreads"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1498, "DataNode.instance.xserver.balanceThrottler.maxThreads != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.maxThreads"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1499, "DataNode.instance.xserver.balanceThrottler.maxThreads > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.maxThreads"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1500, "DataNode.instance.xserver.balanceThrottler.maxThreads > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.maxThreads"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1501, "DataNode.instance.xserver.balanceThrottler.maxThreads > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.maxThreads"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1502, "DataNode.instance.xserver.balanceThrottler.period < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.period"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1503, "DataNode.instance.xserver.balanceThrottler.period < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.period"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1504, "DataNode.instance.xserver.balanceThrottler.period > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.period"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1505, "DataNode.instance.xserver.balanceThrottler.period < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.period"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1506, "DataNode.instance.xserver.balanceThrottler.period != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.period"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1507, "DataNode.instance.xserver.balanceThrottler.period != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.period"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1508, "DataNode.instance.xserver.balanceThrottler.period != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.period"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1509, "DataNode.instance.xserver.balanceThrottler.period != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.period"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1510, "DataNode.instance.xserver.balanceThrottler.period > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.period"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1511, "DataNode.instance.xserver.balanceThrottler.period != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.period"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1512, "DataNode.instance.xserver.balanceThrottler.period > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.period"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1513, "DataNode.instance.xserver.balanceThrottler.period > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.period"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1514, "DataNode.instance.xserver.balanceThrottler.period > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.period"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1515, "DataNode.instance.xserver.balanceThrottler.periodExtension < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.periodExtension"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1516, "DataNode.instance.xserver.balanceThrottler.periodExtension < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.periodExtension"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1517, "DataNode.instance.xserver.balanceThrottler.periodExtension > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.periodExtension"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1518, "DataNode.instance.xserver.balanceThrottler.periodExtension < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.periodExtension"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1519, "DataNode.instance.xserver.balanceThrottler.periodExtension != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.periodExtension"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1520, "DataNode.instance.xserver.balanceThrottler.periodExtension != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.periodExtension"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1521, "DataNode.instance.xserver.balanceThrottler.periodExtension != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.periodExtension"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1522, "DataNode.instance.xserver.balanceThrottler.periodExtension != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.periodExtension"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1523, "DataNode.instance.xserver.balanceThrottler.periodExtension > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.periodExtension"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1524, "DataNode.instance.xserver.balanceThrottler.periodExtension != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.periodExtension"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1525, "DataNode.instance.xserver.balanceThrottler.periodExtension > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.periodExtension"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1526, "DataNode.instance.xserver.balanceThrottler.periodExtension > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.periodExtension"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1527, "DataNode.instance.xserver.balanceThrottler.periodExtension > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.periodExtension"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1528, "DataNode.instance.xserver.estimateBlockSize < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.estimateBlockSize"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1529, "DataNode.instance.xserver.estimateBlockSize < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.estimateBlockSize"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1530, "DataNode.instance.xserver.estimateBlockSize > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.estimateBlockSize"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1531, "DataNode.instance.xserver.estimateBlockSize > blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.estimateBlockSize"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1532, "DataNode.instance.xserver.estimateBlockSize > blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.estimateBlockSize"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1533, "DataNode.instance.xserver.estimateBlockSize != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.estimateBlockSize"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1534, "DataNode.instance.xserver.estimateBlockSize != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.estimateBlockSize"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1535, "DataNode.instance.xserver.estimateBlockSize != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.estimateBlockSize"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1536, "DataNode.instance.xserver.estimateBlockSize > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.estimateBlockSize"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1537, "DataNode.instance.xserver.estimateBlockSize > blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.estimateBlockSize"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1538, "DataNode.instance.xserver.estimateBlockSize > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.estimateBlockSize"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1539, "DataNode.instance.xserver.estimateBlockSize > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.estimateBlockSize"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1540, "DataNode.instance.xserver.estimateBlockSize > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.estimateBlockSize"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1541, "DataNode.instance.xserver.maxXceiverCount < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.maxXceiverCount"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1542, "DataNode.instance.xserver.maxXceiverCount < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.maxXceiverCount"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1543, "DataNode.instance.xserver.maxXceiverCount > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.maxXceiverCount"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1544, "DataNode.instance.xserver.maxXceiverCount < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.maxXceiverCount"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1545, "DataNode.instance.xserver.maxXceiverCount != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.maxXceiverCount"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1546, "DataNode.instance.xserver.maxXceiverCount != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.maxXceiverCount"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1547, "DataNode.instance.xserver.maxXceiverCount != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.maxXceiverCount"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1548, "DataNode.instance.xserver.maxXceiverCount != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.maxXceiverCount"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1549, "DataNode.instance.xserver.maxXceiverCount > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.maxXceiverCount"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1550, "DataNode.instance.xserver.maxXceiverCount != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.maxXceiverCount"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1551, "DataNode.instance.xserver.maxXceiverCount > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.maxXceiverCount"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1552, "DataNode.instance.xserver.maxXceiverCount > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.maxXceiverCount"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1553, "DataNode.instance.xserver.maxXceiverCount > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.maxXceiverCount"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1554, "NameNode.instance.DEFAULT_PORT < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.DEFAULT_PORT"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1555, "NameNode.instance.DEFAULT_PORT < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.DEFAULT_PORT"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1556, "NameNode.instance.DEFAULT_PORT > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.DEFAULT_PORT"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1557, "NameNode.instance.DEFAULT_PORT < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.DEFAULT_PORT"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1558, "NameNode.instance.DEFAULT_PORT != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.DEFAULT_PORT"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1559, "NameNode.instance.DEFAULT_PORT != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.DEFAULT_PORT"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1560, "NameNode.instance.DEFAULT_PORT != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.DEFAULT_PORT"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1561, "NameNode.instance.DEFAULT_PORT != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.DEFAULT_PORT"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1562, "NameNode.instance.DEFAULT_PORT > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.DEFAULT_PORT"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1563, "NameNode.instance.DEFAULT_PORT != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.DEFAULT_PORT"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1564, "NameNode.instance.DEFAULT_PORT > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.DEFAULT_PORT"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1565, "NameNode.instance.DEFAULT_PORT > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.DEFAULT_PORT"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1566, "NameNode.instance.DEFAULT_PORT > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.DEFAULT_PORT"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1567, "NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1568, "NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1569, "NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1570, "NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1571, "NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1572, "NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1573, "NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1574, "NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1575, "NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1576, "NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1577, "NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1578, "NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1579, "NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1580, "NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1581, "NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1582, "NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1583, "NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1584, "NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL > blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1585, "NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1586, "NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1587, "NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1588, "NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1589, "NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1590, "NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1591, "NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1592, "NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1593, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1594, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1595, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1596, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1597, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1598, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1599, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1600, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1601, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1602, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1603, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1604, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1605, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1606, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1607, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size < blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1608, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1609, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size < blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1610, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1611, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size < blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1612, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1613, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size < blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1614, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1615, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size < blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1616, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size < daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size"))).intValue() < daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0])))-1);
			}
		});
		invariants1999.add(new Invariant(1617, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size < daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size"))).intValue() < daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])))-1);
			}
		});
		invariants1999.add(new Invariant(1618, "NameNode.instance.namesystem.blockDeletionIncrement < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.blockDeletionIncrement"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1619, "NameNode.instance.namesystem.blockDeletionIncrement < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.blockDeletionIncrement"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1620, "NameNode.instance.namesystem.blockDeletionIncrement > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.blockDeletionIncrement"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1621, "NameNode.instance.namesystem.blockDeletionIncrement < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.blockDeletionIncrement"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1622, "NameNode.instance.namesystem.blockDeletionIncrement != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.blockDeletionIncrement"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1623, "NameNode.instance.namesystem.blockDeletionIncrement != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.blockDeletionIncrement"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1624, "NameNode.instance.namesystem.blockDeletionIncrement != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.blockDeletionIncrement"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1625, "NameNode.instance.namesystem.blockDeletionIncrement != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.blockDeletionIncrement"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1626, "NameNode.instance.namesystem.blockDeletionIncrement > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.blockDeletionIncrement"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1627, "NameNode.instance.namesystem.blockDeletionIncrement != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.blockDeletionIncrement"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1628, "NameNode.instance.namesystem.blockDeletionIncrement > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.blockDeletionIncrement"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1629, "NameNode.instance.namesystem.blockDeletionIncrement > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.blockDeletionIncrement"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1630, "NameNode.instance.namesystem.blockDeletionIncrement > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.blockDeletionIncrement"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1631, "daikon.Quant.fuzzy.ne(NameNode.instance.namesystem.cacheManager.MIN_CACHED_BLOCKS_PERCENT, blockManagerInstance.reconstructionQueuesInitProgress)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.fuzzy.ne(((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.MIN_CACHED_BLOCKS_PERCENT"))).doubleValue(), ((Number)(InvariantChecker.getValue("blockManagerInstance.reconstructionQueuesInitProgress"))).doubleValue()));
			}
		});
		invariants1999.add(new Invariant(1632, "daikon.Quant.subsetOf(NameNode.instance.namesystem.cacheManager.directivesById_FOR_ENCLOSING_USE, NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.subsetOf((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.directivesById")).toArray(new Object[0])), (Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1633, "daikon.Quant.subsetOf(NameNode.instance.namesystem.cacheManager.directivesById_FOR_ENCLOSING_USE, NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.subsetOf((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.directivesById")).toArray(new Object[0])), (Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1634, "NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1635, "NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1636, "NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1637, "NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1638, "NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1639, "NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1640, "NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1641, "NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1642, "NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1643, "NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1644, "NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1645, "NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1646, "NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1647, "NameNode.instance.namesystem.cacheManager.scanIntervalMs < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.scanIntervalMs"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1648, "NameNode.instance.namesystem.cacheManager.scanIntervalMs < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.scanIntervalMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1649, "NameNode.instance.namesystem.cacheManager.scanIntervalMs > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.scanIntervalMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1650, "NameNode.instance.namesystem.cacheManager.scanIntervalMs < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.scanIntervalMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1651, "NameNode.instance.namesystem.cacheManager.scanIntervalMs != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.scanIntervalMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1652, "NameNode.instance.namesystem.cacheManager.scanIntervalMs != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.scanIntervalMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1653, "NameNode.instance.namesystem.cacheManager.scanIntervalMs != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.scanIntervalMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1654, "NameNode.instance.namesystem.cacheManager.scanIntervalMs != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.scanIntervalMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1655, "NameNode.instance.namesystem.cacheManager.scanIntervalMs > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.scanIntervalMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1656, "NameNode.instance.namesystem.cacheManager.scanIntervalMs != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.scanIntervalMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1657, "NameNode.instance.namesystem.cacheManager.scanIntervalMs > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.scanIntervalMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1658, "NameNode.instance.namesystem.cacheManager.scanIntervalMs > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.scanIntervalMs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1659, "NameNode.instance.namesystem.cacheManager.scanIntervalMs > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.scanIntervalMs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1660, "NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1661, "NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1662, "NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE < blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1663, "NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1664, "NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1665, "NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1666, "NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1667, "NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1668, "NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1669, "NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1670, "NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1671, "NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1672, "NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1673, "NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1674, "NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1675, "NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1676, "NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1677, "NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval > blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1678, "NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1679, "NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1680, "NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1681, "NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1682, "NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1683, "NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1684, "NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1685, "NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1686, "NameNode.instance.namesystem.dir.inodeXAttrsLimit < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.inodeXAttrsLimit"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1687, "NameNode.instance.namesystem.dir.inodeXAttrsLimit < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.inodeXAttrsLimit"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1688, "NameNode.instance.namesystem.dir.inodeXAttrsLimit > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.inodeXAttrsLimit"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1689, "NameNode.instance.namesystem.dir.inodeXAttrsLimit < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.inodeXAttrsLimit"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1690, "NameNode.instance.namesystem.dir.inodeXAttrsLimit != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.inodeXAttrsLimit"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1691, "NameNode.instance.namesystem.dir.inodeXAttrsLimit != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.inodeXAttrsLimit"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1692, "NameNode.instance.namesystem.dir.inodeXAttrsLimit != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.inodeXAttrsLimit"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1693, "NameNode.instance.namesystem.dir.inodeXAttrsLimit != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.inodeXAttrsLimit"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1694, "NameNode.instance.namesystem.dir.inodeXAttrsLimit > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.inodeXAttrsLimit"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1695, "NameNode.instance.namesystem.dir.inodeXAttrsLimit != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.inodeXAttrsLimit"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1696, "NameNode.instance.namesystem.dir.inodeXAttrsLimit > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.inodeXAttrsLimit"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1697, "NameNode.instance.namesystem.dir.inodeXAttrsLimit > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.inodeXAttrsLimit"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1698, "NameNode.instance.namesystem.dir.inodeXAttrsLimit > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.inodeXAttrsLimit"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1699, "NameNode.instance.namesystem.dir.maxComponentLength < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxComponentLength"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1700, "NameNode.instance.namesystem.dir.maxComponentLength < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxComponentLength"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1701, "NameNode.instance.namesystem.dir.maxComponentLength > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxComponentLength"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1702, "NameNode.instance.namesystem.dir.maxComponentLength < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxComponentLength"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1703, "NameNode.instance.namesystem.dir.maxComponentLength != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxComponentLength"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1704, "NameNode.instance.namesystem.dir.maxComponentLength != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxComponentLength"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1705, "NameNode.instance.namesystem.dir.maxComponentLength != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxComponentLength"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1706, "NameNode.instance.namesystem.dir.maxComponentLength != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxComponentLength"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1707, "NameNode.instance.namesystem.dir.maxComponentLength > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxComponentLength"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1708, "NameNode.instance.namesystem.dir.maxComponentLength != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxComponentLength"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1709, "NameNode.instance.namesystem.dir.maxComponentLength > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxComponentLength"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1710, "NameNode.instance.namesystem.dir.maxComponentLength > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxComponentLength"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1711, "NameNode.instance.namesystem.dir.maxComponentLength > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxComponentLength"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1712, "NameNode.instance.namesystem.dir.maxDirItems < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxDirItems"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1713, "NameNode.instance.namesystem.dir.maxDirItems < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxDirItems"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1714, "NameNode.instance.namesystem.dir.maxDirItems > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxDirItems"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1715, "NameNode.instance.namesystem.dir.maxDirItems < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxDirItems"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1716, "NameNode.instance.namesystem.dir.maxDirItems > blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxDirItems"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1717, "NameNode.instance.namesystem.dir.maxDirItems != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxDirItems"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1718, "NameNode.instance.namesystem.dir.maxDirItems != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxDirItems"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1719, "NameNode.instance.namesystem.dir.maxDirItems != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxDirItems"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1720, "NameNode.instance.namesystem.dir.maxDirItems > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxDirItems"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1721, "NameNode.instance.namesystem.dir.maxDirItems != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxDirItems"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1722, "NameNode.instance.namesystem.dir.maxDirItems > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxDirItems"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1723, "NameNode.instance.namesystem.dir.maxDirItems > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxDirItems"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1724, "NameNode.instance.namesystem.dir.maxDirItems > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxDirItems"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1725, "NameNode.instance.namesystem.dir.xattrMaxSize < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.xattrMaxSize"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1726, "NameNode.instance.namesystem.dir.xattrMaxSize < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.xattrMaxSize"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1727, "NameNode.instance.namesystem.dir.xattrMaxSize > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.xattrMaxSize"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1728, "NameNode.instance.namesystem.dir.xattrMaxSize < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.xattrMaxSize"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1729, "NameNode.instance.namesystem.dir.xattrMaxSize != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.xattrMaxSize"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1730, "NameNode.instance.namesystem.dir.xattrMaxSize != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.xattrMaxSize"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1731, "NameNode.instance.namesystem.dir.xattrMaxSize != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.xattrMaxSize"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1732, "NameNode.instance.namesystem.dir.xattrMaxSize != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.xattrMaxSize"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1733, "NameNode.instance.namesystem.dir.xattrMaxSize > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.xattrMaxSize"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1734, "NameNode.instance.namesystem.dir.xattrMaxSize != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.xattrMaxSize"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1735, "NameNode.instance.namesystem.dir.xattrMaxSize > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.xattrMaxSize"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1736, "NameNode.instance.namesystem.dir.xattrMaxSize > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.xattrMaxSize"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1737, "NameNode.instance.namesystem.dir.xattrMaxSize > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.xattrMaxSize"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1738, "NameNode.instance.namesystem.editLogRollerThreshold < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogRollerThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1739, "NameNode.instance.namesystem.editLogRollerThreshold < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogRollerThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1740, "NameNode.instance.namesystem.editLogRollerThreshold > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogRollerThreshold"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1741, "NameNode.instance.namesystem.editLogRollerThreshold < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogRollerThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1742, "NameNode.instance.namesystem.editLogRollerThreshold > blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogRollerThreshold"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1743, "NameNode.instance.namesystem.editLogRollerThreshold != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogRollerThreshold"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1744, "NameNode.instance.namesystem.editLogRollerThreshold != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogRollerThreshold"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1745, "NameNode.instance.namesystem.editLogRollerThreshold != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogRollerThreshold"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1746, "NameNode.instance.namesystem.editLogRollerThreshold > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogRollerThreshold"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1747, "NameNode.instance.namesystem.editLogRollerThreshold != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogRollerThreshold"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1748, "NameNode.instance.namesystem.editLogRollerThreshold > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogRollerThreshold"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1749, "NameNode.instance.namesystem.editLogRollerThreshold > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogRollerThreshold"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1750, "NameNode.instance.namesystem.editLogRollerThreshold > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogRollerThreshold"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1751, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos > NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1752, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos > NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1753, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos > NameNode.instance.namesystem.leaseManager.hardLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.hardLimit"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1754, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos > NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1755, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos > NameNode.instance.namesystem.leaseRecheckIntervalMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseRecheckIntervalMs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1756, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos > NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1757, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos > NameNode.instance.namesystem.nnResourceChecker.duReserved"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.nnResourceChecker.duReserved"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1758, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos > NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1759, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos > NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1760, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos > NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1761, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos > blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1762, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos > blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1763, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos > blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1764, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos > blockManagerInstance.blockIdManager.legacyGenerationStampLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStampLimit"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1765, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos > blockManagerInstance.blockReportLeaseManager.leaseExpiryMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.leaseExpiryMs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1766, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos > blockManagerInstance.blockReportLeaseManager.maxPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.maxPending"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1767, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1768, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos > blockManagerInstance.blockReportThread.MAX_LOCK_HOLD_MS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportThread.MAX_LOCK_HOLD_MS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1769, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos > blockManagerInstance.blocksMap.capacity"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blocksMap.capacity"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1770, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos > blockManagerInstance.blocksPerPostpondedRescan"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blocksPerPostpondedRescan"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1771, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos > blockManagerInstance.blocksReplWorkMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blocksReplWorkMultiplier"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1772, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1773, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.size"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1774, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos > blockManagerInstance.bmSafeMode.safeReplication"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.safeReplication"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1775, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos > blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1776, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos > blockManagerInstance.datanodeManager.defaultInfoPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoPort"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1777, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos > blockManagerInstance.datanodeManager.defaultInfoSecurePort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoSecurePort"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1778, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos > blockManagerInstance.datanodeManager.defaultIpcPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultIpcPort"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1779, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos > blockManagerInstance.datanodeManager.defaultXferPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultXferPort"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1780, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos > blockManagerInstance.datanodeManager.heartbeatExpireInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatExpireInterval"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1781, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos > blockManagerInstance.datanodeManager.heartbeatIntervalSeconds"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatIntervalSeconds"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1782, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos > blockManagerInstance.datanodeManager.heartbeatManager.REPORT_STALE_NODE_NODES_PER_LINE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatManager.REPORT_STALE_NODE_NODES_PER_LINE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1783, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos > blockManagerInstance.datanodeManager.staleInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.staleInterval"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1784, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos > blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1785, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos > blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1786, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos > blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1787, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos > blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1788, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1789, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos > blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1790, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos > blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1791, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos > blockManagerInstance.maxCorruptFilesReturned"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.maxCorruptFilesReturned"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1792, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos > blockManagerInstance.neededReconstruction.LEVEL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.LEVEL"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1793, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1794, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1795, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1796, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1797, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos > blockManagerInstance.placementPolicies.ecPolicy.heartbeatInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.placementPolicies.ecPolicy.heartbeatInterval"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1798, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1799, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos > blockManagerInstance.replQueueResetToHeadThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueResetToHeadThreshold"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1800, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos > blockManagerInstance.storageInfoDefragmentInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.storageInfoDefragmentInterval"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1801, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos > blockManagerInstance.storagePolicySuite.defaultPolicyID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.storagePolicySuite.defaultPolicyID"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1802, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1803, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1804, "NameNode.instance.namesystem.lazyPersistFileScrubberTS < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1805, "NameNode.instance.namesystem.lazyPersistFileScrubberTS > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1806, "NameNode.instance.namesystem.lazyPersistFileScrubberTS > blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1807, "NameNode.instance.namesystem.lazyPersistFileScrubberTS > blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1808, "NameNode.instance.namesystem.lazyPersistFileScrubberTS != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1809, "NameNode.instance.namesystem.lazyPersistFileScrubberTS != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1810, "NameNode.instance.namesystem.lazyPersistFileScrubberTS != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1811, "NameNode.instance.namesystem.lazyPersistFileScrubberTS > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1812, "NameNode.instance.namesystem.lazyPersistFileScrubberTS != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1813, "NameNode.instance.namesystem.lazyPersistFileScrubberTS > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1814, "NameNode.instance.namesystem.lazyPersistFileScrubberTS > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1815, "NameNode.instance.namesystem.lazyPersistFileScrubberTS > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1816, "NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1817, "NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1818, "NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1819, "NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1820, "NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1821, "NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1822, "NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1823, "NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1824, "NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1825, "NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1826, "NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1827, "NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1828, "NameNode.instance.namesystem.leaseManager.hardLimit < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.hardLimit"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1829, "NameNode.instance.namesystem.leaseManager.hardLimit > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.hardLimit"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1830, "NameNode.instance.namesystem.leaseManager.hardLimit < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.hardLimit"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1831, "NameNode.instance.namesystem.leaseManager.hardLimit > blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.hardLimit"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1832, "NameNode.instance.namesystem.leaseManager.hardLimit != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.hardLimit"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1833, "NameNode.instance.namesystem.leaseManager.hardLimit != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.hardLimit"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1834, "NameNode.instance.namesystem.leaseManager.hardLimit != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.hardLimit"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1835, "NameNode.instance.namesystem.leaseManager.hardLimit > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.hardLimit"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1836, "NameNode.instance.namesystem.leaseManager.hardLimit != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.hardLimit"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1837, "NameNode.instance.namesystem.leaseManager.hardLimit > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.hardLimit"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1838, "NameNode.instance.namesystem.leaseManager.hardLimit > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.hardLimit"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1839, "NameNode.instance.namesystem.leaseManager.hardLimit > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.hardLimit"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1840, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1841, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1842, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1843, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime > blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1844, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1845, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1846, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1847, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1848, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1849, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1850, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1851, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1852, "NameNode.instance.namesystem.leaseRecheckIntervalMs < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseRecheckIntervalMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1853, "NameNode.instance.namesystem.leaseRecheckIntervalMs > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseRecheckIntervalMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1854, "NameNode.instance.namesystem.leaseRecheckIntervalMs < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseRecheckIntervalMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1855, "NameNode.instance.namesystem.leaseRecheckIntervalMs != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseRecheckIntervalMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1856, "NameNode.instance.namesystem.leaseRecheckIntervalMs != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseRecheckIntervalMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1857, "NameNode.instance.namesystem.leaseRecheckIntervalMs != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseRecheckIntervalMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1858, "NameNode.instance.namesystem.leaseRecheckIntervalMs != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseRecheckIntervalMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1859, "NameNode.instance.namesystem.leaseRecheckIntervalMs > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseRecheckIntervalMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1860, "NameNode.instance.namesystem.leaseRecheckIntervalMs != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseRecheckIntervalMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1861, "NameNode.instance.namesystem.leaseRecheckIntervalMs > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseRecheckIntervalMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1862, "NameNode.instance.namesystem.leaseRecheckIntervalMs > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseRecheckIntervalMs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1863, "NameNode.instance.namesystem.leaseRecheckIntervalMs > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseRecheckIntervalMs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1864, "NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1865, "NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1866, "NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1867, "NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1868, "NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1869, "NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1870, "NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1871, "NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1872, "NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1873, "NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1874, "NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1875, "NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1876, "NameNode.instance.namesystem.nnResourceChecker.duReserved < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.nnResourceChecker.duReserved"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1877, "NameNode.instance.namesystem.nnResourceChecker.duReserved > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.nnResourceChecker.duReserved"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1878, "NameNode.instance.namesystem.nnResourceChecker.duReserved < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.nnResourceChecker.duReserved"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1879, "NameNode.instance.namesystem.nnResourceChecker.duReserved > blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.nnResourceChecker.duReserved"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1880, "NameNode.instance.namesystem.nnResourceChecker.duReserved != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.nnResourceChecker.duReserved"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1881, "NameNode.instance.namesystem.nnResourceChecker.duReserved != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.nnResourceChecker.duReserved"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1882, "NameNode.instance.namesystem.nnResourceChecker.duReserved != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.nnResourceChecker.duReserved"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1883, "NameNode.instance.namesystem.nnResourceChecker.duReserved > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.nnResourceChecker.duReserved"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1884, "NameNode.instance.namesystem.nnResourceChecker.duReserved != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.nnResourceChecker.duReserved"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1885, "NameNode.instance.namesystem.nnResourceChecker.duReserved > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.nnResourceChecker.duReserved"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1886, "NameNode.instance.namesystem.nnResourceChecker.duReserved > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.nnResourceChecker.duReserved"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1887, "NameNode.instance.namesystem.nnResourceChecker.duReserved > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.nnResourceChecker.duReserved"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1888, "NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1889, "NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1890, "NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1891, "NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1892, "NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1893, "NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1894, "NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1895, "NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1896, "NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1897, "NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1898, "NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1899, "NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1900, "NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1901, "NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1902, "NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1903, "NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit > blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1904, "NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1905, "NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1906, "NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1907, "NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1908, "NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1909, "NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1910, "NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1911, "NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1912, "NameNode.instance.namesystem.startTime < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1913, "NameNode.instance.namesystem.startTime > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1914, "NameNode.instance.namesystem.startTime > blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1915, "NameNode.instance.namesystem.startTime > blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1916, "NameNode.instance.namesystem.startTime > blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1917, "NameNode.instance.namesystem.startTime > blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1918, "NameNode.instance.namesystem.startTime > blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1919, "NameNode.instance.namesystem.startTime > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1920, "NameNode.instance.namesystem.startTime > blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1921, "NameNode.instance.namesystem.startTime > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1922, "NameNode.instance.namesystem.startTime > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1923, "NameNode.instance.namesystem.startTime > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1924, "blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1925, "blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1926, "blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1927, "blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1928, "blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1929, "blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1930, "blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1931, "blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1932, "blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1933, "blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1934, "blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1935, "blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1936, "blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1937, "blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1938, "blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID > blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1939, "blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID > blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1940, "blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1941, "blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1942, "blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1943, "blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1944, "blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID > blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1945, "blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1946, "blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1947, "blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1948, "blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1949, "blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1950, "blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1951, "blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1952, "blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1953, "blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1954, "blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1955, "blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1956, "blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1957, "blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1958, "blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1959, "blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1960, "blockManagerInstance.blockIdManager.legacyGenerationStampLimit < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStampLimit"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1961, "blockManagerInstance.blockIdManager.legacyGenerationStampLimit < blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStampLimit"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1962, "blockManagerInstance.blockIdManager.legacyGenerationStampLimit <= blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStampLimit"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1963, "blockManagerInstance.blockIdManager.legacyGenerationStampLimit <= blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStampLimit"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1964, "blockManagerInstance.blockIdManager.legacyGenerationStampLimit <= blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStampLimit"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1965, "blockManagerInstance.blockIdManager.legacyGenerationStampLimit <= blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStampLimit"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1966, "blockManagerInstance.blockIdManager.legacyGenerationStampLimit <= blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStampLimit"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1967, "blockManagerInstance.blockIdManager.legacyGenerationStampLimit <= blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStampLimit"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1968, "blockManagerInstance.blockIdManager.legacyGenerationStampLimit != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStampLimit"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1969, "blockManagerInstance.blockIdManager.legacyGenerationStampLimit <= blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStampLimit"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1970, "blockManagerInstance.blockIdManager.legacyGenerationStampLimit <= daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStampLimit"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1971, "blockManagerInstance.blockIdManager.legacyGenerationStampLimit >= daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStampLimit"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0])))-1);
			}
		});
		invariants1999.add(new Invariant(1972, "blockManagerInstance.blockIdManager.legacyGenerationStampLimit <= daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStampLimit"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1973, "blockManagerInstance.blockIdManager.legacyGenerationStampLimit != daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStampLimit"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])))-1);
			}
		});
		invariants1999.add(new Invariant(1974, "blockManagerInstance.blockReportLeaseManager.leaseExpiryMs < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.leaseExpiryMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1975, "blockManagerInstance.blockReportLeaseManager.leaseExpiryMs > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.leaseExpiryMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1976, "blockManagerInstance.blockReportLeaseManager.leaseExpiryMs != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.leaseExpiryMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1977, "blockManagerInstance.blockReportLeaseManager.leaseExpiryMs > blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.leaseExpiryMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1978, "blockManagerInstance.blockReportLeaseManager.leaseExpiryMs != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.leaseExpiryMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1979, "blockManagerInstance.blockReportLeaseManager.leaseExpiryMs != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.leaseExpiryMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1980, "blockManagerInstance.blockReportLeaseManager.leaseExpiryMs != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.leaseExpiryMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1981, "blockManagerInstance.blockReportLeaseManager.leaseExpiryMs > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.leaseExpiryMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1982, "blockManagerInstance.blockReportLeaseManager.leaseExpiryMs != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.leaseExpiryMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1983, "blockManagerInstance.blockReportLeaseManager.leaseExpiryMs > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.leaseExpiryMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1984, "blockManagerInstance.blockReportLeaseManager.leaseExpiryMs > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.leaseExpiryMs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1985, "blockManagerInstance.blockReportLeaseManager.leaseExpiryMs > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.leaseExpiryMs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1986, "blockManagerInstance.blockReportLeaseManager.maxPending < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.maxPending"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1987, "blockManagerInstance.blockReportLeaseManager.maxPending < blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.maxPending"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1988, "blockManagerInstance.blockReportLeaseManager.maxPending != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.maxPending"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1989, "blockManagerInstance.blockReportLeaseManager.maxPending != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.maxPending"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1990, "blockManagerInstance.blockReportLeaseManager.maxPending != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.maxPending"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1991, "blockManagerInstance.blockReportLeaseManager.maxPending != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.maxPending"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1992, "blockManagerInstance.blockReportLeaseManager.maxPending != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.maxPending"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1993, "blockManagerInstance.blockReportLeaseManager.maxPending > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.maxPending"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1994, "blockManagerInstance.blockReportLeaseManager.maxPending != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.maxPending"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1995, "blockManagerInstance.blockReportLeaseManager.maxPending > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.maxPending"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1996, "blockManagerInstance.blockReportLeaseManager.maxPending > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.maxPending"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1997, "blockManagerInstance.blockReportLeaseManager.maxPending > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.maxPending"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants1999.add(new Invariant(1998, "blockManagerInstance.blockReportLeaseManager.nextId > blockManagerInstance.blockReportThread.MAX_LOCK_HOLD_MS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportThread.MAX_LOCK_HOLD_MS"))).intValue());
			}
		});
		invariants1999.add(new Invariant(1999, "blockManagerInstance.blockReportLeaseManager.nextId > blockManagerInstance.blocksMap.capacity"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blocksMap.capacity"))).intValue());
			}
		});
	}
	static {
installInv1999();	}
}
