package daikon.hdfs;
import daikon.*;
import java.util.Set;
import java.util.ArrayList;
import java.util.List;
//this class is automatically generated by our scripts
public class InvariantPool3999{

	public static List<Invariant> invariants3999 = new ArrayList<>();

	public static void installInv3999(){
		invariants3999.add(new Invariant(3000, "DataNode.instance.dnConf.socketKeepaliveTimeout != DataNode.instance.storage.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketKeepaliveTimeout"))).intValue() != ((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3001, "DataNode.instance.dnConf.socketKeepaliveTimeout > NameNode.instance.namesystem.snapshotManager.numSnapshots"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketKeepaliveTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3002, "DataNode.instance.dnConf.socketKeepaliveTimeout > NameNode.instance.namesystem.snapshotManager.snapshotCounter"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketKeepaliveTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3003, "DataNode.instance.dnConf.socketKeepaliveTimeout > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketKeepaliveTimeout"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3004, "DataNode.instance.dnConf.socketTimeout > DataNode.instance.storage.layoutVersion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3005, "DataNode.instance.dnConf.socketTimeout != DataNode.instance.storage.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketTimeout"))).intValue() != ((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3006, "DataNode.instance.dnConf.socketTimeout > NameNode.instance.namesystem.snapshotManager.numSnapshots"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3007, "DataNode.instance.dnConf.socketTimeout > NameNode.instance.namesystem.snapshotManager.snapshotCounter"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3008, "DataNode.instance.dnConf.socketTimeout > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketTimeout"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3009, "DataNode.instance.dnConf.socketWriteTimeout > DataNode.instance.storage.layoutVersion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketWriteTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3010, "DataNode.instance.dnConf.socketWriteTimeout != DataNode.instance.storage.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketWriteTimeout"))).intValue() != ((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3011, "DataNode.instance.dnConf.socketWriteTimeout > NameNode.instance.namesystem.snapshotManager.numSnapshots"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketWriteTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3012, "DataNode.instance.dnConf.socketWriteTimeout > NameNode.instance.namesystem.snapshotManager.snapshotCounter"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketWriteTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3013, "DataNode.instance.dnConf.socketWriteTimeout > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketWriteTimeout"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3014, "DataNode.instance.dnConf.volsConfigured > DataNode.instance.storage.layoutVersion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.volsConfigured"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3015, "DataNode.instance.dnConf.volsConfigured != DataNode.instance.storage.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.volsConfigured"))).intValue() != ((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3016, "DataNode.instance.dnConf.volsConfigured > NameNode.instance.namesystem.snapshotManager.numSnapshots"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.volsConfigured"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3017, "DataNode.instance.dnConf.volsConfigured >= NameNode.instance.namesystem.snapshotManager.snapshotCounter"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.volsConfigured"))).intValue() >= ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3018, "DataNode.instance.dnConf.volsConfigured > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.volsConfigured"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3019, "DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS > DataNode.instance.storage.layoutVersion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3020, "DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS != DataNode.instance.storage.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue() != ((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3021, "DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS >= NameNode.instance.namesystem.snapshotManager.numSnapshots"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue() >= ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3022, "DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS >= daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3023, "DataNode.instance.httpServer.HTTP_MAX_THREADS > DataNode.instance.storage.layoutVersion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_MAX_THREADS"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3024, "DataNode.instance.httpServer.HTTP_MAX_THREADS != DataNode.instance.storage.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_MAX_THREADS"))).intValue() != ((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3025, "DataNode.instance.httpServer.HTTP_MAX_THREADS > NameNode.instance.namesystem.snapshotManager.numSnapshots"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_MAX_THREADS"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3026, "DataNode.instance.httpServer.HTTP_MAX_THREADS > NameNode.instance.namesystem.snapshotManager.snapshotCounter"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_MAX_THREADS"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3027, "DataNode.instance.httpServer.HTTP_MAX_THREADS > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_MAX_THREADS"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3028, "DataNode.instance.id.infoPort > DataNode.instance.storage.layoutVersion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3029, "DataNode.instance.id.infoPort < DataNode.instance.storage.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3030, "DataNode.instance.id.infoPort > NameNode.instance.namesystem.snapshotManager.numSnapshots"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3031, "DataNode.instance.id.infoPort > NameNode.instance.namesystem.snapshotManager.snapshotCounter"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3032, "DataNode.instance.id.infoPort > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3033, "DataNode.instance.id.ipcPort > DataNode.instance.storage.layoutVersion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3034, "DataNode.instance.id.ipcPort < DataNode.instance.storage.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3035, "DataNode.instance.id.ipcPort > NameNode.instance.namesystem.snapshotManager.numSnapshots"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3036, "DataNode.instance.id.ipcPort > NameNode.instance.namesystem.snapshotManager.snapshotCounter"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3037, "DataNode.instance.id.ipcPort > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3038, "DataNode.instance.id.nsInfo.cTime > DataNode.instance.storage.layoutVersion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3039, "DataNode.instance.id.nsInfo.cTime > DataNode.instance.storage.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3040, "DataNode.instance.id.nsInfo.cTime > NameNode.instance.namesystem.snapshotManager.numSnapshots"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3041, "DataNode.instance.id.nsInfo.cTime > NameNode.instance.namesystem.snapshotManager.snapshotCounter"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3042, "DataNode.instance.id.nsInfo.cTime > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3043, "DataNode.instance.id.nsInfo.layoutVersion < DataNode.instance.storage.layoutVersion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3044, "DataNode.instance.id.nsInfo.layoutVersion < DataNode.instance.storage.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3045, "DataNode.instance.id.nsInfo.layoutVersion < NameNode.instance.namesystem.snapshotManager.numSnapshots"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3046, "DataNode.instance.id.nsInfo.layoutVersion < NameNode.instance.namesystem.snapshotManager.snapshotCounter"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3047, "DataNode.instance.id.nsInfo.layoutVersion < daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.layoutVersion"))).intValue() < daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0])))-1);
			}
		});
		invariants3999.add(new Invariant(3048, "DataNode.instance.id.nsInfo.namespaceID > DataNode.instance.storage.layoutVersion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3049, "DataNode.instance.id.nsInfo.namespaceID > NameNode.instance.namesystem.snapshotManager.numSnapshots"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3050, "DataNode.instance.id.nsInfo.namespaceID > NameNode.instance.namesystem.snapshotManager.snapshotCounter"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3051, "DataNode.instance.id.nsInfo.namespaceID > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3052, "DataNode.instance.id.xferPort > DataNode.instance.storage.layoutVersion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3053, "DataNode.instance.id.xferPort < DataNode.instance.storage.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3054, "DataNode.instance.id.xferPort > NameNode.instance.namesystem.snapshotManager.numSnapshots"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3055, "DataNode.instance.id.xferPort > NameNode.instance.namesystem.snapshotManager.snapshotCounter"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3056, "DataNode.instance.id.xferPort > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3057, "DataNode.instance.lastDiskErrorCheck > DataNode.instance.storage.layoutVersion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3058, "DataNode.instance.lastDiskErrorCheck < DataNode.instance.storage.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3059, "DataNode.instance.lastDiskErrorCheck > NameNode.instance.namesystem.snapshotManager.numSnapshots"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3060, "DataNode.instance.lastDiskErrorCheck > NameNode.instance.namesystem.snapshotManager.snapshotCounter"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3061, "DataNode.instance.lastDiskErrorCheck > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3062, "DataNode.instance.shortCircuitRegistry.SHM_LENGTH > DataNode.instance.storage.layoutVersion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.shortCircuitRegistry.SHM_LENGTH"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3063, "DataNode.instance.shortCircuitRegistry.SHM_LENGTH < DataNode.instance.storage.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.shortCircuitRegistry.SHM_LENGTH"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3064, "DataNode.instance.shortCircuitRegistry.SHM_LENGTH > NameNode.instance.namesystem.snapshotManager.numSnapshots"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.shortCircuitRegistry.SHM_LENGTH"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3065, "DataNode.instance.shortCircuitRegistry.SHM_LENGTH > NameNode.instance.namesystem.snapshotManager.snapshotCounter"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.shortCircuitRegistry.SHM_LENGTH"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3066, "DataNode.instance.shortCircuitRegistry.SHM_LENGTH > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.shortCircuitRegistry.SHM_LENGTH"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3067, "DataNode.instance.storage.layoutVersion <= DataNode.instance.storage.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() <= ((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3068, "DataNode.instance.storage.layoutVersion < DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3069, "DataNode.instance.storage.layoutVersion < DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3070, "DataNode.instance.storage.layoutVersion <= DataNode.instance.volumeChecker.numSyncDatasetChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() <= ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3071, "DataNode.instance.storage.layoutVersion < DataNode.instance.xserver.balanceThrottler.bytesPerPeriod"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.bytesPerPeriod"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3072, "DataNode.instance.storage.layoutVersion < DataNode.instance.xserver.balanceThrottler.curPeriodStart"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3073, "DataNode.instance.storage.layoutVersion < DataNode.instance.xserver.balanceThrottler.maxThreads"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.maxThreads"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3074, "DataNode.instance.storage.layoutVersion < DataNode.instance.xserver.balanceThrottler.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.period"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3075, "DataNode.instance.storage.layoutVersion < DataNode.instance.xserver.balanceThrottler.periodExtension"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.periodExtension"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3076, "DataNode.instance.storage.layoutVersion < DataNode.instance.xserver.estimateBlockSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.estimateBlockSize"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3077, "DataNode.instance.storage.layoutVersion < DataNode.instance.xserver.maxXceiverCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.maxXceiverCount"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3078, "DataNode.instance.storage.layoutVersion < NameNode.instance.DEFAULT_PORT"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.DEFAULT_PORT"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3079, "DataNode.instance.storage.layoutVersion < NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3080, "DataNode.instance.storage.layoutVersion < NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3081, "DataNode.instance.storage.layoutVersion < NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3082, "DataNode.instance.storage.layoutVersion > NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3083, "DataNode.instance.storage.layoutVersion < NameNode.instance.namesystem.blockDeletionIncrement"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.blockDeletionIncrement"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3084, "DataNode.instance.storage.layoutVersion < NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3085, "DataNode.instance.storage.layoutVersion < NameNode.instance.namesystem.cacheManager.scanIntervalMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.scanIntervalMs"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3086, "DataNode.instance.storage.layoutVersion < NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3087, "DataNode.instance.storage.layoutVersion < NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3088, "DataNode.instance.storage.layoutVersion < NameNode.instance.namesystem.dir.inodeXAttrsLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.inodeXAttrsLimit"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3089, "DataNode.instance.storage.layoutVersion < NameNode.instance.namesystem.dir.maxComponentLength"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxComponentLength"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3090, "DataNode.instance.storage.layoutVersion < NameNode.instance.namesystem.dir.maxDirItems"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxDirItems"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3091, "DataNode.instance.storage.layoutVersion < NameNode.instance.namesystem.dir.xattrMaxSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.xattrMaxSize"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3092, "DataNode.instance.storage.layoutVersion < NameNode.instance.namesystem.editLogRollerThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogRollerThreshold"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3093, "DataNode.instance.storage.layoutVersion < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3094, "DataNode.instance.storage.layoutVersion < NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3095, "DataNode.instance.storage.layoutVersion < NameNode.instance.namesystem.leaseManager.hardLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.hardLimit"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3096, "DataNode.instance.storage.layoutVersion < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3097, "DataNode.instance.storage.layoutVersion < NameNode.instance.namesystem.leaseRecheckIntervalMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseRecheckIntervalMs"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3098, "DataNode.instance.storage.layoutVersion < NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3099, "DataNode.instance.storage.layoutVersion < NameNode.instance.namesystem.nnResourceChecker.duReserved"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.nnResourceChecker.duReserved"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3100, "DataNode.instance.storage.layoutVersion < NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3101, "DataNode.instance.storage.layoutVersion < NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3102, "DataNode.instance.storage.layoutVersion <= NameNode.instance.namesystem.snapshotManager.numSnapshots"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() <= ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3103, "DataNode.instance.storage.layoutVersion <= NameNode.instance.namesystem.snapshotManager.snapshotCounter"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() <= ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3104, "DataNode.instance.storage.layoutVersion < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3105, "DataNode.instance.storage.layoutVersion < blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3106, "DataNode.instance.storage.layoutVersion < blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3107, "DataNode.instance.storage.layoutVersion < blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3108, "DataNode.instance.storage.layoutVersion <= blockManagerInstance.blockIdManager.legacyGenerationStampLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStampLimit"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3109, "DataNode.instance.storage.layoutVersion < blockManagerInstance.blockReportLeaseManager.leaseExpiryMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.leaseExpiryMs"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3110, "DataNode.instance.storage.layoutVersion < blockManagerInstance.blockReportLeaseManager.maxPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.maxPending"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3111, "DataNode.instance.storage.layoutVersion < blockManagerInstance.blockReportThread.MAX_LOCK_HOLD_MS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportThread.MAX_LOCK_HOLD_MS"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3112, "DataNode.instance.storage.layoutVersion < blockManagerInstance.blocksMap.capacity"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blocksMap.capacity"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3113, "DataNode.instance.storage.layoutVersion < blockManagerInstance.blocksPerPostpondedRescan"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blocksPerPostpondedRescan"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3114, "DataNode.instance.storage.layoutVersion < blockManagerInstance.blocksReplWorkMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blocksReplWorkMultiplier"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3115, "DataNode.instance.storage.layoutVersion > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.size"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3116, "DataNode.instance.storage.layoutVersion < blockManagerInstance.bmSafeMode.safeReplication"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.safeReplication"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3117, "DataNode.instance.storage.layoutVersion < blockManagerInstance.datanodeManager.defaultInfoPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoPort"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3118, "DataNode.instance.storage.layoutVersion < blockManagerInstance.datanodeManager.defaultInfoSecurePort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoSecurePort"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3119, "DataNode.instance.storage.layoutVersion < blockManagerInstance.datanodeManager.defaultIpcPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultIpcPort"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3120, "DataNode.instance.storage.layoutVersion < blockManagerInstance.datanodeManager.defaultXferPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultXferPort"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3121, "DataNode.instance.storage.layoutVersion < blockManagerInstance.datanodeManager.heartbeatExpireInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatExpireInterval"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3122, "DataNode.instance.storage.layoutVersion < blockManagerInstance.datanodeManager.heartbeatIntervalSeconds"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatIntervalSeconds"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3123, "DataNode.instance.storage.layoutVersion < blockManagerInstance.datanodeManager.heartbeatManager.REPORT_STALE_NODE_NODES_PER_LINE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatManager.REPORT_STALE_NODE_NODES_PER_LINE"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3124, "DataNode.instance.storage.layoutVersion < blockManagerInstance.datanodeManager.staleInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.staleInterval"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3125, "DataNode.instance.storage.layoutVersion <= blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3126, "DataNode.instance.storage.layoutVersion <= blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3127, "DataNode.instance.storage.layoutVersion <= blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3128, "DataNode.instance.storage.layoutVersion <= blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3129, "DataNode.instance.storage.layoutVersion <= blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3130, "DataNode.instance.storage.layoutVersion < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3131, "DataNode.instance.storage.layoutVersion != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3132, "DataNode.instance.storage.layoutVersion < blockManagerInstance.maxCorruptFilesReturned"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.maxCorruptFilesReturned"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3133, "DataNode.instance.storage.layoutVersion < blockManagerInstance.neededReconstruction.LEVEL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.LEVEL"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3134, "DataNode.instance.storage.layoutVersion < blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3135, "DataNode.instance.storage.layoutVersion < blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3136, "DataNode.instance.storage.layoutVersion < blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3137, "DataNode.instance.storage.layoutVersion < blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3138, "DataNode.instance.storage.layoutVersion < blockManagerInstance.placementPolicies.ecPolicy.heartbeatInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.placementPolicies.ecPolicy.heartbeatInterval"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3139, "DataNode.instance.storage.layoutVersion <= blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3140, "DataNode.instance.storage.layoutVersion < blockManagerInstance.replQueueResetToHeadThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueResetToHeadThreshold"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3141, "DataNode.instance.storage.layoutVersion < blockManagerInstance.storageInfoDefragmentInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.storageInfoDefragmentInterval"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3142, "DataNode.instance.storage.layoutVersion < blockManagerInstance.storagePolicySuite.defaultPolicyID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.storagePolicySuite.defaultPolicyID"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3143, "DataNode.instance.storage.layoutVersion != daikon.Quant.size(DataNode.instance.directoryScanner.diffs_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("DataNode.instance.directoryScanner.diffs")).toArray(new Object[0])))-1);
			}
		});
		invariants3999.add(new Invariant(3144, "DataNode.instance.storage.layoutVersion <= daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3145, "DataNode.instance.storage.layoutVersion != daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0])))-1);
			}
		});
		invariants3999.add(new Invariant(3146, "DataNode.instance.storage.layoutVersion <= daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3147, "DataNode.instance.storage.layoutVersion != daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0])))-1);
			}
		});
		invariants3999.add(new Invariant(3148, "DataNode.instance.storage.namespaceID != DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3149, "DataNode.instance.storage.namespaceID != DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3150, "DataNode.instance.storage.namespaceID != DataNode.instance.volumeChecker.lastAllVolumesCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3151, "DataNode.instance.storage.namespaceID >= DataNode.instance.volumeChecker.numSyncDatasetChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() >= ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3152, "DataNode.instance.storage.namespaceID != DataNode.instance.xserver.balanceThrottler.bytesPerPeriod"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.bytesPerPeriod"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3153, "DataNode.instance.storage.namespaceID != DataNode.instance.xserver.balanceThrottler.curPeriodStart"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3154, "DataNode.instance.storage.namespaceID != DataNode.instance.xserver.balanceThrottler.maxThreads"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.maxThreads"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3155, "DataNode.instance.storage.namespaceID != DataNode.instance.xserver.balanceThrottler.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.period"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3156, "DataNode.instance.storage.namespaceID != DataNode.instance.xserver.balanceThrottler.periodExtension"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.periodExtension"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3157, "DataNode.instance.storage.namespaceID != DataNode.instance.xserver.estimateBlockSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.estimateBlockSize"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3158, "DataNode.instance.storage.namespaceID != DataNode.instance.xserver.maxXceiverCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.maxXceiverCount"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3159, "DataNode.instance.storage.namespaceID != NameNode.instance.DEFAULT_PORT"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("NameNode.instance.DEFAULT_PORT"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3160, "DataNode.instance.storage.namespaceID != NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3161, "DataNode.instance.storage.namespaceID != NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3162, "DataNode.instance.storage.namespaceID != NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3163, "DataNode.instance.storage.namespaceID > NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3164, "DataNode.instance.storage.namespaceID != NameNode.instance.namesystem.blockDeletionIncrement"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.blockDeletionIncrement"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3165, "DataNode.instance.storage.namespaceID != NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3166, "DataNode.instance.storage.namespaceID != NameNode.instance.namesystem.cacheManager.scanIntervalMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.scanIntervalMs"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3167, "DataNode.instance.storage.namespaceID != NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3168, "DataNode.instance.storage.namespaceID != NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3169, "DataNode.instance.storage.namespaceID != NameNode.instance.namesystem.dir.inodeXAttrsLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.inodeXAttrsLimit"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3170, "DataNode.instance.storage.namespaceID != NameNode.instance.namesystem.dir.maxComponentLength"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxComponentLength"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3171, "DataNode.instance.storage.namespaceID != NameNode.instance.namesystem.dir.maxDirItems"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxDirItems"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3172, "DataNode.instance.storage.namespaceID != NameNode.instance.namesystem.dir.xattrMaxSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.xattrMaxSize"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3173, "DataNode.instance.storage.namespaceID != NameNode.instance.namesystem.editLogRollerThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogRollerThreshold"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3174, "DataNode.instance.storage.namespaceID != NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3175, "DataNode.instance.storage.namespaceID != NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3176, "DataNode.instance.storage.namespaceID != NameNode.instance.namesystem.leaseManager.hardLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.hardLimit"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3177, "DataNode.instance.storage.namespaceID != NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3178, "DataNode.instance.storage.namespaceID != NameNode.instance.namesystem.leaseRecheckIntervalMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseRecheckIntervalMs"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3179, "DataNode.instance.storage.namespaceID != NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3180, "DataNode.instance.storage.namespaceID != NameNode.instance.namesystem.nnResourceChecker.duReserved"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.nnResourceChecker.duReserved"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3181, "DataNode.instance.storage.namespaceID != NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3182, "DataNode.instance.storage.namespaceID != NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3183, "DataNode.instance.storage.namespaceID >= NameNode.instance.namesystem.snapshotManager.numSnapshots"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() >= ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3184, "DataNode.instance.storage.namespaceID >= NameNode.instance.namesystem.snapshotManager.snapshotCounter"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() >= ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3185, "DataNode.instance.storage.namespaceID < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3186, "DataNode.instance.storage.namespaceID != blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3187, "DataNode.instance.storage.namespaceID != blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3188, "DataNode.instance.storage.namespaceID != blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3189, "DataNode.instance.storage.namespaceID >= blockManagerInstance.blockIdManager.legacyGenerationStampLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() >= ((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStampLimit"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3190, "DataNode.instance.storage.namespaceID != blockManagerInstance.blockReportLeaseManager.leaseExpiryMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.leaseExpiryMs"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3191, "DataNode.instance.storage.namespaceID != blockManagerInstance.blockReportLeaseManager.maxPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.maxPending"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3192, "DataNode.instance.storage.namespaceID != blockManagerInstance.blockReportThread.MAX_LOCK_HOLD_MS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportThread.MAX_LOCK_HOLD_MS"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3193, "DataNode.instance.storage.namespaceID != blockManagerInstance.blocksMap.capacity"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blocksMap.capacity"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3194, "DataNode.instance.storage.namespaceID != blockManagerInstance.blocksPerPostpondedRescan"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blocksPerPostpondedRescan"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3195, "DataNode.instance.storage.namespaceID != blockManagerInstance.blocksReplWorkMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blocksReplWorkMultiplier"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3196, "DataNode.instance.storage.namespaceID != blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3197, "DataNode.instance.storage.namespaceID > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.size"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3198, "DataNode.instance.storage.namespaceID != blockManagerInstance.bmSafeMode.safeReplication"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.safeReplication"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3199, "DataNode.instance.storage.namespaceID != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3200, "DataNode.instance.storage.namespaceID != blockManagerInstance.datanodeManager.defaultInfoPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoPort"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3201, "DataNode.instance.storage.namespaceID != blockManagerInstance.datanodeManager.defaultInfoSecurePort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoSecurePort"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3202, "DataNode.instance.storage.namespaceID != blockManagerInstance.datanodeManager.defaultIpcPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultIpcPort"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3203, "DataNode.instance.storage.namespaceID != blockManagerInstance.datanodeManager.defaultXferPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultXferPort"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3204, "DataNode.instance.storage.namespaceID != blockManagerInstance.datanodeManager.heartbeatExpireInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatExpireInterval"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3205, "DataNode.instance.storage.namespaceID != blockManagerInstance.datanodeManager.heartbeatIntervalSeconds"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatIntervalSeconds"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3206, "DataNode.instance.storage.namespaceID != blockManagerInstance.datanodeManager.heartbeatManager.REPORT_STALE_NODE_NODES_PER_LINE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatManager.REPORT_STALE_NODE_NODES_PER_LINE"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3207, "DataNode.instance.storage.namespaceID != blockManagerInstance.datanodeManager.staleInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.staleInterval"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3208, "DataNode.instance.storage.namespaceID >= blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() >= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3209, "DataNode.instance.storage.namespaceID >= blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() >= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3210, "DataNode.instance.storage.namespaceID != blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3211, "DataNode.instance.storage.namespaceID != blockManagerInstance.maxCorruptFilesReturned"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.maxCorruptFilesReturned"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3212, "DataNode.instance.storage.namespaceID != blockManagerInstance.neededReconstruction.LEVEL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.LEVEL"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3213, "DataNode.instance.storage.namespaceID != blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3214, "DataNode.instance.storage.namespaceID != blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3215, "DataNode.instance.storage.namespaceID != blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3216, "DataNode.instance.storage.namespaceID != blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3217, "DataNode.instance.storage.namespaceID != blockManagerInstance.placementPolicies.ecPolicy.heartbeatInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.placementPolicies.ecPolicy.heartbeatInterval"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3218, "DataNode.instance.storage.namespaceID >= blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() >= ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3219, "DataNode.instance.storage.namespaceID != blockManagerInstance.replQueueResetToHeadThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueResetToHeadThreshold"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3220, "DataNode.instance.storage.namespaceID != blockManagerInstance.storageInfoDefragmentInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.storageInfoDefragmentInterval"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3221, "DataNode.instance.storage.namespaceID != blockManagerInstance.storagePolicySuite.defaultPolicyID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.storagePolicySuite.defaultPolicyID"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3222, "DataNode.instance.storage.namespaceID >= daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3223, "DataNode.instance.storage.namespaceID >= daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3224, "DataNode.instance.storage.namespaceID != daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3225, "DataNode.instance.storage.namespaceID != daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])))-1);
			}
		});
		invariants3999.add(new Invariant(3226, "DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks > NameNode.instance.namesystem.snapshotManager.numSnapshots"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3227, "DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks > NameNode.instance.namesystem.snapshotManager.snapshotCounter"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3228, "DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3229, "DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout > NameNode.instance.namesystem.snapshotManager.numSnapshots"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3230, "DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout > NameNode.instance.namesystem.snapshotManager.snapshotCounter"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3231, "DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3232, "DataNode.instance.volumeChecker.lastAllVolumesCheck > NameNode.instance.namesystem.snapshotManager.numSnapshots"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3233, "DataNode.instance.volumeChecker.lastAllVolumesCheck > NameNode.instance.namesystem.snapshotManager.snapshotCounter"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3234, "DataNode.instance.volumeChecker.lastAllVolumesCheck > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3235, "DataNode.instance.volumeChecker.numSyncDatasetChecks >= NameNode.instance.namesystem.snapshotManager.numSnapshots"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() >= ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3236, "DataNode.instance.volumeChecker.numSyncDatasetChecks >= daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3237, "DataNode.instance.xserver.balanceThrottler.bytesPerPeriod > NameNode.instance.namesystem.snapshotManager.numSnapshots"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.bytesPerPeriod"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3238, "DataNode.instance.xserver.balanceThrottler.bytesPerPeriod > NameNode.instance.namesystem.snapshotManager.snapshotCounter"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.bytesPerPeriod"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3239, "DataNode.instance.xserver.balanceThrottler.bytesPerPeriod > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.bytesPerPeriod"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3240, "DataNode.instance.xserver.balanceThrottler.curPeriodStart > NameNode.instance.namesystem.snapshotManager.numSnapshots"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3241, "DataNode.instance.xserver.balanceThrottler.curPeriodStart > NameNode.instance.namesystem.snapshotManager.snapshotCounter"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3242, "DataNode.instance.xserver.balanceThrottler.curPeriodStart > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3243, "DataNode.instance.xserver.balanceThrottler.maxThreads > NameNode.instance.namesystem.snapshotManager.numSnapshots"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.maxThreads"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3244, "DataNode.instance.xserver.balanceThrottler.maxThreads > NameNode.instance.namesystem.snapshotManager.snapshotCounter"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.maxThreads"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3245, "DataNode.instance.xserver.balanceThrottler.maxThreads > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.maxThreads"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3246, "DataNode.instance.xserver.balanceThrottler.period > NameNode.instance.namesystem.snapshotManager.numSnapshots"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.period"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3247, "DataNode.instance.xserver.balanceThrottler.period > NameNode.instance.namesystem.snapshotManager.snapshotCounter"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.period"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3248, "DataNode.instance.xserver.balanceThrottler.period > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.period"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3249, "DataNode.instance.xserver.balanceThrottler.periodExtension > NameNode.instance.namesystem.snapshotManager.numSnapshots"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.periodExtension"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3250, "DataNode.instance.xserver.balanceThrottler.periodExtension > NameNode.instance.namesystem.snapshotManager.snapshotCounter"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.periodExtension"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3251, "DataNode.instance.xserver.balanceThrottler.periodExtension > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.periodExtension"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3252, "DataNode.instance.xserver.estimateBlockSize > NameNode.instance.namesystem.snapshotManager.numSnapshots"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.estimateBlockSize"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3253, "DataNode.instance.xserver.estimateBlockSize > NameNode.instance.namesystem.snapshotManager.snapshotCounter"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.estimateBlockSize"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3254, "DataNode.instance.xserver.estimateBlockSize > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.estimateBlockSize"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3255, "DataNode.instance.xserver.maxXceiverCount > NameNode.instance.namesystem.snapshotManager.numSnapshots"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.maxXceiverCount"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3256, "DataNode.instance.xserver.maxXceiverCount > NameNode.instance.namesystem.snapshotManager.snapshotCounter"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.maxXceiverCount"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3257, "DataNode.instance.xserver.maxXceiverCount > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.maxXceiverCount"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3258, "NameNode.instance.DEFAULT_PORT > NameNode.instance.namesystem.snapshotManager.numSnapshots"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.DEFAULT_PORT"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3259, "NameNode.instance.DEFAULT_PORT > NameNode.instance.namesystem.snapshotManager.snapshotCounter"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.DEFAULT_PORT"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3260, "NameNode.instance.DEFAULT_PORT > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.DEFAULT_PORT"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3261, "NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS > NameNode.instance.namesystem.snapshotManager.numSnapshots"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3262, "NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS > NameNode.instance.namesystem.snapshotManager.snapshotCounter"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3263, "NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3264, "NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL > NameNode.instance.namesystem.snapshotManager.numSnapshots"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3265, "NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL > NameNode.instance.namesystem.snapshotManager.snapshotCounter"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3266, "NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3267, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE > NameNode.instance.namesystem.snapshotManager.numSnapshots"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3268, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE > NameNode.instance.namesystem.snapshotManager.snapshotCounter"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3269, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3270, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size < NameNode.instance.namesystem.snapshotManager.numSnapshots"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3271, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size < NameNode.instance.namesystem.snapshotManager.snapshotCounter"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3272, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size < daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size"))).intValue() < daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0])))-1);
			}
		});
		invariants3999.add(new Invariant(3273, "NameNode.instance.namesystem.blockDeletionIncrement > NameNode.instance.namesystem.snapshotManager.numSnapshots"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.blockDeletionIncrement"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3274, "NameNode.instance.namesystem.blockDeletionIncrement > NameNode.instance.namesystem.snapshotManager.snapshotCounter"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.blockDeletionIncrement"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3275, "NameNode.instance.namesystem.blockDeletionIncrement > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.blockDeletionIncrement"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3276, "daikon.Quant.subsetOf(NameNode.instance.namesystem.cacheManager.directivesById_FOR_ENCLOSING_USE, NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.subsetOf((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.directivesById")).toArray(new Object[0])), (Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3277, "NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses > NameNode.instance.namesystem.snapshotManager.numSnapshots"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3278, "NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses > NameNode.instance.namesystem.snapshotManager.snapshotCounter"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3279, "NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3280, "NameNode.instance.namesystem.cacheManager.scanIntervalMs > NameNode.instance.namesystem.snapshotManager.numSnapshots"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.scanIntervalMs"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3281, "NameNode.instance.namesystem.cacheManager.scanIntervalMs > NameNode.instance.namesystem.snapshotManager.snapshotCounter"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.scanIntervalMs"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3282, "NameNode.instance.namesystem.cacheManager.scanIntervalMs > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.scanIntervalMs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3283, "NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE > NameNode.instance.namesystem.snapshotManager.numSnapshots"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3284, "NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE > NameNode.instance.namesystem.snapshotManager.snapshotCounter"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3285, "NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3286, "NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval > NameNode.instance.namesystem.snapshotManager.numSnapshots"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3287, "NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval > NameNode.instance.namesystem.snapshotManager.snapshotCounter"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3288, "NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3289, "NameNode.instance.namesystem.dir.inodeXAttrsLimit > NameNode.instance.namesystem.snapshotManager.numSnapshots"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.inodeXAttrsLimit"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3290, "NameNode.instance.namesystem.dir.inodeXAttrsLimit > NameNode.instance.namesystem.snapshotManager.snapshotCounter"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.inodeXAttrsLimit"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3291, "NameNode.instance.namesystem.dir.inodeXAttrsLimit > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.inodeXAttrsLimit"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3292, "NameNode.instance.namesystem.dir.maxComponentLength > NameNode.instance.namesystem.snapshotManager.numSnapshots"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxComponentLength"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3293, "NameNode.instance.namesystem.dir.maxComponentLength > NameNode.instance.namesystem.snapshotManager.snapshotCounter"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxComponentLength"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3294, "NameNode.instance.namesystem.dir.maxComponentLength > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxComponentLength"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3295, "NameNode.instance.namesystem.dir.maxDirItems > NameNode.instance.namesystem.snapshotManager.numSnapshots"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxDirItems"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3296, "NameNode.instance.namesystem.dir.maxDirItems > NameNode.instance.namesystem.snapshotManager.snapshotCounter"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxDirItems"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3297, "NameNode.instance.namesystem.dir.maxDirItems > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxDirItems"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3298, "NameNode.instance.namesystem.dir.xattrMaxSize > NameNode.instance.namesystem.snapshotManager.numSnapshots"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.xattrMaxSize"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3299, "NameNode.instance.namesystem.dir.xattrMaxSize > NameNode.instance.namesystem.snapshotManager.snapshotCounter"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.xattrMaxSize"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3300, "NameNode.instance.namesystem.dir.xattrMaxSize > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.xattrMaxSize"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3301, "NameNode.instance.namesystem.editLogRollerThreshold > NameNode.instance.namesystem.snapshotManager.numSnapshots"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogRollerThreshold"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3302, "NameNode.instance.namesystem.editLogRollerThreshold > NameNode.instance.namesystem.snapshotManager.snapshotCounter"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogRollerThreshold"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3303, "NameNode.instance.namesystem.editLogRollerThreshold > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogRollerThreshold"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3304, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos > NameNode.instance.namesystem.snapshotManager.numSnapshots"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3305, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos > NameNode.instance.namesystem.snapshotManager.snapshotCounter"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3306, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3307, "NameNode.instance.namesystem.lazyPersistFileScrubberTS > NameNode.instance.namesystem.snapshotManager.numSnapshots"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3308, "NameNode.instance.namesystem.lazyPersistFileScrubberTS > NameNode.instance.namesystem.snapshotManager.snapshotCounter"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3309, "NameNode.instance.namesystem.lazyPersistFileScrubberTS > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3310, "NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN > NameNode.instance.namesystem.snapshotManager.numSnapshots"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3311, "NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN > NameNode.instance.namesystem.snapshotManager.snapshotCounter"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3312, "NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3313, "NameNode.instance.namesystem.leaseManager.hardLimit > NameNode.instance.namesystem.snapshotManager.numSnapshots"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.hardLimit"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3314, "NameNode.instance.namesystem.leaseManager.hardLimit > NameNode.instance.namesystem.snapshotManager.snapshotCounter"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.hardLimit"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3315, "NameNode.instance.namesystem.leaseManager.hardLimit > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.hardLimit"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3316, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime > NameNode.instance.namesystem.snapshotManager.numSnapshots"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3317, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime > NameNode.instance.namesystem.snapshotManager.snapshotCounter"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3318, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3319, "NameNode.instance.namesystem.leaseRecheckIntervalMs > NameNode.instance.namesystem.snapshotManager.numSnapshots"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseRecheckIntervalMs"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3320, "NameNode.instance.namesystem.leaseRecheckIntervalMs > NameNode.instance.namesystem.snapshotManager.snapshotCounter"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseRecheckIntervalMs"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3321, "NameNode.instance.namesystem.leaseRecheckIntervalMs > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseRecheckIntervalMs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3322, "NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs > NameNode.instance.namesystem.snapshotManager.numSnapshots"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3323, "NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs > NameNode.instance.namesystem.snapshotManager.snapshotCounter"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3324, "NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3325, "NameNode.instance.namesystem.nnResourceChecker.duReserved > NameNode.instance.namesystem.snapshotManager.numSnapshots"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.nnResourceChecker.duReserved"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3326, "NameNode.instance.namesystem.nnResourceChecker.duReserved > NameNode.instance.namesystem.snapshotManager.snapshotCounter"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.nnResourceChecker.duReserved"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3327, "NameNode.instance.namesystem.nnResourceChecker.duReserved > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.nnResourceChecker.duReserved"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3328, "NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH > NameNode.instance.namesystem.snapshotManager.numSnapshots"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3329, "NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH > NameNode.instance.namesystem.snapshotManager.snapshotCounter"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3330, "NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3331, "NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit > NameNode.instance.namesystem.snapshotManager.numSnapshots"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3332, "NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit > NameNode.instance.namesystem.snapshotManager.snapshotCounter"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3333, "NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3334, "NameNode.instance.namesystem.snapshotManager.numSnapshots <= NameNode.instance.namesystem.snapshotManager.snapshotCounter"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue() <= ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3335, "NameNode.instance.namesystem.snapshotManager.numSnapshots < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3336, "NameNode.instance.namesystem.snapshotManager.numSnapshots < blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3337, "NameNode.instance.namesystem.snapshotManager.numSnapshots < blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3338, "NameNode.instance.namesystem.snapshotManager.numSnapshots < blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3339, "NameNode.instance.namesystem.snapshotManager.numSnapshots >= blockManagerInstance.blockIdManager.legacyGenerationStampLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue() >= ((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStampLimit"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3340, "NameNode.instance.namesystem.snapshotManager.numSnapshots < blockManagerInstance.blockReportLeaseManager.leaseExpiryMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.leaseExpiryMs"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3341, "NameNode.instance.namesystem.snapshotManager.numSnapshots < blockManagerInstance.blockReportLeaseManager.maxPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.maxPending"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3342, "NameNode.instance.namesystem.snapshotManager.numSnapshots < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3343, "NameNode.instance.namesystem.snapshotManager.numSnapshots < blockManagerInstance.blockReportThread.MAX_LOCK_HOLD_MS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportThread.MAX_LOCK_HOLD_MS"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3344, "NameNode.instance.namesystem.snapshotManager.numSnapshots < blockManagerInstance.blocksMap.capacity"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blocksMap.capacity"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3345, "NameNode.instance.namesystem.snapshotManager.numSnapshots < blockManagerInstance.blocksPerPostpondedRescan"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blocksPerPostpondedRescan"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3346, "NameNode.instance.namesystem.snapshotManager.numSnapshots < blockManagerInstance.blocksReplWorkMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blocksReplWorkMultiplier"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3347, "NameNode.instance.namesystem.snapshotManager.numSnapshots < blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3348, "NameNode.instance.namesystem.snapshotManager.numSnapshots > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.size"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3349, "NameNode.instance.namesystem.snapshotManager.numSnapshots <= blockManagerInstance.bmSafeMode.safeReplication"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.safeReplication"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3350, "NameNode.instance.namesystem.snapshotManager.numSnapshots < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3351, "NameNode.instance.namesystem.snapshotManager.numSnapshots < blockManagerInstance.datanodeManager.defaultInfoPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoPort"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3352, "NameNode.instance.namesystem.snapshotManager.numSnapshots < blockManagerInstance.datanodeManager.defaultInfoSecurePort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoSecurePort"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3353, "NameNode.instance.namesystem.snapshotManager.numSnapshots < blockManagerInstance.datanodeManager.defaultIpcPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultIpcPort"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3354, "NameNode.instance.namesystem.snapshotManager.numSnapshots < blockManagerInstance.datanodeManager.defaultXferPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultXferPort"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3355, "NameNode.instance.namesystem.snapshotManager.numSnapshots < blockManagerInstance.datanodeManager.heartbeatExpireInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatExpireInterval"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3356, "NameNode.instance.namesystem.snapshotManager.numSnapshots < blockManagerInstance.datanodeManager.heartbeatIntervalSeconds"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatIntervalSeconds"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3357, "NameNode.instance.namesystem.snapshotManager.numSnapshots < blockManagerInstance.datanodeManager.heartbeatManager.REPORT_STALE_NODE_NODES_PER_LINE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatManager.REPORT_STALE_NODE_NODES_PER_LINE"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3358, "NameNode.instance.namesystem.snapshotManager.numSnapshots < blockManagerInstance.datanodeManager.staleInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.staleInterval"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3359, "NameNode.instance.namesystem.snapshotManager.numSnapshots <= blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3360, "NameNode.instance.namesystem.snapshotManager.numSnapshots <= blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3361, "NameNode.instance.namesystem.snapshotManager.numSnapshots <= blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3362, "NameNode.instance.namesystem.snapshotManager.numSnapshots <= blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3363, "NameNode.instance.namesystem.snapshotManager.numSnapshots <= blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3364, "NameNode.instance.namesystem.snapshotManager.numSnapshots < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3365, "NameNode.instance.namesystem.snapshotManager.numSnapshots != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3366, "NameNode.instance.namesystem.snapshotManager.numSnapshots < blockManagerInstance.maxCorruptFilesReturned"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.maxCorruptFilesReturned"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3367, "NameNode.instance.namesystem.snapshotManager.numSnapshots < blockManagerInstance.neededReconstruction.LEVEL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.LEVEL"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3368, "NameNode.instance.namesystem.snapshotManager.numSnapshots < blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3369, "NameNode.instance.namesystem.snapshotManager.numSnapshots < blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3370, "NameNode.instance.namesystem.snapshotManager.numSnapshots < blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3371, "NameNode.instance.namesystem.snapshotManager.numSnapshots < blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3372, "NameNode.instance.namesystem.snapshotManager.numSnapshots < blockManagerInstance.placementPolicies.ecPolicy.heartbeatInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.placementPolicies.ecPolicy.heartbeatInterval"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3373, "NameNode.instance.namesystem.snapshotManager.numSnapshots <= blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3374, "NameNode.instance.namesystem.snapshotManager.numSnapshots < blockManagerInstance.replQueueResetToHeadThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueResetToHeadThreshold"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3375, "NameNode.instance.namesystem.snapshotManager.numSnapshots < blockManagerInstance.storageInfoDefragmentInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.storageInfoDefragmentInterval"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3376, "NameNode.instance.namesystem.snapshotManager.numSnapshots < blockManagerInstance.storagePolicySuite.defaultPolicyID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.storagePolicySuite.defaultPolicyID"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3377, "NameNode.instance.namesystem.snapshotManager.numSnapshots >= daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0])))-1);
			}
		});
		invariants3999.add(new Invariant(3378, "NameNode.instance.namesystem.snapshotManager.numSnapshots <= daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3379, "NameNode.instance.namesystem.snapshotManager.numSnapshots >= daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0])))-1);
			}
		});
		invariants3999.add(new Invariant(3380, "NameNode.instance.namesystem.snapshotManager.numSnapshots < daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue() < daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])))-1);
			}
		});
		invariants3999.add(new Invariant(3381, "NameNode.instance.namesystem.snapshotManager.snapshotCounter < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3382, "NameNode.instance.namesystem.snapshotManager.snapshotCounter < blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3383, "NameNode.instance.namesystem.snapshotManager.snapshotCounter < blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3384, "NameNode.instance.namesystem.snapshotManager.snapshotCounter < blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3385, "NameNode.instance.namesystem.snapshotManager.snapshotCounter >= blockManagerInstance.blockIdManager.legacyGenerationStampLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue() >= ((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStampLimit"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3386, "NameNode.instance.namesystem.snapshotManager.snapshotCounter < blockManagerInstance.blockReportLeaseManager.leaseExpiryMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.leaseExpiryMs"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3387, "NameNode.instance.namesystem.snapshotManager.snapshotCounter < blockManagerInstance.blockReportLeaseManager.maxPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.maxPending"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3388, "NameNode.instance.namesystem.snapshotManager.snapshotCounter - 2 * blockManagerInstance.blockReportLeaseManager.nextId + 2147483647 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue() - 2 * ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() + 2147483647 == 0);
			}
		});
		invariants3999.add(new Invariant(3389, "NameNode.instance.namesystem.snapshotManager.snapshotCounter < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3390, "NameNode.instance.namesystem.snapshotManager.snapshotCounter < blockManagerInstance.blockReportThread.MAX_LOCK_HOLD_MS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportThread.MAX_LOCK_HOLD_MS"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3391, "NameNode.instance.namesystem.snapshotManager.snapshotCounter < blockManagerInstance.blocksMap.capacity"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blocksMap.capacity"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3392, "NameNode.instance.namesystem.snapshotManager.snapshotCounter < blockManagerInstance.blocksPerPostpondedRescan"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blocksPerPostpondedRescan"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3393, "NameNode.instance.namesystem.snapshotManager.snapshotCounter <= blockManagerInstance.blocksReplWorkMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.blocksReplWorkMultiplier"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3394, "NameNode.instance.namesystem.snapshotManager.snapshotCounter < blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3395, "NameNode.instance.namesystem.snapshotManager.snapshotCounter > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.size"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3396, "NameNode.instance.namesystem.snapshotManager.snapshotCounter < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3397, "NameNode.instance.namesystem.snapshotManager.snapshotCounter < blockManagerInstance.datanodeManager.defaultInfoPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoPort"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3398, "NameNode.instance.namesystem.snapshotManager.snapshotCounter < blockManagerInstance.datanodeManager.defaultInfoSecurePort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoSecurePort"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3399, "NameNode.instance.namesystem.snapshotManager.snapshotCounter < blockManagerInstance.datanodeManager.defaultIpcPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultIpcPort"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3400, "NameNode.instance.namesystem.snapshotManager.snapshotCounter < blockManagerInstance.datanodeManager.defaultXferPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultXferPort"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3401, "NameNode.instance.namesystem.snapshotManager.snapshotCounter < blockManagerInstance.datanodeManager.heartbeatExpireInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatExpireInterval"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3402, "NameNode.instance.namesystem.snapshotManager.snapshotCounter < blockManagerInstance.datanodeManager.heartbeatIntervalSeconds"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatIntervalSeconds"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3403, "NameNode.instance.namesystem.snapshotManager.snapshotCounter < blockManagerInstance.datanodeManager.heartbeatManager.REPORT_STALE_NODE_NODES_PER_LINE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatManager.REPORT_STALE_NODE_NODES_PER_LINE"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3404, "NameNode.instance.namesystem.snapshotManager.snapshotCounter < blockManagerInstance.datanodeManager.staleInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.staleInterval"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3405, "NameNode.instance.namesystem.snapshotManager.snapshotCounter <= blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3406, "NameNode.instance.namesystem.snapshotManager.snapshotCounter <= blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3407, "NameNode.instance.namesystem.snapshotManager.snapshotCounter <= blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3408, "NameNode.instance.namesystem.snapshotManager.snapshotCounter <= blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3409, "NameNode.instance.namesystem.snapshotManager.snapshotCounter < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3410, "NameNode.instance.namesystem.snapshotManager.snapshotCounter != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3411, "NameNode.instance.namesystem.snapshotManager.snapshotCounter < blockManagerInstance.maxCorruptFilesReturned"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.maxCorruptFilesReturned"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3412, "NameNode.instance.namesystem.snapshotManager.snapshotCounter < blockManagerInstance.neededReconstruction.LEVEL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.LEVEL"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3413, "NameNode.instance.namesystem.snapshotManager.snapshotCounter < blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3414, "NameNode.instance.namesystem.snapshotManager.snapshotCounter < blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3415, "NameNode.instance.namesystem.snapshotManager.snapshotCounter < blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3416, "NameNode.instance.namesystem.snapshotManager.snapshotCounter < blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3417, "NameNode.instance.namesystem.snapshotManager.snapshotCounter < blockManagerInstance.placementPolicies.ecPolicy.heartbeatInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.placementPolicies.ecPolicy.heartbeatInterval"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3418, "NameNode.instance.namesystem.snapshotManager.snapshotCounter <= blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3419, "NameNode.instance.namesystem.snapshotManager.snapshotCounter < blockManagerInstance.replQueueResetToHeadThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueResetToHeadThreshold"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3420, "NameNode.instance.namesystem.snapshotManager.snapshotCounter < blockManagerInstance.storageInfoDefragmentInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.storageInfoDefragmentInterval"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3421, "NameNode.instance.namesystem.snapshotManager.snapshotCounter < blockManagerInstance.storagePolicySuite.defaultPolicyID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.storagePolicySuite.defaultPolicyID"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3422, "NameNode.instance.namesystem.snapshotManager.snapshotCounter >= daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0])))-1);
			}
		});
		invariants3999.add(new Invariant(3423, "NameNode.instance.namesystem.snapshotManager.snapshotCounter >= daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0])))-1);
			}
		});
		invariants3999.add(new Invariant(3424, "NameNode.instance.namesystem.snapshotManager.snapshotCounter <= daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])))-1);
			}
		});
		invariants3999.add(new Invariant(3425, "NameNode.instance.namesystem.startTime > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3426, "blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3427, "blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3428, "blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3429, "blockManagerInstance.blockIdManager.legacyGenerationStampLimit <= daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStampLimit"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3430, "blockManagerInstance.blockIdManager.legacyGenerationStampLimit >= daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStampLimit"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0])))-1);
			}
		});
		invariants3999.add(new Invariant(3431, "blockManagerInstance.blockReportLeaseManager.leaseExpiryMs > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.leaseExpiryMs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3432, "blockManagerInstance.blockReportLeaseManager.maxPending > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.maxPending"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3433, "blockManagerInstance.blockReportLeaseManager.nextId > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3434, "blockManagerInstance.blockReportThread.MAX_LOCK_HOLD_MS > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportThread.MAX_LOCK_HOLD_MS"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3435, "blockManagerInstance.blocksMap.capacity > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blocksMap.capacity"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3436, "blockManagerInstance.blocksPerPostpondedRescan > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blocksPerPostpondedRescan"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3437, "blockManagerInstance.blocksReplWorkMultiplier > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blocksReplWorkMultiplier"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3438, "blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3439, "blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.size < daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.size"))).intValue() < daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0])))-1);
			}
		});
		invariants3999.add(new Invariant(3440, "blockManagerInstance.bmSafeMode.safeReplication >= daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.safeReplication"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3441, "blockManagerInstance.bmSafeMode.startTime >= daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3442, "blockManagerInstance.datanodeManager.defaultInfoPort > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoPort"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3443, "blockManagerInstance.datanodeManager.defaultInfoSecurePort > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoSecurePort"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3444, "blockManagerInstance.datanodeManager.defaultIpcPort > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultIpcPort"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3445, "blockManagerInstance.datanodeManager.defaultXferPort > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultXferPort"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3446, "blockManagerInstance.datanodeManager.heartbeatExpireInterval > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatExpireInterval"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3447, "blockManagerInstance.datanodeManager.heartbeatIntervalSeconds > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatIntervalSeconds"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3448, "blockManagerInstance.datanodeManager.heartbeatManager.REPORT_STALE_NODE_NODES_PER_LINE > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatManager.REPORT_STALE_NODE_NODES_PER_LINE"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3449, "blockManagerInstance.datanodeManager.staleInterval > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.staleInterval"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3450, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed >= daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3451, "blockManagerInstance.heartbeatManager.stats.capacityRemaining >= daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3452, "blockManagerInstance.heartbeatManager.stats.capacityTotal >= daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3453, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs >= daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3454, "blockManagerInstance.heartbeatManager.stats.nodesInService >= daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3455, "blockManagerInstance.invalidateBlocks.startupTime > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3456, "blockManagerInstance.lastRedundancyCycleTS >= daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0])))-1);
			}
		});
		invariants3999.add(new Invariant(3457, "blockManagerInstance.lastRedundancyCycleTS != daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3458, "blockManagerInstance.lastRedundancyCycleTS >= daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0])))-1);
			}
		});
		invariants3999.add(new Invariant(3459, "blockManagerInstance.maxCorruptFilesReturned > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.maxCorruptFilesReturned"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3460, "blockManagerInstance.neededReconstruction.LEVEL >= blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.LEVEL"))).intValue() >= ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3461, "blockManagerInstance.neededReconstruction.LEVEL > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.LEVEL"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3462, "blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3463, "blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3464, "blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3465, "blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3466, "blockManagerInstance.placementPolicies.ecPolicy.heartbeatInterval > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.placementPolicies.ecPolicy.heartbeatInterval"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3467, "blockManagerInstance.replQueueCallsSinceReset >= daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3468, "blockManagerInstance.replQueueCallsSinceReset >= daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3469, "blockManagerInstance.replQueueResetToHeadThreshold > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueResetToHeadThreshold"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3470, "blockManagerInstance.storageInfoDefragmentInterval > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.storageInfoDefragmentInterval"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3471, "blockManagerInstance.storagePolicySuite.defaultPolicyID > daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.storagePolicySuite.defaultPolicyID"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3472, "daikon.Quant.size(DataNode.instance.directoryScanner.diffs_FOR_ENCLOSING_USE)-1 <= daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("DataNode.instance.directoryScanner.diffs")).toArray(new Object[0])))-1 <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0])))-1);
			}
		});
		invariants3999.add(new Invariant(3473, "daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE) >= daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))) >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0])))-1);
			}
		});
		invariants3999.add(new Invariant(3474, "daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)-1 <= daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0])))-1 <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3475, "daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE) <= daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))) <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3476, "daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE) != daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))) != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])))-1);
			}
		});
		invariants3999.add(new Invariant(3477, "daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)-1 <= daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0])))-1 <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])))-1);
			}
		});
		invariants3999.add(new Invariant(3478, "24576 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 622803899 * blockManagerInstance.heartbeatManager.stats.blockPoolUsed - 2.1928618647552E13 * blockManagerInstance.replQueueCallsSinceReset - 2.8932700864539771E18 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (24576 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 622803899 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() - 2.1928618647552E13 * ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue() - 2.8932700864539771E18 == 0);
			}
		});
		invariants3999.add(new Invariant(3479, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 1245607798 * blockManagerInstance.heartbeatManager.stats.nodesInService - 892277777 * blockManagerInstance.replQueueCallsSinceReset - 1.17727461200113E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 1245607798 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() - 892277777 * ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue() - 1.17727461200113E14 == 0);
			}
		});
		invariants3999.add(new Invariant(3480, "NameNode.instance.namesystem.snapshotManager.snapshotCounter - 2 * blockManagerInstance.blockReportLeaseManager.nextId + 2 * daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE) + 4.4085081429200466E18 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue() - 2 * ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() + 2 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))) + 4.4085081429200466E18 == 0);
			}
		});
		invariants3999.add(new Invariant(3481, "NameNode.instance.namesystem.snapshotManager.snapshotCounter - 2 * blockManagerInstance.blockReportLeaseManager.nextId + 2 * daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)-1 + 4.4085081429200466E18 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue() - 2 * ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() + 2 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0])))-1 + 4.4085081429200466E18 == 0);
			}
		});
		invariants3999.add(new Invariant(3482, "NameNode.instance.namesystem.snapshotManager.snapshotCounter - blockManagerInstance.blockReportLeaseManager.nextId + daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE) + 2.2042540714600233E18 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue() - ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() + daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))) + 2.2042540714600233E18 == 0);
			}
		});
		invariants3999.add(new Invariant(3483, "NameNode.instance.namesystem.snapshotManager.snapshotCounter - blockManagerInstance.blockReportLeaseManager.nextId + daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)-1 + 2.2042540714600233E18 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue() - ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() + daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0])))-1 + 2.2042540714600233E18 == 0);
			}
		});
		invariants3999.add(new Invariant(3484, "2 * blockManagerInstance.blockReportLeaseManager.nextId - blockManagerInstance.replQueueCallsSinceReset - daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE) - 4.4085081429200466E18 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2 * ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() - ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue() - daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))) - 4.4085081429200466E18 == 0);
			}
		});
		invariants3999.add(new Invariant(3485, "2 * blockManagerInstance.blockReportLeaseManager.nextId - blockManagerInstance.replQueueCallsSinceReset - daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)-1 - 4.4085081429200466E18 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2 * ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() - ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue() - daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0])))-1 - 4.4085081429200466E18 == 0);
			}
		});
		invariants3999.add(new Invariant(3486, "blockManagerInstance.datanodeManager.heartbeatIntervalSeconds == blockManagerInstance.defaultReplication"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatIntervalSeconds"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.defaultReplication"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3487, "DataNode.instance.id.infoPort == 43101"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() == 43101);
			}
		});
		invariants3999.add(new Invariant(3488, "DataNode.instance.id.ipcPort == 34749"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() == 34749);
			}
		});
		invariants3999.add(new Invariant(3489, "DataNode.instance.id.nsInfo.cTime == 1731381922825L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() == 1731381922825L);
			}
		});
		invariants3999.add(new Invariant(3490, "DataNode.instance.id.nsInfo.namespaceID == 105713751"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() == 105713751);
			}
		});
		invariants3999.add(new Invariant(3491, "DataNode.instance.id.xferPort == 38711"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() == 38711);
			}
		});
		invariants3999.add(new Invariant(3492, "DataNode.instance.lastDiskErrorCheck == 118032054"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() == 118032054);
			}
		});
		invariants3999.add(new Invariant(3493, "DataNode.instance.storage.namespaceID == 105713751"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() == 105713751);
			}
		});
		invariants3999.add(new Invariant(3494, "DataNode.instance.volumeChecker.lastAllVolumesCheck == 117131421 || DataNode.instance.volumeChecker.lastAllVolumesCheck == 118032046"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() == 117131421 || ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() == 118032046);
			}
		});
		invariants3999.add(new Invariant(3495, "DataNode.instance.xserver.balanceThrottler.curPeriodStart == 118031422"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() == 118031422);
			}
		});
		invariants3999.add(new Invariant(3496, "NameNode.instance.namesystem.lazyPersistFileScrubberTS == 118030042"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() == 118030042);
			}
		});
		invariants3999.add(new Invariant(3497, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime == 118029376"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() == 118029376);
			}
		});
		invariants3999.add(new Invariant(3498, "NameNode.instance.namesystem.startTime == 1731381924468L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() == 1731381924468L);
			}
		});
		invariants3999.add(new Invariant(3499, "blockManagerInstance.blockReportLeaseManager.nextId == -6357840607064050409L || blockManagerInstance.blockReportLeaseManager.nextId == -6357840607064050406L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() == -6357840607064050409L || ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() == -6357840607064050406L);
			}
		});
		invariants3999.add(new Invariant(3500, "blockManagerInstance.bmSafeMode.startTime == 0 || blockManagerInstance.bmSafeMode.startTime == 118030005"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() == 118030005);
			}
		});
		invariants3999.add(new Invariant(3501, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 0 || blockManagerInstance.heartbeatManager.stats.capacityRemaining == 280558460928L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 280558460928L);
			}
		});
		invariants3999.add(new Invariant(3502, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 0 || blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 101126111232L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 101126111232L);
			}
		});
		invariants3999.add(new Invariant(3503, "blockManagerInstance.invalidateBlocks.startupTime == 118029378"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue() == 118029378);
			}
		});
		invariants3999.add(new Invariant(3504, "blockManagerInstance.lastRedundancyCycleTS == -1 || blockManagerInstance.lastRedundancyCycleTS == 118033008 || blockManagerInstance.lastRedundancyCycleTS == 118036008"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == -1 || ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118033008 || ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118036008);
			}
		});
		invariants3999.add(new Invariant(3505, "DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3506, "DataNode.instance.NUM_CORES > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.NUM_CORES"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3507, "DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3508, "DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3509, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3510, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3511, "DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3512, "DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3513, "DataNode.instance.data.asyncDiskService.numDeletedBlocks > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3514, "DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3515, "DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3516, "DataNode.instance.data.cacheManager.numBlocksCached > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3517, "DataNode.instance.data.cacheManager.revocationMs > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3518, "DataNode.instance.data.cacheManager.revocationPollingMs > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationPollingMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3519, "DataNode.instance.data.maxDataLength > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.maxDataLength"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3520, "DataNode.instance.data.smallBufferSize > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.smallBufferSize"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3521, "DataNode.instance.data.volsConfigured > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3522, "DataNode.instance.directoryScanner.MILLIS_PER_SECOND > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.MILLIS_PER_SECOND"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3523, "DataNode.instance.directoryScanner.diffs.serialVersionUID > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.diffs.serialVersionUID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3524, "DataNode.instance.directoryScanner.diffs.serialVersionUID != blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.diffs.serialVersionUID"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3525, "DataNode.instance.directoryScanner.diffs.serialVersionUID >= daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.diffs.serialVersionUID"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3526, "DataNode.instance.directoryScanner.scanPeriodMsecs > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.scanPeriodMsecs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3527, "DataNode.instance.diskBalancer.bandwidth > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.bandwidth"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3528, "DataNode.instance.diskBalancer.planValidityInterval > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.planValidityInterval"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3529, "DataNode.instance.dnConf.blockReportInterval > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportInterval"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3530, "DataNode.instance.dnConf.blockReportSplitThreshold > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportSplitThreshold"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3531, "DataNode.instance.dnConf.bpReadyTimeout > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.bpReadyTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3532, "DataNode.instance.dnConf.cacheReportInterval > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.cacheReportInterval"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3533, "DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3534, "DataNode.instance.dnConf.heartBeatInterval > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.heartBeatInterval"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3535, "DataNode.instance.dnConf.ibrInterval > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3536, "DataNode.instance.dnConf.lifelineIntervalMs > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.lifelineIntervalMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3537, "DataNode.instance.dnConf.maxDataLength > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.maxDataLength"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3538, "DataNode.instance.dnConf.outliersReportIntervalMs > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.outliersReportIntervalMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3539, "DataNode.instance.dnConf.readaheadLength > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.readaheadLength"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3540, "DataNode.instance.dnConf.restartReplicaExpiry > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.restartReplicaExpiry"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3541, "DataNode.instance.dnConf.socketKeepaliveTimeout > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketKeepaliveTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3542, "DataNode.instance.dnConf.socketTimeout > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3543, "DataNode.instance.dnConf.socketWriteTimeout > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketWriteTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3544, "DataNode.instance.dnConf.volsConfigured > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.volsConfigured"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3545, "DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3546, "DataNode.instance.httpServer.HTTP_MAX_THREADS > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_MAX_THREADS"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3547, "DataNode.instance.id.infoPort > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3548, "DataNode.instance.id.ipcPort > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3549, "DataNode.instance.id.nsInfo.cTime > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3550, "DataNode.instance.id.nsInfo.layoutVersion > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.layoutVersion"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3551, "DataNode.instance.id.nsInfo.namespaceID < DataNode.instance.volumeChecker.lastAllVolumesCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3552, "DataNode.instance.id.nsInfo.namespaceID > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3553, "DataNode.instance.id.nsInfo.namespaceID < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3554, "DataNode.instance.id.nsInfo.namespaceID != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3555, "DataNode.instance.id.xferPort > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3556, "DataNode.instance.lastDiskErrorCheck > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3557, "DataNode.instance.shortCircuitRegistry.SHM_LENGTH > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.shortCircuitRegistry.SHM_LENGTH"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3558, "DataNode.instance.storage.layoutVersion > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3559, "DataNode.instance.storage.namespaceID < DataNode.instance.volumeChecker.lastAllVolumesCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3560, "DataNode.instance.storage.namespaceID > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3561, "DataNode.instance.storage.namespaceID < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3562, "DataNode.instance.storage.namespaceID != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3563, "DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3564, "DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3565, "DataNode.instance.volumeChecker.lastAllVolumesCheck > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3566, "DataNode.instance.volumeChecker.numSyncDatasetChecks > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3567, "DataNode.instance.xserver.balanceThrottler.bytesPerPeriod > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.bytesPerPeriod"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3568, "DataNode.instance.xserver.balanceThrottler.curPeriodStart > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3569, "DataNode.instance.xserver.balanceThrottler.maxThreads > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.maxThreads"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3570, "DataNode.instance.xserver.balanceThrottler.period > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.period"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3571, "DataNode.instance.xserver.balanceThrottler.periodExtension > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.periodExtension"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3572, "DataNode.instance.xserver.estimateBlockSize > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.estimateBlockSize"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3573, "DataNode.instance.xserver.maxXceiverCount > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.maxXceiverCount"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3574, "NameNode.instance.DEFAULT_PORT > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.DEFAULT_PORT"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3575, "NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3576, "NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3577, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3578, "NameNode.instance.namesystem.blockDeletionIncrement > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.blockDeletionIncrement"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3579, "NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3580, "NameNode.instance.namesystem.cacheManager.scanIntervalMs > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.scanIntervalMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3581, "NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3582, "NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3583, "NameNode.instance.namesystem.dir.inodeXAttrsLimit > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.inodeXAttrsLimit"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3584, "NameNode.instance.namesystem.dir.maxComponentLength > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxComponentLength"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3585, "NameNode.instance.namesystem.dir.maxDirItems > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxDirItems"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3586, "NameNode.instance.namesystem.dir.xattrMaxSize > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.xattrMaxSize"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3587, "NameNode.instance.namesystem.editLogRollerThreshold > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogRollerThreshold"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3588, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3589, "NameNode.instance.namesystem.lazyPersistFileScrubberTS > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3590, "NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3591, "NameNode.instance.namesystem.leaseManager.hardLimit > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.hardLimit"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3592, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3593, "NameNode.instance.namesystem.leaseRecheckIntervalMs > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseRecheckIntervalMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3594, "NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3595, "NameNode.instance.namesystem.nnResourceChecker.duReserved > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.nnResourceChecker.duReserved"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3596, "NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3597, "NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3598, "NameNode.instance.namesystem.startTime > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3599, "blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3600, "blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3601, "blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3602, "blockManagerInstance.blockReportLeaseManager.leaseExpiryMs > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.leaseExpiryMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3603, "blockManagerInstance.blockReportLeaseManager.maxPending > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.maxPending"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3604, "blockManagerInstance.blockReportLeaseManager.nextId < blockManagerInstance.blockReportThread.MAX_LOCK_HOLD_MS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportThread.MAX_LOCK_HOLD_MS"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3605, "blockManagerInstance.blockReportLeaseManager.nextId < blockManagerInstance.blocksMap.capacity"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blocksMap.capacity"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3606, "blockManagerInstance.blockReportLeaseManager.nextId < blockManagerInstance.blocksPerPostpondedRescan"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blocksPerPostpondedRescan"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3607, "blockManagerInstance.blockReportLeaseManager.nextId < blockManagerInstance.blocksReplWorkMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blocksReplWorkMultiplier"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3608, "blockManagerInstance.blockReportLeaseManager.nextId < blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3609, "blockManagerInstance.blockReportLeaseManager.nextId < blockManagerInstance.bmSafeMode.safeReplication"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.safeReplication"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3610, "blockManagerInstance.blockReportLeaseManager.nextId < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3611, "blockManagerInstance.blockReportLeaseManager.nextId < blockManagerInstance.datanodeManager.defaultInfoPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoPort"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3612, "blockManagerInstance.blockReportLeaseManager.nextId < blockManagerInstance.datanodeManager.defaultInfoSecurePort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoSecurePort"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3613, "blockManagerInstance.blockReportLeaseManager.nextId < blockManagerInstance.datanodeManager.defaultIpcPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultIpcPort"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3614, "blockManagerInstance.blockReportLeaseManager.nextId < blockManagerInstance.datanodeManager.defaultXferPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultXferPort"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3615, "blockManagerInstance.blockReportLeaseManager.nextId < blockManagerInstance.datanodeManager.heartbeatExpireInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatExpireInterval"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3616, "blockManagerInstance.blockReportLeaseManager.nextId < blockManagerInstance.datanodeManager.heartbeatIntervalSeconds"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatIntervalSeconds"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3617, "blockManagerInstance.blockReportLeaseManager.nextId < blockManagerInstance.datanodeManager.heartbeatManager.REPORT_STALE_NODE_NODES_PER_LINE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatManager.REPORT_STALE_NODE_NODES_PER_LINE"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3618, "blockManagerInstance.blockReportLeaseManager.nextId < blockManagerInstance.datanodeManager.staleInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.staleInterval"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3619, "blockManagerInstance.blockReportLeaseManager.nextId < blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3620, "blockManagerInstance.blockReportLeaseManager.nextId < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3621, "blockManagerInstance.blockReportLeaseManager.nextId < blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3622, "blockManagerInstance.blockReportLeaseManager.nextId < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3623, "blockManagerInstance.blockReportLeaseManager.nextId < blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3624, "blockManagerInstance.blockReportLeaseManager.nextId < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3625, "blockManagerInstance.blockReportLeaseManager.nextId < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3626, "blockManagerInstance.blockReportLeaseManager.nextId < blockManagerInstance.maxCorruptFilesReturned"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.maxCorruptFilesReturned"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3627, "blockManagerInstance.blockReportLeaseManager.nextId < blockManagerInstance.neededReconstruction.LEVEL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.LEVEL"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3628, "blockManagerInstance.blockReportLeaseManager.nextId < blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3629, "blockManagerInstance.blockReportLeaseManager.nextId < blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3630, "blockManagerInstance.blockReportLeaseManager.nextId < blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3631, "blockManagerInstance.blockReportLeaseManager.nextId < blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3632, "blockManagerInstance.blockReportLeaseManager.nextId < blockManagerInstance.placementPolicies.ecPolicy.heartbeatInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.placementPolicies.ecPolicy.heartbeatInterval"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3633, "blockManagerInstance.blockReportLeaseManager.nextId < blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3634, "blockManagerInstance.blockReportLeaseManager.nextId < blockManagerInstance.replQueueResetToHeadThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueResetToHeadThreshold"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3635, "blockManagerInstance.blockReportLeaseManager.nextId < blockManagerInstance.storageInfoDefragmentInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.storageInfoDefragmentInterval"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3636, "blockManagerInstance.blockReportLeaseManager.nextId < blockManagerInstance.storagePolicySuite.defaultPolicyID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.storagePolicySuite.defaultPolicyID"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3637, "blockManagerInstance.blockReportLeaseManager.nextId < daikon.Quant.size(DataNode.instance.directoryScanner.diffs_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() < daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("DataNode.instance.directoryScanner.diffs")).toArray(new Object[0])))-1);
			}
		});
		invariants3999.add(new Invariant(3638, "blockManagerInstance.blockReportLeaseManager.nextId < daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() < daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0])))-1);
			}
		});
		invariants3999.add(new Invariant(3639, "blockManagerInstance.blockReportLeaseManager.nextId < daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() < daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])))-1);
			}
		});
		invariants3999.add(new Invariant(3640, "2000600956 * DataNode.instance.volumeChecker.numSyncDatasetChecks - NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos + 75362502 * blockManagerInstance.heartbeatManager.stats.nodesInService + 1.1803004233723E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2000600956 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() - ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() + 75362502 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() + 1.1803004233723E14 == 0);
			}
		});
		invariants3999.add(new Invariant(3641, "DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT == blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3642, "DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT == daikon.Quant.size(NameNode.instance.namesystem.cacheManager.directivesById_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.directivesById")).toArray(new Object[0])))-1);
			}
		});
		invariants3999.add(new Invariant(3643, "DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT == daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0])))-1);
			}
		});
		invariants3999.add(new Invariant(3644, "DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT == daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0])))-1);
			}
		});
		invariants3999.add(new Invariant(3645, "DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs == NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3646, "DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs == NameNode.instance.namesystem.dir.contentCountLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.contentCountLimit"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3647, "DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs == NameNode.instance.namesystem.fsImage.LOAD_EDIT_LOG_INTERVAL_MS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.LOAD_EDIT_LOG_INTERVAL_MS"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3648, "DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs == NameNode.instance.namesystem.fsLock.readLockReportingThresholdMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.readLockReportingThresholdMs"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3649, "DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs == NameNode.instance.namesystem.fsLock.writeLockReportingThresholdMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockReportingThresholdMs"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3650, "DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs == NameNode.instance.namesystem.resourceRecheckInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.resourceRecheckInterval"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3651, "DataNode.instance.cacheReportsDisabledForTests == DataNode.instance.data.isNativeIOAvailable"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.cacheReportsDisabledForTests"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("DataNode.instance.data.isNativeIOAvailable"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3652, "DataNode.instance.cacheReportsDisabledForTests == DataNode.instance.dnConf.connectToDnViaHostname"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.cacheReportsDisabledForTests"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.connectToDnViaHostname"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3653, "DataNode.instance.cacheReportsDisabledForTests == DataNode.instance.dnConf.diskStatsEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.cacheReportsDisabledForTests"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.diskStatsEnabled"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3654, "DataNode.instance.cacheReportsDisabledForTests == DataNode.instance.dnConf.dropCacheBehindReads"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.cacheReportsDisabledForTests"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.dropCacheBehindReads"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3655, "DataNode.instance.cacheReportsDisabledForTests == DataNode.instance.dnConf.dropCacheBehindWrites"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.cacheReportsDisabledForTests"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.dropCacheBehindWrites"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3656, "DataNode.instance.cacheReportsDisabledForTests == DataNode.instance.dnConf.encryptDataTransfer"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.cacheReportsDisabledForTests"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.encryptDataTransfer"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3657, "DataNode.instance.cacheReportsDisabledForTests == DataNode.instance.dnConf.ignoreSecurePortsForTesting"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.cacheReportsDisabledForTests"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.ignoreSecurePortsForTesting"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3658, "DataNode.instance.cacheReportsDisabledForTests == DataNode.instance.dnConf.overwriteDownstreamDerivedQOP"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.cacheReportsDisabledForTests"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.overwriteDownstreamDerivedQOP"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3659, "DataNode.instance.cacheReportsDisabledForTests == DataNode.instance.dnConf.peerStatsEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.cacheReportsDisabledForTests"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.peerStatsEnabled"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3660, "DataNode.instance.cacheReportsDisabledForTests == DataNode.instance.dnConf.syncBehindWrites"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.cacheReportsDisabledForTests"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.syncBehindWrites"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3661, "DataNode.instance.cacheReportsDisabledForTests == DataNode.instance.dnConf.syncBehindWritesInBackground"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.cacheReportsDisabledForTests"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.syncBehindWritesInBackground"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3662, "DataNode.instance.cacheReportsDisabledForTests == DataNode.instance.dnConf.syncOnClose"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.cacheReportsDisabledForTests"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.syncOnClose"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3663, "DataNode.instance.cacheReportsDisabledForTests == DataNode.instance.fileIoProvider.faultInjectorEventHook.isEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.cacheReportsDisabledForTests"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("DataNode.instance.fileIoProvider.faultInjectorEventHook.isEnabled"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3664, "DataNode.instance.cacheReportsDisabledForTests == DataNode.instance.xserver.closed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.cacheReportsDisabledForTests"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("DataNode.instance.xserver.closed"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3665, "DataNode.instance.cacheReportsDisabledForTests == NameNode.instance.STANDBY_STATE.isObserver"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.cacheReportsDisabledForTests"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.STANDBY_STATE.isObserver"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3666, "DataNode.instance.cacheReportsDisabledForTests == NameNode.instance.allowStaleStandbyReads"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.cacheReportsDisabledForTests"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.allowStaleStandbyReads"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3667, "DataNode.instance.cacheReportsDisabledForTests == NameNode.instance.haEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.cacheReportsDisabledForTests"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.haEnabled"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3668, "DataNode.instance.cacheReportsDisabledForTests == NameNode.instance.namesystem.alwaysUseDelegationTokensForTests"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.cacheReportsDisabledForTests"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.alwaysUseDelegationTokensForTests"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3669, "DataNode.instance.cacheReportsDisabledForTests == NameNode.instance.namesystem.datanodeStatistics.enableLogStaleNodes"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.cacheReportsDisabledForTests"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.enableLogStaleNodes"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3670, "DataNode.instance.cacheReportsDisabledForTests == NameNode.instance.namesystem.dir.aclsEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.cacheReportsDisabledForTests"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.aclsEnabled"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3671, "DataNode.instance.cacheReportsDisabledForTests == NameNode.instance.namesystem.dir.isPermissionContentSummarySubAccess"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.cacheReportsDisabledForTests"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.isPermissionContentSummarySubAccess"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3672, "DataNode.instance.cacheReportsDisabledForTests == NameNode.instance.namesystem.dir.skipQuotaCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.cacheReportsDisabledForTests"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.skipQuotaCheck"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3673, "DataNode.instance.cacheReportsDisabledForTests == NameNode.instance.namesystem.dtpReplaceDatanodeOnFailure.bestEffort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.cacheReportsDisabledForTests"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.dtpReplaceDatanodeOnFailure.bestEffort"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3674, "DataNode.instance.cacheReportsDisabledForTests == NameNode.instance.namesystem.fsImage.exitAfterSave"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.cacheReportsDisabledForTests"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.exitAfterSave"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3675, "DataNode.instance.cacheReportsDisabledForTests == NameNode.instance.namesystem.fsLock.metricsEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.cacheReportsDisabledForTests"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.metricsEnabled"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3676, "DataNode.instance.cacheReportsDisabledForTests == NameNode.instance.namesystem.haEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.cacheReportsDisabledForTests"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.haEnabled"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3677, "DataNode.instance.cacheReportsDisabledForTests == NameNode.instance.namesystem.isDefaultAuditLogger"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.cacheReportsDisabledForTests"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.isDefaultAuditLogger"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3678, "DataNode.instance.cacheReportsDisabledForTests == NameNode.instance.namesystem.manualSafeMode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.cacheReportsDisabledForTests"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.manualSafeMode"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3679, "DataNode.instance.cacheReportsDisabledForTests == NameNode.instance.namesystem.needRollbackFsImage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.cacheReportsDisabledForTests"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.needRollbackFsImage"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3680, "DataNode.instance.cacheReportsDisabledForTests == NameNode.instance.namesystem.resourceLowSafeMode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.cacheReportsDisabledForTests"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.resourceLowSafeMode"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3681, "DataNode.instance.cacheReportsDisabledForTests == NameNode.instance.namesystem.snapshotManager.allowNestedSnapshots"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.cacheReportsDisabledForTests"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.allowNestedSnapshots"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3682, "DataNode.instance.cacheReportsDisabledForTests == NameNode.instance.namesystem.snapshotManager.captureOpenFiles"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.cacheReportsDisabledForTests"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.captureOpenFiles"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3683, "DataNode.instance.cacheReportsDisabledForTests == NameNode.instance.namesystem.snapshotManager.skipCaptureAccessTimeOnlyChange"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.cacheReportsDisabledForTests"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.skipCaptureAccessTimeOnlyChange"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3684, "DataNode.instance.cacheReportsDisabledForTests == NameNode.instance.namesystem.startingActiveService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.cacheReportsDisabledForTests"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.startingActiveService"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3685, "DataNode.instance.cacheReportsDisabledForTests == NameNode.instance.rpcServer.serviceAuthEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.cacheReportsDisabledForTests"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.rpcServer.serviceAuthEnabled"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3686, "DataNode.instance.cacheReportsDisabledForTests == NameNode.instance.stopRequested"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.cacheReportsDisabledForTests"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.stopRequested"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3687, "DataNode.instance.cacheReportsDisabledForTests == blockManagerInstance.bmSafeMode.inRollBack"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.cacheReportsDisabledForTests"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.inRollBack"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3688, "DataNode.instance.cacheReportsDisabledForTests == blockManagerInstance.datanodeManager.avoidStaleDataNodesForRead"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.cacheReportsDisabledForTests"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.avoidStaleDataNodesForRead"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3689, "DataNode.instance.cacheReportsDisabledForTests == blockManagerInstance.datanodeManager.avoidStaleDataNodesForWrite"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.cacheReportsDisabledForTests"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.avoidStaleDataNodesForWrite"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3690, "DataNode.instance.cacheReportsDisabledForTests == blockManagerInstance.datanodeManager.dataNodeDiskStatsEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.cacheReportsDisabledForTests"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.dataNodeDiskStatsEnabled"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3691, "DataNode.instance.cacheReportsDisabledForTests == blockManagerInstance.datanodeManager.dataNodePeerStatsEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.cacheReportsDisabledForTests"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.dataNodePeerStatsEnabled"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3692, "DataNode.instance.cacheReportsDisabledForTests == blockManagerInstance.datanodeManager.hasClusterEverBeenMultiRack"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.cacheReportsDisabledForTests"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.hasClusterEverBeenMultiRack"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3693, "DataNode.instance.cacheReportsDisabledForTests == blockManagerInstance.datanodeManager.heartbeatManager.enableLogStaleNodes"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.cacheReportsDisabledForTests"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatManager.enableLogStaleNodes"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3694, "DataNode.instance.cacheReportsDisabledForTests == blockManagerInstance.datanodeManager.rejectUnresolvedTopologyDN"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.cacheReportsDisabledForTests"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.rejectUnresolvedTopologyDN"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3695, "DataNode.instance.cacheReportsDisabledForTests == blockManagerInstance.encryptDataTransfer"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.cacheReportsDisabledForTests"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.encryptDataTransfer"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3696, "DataNode.instance.cacheReportsDisabledForTests == blockManagerInstance.hasNonEcBlockUsingStripedID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.cacheReportsDisabledForTests"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.hasNonEcBlockUsingStripedID"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3697, "DataNode.instance.cacheReportsDisabledForTests == blockManagerInstance.heartbeatManager.enableLogStaleNodes"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.cacheReportsDisabledForTests"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.enableLogStaleNodes"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3698, "DataNode.instance.cacheReportsDisabledForTests == blockManagerInstance.providedStorageMap.providedEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.cacheReportsDisabledForTests"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.providedStorageMap.providedEnabled"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3699, "DataNode.instance.cacheReportsDisabledForTests == blockManagerInstance.shouldPostponeBlocksFromFuture"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.cacheReportsDisabledForTests"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.shouldPostponeBlocksFromFuture"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3700, "DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION == blockManagerInstance.neededReconstruction.QUEUE_REPLICAS_BADLY_DISTRIBUTED"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.QUEUE_REPLICAS_BADLY_DISTRIBUTED"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3701, "DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION == blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.shrinkThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.shrinkThreshold"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3702, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME == DataNode.instance.data.asyncLazyPersistService.MAXIMUM_THREADS_PER_VOLUME"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.MAXIMUM_THREADS_PER_VOLUME"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3703, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME == DataNode.instance.httpServer.HTTP_SELECTOR_THREADS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_SELECTOR_THREADS"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3704, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME == NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.sequenceNumber"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.sequenceNumber"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3705, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME == NameNode.instance.namesystem.cacheManager.nextDirectiveId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.nextDirectiveId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3706, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME == NameNode.instance.namesystem.nnResourceChecker.minimumRedundantVolumes"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.nnResourceChecker.minimumRedundantVolumes"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3707, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME == blockManagerInstance.neededReconstruction.QUEUE_VERY_LOW_REDUNDANCY"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.QUEUE_VERY_LOW_REDUNDANCY"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3708, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME == NameNode.instance.namesystem.dir.quotaInitThreads"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.quotaInitThreads"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3709, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME == NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_COUNT_MAX"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_COUNT_MAX"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3710, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME == blockManagerInstance.neededReconstruction.QUEUE_WITH_CORRUPT_BLOCKS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.QUEUE_WITH_CORRUPT_BLOCKS"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3711, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME == blockManagerInstance.placementPolicies.ecPolicy.tolerateHeartbeatMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.placementPolicies.ecPolicy.tolerateHeartbeatMultiplier"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3712, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME == blockManagerInstance.placementPolicies.replicationPolicy.tolerateHeartbeatMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.placementPolicies.replicationPolicy.tolerateHeartbeatMultiplier"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3713, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME == blockManagerInstance.replicationStreamsHardLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.replicationStreamsHardLimit"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3714, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME == blockManagerInstance.storageInfoDefragmentTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.storageInfoDefragmentTimeout"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3715, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME == blockManagerInstance.storagePolicySuite.ID_BIT_LENGTH"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.storagePolicySuite.ID_BIT_LENGTH"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3716, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == DataNode.instance.data.cacheManager.numBlocksFailedToCache"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToCache"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3717, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == DataNode.instance.data.cacheManager.numBlocksFailedToUncache"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3718, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == DataNode.instance.data.volFailuresTolerated"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.data.volFailuresTolerated"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3719, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == DataNode.instance.dnConf.initialBlockReportDelayMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.initialBlockReportDelayMs"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3720, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == DataNode.instance.dnConf.maxLockedMemory"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.maxLockedMemory"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3721, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == DataNode.instance.dnConf.transferSocketRecvBufferSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.transferSocketRecvBufferSize"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3722, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == DataNode.instance.dnConf.transferSocketSendBufferSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.transferSocketSendBufferSize"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3723, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == DataNode.instance.dnConf.volFailuresTolerated"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.volFailuresTolerated"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3724, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == DataNode.instance.storage.cTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.storage.cTime"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3725, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == DataNode.instance.storageLocationChecker.delegateChecker.diskCheckTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.storageLocationChecker.delegateChecker.diskCheckTimeout"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3726, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == DataNode.instance.volumeChecker.maxVolumeFailuresTolerated"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.maxVolumeFailuresTolerated"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3727, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == DataNode.instance.volumeChecker.numAsyncDatasetChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numAsyncDatasetChecks"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3728, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == DataNode.instance.volumeChecker.numSkippedChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSkippedChecks"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3729, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == DataNode.instance.volumeChecker.numVolumeChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numVolumeChecks"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3730, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == DataNode.instance.xserver.balanceThrottler.bytesAlreadyUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.bytesAlreadyUsed"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3731, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == DataNode.instance.xserver.balanceThrottler.numThreads"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.numThreads"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3732, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == NameNode.instance.ACTIVE_STATE.lastHATransitionTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.ACTIVE_STATE.lastHATransitionTime"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3733, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == NameNode.instance.OBSERVER_STATE.lastHATransitionTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.OBSERVER_STATE.lastHATransitionTime"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3734, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == NameNode.instance.STANDBY_STATE.lastHATransitionTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.STANDBY_STATE.lastHATransitionTime"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3735, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == NameNode.instance.namesystem.dir.yieldCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.yieldCount"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3736, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3737, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == NameNode.instance.namesystem.fsLock.longestReadLockHeldIntervalMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.longestReadLockHeldIntervalMs"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3738, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == NameNode.instance.namesystem.fsLock.numReadLockWarningsSuppressed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.numReadLockWarningsSuppressed"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3739, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == NameNode.instance.namesystem.fsLock.timeStampOfLastReadLockReportMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.timeStampOfLastReadLockReportMs"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3740, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == NameNode.instance.namesystem.maxFsObjects"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.maxFsObjects"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3741, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == NameNode.instance.namesystem.minBlockSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.minBlockSize"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3742, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == NameNode.instance.namesystem.numCommittedAllowed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.numCommittedAllowed"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3743, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == NameNode.instance.namesystem.snapshotManager.numSnapshots"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3744, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == NameNode.instance.namesystem.snapshotManager.snapshotCounter"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3745, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == NameNode.instance.state.lastHATransitionTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.state.lastHATransitionTime"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3746, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == blockManagerInstance.blockReportLeaseManager.deferredHead.leaseId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.deferredHead.leaseId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3747, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == blockManagerInstance.blockReportLeaseManager.deferredHead.leaseTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.deferredHead.leaseTimeMs"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3748, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3749, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == blockManagerInstance.blockReportLeaseManager.pendingHead.leaseId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.pendingHead.leaseId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3750, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == blockManagerInstance.blockReportLeaseManager.pendingHead.leaseTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.pendingHead.leaseTimeMs"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3751, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == blockManagerInstance.blockReportThread.lastFull"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportThread.lastFull"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3752, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == blockManagerInstance.bmSafeMode.blockReplQueueThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.blockReplQueueThreshold"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3753, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == blockManagerInstance.bmSafeMode.blockSafe"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.blockSafe"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3754, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == blockManagerInstance.bmSafeMode.blockThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.blockThreshold"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3755, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == blockManagerInstance.bmSafeMode.blockTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.blockTotal"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3756, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == blockManagerInstance.bmSafeMode.datanodeThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.datanodeThreshold"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3757, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == blockManagerInstance.bmSafeMode.extension"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.extension"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3758, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == blockManagerInstance.bmSafeMode.lastStatusReport"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.lastStatusReport"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3759, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == blockManagerInstance.bmSafeMode.reachedTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.reachedTime"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3760, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == blockManagerInstance.corruptReplicaBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.corruptReplicaBlocksCount"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3761, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == blockManagerInstance.datanodeManager.numStaleNodes"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.numStaleNodes"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3762, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == blockManagerInstance.datanodeManager.numStaleStorages"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.numStaleStorages"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3763, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == blockManagerInstance.excessRedundancyMap.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.excessRedundancyMap.size"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3764, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == blockManagerInstance.heartbeatManager.stats.cacheCapacity"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.cacheCapacity"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3765, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == blockManagerInstance.heartbeatManager.stats.cacheUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.cacheUsed"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3766, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == blockManagerInstance.heartbeatManager.stats.expiredHeartbeats"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.expiredHeartbeats"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3767, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == blockManagerInstance.invalidateBlocks.blockIdManager.legacyGenerationStampLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.blockIdManager.legacyGenerationStampLimit"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3768, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == blockManagerInstance.invalidateBlocks.pendingPeriodInMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.pendingPeriodInMs"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3769, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3770, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == blockManagerInstance.neededReconstruction.QUEUE_HIGHEST_PRIORITY"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.QUEUE_HIGHEST_PRIORITY"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3771, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == blockManagerInstance.pendingDNMessages.count"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingDNMessages.count"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3772, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == blockManagerInstance.pendingReconstruction.timedOutCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingReconstruction.timedOutCount"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3773, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == blockManagerInstance.pendingReconstructionBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingReconstructionBlocksCount"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3774, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.modification"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.modification"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3775, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.size"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3776, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == blockManagerInstance.providedStorageMap.capacity"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.providedStorageMap.capacity"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3777, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == blockManagerInstance.providedStorageMap.defaultReplication"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.providedStorageMap.defaultReplication"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3778, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3779, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == blockManagerInstance.scheduledReplicationBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.scheduledReplicationBlocksCount"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3780, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == blockManagerInstance.startupDelayBlockDeletionInMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.startupDelayBlockDeletionInMs"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3781, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == daikon.Quant.size(DataNode.instance.directoryScanner.diffs_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("DataNode.instance.directoryScanner.diffs")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3782, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == daikon.Quant.size(NameNode.instance.namesystem.cacheManager.directivesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.directivesById")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3783, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3784, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3785, "DataNode.instance.data.cacheManager.revocationMs == DataNode.instance.volumeChecker.delegateChecker.minMsBetweenChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationMs"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.delegateChecker.minMsBetweenChecks"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3786, "DataNode.instance.data.cacheManager.revocationMs == DataNode.instance.volumeChecker.minDiskCheckGapMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationMs"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.minDiskCheckGapMs"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3787, "DataNode.instance.data.cacheManager.revocationPollingMs == NameNode.instance.namesystem.dir.contentSleepMicroSec"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationPollingMs"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.contentSleepMicroSec"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3788, "DataNode.instance.data.fsRunning == DataNode.instance.diskBalancer.isDiskBalancerEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.data.fsRunning"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("DataNode.instance.diskBalancer.isDiskBalancerEnabled"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3789, "DataNode.instance.data.fsRunning == DataNode.instance.dnConf.tcpNoDelay"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.data.fsRunning"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.tcpNoDelay"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3790, "DataNode.instance.data.fsRunning == DataNode.instance.dnConf.transferToAllowed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.data.fsRunning"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.transferToAllowed"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3791, "DataNode.instance.data.fsRunning == DataNode.instance.hasAnyBlockPoolRegistered"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.data.fsRunning"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("DataNode.instance.hasAnyBlockPoolRegistered"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3792, "DataNode.instance.data.fsRunning == DataNode.instance.isPermissionEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.data.fsRunning"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("DataNode.instance.isPermissionEnabled"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3793, "DataNode.instance.data.fsRunning == DataNode.instance.shouldRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.data.fsRunning"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("DataNode.instance.shouldRun"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3794, "DataNode.instance.data.fsRunning == NameNode.instance.OBSERVER_STATE.isObserver"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.data.fsRunning"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.OBSERVER_STATE.isObserver"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3795, "DataNode.instance.data.fsRunning == NameNode.instance.namesystem.cacheManager.enabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.data.fsRunning"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.enabled"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3796, "DataNode.instance.data.fsRunning == NameNode.instance.namesystem.dir.CHECK_RESERVED_FILE_NAMES"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.data.fsRunning"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.CHECK_RESERVED_FILE_NAMES"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3797, "DataNode.instance.data.fsRunning == NameNode.instance.namesystem.dir.isPermissionEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.data.fsRunning"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.isPermissionEnabled"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3798, "DataNode.instance.data.fsRunning == NameNode.instance.namesystem.dir.posixAclInheritanceEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.data.fsRunning"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.posixAclInheritanceEnabled"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3799, "DataNode.instance.data.fsRunning == NameNode.instance.namesystem.dir.quotaByStorageTypeEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.data.fsRunning"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.quotaByStorageTypeEnabled"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3800, "DataNode.instance.data.fsRunning == NameNode.instance.namesystem.dir.storagePolicyEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.data.fsRunning"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.storagePolicyEnabled"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3801, "DataNode.instance.data.fsRunning == NameNode.instance.namesystem.dir.xattrsEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.data.fsRunning"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.xattrsEnabled"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3802, "DataNode.instance.data.fsRunning == NameNode.instance.namesystem.fsImage.isUpgradeFinalized"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.data.fsRunning"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.isUpgradeFinalized"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3803, "DataNode.instance.data.fsRunning == NameNode.instance.namesystem.fsRunning"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.data.fsRunning"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.fsRunning"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3804, "DataNode.instance.data.fsRunning == NameNode.instance.namesystem.hasResourcesAvailable"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.data.fsRunning"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.hasResourcesAvailable"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3805, "DataNode.instance.data.fsRunning == NameNode.instance.namesystem.imageLoaded"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.data.fsRunning"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.imageLoaded"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3806, "DataNode.instance.data.fsRunning == NameNode.instance.namesystem.isPermissionEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.data.fsRunning"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.isPermissionEnabled"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3807, "DataNode.instance.data.fsRunning == NameNode.instance.namesystem.leaseManager.shouldRunMonitor"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.data.fsRunning"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.shouldRunMonitor"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3808, "DataNode.instance.data.fsRunning == NameNode.instance.namesystem.snapshotManager.snapshotDiffAllowSnapRootDescendant"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.data.fsRunning"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotDiffAllowSnapRootDescendant"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3809, "DataNode.instance.data.fsRunning == NameNode.instance.namesystem.standbyShouldCheckpoint"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.data.fsRunning"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.standbyShouldCheckpoint"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3810, "DataNode.instance.data.fsRunning == NameNode.instance.namesystem.topConf.isEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.data.fsRunning"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.topConf.isEnabled"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3811, "DataNode.instance.data.fsRunning == NameNode.instance.namesystem.topMetrics.isMetricsSourceEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.data.fsRunning"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.isMetricsSourceEnabled"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3812, "DataNode.instance.data.fsRunning == NameNode.instance.started"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.data.fsRunning"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.started"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3813, "DataNode.instance.data.fsRunning == blockManagerInstance.datanodeManager.checkIpHostnameInRegistration"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.data.fsRunning"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.checkIpHostnameInRegistration"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3814, "DataNode.instance.data.fsRunning == blockManagerInstance.datanodeManager.useDfsNetworkTopology"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.data.fsRunning"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.useDfsNetworkTopology"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3815, "DataNode.instance.data.fsRunning == blockManagerInstance.initializedReplQueues"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.data.fsRunning"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.initializedReplQueues"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3816, "DataNode.instance.data.fsRunning == blockManagerInstance.pendingReconstruction.fsRunning"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.data.fsRunning"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.pendingReconstruction.fsRunning"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3817, "DataNode.instance.data.fsRunning == blockManagerInstance.placementPolicies.ecPolicy.considerLoad"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.data.fsRunning"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.placementPolicies.ecPolicy.considerLoad"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3818, "DataNode.instance.data.fsRunning == blockManagerInstance.placementPolicies.ecPolicy.preferLocalNode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.data.fsRunning"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.placementPolicies.ecPolicy.preferLocalNode"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3819, "DataNode.instance.data.fsRunning == blockManagerInstance.placementPolicies.replicationPolicy.considerLoad"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.data.fsRunning"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.placementPolicies.replicationPolicy.considerLoad"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3820, "DataNode.instance.data.fsRunning == blockManagerInstance.placementPolicies.replicationPolicy.preferLocalNode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.data.fsRunning"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.placementPolicies.replicationPolicy.preferLocalNode"))).booleanValue());
			}
		});
		invariants3999.add(new Invariant(3821, "DataNode.instance.data.volsConfigured == blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.sequenceNumber"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.sequenceNumber"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3822, "DataNode.instance.data.volsConfigured == blockManagerInstance.defaultReplication"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.defaultReplication"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3823, "DataNode.instance.data.volsConfigured == blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3824, "DataNode.instance.data.volsConfigured == blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3825, "DataNode.instance.data.volsConfigured == blockManagerInstance.heartbeatManager.stats.xceiverCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.xceiverCount"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3826, "DataNode.instance.data.volsConfigured == blockManagerInstance.maxReplicationStreams"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.maxReplicationStreams"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3827, "DataNode.instance.data.volsConfigured == blockManagerInstance.neededReconstruction.QUEUE_LOW_REDUNDANCY"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.QUEUE_LOW_REDUNDANCY"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3828, "DataNode.instance.data.volsConfigured == blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandMultiplier"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3829, "DataNode.instance.directoryScanner.MILLIS_PER_SECOND == NameNode.instance.namesystem.dir.lsLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.MILLIS_PER_SECOND"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.lsLimit"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3830, "DataNode.instance.directoryScanner.MILLIS_PER_SECOND == NameNode.instance.namesystem.edekCacheLoaderInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.MILLIS_PER_SECOND"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.edekCacheLoaderInterval"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3831, "DataNode.instance.directoryScanner.MILLIS_PER_SECOND == NameNode.instance.namesystem.maxListOpenFilesResponses"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.MILLIS_PER_SECOND"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.maxListOpenFilesResponses"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3832, "DataNode.instance.directoryScanner.MILLIS_PER_SECOND == NameNode.instance.namesystem.snapshotDiffReportLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.MILLIS_PER_SECOND"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotDiffReportLimit"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3833, "DataNode.instance.directoryScanner.MILLIS_PER_SECOND == blockManagerInstance.blockIdManager.impendingGenerationStamp.LAST_RESERVED_STAMP"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.MILLIS_PER_SECOND"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.impendingGenerationStamp.LAST_RESERVED_STAMP"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3834, "DataNode.instance.directoryScanner.MILLIS_PER_SECOND == blockManagerInstance.blockIdManager.legacyGenerationStamp.LAST_RESERVED_STAMP"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.MILLIS_PER_SECOND"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStamp.LAST_RESERVED_STAMP"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3835, "DataNode.instance.directoryScanner.MILLIS_PER_SECOND == blockManagerInstance.datanodeManager.blockInvalidateLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.MILLIS_PER_SECOND"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.blockInvalidateLimit"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3836, "DataNode.instance.directoryScanner.MILLIS_PER_SECOND == blockManagerInstance.invalidateBlocks.blockInvalidateLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.MILLIS_PER_SECOND"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.blockInvalidateLimit"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3837, "DataNode.instance.directoryScanner.MILLIS_PER_SECOND == blockManagerInstance.maxNumBlocksToLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.MILLIS_PER_SECOND"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.maxNumBlocksToLog"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3838, "DataNode.instance.diskBalancer.bandwidth == NameNode.instance.namesystem.fsImage.SHUTDOWN_HOOK_PRIORITY"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.bandwidth"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.SHUTDOWN_HOOK_PRIORITY"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3839, "DataNode.instance.diskBalancer.bandwidth == blockManagerInstance.heartbeatManager.REPORT_STALE_NODE_NODES_PER_LINE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.bandwidth"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.REPORT_STALE_NODE_NODES_PER_LINE"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3840, "DataNode.instance.dnConf.cacheReportInterval == blockManagerInstance.datanodeManager.blocksPerPostponedMisreplicatedBlocksRescan"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.cacheReportInterval"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.blocksPerPostponedMisreplicatedBlocksRescan"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3841, "DataNode.instance.dnConf.cacheReportInterval == blockManagerInstance.numBlocksPerIteration"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.cacheReportInterval"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.numBlocksPerIteration"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3842, "DataNode.instance.dnConf.heartBeatInterval == blockManagerInstance.placementPolicies.replicationPolicy.heartbeatInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.heartBeatInterval"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.placementPolicies.replicationPolicy.heartbeatInterval"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3843, "DataNode.instance.dnConf.heartBeatInterval == blockManagerInstance.redundancyRecheckIntervalMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.heartBeatInterval"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.redundancyRecheckIntervalMs"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3844, "daikon.Quant.pairwiseEqual(NameNode.instance.namesystem.cacheManager.directivesById_FOR_ENCLOSING_USE, NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.pairwiseEqual((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.directivesById")).toArray(new Object[0])), (Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3845, "NameNode.instance.namesystem.cacheManager.scanIntervalMs == blockManagerInstance.datanodeManager.timeBetweenResendingCachingDirectivesMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.scanIntervalMs"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.timeBetweenResendingCachingDirectivesMs"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3846, "NameNode.instance.namesystem.cacheManager.scanIntervalMs == blockManagerInstance.placementPolicies.ecPolicy.staleInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.scanIntervalMs"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.placementPolicies.ecPolicy.staleInterval"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3847, "NameNode.instance.namesystem.cacheManager.scanIntervalMs == blockManagerInstance.placementPolicies.replicationPolicy.staleInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.scanIntervalMs"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.placementPolicies.replicationPolicy.staleInterval"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3848, "NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval == blockManagerInstance.datanodeManager.heartbeatManager.heartbeatRecheckInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatManager.heartbeatRecheckInterval"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3849, "NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval == blockManagerInstance.datanodeManager.heartbeatRecheckInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatRecheckInterval"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3850, "NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval == blockManagerInstance.heartbeatManager.heartbeatRecheckInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.heartbeatRecheckInterval"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3851, "NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval == blockManagerInstance.pendingReconstruction.DEFAULT_RECHECK_INTERVAL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingReconstruction.DEFAULT_RECHECK_INTERVAL"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3852, "NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval == blockManagerInstance.pendingReconstruction.timeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingReconstruction.timeout"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3853, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.volsConfigured-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue()-1));
			}
		});
		invariants3999.add(new Invariant(3854, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.dnConf.volsConfigured-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.volsConfigured"))).intValue()-1));
			}
		});
		invariants3999.add(new Invariant(3855, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, blockManagerInstance.blocksReplWorkMultiplier-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.blocksReplWorkMultiplier"))).intValue()-1));
			}
		});
		invariants3999.add(new Invariant(3856, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.sequenceNumber-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.sequenceNumber"))).intValue()-1));
			}
		});
		invariants3999.add(new Invariant(3857, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, blockManagerInstance.defaultReplication-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.defaultReplication"))).intValue()-1));
			}
		});
		invariants3999.add(new Invariant(3858, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, blockManagerInstance.heartbeatManager.stats.nodesInService-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue()-1));
			}
		});
		invariants3999.add(new Invariant(3859, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue()-1));
			}
		});
		invariants3999.add(new Invariant(3860, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, blockManagerInstance.heartbeatManager.stats.xceiverCount-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.xceiverCount"))).intValue()-1));
			}
		});
		invariants3999.add(new Invariant(3861, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, blockManagerInstance.maxReplicationStreams-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.maxReplicationStreams"))).intValue()-1));
			}
		});
		invariants3999.add(new Invariant(3862, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, blockManagerInstance.neededReconstruction.QUEUE_LOW_REDUNDANCY-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.QUEUE_LOW_REDUNDANCY"))).intValue()-1));
			}
		});
		invariants3999.add(new Invariant(3863, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandMultiplier-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandMultiplier"))).intValue()-1));
			}
		});
		invariants3999.add(new Invariant(3864, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.numDeletedBlocks) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME"))).intValue()-1));
			}
		});
		invariants3999.add(new Invariant(3865, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.numDeletedBlocks) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncLazyPersistService.MAXIMUM_THREADS_PER_VOLUME-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.MAXIMUM_THREADS_PER_VOLUME"))).intValue()-1));
			}
		});
		invariants3999.add(new Invariant(3866, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.numDeletedBlocks) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue()-1));
			}
		});
		invariants3999.add(new Invariant(3867, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.numDeletedBlocks) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.httpServer.HTTP_SELECTOR_THREADS-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_SELECTOR_THREADS"))).intValue()-1));
			}
		});
		invariants3999.add(new Invariant(3868, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.numDeletedBlocks) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.volumeChecker.numSyncDatasetChecks-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue()-1));
			}
		});
		invariants3999.add(new Invariant(3869, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.numDeletedBlocks) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.sequenceNumber-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.sequenceNumber"))).intValue()-1));
			}
		});
		invariants3999.add(new Invariant(3870, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.numDeletedBlocks) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size"))).intValue()));
			}
		});
		invariants3999.add(new Invariant(3871, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.numDeletedBlocks) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, NameNode.instance.namesystem.cacheManager.nextDirectiveId-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.nextDirectiveId"))).intValue()-1));
			}
		});
		invariants3999.add(new Invariant(3872, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.numDeletedBlocks) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, NameNode.instance.namesystem.nnResourceChecker.minimumRedundantVolumes-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.nnResourceChecker.minimumRedundantVolumes"))).intValue()-1));
			}
		});
		invariants3999.add(new Invariant(3873, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.numDeletedBlocks) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.size)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.size"))).intValue()));
			}
		});
		invariants3999.add(new Invariant(3874, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.numDeletedBlocks) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, blockManagerInstance.bmSafeMode.safeReplication-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.safeReplication"))).intValue()-1));
			}
		});
		invariants3999.add(new Invariant(3875, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.numDeletedBlocks) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, blockManagerInstance.neededReconstruction.QUEUE_VERY_LOW_REDUNDANCY-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.QUEUE_VERY_LOW_REDUNDANCY"))).intValue()-1));
			}
		});
		invariants3999.add(new Invariant(3876, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.volsConfigured) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, blockManagerInstance.datanodeManager.heartbeatIntervalSeconds-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatIntervalSeconds"))).intValue()-1));
			}
		});
		invariants3999.add(new Invariant(3877, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.volsConfigured) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, blockManagerInstance.neededReconstruction.QUEUE_REPLICAS_BADLY_DISTRIBUTED-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.QUEUE_REPLICAS_BADLY_DISTRIBUTED"))).intValue()-1));
			}
		});
		invariants3999.add(new Invariant(3878, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.volsConfigured) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.shrinkThreshold-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.shrinkThreshold"))).intValue()-1));
			}
		});
		invariants3999.add(new Invariant(3879, "DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs == 5000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs"))).intValue() == 5000);
			}
		});
		invariants3999.add(new Invariant(3880, "DataNode.instance.id.infoPort == 41075"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() == 41075);
			}
		});
		invariants3999.add(new Invariant(3881, "DataNode.instance.id.ipcPort == 46043"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() == 46043);
			}
		});
		invariants3999.add(new Invariant(3882, "DataNode.instance.id.nsInfo.cTime == 1731381997960L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() == 1731381997960L);
			}
		});
		invariants3999.add(new Invariant(3883, "DataNode.instance.id.nsInfo.namespaceID == 845993198"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() == 845993198);
			}
		});
		invariants3999.add(new Invariant(3884, "DataNode.instance.id.xferPort == 40107"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() == 40107);
			}
		});
		invariants3999.add(new Invariant(3885, "DataNode.instance.lastDiskErrorCheck == 118106968"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() == 118106968);
			}
		});
		invariants3999.add(new Invariant(3886, "DataNode.instance.volumeChecker.lastAllVolumesCheck == 118106961"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() == 118106961);
			}
		});
		invariants3999.add(new Invariant(3887, "DataNode.instance.xserver.balanceThrottler.curPeriodStart == 118106202"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() == 118106202);
			}
		});
		invariants3999.add(new Invariant(3888, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118107195148723L || NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118107231051562L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118107195148723L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118107231051562L);
			}
		});
		invariants3999.add(new Invariant(3889, "NameNode.instance.namesystem.lazyPersistFileScrubberTS == 118105073"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() == 118105073);
			}
		});
		invariants3999.add(new Invariant(3890, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime == 118104336"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() == 118104336);
			}
		});
		invariants3999.add(new Invariant(3891, "NameNode.instance.namesystem.startTime == 1731381999428L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() == 1731381999428L);
			}
		});
		invariants3999.add(new Invariant(3892, "blockManagerInstance.blockReportLeaseManager.nextId == -6316050801332311009L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() == -6316050801332311009L);
			}
		});
		invariants3999.add(new Invariant(3893, "blockManagerInstance.bmSafeMode.startTime == 118105032"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() == 118105032);
			}
		});
		invariants3999.add(new Invariant(3894, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 98304"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 98304);
			}
		});
		invariants3999.add(new Invariant(3895, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 186916143104L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 186916143104L);
			}
		});
		invariants3999.add(new Invariant(3896, "blockManagerInstance.heartbeatManager.stats.capacityTotal == 268200361984L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue() == 268200361984L);
			}
		});
		invariants3999.add(new Invariant(3897, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 67540238336L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 67540238336L);
			}
		});
		invariants3999.add(new Invariant(3898, "blockManagerInstance.invalidateBlocks.startupTime == 118104339"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue() == 118104339);
			}
		});
		invariants3999.add(new Invariant(3899, "daikon.Quant.fuzzy.eq(blockManagerInstance.reconstructionQueuesInitProgress, Double.NaN)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.fuzzy.eq(((Number)(InvariantChecker.getValue("blockManagerInstance.reconstructionQueuesInitProgress"))).doubleValue(), Double.NaN));
			}
		});
		invariants3999.add(new Invariant(3900, "DataNode.instance.id.infoPort == 41747"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() == 41747);
			}
		});
		invariants3999.add(new Invariant(3901, "DataNode.instance.id.ipcPort == 39819"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() == 39819);
			}
		});
		invariants3999.add(new Invariant(3902, "DataNode.instance.id.nsInfo.cTime == 1731382026532L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() == 1731382026532L);
			}
		});
		invariants3999.add(new Invariant(3903, "DataNode.instance.id.nsInfo.namespaceID == 1950446581"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() == 1950446581);
			}
		});
		invariants3999.add(new Invariant(3904, "DataNode.instance.id.xferPort == 33217"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() == 33217);
			}
		});
		invariants3999.add(new Invariant(3905, "DataNode.instance.lastDiskErrorCheck == 118135536"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() == 118135536);
			}
		});
		invariants3999.add(new Invariant(3906, "DataNode.instance.volumeChecker.lastAllVolumesCheck == 118135529"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() == 118135529);
			}
		});
		invariants3999.add(new Invariant(3907, "DataNode.instance.xserver.balanceThrottler.curPeriodStart == 118134928"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() == 118134928);
			}
		});
		invariants3999.add(new Invariant(3908, "NameNode.instance.namesystem.lazyPersistFileScrubberTS == 118134551"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() == 118134551);
			}
		});
		invariants3999.add(new Invariant(3909, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime == 118132991"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() == 118132991);
			}
		});
		invariants3999.add(new Invariant(3910, "NameNode.instance.namesystem.startTime == 1731382028083L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() == 1731382028083L);
			}
		});
		invariants3999.add(new Invariant(3911, "blockManagerInstance.blockReportLeaseManager.nextId == -615436267100362629L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() == -615436267100362629L);
			}
		});
		invariants3999.add(new Invariant(3912, "blockManagerInstance.bmSafeMode.startTime == 118133706"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() == 118133706);
			}
		});
		invariants3999.add(new Invariant(3913, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 186875117568L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 186875117568L);
			}
		});
		invariants3999.add(new Invariant(3914, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 67581263872L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 67581263872L);
			}
		});
		invariants3999.add(new Invariant(3915, "blockManagerInstance.invalidateBlocks.startupTime == 118132994"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue() == 118132994);
			}
		});
		invariants3999.add(new Invariant(3916, "blockManagerInstance.bmSafeMode.startTime > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3917, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3918, "blockManagerInstance.heartbeatManager.stats.capacityRemaining > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3919, "blockManagerInstance.heartbeatManager.stats.capacityTotal > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3920, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants3999.add(new Invariant(3921, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME == blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3922, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.numDeletedBlocks) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, blockManagerInstance.replQueueCallsSinceReset-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue()-1));
			}
		});
		invariants3999.add(new Invariant(3923, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118137067373339L || NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118137091532002L || NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118137171693592L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118137067373339L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118137091532002L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118137171693592L);
			}
		});
		invariants3999.add(new Invariant(3924, "blockManagerInstance.lastRedundancyCycleTS == 118136706"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118136706);
			}
		});
		invariants3999.add(new Invariant(3925, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118135727319393L || NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118135740360991L || NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118135851411815L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118135727319393L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118135740360991L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118135851411815L);
			}
		});
		invariants3999.add(new Invariant(3926, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118136937644478L || NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118136959164687L || NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118137031844079L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118136937644478L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118136959164687L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118137031844079L);
			}
		});
		invariants3999.add(new Invariant(3927, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118137200782076L || NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118137221776435L || NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118137282819592L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118137200782076L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118137221776435L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118137282819592L);
			}
		});
		invariants3999.add(new Invariant(3928, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME == blockManagerInstance.defaultReplication"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.defaultReplication"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3929, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3930, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3931, "DataNode.instance.data.cacheManager.numBlocksCached == DataNode.instance.directoryScanner.timeRunningMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.timeRunningMs"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3932, "DataNode.instance.data.cacheManager.numBlocksCached == DataNode.instance.directoryScanner.timeWaitingMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.timeWaitingMs"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3933, "DataNode.instance.data.cacheManager.numBlocksCached == DataNode.instance.diskBalancer.currentResult.result"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.currentResult.result"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3934, "DataNode.instance.data.cacheManager.numBlocksCached == DataNode.instance.dnConf.initialBlockReportDelayMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.initialBlockReportDelayMs"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3935, "DataNode.instance.data.cacheManager.numBlocksCached == DataNode.instance.dnConf.maxLockedMemory"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.maxLockedMemory"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3936, "DataNode.instance.data.cacheManager.numBlocksCached == DataNode.instance.dnConf.transferSocketRecvBufferSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.transferSocketRecvBufferSize"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3937, "DataNode.instance.data.cacheManager.numBlocksCached == DataNode.instance.dnConf.transferSocketSendBufferSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.transferSocketSendBufferSize"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3938, "DataNode.instance.data.cacheManager.numBlocksCached == DataNode.instance.dnConf.volFailuresTolerated"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.volFailuresTolerated"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3939, "DataNode.instance.data.cacheManager.numBlocksCached == DataNode.instance.fileIoProvider.profilingEventHook.sampleRangeMax"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.fileIoProvider.profilingEventHook.sampleRangeMax"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3940, "DataNode.instance.data.cacheManager.numBlocksCached == DataNode.instance.id.exportedKeys.keyUpdateInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.id.exportedKeys.keyUpdateInterval"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3941, "DataNode.instance.data.cacheManager.numBlocksCached == DataNode.instance.id.exportedKeys.tokenLifetime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.id.exportedKeys.tokenLifetime"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3942, "DataNode.instance.data.cacheManager.numBlocksCached == DataNode.instance.id.infoSecurePort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.id.infoSecurePort"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3943, "DataNode.instance.data.cacheManager.numBlocksCached == DataNode.instance.infoSecurePort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.infoSecurePort"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3944, "DataNode.instance.data.cacheManager.numBlocksCached == DataNode.instance.storage.cTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.storage.cTime"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3945, "DataNode.instance.data.cacheManager.numBlocksCached == DataNode.instance.storageLocationChecker.delegateChecker.diskCheckTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.storageLocationChecker.delegateChecker.diskCheckTimeout"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3946, "DataNode.instance.data.cacheManager.numBlocksCached == DataNode.instance.volumeChecker.maxVolumeFailuresTolerated"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.maxVolumeFailuresTolerated"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3947, "DataNode.instance.data.cacheManager.numBlocksCached == DataNode.instance.volumeChecker.numAsyncDatasetChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numAsyncDatasetChecks"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3948, "DataNode.instance.data.cacheManager.numBlocksCached == DataNode.instance.volumeChecker.numSkippedChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSkippedChecks"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3949, "DataNode.instance.data.cacheManager.numBlocksCached == DataNode.instance.volumeChecker.numVolumeChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numVolumeChecks"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3950, "DataNode.instance.data.cacheManager.numBlocksCached == DataNode.instance.xmitsInProgress"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.xmitsInProgress"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3951, "DataNode.instance.data.cacheManager.numBlocksCached == DataNode.instance.xserver.balanceThrottler.bytesAlreadyUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.bytesAlreadyUsed"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3952, "DataNode.instance.data.cacheManager.numBlocksCached == DataNode.instance.xserver.balanceThrottler.numThreads"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.numThreads"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3953, "DataNode.instance.data.cacheManager.numBlocksCached == NameNode.instance.ACTIVE_STATE.lastHATransitionTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.ACTIVE_STATE.lastHATransitionTime"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3954, "DataNode.instance.data.cacheManager.numBlocksCached == NameNode.instance.OBSERVER_STATE.lastHATransitionTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.OBSERVER_STATE.lastHATransitionTime"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3955, "DataNode.instance.data.cacheManager.numBlocksCached == NameNode.instance.STANDBY_STATE.lastHATransitionTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.STANDBY_STATE.lastHATransitionTime"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3956, "DataNode.instance.data.cacheManager.numBlocksCached == NameNode.instance.namesystem.dir.maxComponentLength"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxComponentLength"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3957, "DataNode.instance.data.cacheManager.numBlocksCached == NameNode.instance.namesystem.dir.yieldCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.yieldCount"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3958, "DataNode.instance.data.cacheManager.numBlocksCached == NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3959, "DataNode.instance.data.cacheManager.numBlocksCached == NameNode.instance.namesystem.fsLock.longestReadLockHeldIntervalMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.longestReadLockHeldIntervalMs"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3960, "DataNode.instance.data.cacheManager.numBlocksCached == NameNode.instance.namesystem.fsLock.numReadLockWarningsSuppressed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.numReadLockWarningsSuppressed"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3961, "DataNode.instance.data.cacheManager.numBlocksCached == NameNode.instance.namesystem.fsLock.timeStampOfLastReadLockReportMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.timeStampOfLastReadLockReportMs"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3962, "DataNode.instance.data.cacheManager.numBlocksCached == NameNode.instance.namesystem.maxFsObjects"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.maxFsObjects"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3963, "DataNode.instance.data.cacheManager.numBlocksCached == NameNode.instance.namesystem.minBlockSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.minBlockSize"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3964, "DataNode.instance.data.cacheManager.numBlocksCached == NameNode.instance.namesystem.numCommittedAllowed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.numCommittedAllowed"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3965, "DataNode.instance.data.cacheManager.numBlocksCached == NameNode.instance.namesystem.snapshotManager.numSnapshots"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3966, "DataNode.instance.data.cacheManager.numBlocksCached == NameNode.instance.namesystem.snapshotManager.snapshotCounter"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3967, "DataNode.instance.data.cacheManager.numBlocksCached == NameNode.instance.state.lastHATransitionTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.state.lastHATransitionTime"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3968, "DataNode.instance.data.cacheManager.numBlocksCached == blockManagerInstance.blockReportLeaseManager.deferredHead.leaseId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.deferredHead.leaseId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3969, "DataNode.instance.data.cacheManager.numBlocksCached == blockManagerInstance.blockReportLeaseManager.deferredHead.leaseTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.deferredHead.leaseTimeMs"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3970, "DataNode.instance.data.cacheManager.numBlocksCached == blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3971, "DataNode.instance.data.cacheManager.numBlocksCached == blockManagerInstance.blockReportLeaseManager.pendingHead.leaseId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.pendingHead.leaseId"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3972, "DataNode.instance.data.cacheManager.numBlocksCached == blockManagerInstance.blockReportLeaseManager.pendingHead.leaseTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.pendingHead.leaseTimeMs"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3973, "DataNode.instance.data.cacheManager.numBlocksCached == blockManagerInstance.blockReportThread.lastFull"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportThread.lastFull"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3974, "DataNode.instance.data.cacheManager.numBlocksCached == blockManagerInstance.bmSafeMode.blockReplQueueThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.blockReplQueueThreshold"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3975, "DataNode.instance.data.cacheManager.numBlocksCached == blockManagerInstance.bmSafeMode.blockSafe"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.blockSafe"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3976, "DataNode.instance.data.cacheManager.numBlocksCached == blockManagerInstance.bmSafeMode.blockThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.blockThreshold"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3977, "DataNode.instance.data.cacheManager.numBlocksCached == blockManagerInstance.bmSafeMode.blockTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.blockTotal"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3978, "DataNode.instance.data.cacheManager.numBlocksCached == blockManagerInstance.bmSafeMode.datanodeThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.datanodeThreshold"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3979, "DataNode.instance.data.cacheManager.numBlocksCached == blockManagerInstance.bmSafeMode.extension"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.extension"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3980, "DataNode.instance.data.cacheManager.numBlocksCached == blockManagerInstance.bmSafeMode.lastStatusReport"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.lastStatusReport"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3981, "DataNode.instance.data.cacheManager.numBlocksCached == blockManagerInstance.bmSafeMode.reachedTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.reachedTime"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3982, "DataNode.instance.data.cacheManager.numBlocksCached == blockManagerInstance.corruptReplicaBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.corruptReplicaBlocksCount"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3983, "DataNode.instance.data.cacheManager.numBlocksCached == blockManagerInstance.datanodeManager.numStaleNodes"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.numStaleNodes"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3984, "DataNode.instance.data.cacheManager.numBlocksCached == blockManagerInstance.datanodeManager.numStaleStorages"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.numStaleStorages"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3985, "DataNode.instance.data.cacheManager.numBlocksCached == blockManagerInstance.excessRedundancyMap.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.excessRedundancyMap.size"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3986, "DataNode.instance.data.cacheManager.numBlocksCached == blockManagerInstance.heartbeatManager.stats.cacheCapacity"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.cacheCapacity"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3987, "DataNode.instance.data.cacheManager.numBlocksCached == blockManagerInstance.heartbeatManager.stats.cacheUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.cacheUsed"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3988, "DataNode.instance.data.cacheManager.numBlocksCached == blockManagerInstance.heartbeatManager.stats.expiredHeartbeats"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.expiredHeartbeats"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3989, "DataNode.instance.data.cacheManager.numBlocksCached == blockManagerInstance.invalidateBlocks.blockIdManager.legacyGenerationStampLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.blockIdManager.legacyGenerationStampLimit"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3990, "DataNode.instance.data.cacheManager.numBlocksCached == blockManagerInstance.invalidateBlocks.pendingPeriodInMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.pendingPeriodInMs"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3991, "DataNode.instance.data.cacheManager.numBlocksCached == blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3992, "DataNode.instance.data.cacheManager.numBlocksCached == blockManagerInstance.neededReconstruction.QUEUE_HIGHEST_PRIORITY"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.QUEUE_HIGHEST_PRIORITY"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3993, "DataNode.instance.data.cacheManager.numBlocksCached == blockManagerInstance.pendingDNMessages.count"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingDNMessages.count"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3994, "DataNode.instance.data.cacheManager.numBlocksCached == blockManagerInstance.pendingReconstruction.timedOutCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingReconstruction.timedOutCount"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3995, "DataNode.instance.data.cacheManager.numBlocksCached == blockManagerInstance.pendingReconstructionBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingReconstructionBlocksCount"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3996, "DataNode.instance.data.cacheManager.numBlocksCached == blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.modification"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.modification"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3997, "DataNode.instance.data.cacheManager.numBlocksCached == blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.size"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3998, "DataNode.instance.data.cacheManager.numBlocksCached == blockManagerInstance.providedStorageMap.capacity"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.providedStorageMap.capacity"))).intValue());
			}
		});
		invariants3999.add(new Invariant(3999, "DataNode.instance.data.cacheManager.numBlocksCached == blockManagerInstance.providedStorageMap.defaultReplication"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.providedStorageMap.defaultReplication"))).intValue());
			}
		});
	}
	static {
installInv3999();	}
}
