package daikon.hdfs;
import daikon.*;
import java.util.Set;
import java.util.ArrayList;
import java.util.List;
//this class is automatically generated by our scripts
public class InvariantPool6999{

	public static List<Invariant> invariants6999 = new ArrayList<>();

	public static void installInv6999(){
		invariants6999.add(new Invariant(6000, "DataNode.instance.dnConf.heartBeatInterval < blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.heartBeatInterval"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6001, "DataNode.instance.dnConf.lifelineIntervalMs < blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.lifelineIntervalMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6002, "DataNode.instance.dnConf.outliersReportIntervalMs > blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.outliersReportIntervalMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6003, "DataNode.instance.dnConf.readaheadLength > blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.readaheadLength"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6004, "DataNode.instance.dnConf.restartReplicaExpiry < blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.restartReplicaExpiry"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6005, "DataNode.instance.dnConf.socketKeepaliveTimeout < blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketKeepaliveTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6006, "DataNode.instance.dnConf.socketTimeout < blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6007, "DataNode.instance.dnConf.socketWriteTimeout > blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketWriteTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6008, "DataNode.instance.id.infoPort < blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6009, "DataNode.instance.id.ipcPort < blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6010, "DataNode.instance.id.nsInfo.cTime > blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6011, "DataNode.instance.id.nsInfo.layoutVersion < blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6012, "DataNode.instance.id.nsInfo.namespaceID > blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6013, "DataNode.instance.id.xferPort < blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6014, "DataNode.instance.lastDiskErrorCheck > blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6015, "DataNode.instance.shortCircuitRegistry.SHM_LENGTH < blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.shortCircuitRegistry.SHM_LENGTH"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6016, "DataNode.instance.storage.layoutVersion < blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6017, "DataNode.instance.storage.namespaceID < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6018, "DataNode.instance.storage.namespaceID > blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6019, "DataNode.instance.storage.namespaceID < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6020, "DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout > blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6021, "DataNode.instance.volumeChecker.lastAllVolumesCheck > blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6022, "DataNode.instance.xserver.balanceThrottler.bytesPerPeriod > blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.bytesPerPeriod"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6023, "DataNode.instance.xserver.balanceThrottler.curPeriodStart > blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6024, "DataNode.instance.xserver.balanceThrottler.maxThreads < blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.maxThreads"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6025, "DataNode.instance.xserver.balanceThrottler.periodExtension < blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.periodExtension"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6026, "DataNode.instance.xserver.estimateBlockSize > blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.estimateBlockSize"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6027, "DataNode.instance.xserver.maxXceiverCount < blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.maxXceiverCount"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6028, "NameNode.instance.DEFAULT_PORT < blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.DEFAULT_PORT"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6029, "NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS < blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6030, "NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL > blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6031, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE < blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6032, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size < blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6033, "NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses < blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6034, "NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval > blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6035, "NameNode.instance.namesystem.dir.maxComponentLength < blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxComponentLength"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6036, "NameNode.instance.namesystem.dir.maxDirItems > blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxDirItems"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6037, "NameNode.instance.namesystem.dir.xattrMaxSize < blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.xattrMaxSize"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6038, "NameNode.instance.namesystem.editLogRollerThreshold > blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogRollerThreshold"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6039, "NameNode.instance.namesystem.fsImage.lastAppliedTxId < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6040, "NameNode.instance.namesystem.fsImage.lastAppliedTxId < blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6041, "NameNode.instance.namesystem.fsImage.lastAppliedTxId < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6042, "NameNode.instance.namesystem.leaseManager.hardLimit > blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.hardLimit"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6043, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime > blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6044, "NameNode.instance.namesystem.leaseRecheckIntervalMs < blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseRecheckIntervalMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6045, "NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs < blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6046, "NameNode.instance.namesystem.nnResourceChecker.duReserved > blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.nnResourceChecker.duReserved"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6047, "NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH < blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6048, "NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit < blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6049, "NameNode.instance.namesystem.startTime > blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6050, "blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER < blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6051, "blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID > blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6052, "blockManagerInstance.blockReportLeaseManager.maxPending < blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.maxPending"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6053, "blockManagerInstance.blockReportLeaseManager.nextId > blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6054, "blockManagerInstance.blocksMap.capacity > blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blocksMap.capacity"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6055, "blockManagerInstance.bmSafeMode.lastStatusReport < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.lastStatusReport"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6056, "blockManagerInstance.bmSafeMode.lastStatusReport > blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.lastStatusReport"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6057, "blockManagerInstance.bmSafeMode.lastStatusReport < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.lastStatusReport"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6058, "blockManagerInstance.datanodeManager.defaultInfoPort < blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoPort"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6059, "blockManagerInstance.datanodeManager.defaultInfoSecurePort < blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoSecurePort"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6060, "blockManagerInstance.datanodeManager.defaultIpcPort < blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultIpcPort"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6061, "blockManagerInstance.datanodeManager.defaultXferPort < blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultXferPort"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6062, "blockManagerInstance.datanodeManager.heartbeatExpireInterval > blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatExpireInterval"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6063, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed < blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6064, "blockManagerInstance.heartbeatManager.stats.capacityRemaining > blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6065, "blockManagerInstance.heartbeatManager.stats.capacityTotal > blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6066, "blockManagerInstance.heartbeatManager.stats.capacityUsed < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6067, "blockManagerInstance.heartbeatManager.stats.capacityUsed < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6068, "blockManagerInstance.heartbeatManager.stats.capacityUsed > blockManagerInstance.neededReconstruction.LEVEL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.LEVEL"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6069, "blockManagerInstance.heartbeatManager.stats.capacityUsed > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6070, "blockManagerInstance.heartbeatManager.stats.capacityUsed > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6071, "blockManagerInstance.heartbeatManager.stats.capacityUsed > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6072, "blockManagerInstance.heartbeatManager.stats.capacityUsed > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6073, "blockManagerInstance.heartbeatManager.stats.capacityUsed > blockManagerInstance.replQueueResetToHeadThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueResetToHeadThreshold"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6074, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118505386241581L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118505386241581L);
			}
		});
		invariants6999.add(new Invariant(6075, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118507386343319L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118507386343319L);
			}
		});
		invariants6999.add(new Invariant(6076, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 185417842688L || blockManagerInstance.heartbeatManager.stats.capacityRemaining == 185435037696L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 185417842688L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 185435037696L);
			}
		});
		invariants6999.add(new Invariant(6077, "blockManagerInstance.heartbeatManager.stats.capacityUsed == 254873 || blockManagerInstance.heartbeatManager.stats.capacityUsed == 263215"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 254873 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 263215);
			}
		});
		invariants6999.add(new Invariant(6078, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 69021187025L || blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 69038382183L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 69021187025L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 69038382183L);
			}
		});
		invariants6999.add(new Invariant(6079, "blockManagerInstance.heartbeatManager.stats.capacityUsed > blockManagerInstance.storagePolicySuite.defaultPolicyID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.storagePolicySuite.defaultPolicyID"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6080, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118507386343319L || NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118509383594166L || NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118509393319764L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118507386343319L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118509383594166L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118509393319764L);
			}
		});
		invariants6999.add(new Invariant(6081, "blockManagerInstance.lastRedundancyCycleTS == 118506382 || blockManagerInstance.lastRedundancyCycleTS == 118509382"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118506382 || ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118509382);
			}
		});
		invariants6999.add(new Invariant(6082, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME == blockManagerInstance.bmSafeMode.blockTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.blockTotal"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6083, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.numDeletedBlocks) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, blockManagerInstance.bmSafeMode.blockTotal-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.blockTotal"))).intValue()-1));
			}
		});
		invariants6999.add(new Invariant(6084, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE == 38"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() == 38);
			}
		});
		invariants6999.add(new Invariant(6085, "NameNode.instance.namesystem.fsImage.lastAppliedTxId == 18"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() == 18);
			}
		});
		invariants6999.add(new Invariant(6086, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118470070418111L || NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118472070578981L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118470070418111L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118472070578981L);
			}
		});
		invariants6999.add(new Invariant(6087, "NameNode.instance.namesystem.lazyPersistFileScrubberTS == 118464070"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() == 118464070);
			}
		});
		invariants6999.add(new Invariant(6088, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime == 118463800"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() == 118463800);
			}
		});
		invariants6999.add(new Invariant(6089, "NameNode.instance.namesystem.startTime == 1731382358892L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() == 1731382358892L);
			}
		});
		invariants6999.add(new Invariant(6090, "blockManagerInstance.blockReportLeaseManager.nextId == 3714771817864751601L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() == 3714771817864751601L);
			}
		});
		invariants6999.add(new Invariant(6091, "blockManagerInstance.bmSafeMode.startTime == 118464040"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() == 118464040);
			}
		});
		invariants6999.add(new Invariant(6092, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 98328 || blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 98376"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 98328 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 98376);
			}
		});
		invariants6999.add(new Invariant(6093, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 185575800832L || blockManagerInstance.heartbeatManager.stats.capacityRemaining == 185591824384L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 185575800832L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 185591824384L);
			}
		});
		invariants6999.add(new Invariant(6094, "blockManagerInstance.heartbeatManager.stats.capacityUsed == 200812 || blockManagerInstance.heartbeatManager.stats.capacityUsed == 213361"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 200812 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 213361);
			}
		});
		invariants6999.add(new Invariant(6095, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 68864454548L || blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 68880465551L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 68864454548L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 68880465551L);
			}
		});
		invariants6999.add(new Invariant(6096, "blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount == 2 || blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount == 4"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue() == 2 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue() == 4);
			}
		});
		invariants6999.add(new Invariant(6097, "blockManagerInstance.invalidateBlocks.startupTime == 118463803"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue() == 118463803);
			}
		});
		invariants6999.add(new Invariant(6098, "blockManagerInstance.lastRedundancyCycleTS == 118470044"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118470044);
			}
		});
		invariants6999.add(new Invariant(6099, "DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION != blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6100, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME >= blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() >= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6101, "NameNode.instance.namesystem.fsImage.lastAppliedTxId < blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6102, "NameNode.instance.namesystem.fsImage.lastAppliedTxId > blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6103, "NameNode.instance.namesystem.lazyPersistFileScrubberTS > blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6104, "blockManagerInstance.bmSafeMode.startTime > blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6105, "blockManagerInstance.heartbeatManager.stats.capacityUsed > blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6106, "DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION == blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6107, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME == NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6108, "DataNode.instance.data.volsConfigured == DataNode.instance.volumeChecker.numSkippedChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSkippedChecks"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6109, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.volumeChecker.numSkippedChecks-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSkippedChecks"))).intValue()-1));
			}
		});
		invariants6999.add(new Invariant(6110, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.volsConfigured) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, blockManagerInstance.heartbeatManager.stats.nodesInService-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue()-1));
			}
		});
		invariants6999.add(new Invariant(6111, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == 17"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == 17);
			}
		});
		invariants6999.add(new Invariant(6112, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache == 82"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() == 82);
			}
		});
		invariants6999.add(new Invariant(6113, "DataNode.instance.id.infoPort == 38543"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() == 38543);
			}
		});
		invariants6999.add(new Invariant(6114, "DataNode.instance.id.ipcPort == 41643"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() == 41643);
			}
		});
		invariants6999.add(new Invariant(6115, "DataNode.instance.id.nsInfo.cTime == 1731382190114L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() == 1731382190114L);
			}
		});
		invariants6999.add(new Invariant(6116, "DataNode.instance.id.nsInfo.namespaceID == 1446831877"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() == 1446831877);
			}
		});
		invariants6999.add(new Invariant(6117, "DataNode.instance.id.xferPort == 38737"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() == 38737);
			}
		});
		invariants6999.add(new Invariant(6118, "DataNode.instance.lastDiskErrorCheck == 118301622"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() == 118301622);
			}
		});
		invariants6999.add(new Invariant(6119, "DataNode.instance.volumeChecker.lastAllVolumesCheck == 118301397"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() == 118301397);
			}
		});
		invariants6999.add(new Invariant(6120, "DataNode.instance.xserver.balanceThrottler.curPeriodStart == 118300532"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() == 118300532);
			}
		});
		invariants6999.add(new Invariant(6121, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE == 56"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() == 56);
			}
		});
		invariants6999.add(new Invariant(6122, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118344384964028L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118344384964028L);
			}
		});
		invariants6999.add(new Invariant(6123, "NameNode.instance.namesystem.lazyPersistFileScrubberTS == 118308416"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() == 118308416);
			}
		});
		invariants6999.add(new Invariant(6124, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime == 118308150"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() == 118308150);
			}
		});
		invariants6999.add(new Invariant(6125, "NameNode.instance.namesystem.startTime == 1731382203242L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() == 1731382203242L);
			}
		});
		invariants6999.add(new Invariant(6126, "blockManagerInstance.blockReportLeaseManager.nextId == -2736777389865002805L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() == -2736777389865002805L);
			}
		});
		invariants6999.add(new Invariant(6127, "blockManagerInstance.bmSafeMode.startTime == 118308385"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() == 118308385);
			}
		});
		invariants6999.add(new Invariant(6128, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 147456"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 147456);
			}
		});
		invariants6999.add(new Invariant(6129, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 278742409216L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 278742409216L);
			}
		});
		invariants6999.add(new Invariant(6130, "blockManagerInstance.heartbeatManager.stats.capacityTotal == 402300542976L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue() == 402300542976L);
			}
		});
		invariants6999.add(new Invariant(6131, "blockManagerInstance.heartbeatManager.stats.capacityUsed == 488283"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 488283);
			}
		});
		invariants6999.add(new Invariant(6132, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 102941822117L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 102941822117L);
			}
		});
		invariants6999.add(new Invariant(6133, "blockManagerInstance.invalidateBlocks.startupTime == 118308151"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue() == 118308151);
			}
		});
		invariants6999.add(new Invariant(6134, "blockManagerInstance.lastRedundancyCycleTS == 118342093"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118342093);
			}
		});
		invariants6999.add(new Invariant(6135, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == 61"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == 61);
			}
		});
		invariants6999.add(new Invariant(6136, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache == 62"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() == 62);
			}
		});
		invariants6999.add(new Invariant(6137, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118334772313590L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118334772313590L);
			}
		});
		invariants6999.add(new Invariant(6138, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 278823288832L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 278823288832L);
			}
		});
		invariants6999.add(new Invariant(6139, "blockManagerInstance.heartbeatManager.stats.capacityUsed == 506985"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 506985);
			}
		});
		invariants6999.add(new Invariant(6140, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 102860923799L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 102860923799L);
			}
		});
		invariants6999.add(new Invariant(6141, "blockManagerInstance.lastRedundancyCycleTS == 118333092"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118333092);
			}
		});
		invariants6999.add(new Invariant(6142, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache == 31"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() == 31);
			}
		});
		invariants6999.add(new Invariant(6143, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118330563732685L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118330563732685L);
			}
		});
		invariants6999.add(new Invariant(6144, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 278857490432L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 278857490432L);
			}
		});
		invariants6999.add(new Invariant(6145, "blockManagerInstance.heartbeatManager.stats.capacityUsed == 494487"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 494487);
			}
		});
		invariants6999.add(new Invariant(6146, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 102826734697L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 102826734697L);
			}
		});
		invariants6999.add(new Invariant(6147, "blockManagerInstance.lastRedundancyCycleTS == 118330092"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118330092);
			}
		});
		invariants6999.add(new Invariant(6148, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache == 9"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() == 9);
			}
		});
		invariants6999.add(new Invariant(6149, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118318562890519L || NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118320384797169L || NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118320568405074L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118318562890519L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118320384797169L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118320568405074L);
			}
		});
		invariants6999.add(new Invariant(6150, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 278947700736L || blockManagerInstance.heartbeatManager.stats.capacityRemaining == 278962266112L || blockManagerInstance.heartbeatManager.stats.capacityRemaining == 278972096512L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 278947700736L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 278962266112L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 278972096512L);
			}
		});
		invariants6999.add(new Invariant(6151, "blockManagerInstance.heartbeatManager.stats.capacityUsed == 486297 || blockManagerInstance.heartbeatManager.stats.capacityUsed == 495648 || blockManagerInstance.heartbeatManager.stats.capacityUsed == 513250"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 486297 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 495648 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 513250);
			}
		});
		invariants6999.add(new Invariant(6152, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 102712136807L || blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 102721953760L || blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 102736501534L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 102712136807L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 102721953760L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 102736501534L);
			}
		});
		invariants6999.add(new Invariant(6153, "blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount == 4 || blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount == 5 || blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount == 6"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue() == 4 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue() == 5 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue() == 6);
			}
		});
		invariants6999.add(new Invariant(6154, "blockManagerInstance.lastRedundancyCycleTS == 118317568 || blockManagerInstance.lastRedundancyCycleTS == 118320568"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118317568 || ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118320568);
			}
		});
		invariants6999.add(new Invariant(6155, "DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION < blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6156, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME <= blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6157, "DataNode.instance.dnConf.socketWriteTimeout < blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketWriteTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6158, "NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval < blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6159, "NameNode.instance.namesystem.editLogRollerThreshold != blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogRollerThreshold"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6160, "blockManagerInstance.blockReportLeaseManager.maxPending >= blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.maxPending"))).intValue() >= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6161, "blockManagerInstance.blockReportLeaseManager.nextId < blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6162, "blockManagerInstance.blockReportLeaseManager.nextId < blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6163, "blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6164, "8911 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 401102911 * blockManagerInstance.heartbeatManager.stats.capacityUsed - 7.060213439422E12 * blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount - 1.05411341792134656E18 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (8911 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 401102911 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() - 7.060213439422E12 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue() - 1.05411341792134656E18 == 0);
			}
		});
		invariants6999.add(new Invariant(6165, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118324563276476L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118324563276476L);
			}
		});
		invariants6999.add(new Invariant(6166, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 278916636672L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 278916636672L);
			}
		});
		invariants6999.add(new Invariant(6167, "blockManagerInstance.heartbeatManager.stats.capacityUsed == 511172"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 511172);
			}
		});
		invariants6999.add(new Invariant(6168, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 102767571772L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 102767571772L);
			}
		});
		invariants6999.add(new Invariant(6169, "blockManagerInstance.lastRedundancyCycleTS == 118324092"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118324092);
			}
		});
		invariants6999.add(new Invariant(6170, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118342093548451L || NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118342772893190L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118342093548451L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118342772893190L);
			}
		});
		invariants6999.add(new Invariant(6171, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 278750928896L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 278750928896L);
			}
		});
		invariants6999.add(new Invariant(6172, "blockManagerInstance.heartbeatManager.stats.capacityUsed == 485166"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 485166);
			}
		});
		invariants6999.add(new Invariant(6173, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 102933305554L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 102933305554L);
			}
		});
		invariants6999.add(new Invariant(6174, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118342772893190L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118342772893190L);
			}
		});
		invariants6999.add(new Invariant(6175, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118316562736026L || NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118317384830264L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118316562736026L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118317384830264L);
			}
		});
		invariants6999.add(new Invariant(6176, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 278992838656L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 278992838656L);
			}
		});
		invariants6999.add(new Invariant(6177, "blockManagerInstance.heartbeatManager.stats.capacityUsed == 479085"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 479085);
			}
		});
		invariants6999.add(new Invariant(6178, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 102691401875L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 102691401875L);
			}
		});
		invariants6999.add(new Invariant(6179, "blockManagerInstance.lastRedundancyCycleTS == 118314567"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118314567);
			}
		});
		invariants6999.add(new Invariant(6180, "blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount == blockManagerInstance.neededReconstruction.LEVEL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.LEVEL"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6181, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118320568405074L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118320568405074L);
			}
		});
		invariants6999.add(new Invariant(6182, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 278947700736L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 278947700736L);
			}
		});
		invariants6999.add(new Invariant(6183, "blockManagerInstance.heartbeatManager.stats.capacityUsed == 513250"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 513250);
			}
		});
		invariants6999.add(new Invariant(6184, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 102736501534L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 102736501534L);
			}
		});
		invariants6999.add(new Invariant(6185, "blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount == 5"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue() == 5);
			}
		});
		invariants6999.add(new Invariant(6186, "blockManagerInstance.lastRedundancyCycleTS == 118320568"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118320568);
			}
		});
		invariants6999.add(new Invariant(6187, "blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold == blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6188, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118345093757632L || NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118346773179849L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118345093757632L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118346773179849L);
			}
		});
		invariants6999.add(new Invariant(6189, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 278726320128L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 278726320128L);
			}
		});
		invariants6999.add(new Invariant(6190, "blockManagerInstance.heartbeatManager.stats.capacityUsed == 505946"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 505946);
			}
		});
		invariants6999.add(new Invariant(6191, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 102957893542L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 102957893542L);
			}
		});
		invariants6999.add(new Invariant(6192, "blockManagerInstance.lastRedundancyCycleTS == 118345093"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118345093);
			}
		});
		invariants6999.add(new Invariant(6193, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118346773179849L || NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118347384848664L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118346773179849L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118347384848664L);
			}
		});
		invariants6999.add(new Invariant(6194, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 278718447616L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 278718447616L);
			}
		});
		invariants6999.add(new Invariant(6195, "blockManagerInstance.heartbeatManager.stats.capacityUsed == 490331"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 490331);
			}
		});
		invariants6999.add(new Invariant(6196, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 102965781669L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 102965781669L);
			}
		});
		invariants6999.add(new Invariant(6197, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118318562890519L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118318562890519L);
			}
		});
		invariants6999.add(new Invariant(6198, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 278972096512L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 278972096512L);
			}
		});
		invariants6999.add(new Invariant(6199, "blockManagerInstance.heartbeatManager.stats.capacityUsed == 486297"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 486297);
			}
		});
		invariants6999.add(new Invariant(6200, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 102712136807L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 102712136807L);
			}
		});
		invariants6999.add(new Invariant(6201, "blockManagerInstance.lastRedundancyCycleTS == 118317568"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118317568);
			}
		});
		invariants6999.add(new Invariant(6202, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 278908084224L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 278908084224L);
			}
		});
		invariants6999.add(new Invariant(6203, "blockManagerInstance.heartbeatManager.stats.capacityUsed == 520523"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 520523);
			}
		});
		invariants6999.add(new Invariant(6204, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 102776114869L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 102776114869L);
			}
		});
		invariants6999.add(new Invariant(6205, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118324563276476L || NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118326384861883L || NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118326563420793L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118324563276476L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118326384861883L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118326563420793L);
			}
		});
		invariants6999.add(new Invariant(6206, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118324092250166L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118324092250166L);
			}
		});
		invariants6999.add(new Invariant(6207, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118336093091672L || NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118336772460359L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118336093091672L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118336772460359L);
			}
		});
		invariants6999.add(new Invariant(6208, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 278799663104L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 278799663104L);
			}
		});
		invariants6999.add(new Invariant(6209, "blockManagerInstance.heartbeatManager.stats.capacityUsed == 486265"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 486265);
			}
		});
		invariants6999.add(new Invariant(6210, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 102884570247L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 102884570247L);
			}
		});
		invariants6999.add(new Invariant(6211, "blockManagerInstance.lastRedundancyCycleTS == 118336093"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118336093);
			}
		});
		invariants6999.add(new Invariant(6212, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118336772460359L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118336772460359L);
			}
		});
		invariants6999.add(new Invariant(6213, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118339093331077L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118339093331077L);
			}
		});
		invariants6999.add(new Invariant(6214, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 278779453440L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 278779453440L);
			}
		});
		invariants6999.add(new Invariant(6215, "blockManagerInstance.heartbeatManager.stats.capacityUsed == 487274"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 487274);
			}
		});
		invariants6999.add(new Invariant(6216, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 102904774806L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 102904774806L);
			}
		});
		invariants6999.add(new Invariant(6217, "blockManagerInstance.lastRedundancyCycleTS == 118339093"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118339093);
			}
		});
		invariants6999.add(new Invariant(6218, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118330092711655L || NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118330563732685L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118330092711655L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118330563732685L);
			}
		});
		invariants6999.add(new Invariant(6219, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118341384861836L || NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118342093548451L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118341384861836L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118342093548451L);
			}
		});
		invariants6999.add(new Invariant(6220, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 278750928896L || blockManagerInstance.heartbeatManager.stats.capacityRemaining == 278771130368L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 278750928896L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 278771130368L);
			}
		});
		invariants6999.add(new Invariant(6221, "blockManagerInstance.heartbeatManager.stats.capacityUsed == 485166 || blockManagerInstance.heartbeatManager.stats.capacityUsed == 494547"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 485166 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 494547);
			}
		});
		invariants6999.add(new Invariant(6222, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 102913094701L || blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 102933305554L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 102913094701L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 102933305554L);
			}
		});
		invariants6999.add(new Invariant(6223, "blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount == 3 || blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount == 4"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue() == 3 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue() == 4);
			}
		});
		invariants6999.add(new Invariant(6224, "blockManagerInstance.lastRedundancyCycleTS == 118339093 || blockManagerInstance.lastRedundancyCycleTS == 118342093"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118339093 || ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118342093);
			}
		});
		invariants6999.add(new Invariant(6225, "blockManagerInstance.replQueueCallsSinceReset == 10 || blockManagerInstance.replQueueCallsSinceReset == 11"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue() == 10 || ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue() == 11);
			}
		});
		invariants6999.add(new Invariant(6226, "DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION <= blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6227, "DataNode.instance.diskBalancer.bandwidth <= blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.bandwidth"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6228, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118328563579088L || NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118329384850122L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118328563579088L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118329384850122L);
			}
		});
		invariants6999.add(new Invariant(6229, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 278878724096L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 278878724096L);
			}
		});
		invariants6999.add(new Invariant(6230, "blockManagerInstance.heartbeatManager.stats.capacityUsed == 503838"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 503838);
			}
		});
		invariants6999.add(new Invariant(6231, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 102805491682L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 102805491682L);
			}
		});
		invariants6999.add(new Invariant(6232, "blockManagerInstance.lastRedundancyCycleTS == 118327092"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118327092);
			}
		});
		invariants6999.add(new Invariant(6233, "DataNode.instance.id.nsInfo.cTime == 1731382193818L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() == 1731382193818L);
			}
		});
		invariants6999.add(new Invariant(6234, "DataNode.instance.id.nsInfo.namespaceID == 1567528467"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() == 1567528467);
			}
		});
		invariants6999.add(new Invariant(6235, "DataNode.instance.storage.namespaceID == 1446831877"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() == 1446831877);
			}
		});
		invariants6999.add(new Invariant(6236, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118304082866808L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118304082866808L);
			}
		});
		invariants6999.add(new Invariant(6237, "NameNode.instance.namesystem.lazyPersistFileScrubberTS == 118300083"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() == 118300083);
			}
		});
		invariants6999.add(new Invariant(6238, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime == 118298922"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() == 118298922);
			}
		});
		invariants6999.add(new Invariant(6239, "NameNode.instance.namesystem.startTime == 1731382194014L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() == 1731382194014L);
			}
		});
		invariants6999.add(new Invariant(6240, "blockManagerInstance.blockReportLeaseManager.nextId == -5163559665702215840L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() == -5163559665702215840L);
			}
		});
		invariants6999.add(new Invariant(6241, "blockManagerInstance.bmSafeMode.startTime == 118300055"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() == 118300055);
			}
		});
		invariants6999.add(new Invariant(6242, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 279062749184L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 279062749184L);
			}
		});
		invariants6999.add(new Invariant(6243, "blockManagerInstance.heartbeatManager.stats.capacityUsed == 451842"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 451842);
			}
		});
		invariants6999.add(new Invariant(6244, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 102621518590L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 102621518590L);
			}
		});
		invariants6999.add(new Invariant(6245, "blockManagerInstance.invalidateBlocks.startupTime == 118298925"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue() == 118298925);
			}
		});
		invariants6999.add(new Invariant(6246, "blockManagerInstance.lastRedundancyCycleTS == 118303094"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118303094);
			}
		});
		invariants6999.add(new Invariant(6247, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118303093429212L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118303093429212L);
			}
		});
		invariants6999.add(new Invariant(6248, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 279081590784L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 279081590784L);
			}
		});
		invariants6999.add(new Invariant(6249, "blockManagerInstance.heartbeatManager.stats.capacityUsed == 393216"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 393216);
			}
		});
		invariants6999.add(new Invariant(6250, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 102602735616L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 102602735616L);
			}
		});
		invariants6999.add(new Invariant(6251, "DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION == DataNode.instance.data.cacheManager.numBlocksFailedToUncache"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6252, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118314567852740L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118314567852740L);
			}
		});
		invariants6999.add(new Invariant(6253, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 279001571328L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 279001571328L);
			}
		});
		invariants6999.add(new Invariant(6254, "blockManagerInstance.heartbeatManager.stats.capacityUsed == 473890"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 473890);
			}
		});
		invariants6999.add(new Invariant(6255, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 102682674398L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 102682674398L);
			}
		});
		invariants6999.add(new Invariant(6256, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118326563420793L || NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118327092548630L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118326563420793L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118327092548630L);
			}
		});
		invariants6999.add(new Invariant(6257, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 278888062976L || blockManagerInstance.heartbeatManager.stats.capacityRemaining == 278908084224L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 278888062976L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 278908084224L);
			}
		});
		invariants6999.add(new Invariant(6258, "blockManagerInstance.heartbeatManager.stats.capacityUsed == 520523 || blockManagerInstance.heartbeatManager.stats.capacityUsed == 536108"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 520523 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 536108);
			}
		});
		invariants6999.add(new Invariant(6259, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 102776114869L || blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 102796120532L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 102776114869L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 102796120532L);
			}
		});
		invariants6999.add(new Invariant(6260, "blockManagerInstance.lastRedundancyCycleTS == 118324092 || blockManagerInstance.lastRedundancyCycleTS == 118327092"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118324092 || ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118327092);
			}
		});
		invariants6999.add(new Invariant(6261, "NameNode.instance.namesystem.editLogRollerThreshold < blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogRollerThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6262, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118346773179849L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118346773179849L);
			}
		});
		invariants6999.add(new Invariant(6263, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 278718447616L || blockManagerInstance.heartbeatManager.stats.capacityRemaining == 278726320128L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 278718447616L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 278726320128L);
			}
		});
		invariants6999.add(new Invariant(6264, "blockManagerInstance.heartbeatManager.stats.capacityUsed == 490331 || blockManagerInstance.heartbeatManager.stats.capacityUsed == 505946"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 490331 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 505946);
			}
		});
		invariants6999.add(new Invariant(6265, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 102957893542L || blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 102965781669L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 102957893542L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 102965781669L);
			}
		});
		invariants6999.add(new Invariant(6266, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 278779453440L || blockManagerInstance.heartbeatManager.stats.capacityRemaining == 278791036928L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 278779453440L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 278791036928L);
			}
		});
		invariants6999.add(new Invariant(6267, "blockManagerInstance.heartbeatManager.stats.capacityUsed == 487274 || blockManagerInstance.heartbeatManager.stats.capacityUsed == 489382"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 487274 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 489382);
			}
		});
		invariants6999.add(new Invariant(6268, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 102893189210L || blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 102904774806L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 102893189210L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 102904774806L);
			}
		});
		invariants6999.add(new Invariant(6269, "blockManagerInstance.lastRedundancyCycleTS == 118336093 || blockManagerInstance.lastRedundancyCycleTS == 118339093"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118336093 || ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118339093);
			}
		});
		invariants6999.add(new Invariant(6270, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 279001571328L || blockManagerInstance.heartbeatManager.stats.capacityRemaining == 279018332160L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 279001571328L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 279018332160L);
			}
		});
		invariants6999.add(new Invariant(6271, "blockManagerInstance.heartbeatManager.stats.capacityUsed == 468515 || blockManagerInstance.heartbeatManager.stats.capacityUsed == 473890"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 468515 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 473890);
			}
		});
		invariants6999.add(new Invariant(6272, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 102665918941L || blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 102682674398L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 102665918941L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 102682674398L);
			}
		});
		invariants6999.add(new Invariant(6273, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118330563732685L || NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118332772211003L || NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118333092891352L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118330563732685L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118332772211003L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118333092891352L);
			}
		});
		invariants6999.add(new Invariant(6274, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 278833291264L || blockManagerInstance.heartbeatManager.stats.capacityRemaining == 278847692800L || blockManagerInstance.heartbeatManager.stats.capacityRemaining == 278857490432L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 278833291264L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 278847692800L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 278857490432L);
			}
		});
		invariants6999.add(new Invariant(6275, "blockManagerInstance.heartbeatManager.stats.capacityUsed == 494487 || blockManagerInstance.heartbeatManager.stats.capacityUsed == 500721 || blockManagerInstance.heartbeatManager.stats.capacityUsed == 518384"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 494487 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 500721 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 518384);
			}
		});
		invariants6999.add(new Invariant(6276, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 102826734697L || blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 102836526095L || blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 102850909968L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 102826734697L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 102836526095L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 102850909968L);
			}
		});
		invariants6999.add(new Invariant(6277, "blockManagerInstance.lastRedundancyCycleTS == 118330092 || blockManagerInstance.lastRedundancyCycleTS == 118333092"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118330092 || ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118333092);
			}
		});
		invariants6999.add(new Invariant(6278, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118336093091672L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118336093091672L);
			}
		});
		invariants6999.add(new Invariant(6279, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118345093757632L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118345093757632L);
			}
		});
		invariants6999.add(new Invariant(6280, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118341384861836L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118341384861836L);
			}
		});
		invariants6999.add(new Invariant(6281, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 278771130368L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 278771130368L);
			}
		});
		invariants6999.add(new Invariant(6282, "blockManagerInstance.heartbeatManager.stats.capacityUsed == 494547"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 494547);
			}
		});
		invariants6999.add(new Invariant(6283, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 102913094701L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 102913094701L);
			}
		});
		invariants6999.add(new Invariant(6284, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118324092250166L || NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118324563276476L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118324092250166L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118324563276476L);
			}
		});
		invariants6999.add(new Invariant(6285, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118320568405074L || NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118322563141553L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118320568405074L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118322563141553L);
			}
		});
		invariants6999.add(new Invariant(6286, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == 8 || DataNode.instance.data.asyncDiskService.numDeletedBlocks == 30"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == 8 || ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == 30);
			}
		});
		invariants6999.add(new Invariant(6287, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache == 9 || DataNode.instance.data.cacheManager.numBlocksFailedToUncache == 31"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() == 9 || ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() == 31);
			}
		});
		invariants6999.add(new Invariant(6288, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118322563141553L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118322563141553L);
			}
		});
		invariants6999.add(new Invariant(6289, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 278938394624L || blockManagerInstance.heartbeatManager.stats.capacityRemaining == 278947700736L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 278938394624L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 278947700736L);
			}
		});
		invariants6999.add(new Invariant(6290, "blockManagerInstance.heartbeatManager.stats.capacityUsed == 513250 || blockManagerInstance.heartbeatManager.stats.capacityUsed == 524679"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 513250 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 524679);
			}
		});
		invariants6999.add(new Invariant(6291, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 102736501534L || blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 102745800313L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 102736501534L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 102745800313L);
			}
		});
		invariants6999.add(new Invariant(6292, "blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount == 3 || blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount == 5"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue() == 3 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue() == 5);
			}
		});
		invariants6999.add(new Invariant(6293, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME != blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6294, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < DataNode.instance.data.cacheManager.numBlocksFailedToUncache"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6295, "DataNode.instance.data.asyncDiskService.numDeletedBlocks <= blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6296, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache != DataNode.instance.diskBalancer.bandwidth"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() != ((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.bandwidth"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6297, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6298, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache != NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() != ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6299, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache != blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6300, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6301, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache != blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6302, "blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount <= blockManagerInstance.neededReconstruction.LEVEL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.LEVEL"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6303, "DataNode.instance.id.infoPort == 39049"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() == 39049);
			}
		});
		invariants6999.add(new Invariant(6304, "DataNode.instance.id.ipcPort == 38895"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() == 38895);
			}
		});
		invariants6999.add(new Invariant(6305, "DataNode.instance.id.nsInfo.cTime == 1731382127132L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() == 1731382127132L);
			}
		});
		invariants6999.add(new Invariant(6306, "DataNode.instance.id.nsInfo.namespaceID == 1205464783"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() == 1205464783);
			}
		});
		invariants6999.add(new Invariant(6307, "DataNode.instance.id.xferPort == 35305"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() == 35305);
			}
		});
		invariants6999.add(new Invariant(6308, "DataNode.instance.lastDiskErrorCheck == 118235692"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() == 118235692);
			}
		});
		invariants6999.add(new Invariant(6309, "DataNode.instance.volumeChecker.lastAllVolumesCheck == 118235631"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() == 118235631);
			}
		});
		invariants6999.add(new Invariant(6310, "DataNode.instance.xserver.balanceThrottler.curPeriodStart == 118234613"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() == 118234613);
			}
		});
		invariants6999.add(new Invariant(6311, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118238131701704L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118238131701704L);
			}
		});
		invariants6999.add(new Invariant(6312, "NameNode.instance.namesystem.lazyPersistFileScrubberTS == 118234131"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() == 118234131);
			}
		});
		invariants6999.add(new Invariant(6313, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime == 118233014"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() == 118233014);
			}
		});
		invariants6999.add(new Invariant(6314, "NameNode.instance.namesystem.startTime == 1731382128106L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() == 1731382128106L);
			}
		});
		invariants6999.add(new Invariant(6315, "blockManagerInstance.blockReportLeaseManager.nextId == 3174158107023557856L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() == 3174158107023557856L);
			}
		});
		invariants6999.add(new Invariant(6316, "blockManagerInstance.bmSafeMode.startTime == 118234099"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() == 118234099);
			}
		});
		invariants6999.add(new Invariant(6317, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 279558144000L || blockManagerInstance.heartbeatManager.stats.capacityRemaining == 279564222464L || blockManagerInstance.heartbeatManager.stats.capacityRemaining == 279570432000L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 279558144000L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 279564222464L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 279570432000L);
			}
		});
		invariants6999.add(new Invariant(6318, "blockManagerInstance.heartbeatManager.stats.capacityUsed == 248877 || blockManagerInstance.heartbeatManager.stats.capacityUsed == 352376 || blockManagerInstance.heartbeatManager.stats.capacityUsed == 454836"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 248877 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 352376 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 454836);
			}
		});
		invariants6999.add(new Invariant(6319, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 102114038739L || blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 102120144776L || blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 102126120780L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 102114038739L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 102120144776L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 102126120780L);
			}
		});
		invariants6999.add(new Invariant(6320, "blockManagerInstance.invalidateBlocks.startupTime == 118233016"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue() == 118233016);
			}
		});
		invariants6999.add(new Invariant(6321, "blockManagerInstance.lastRedundancyCycleTS == 118237500"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118237500);
			}
		});
		invariants6999.add(new Invariant(6322, "NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval != blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6323, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118235728888883L || NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118236131559000L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118235728888883L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118236131559000L);
			}
		});
		invariants6999.add(new Invariant(6324, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 279576813568L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 279576813568L);
			}
		});
		invariants6999.add(new Invariant(6325, "blockManagerInstance.heartbeatManager.stats.capacityUsed == 245760"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 245760);
			}
		});
		invariants6999.add(new Invariant(6326, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 102107660288L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 102107660288L);
			}
		});
		invariants6999.add(new Invariant(6327, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118236131559000L || NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118237499701551L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118236131559000L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118237499701551L);
			}
		});
		invariants6999.add(new Invariant(6328, "blockManagerInstance.lastRedundancyCycleTS == -1 || blockManagerInstance.lastRedundancyCycleTS == 118237500"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == -1 || ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118237500);
			}
		});
		invariants6999.add(new Invariant(6329, "blockManagerInstance.heartbeatManager.stats.capacityUsed != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6330, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118236131559000L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118236131559000L);
			}
		});
		invariants6999.add(new Invariant(6331, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118238131701704L || NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118240098482910L || NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118240131829827L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118238131701704L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118240098482910L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118240131829827L);
			}
		});
		invariants6999.add(new Invariant(6332, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 279558144000L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 279558144000L);
			}
		});
		invariants6999.add(new Invariant(6333, "blockManagerInstance.heartbeatManager.stats.capacityUsed == 454836"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 454836);
			}
		});
		invariants6999.add(new Invariant(6334, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 102126120780L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 102126120780L);
			}
		});
		invariants6999.add(new Invariant(6335, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == 45"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == 45);
			}
		});
		invariants6999.add(new Invariant(6336, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118250132357453L || NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118252098475178L || NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118252132500160L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118250132357453L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118252098475178L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118252132500160L);
			}
		});
		invariants6999.add(new Invariant(6337, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 279428096000L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 279428096000L);
			}
		});
		invariants6999.add(new Invariant(6338, "blockManagerInstance.heartbeatManager.stats.capacityUsed == 517176"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 517176);
			}
		});
		invariants6999.add(new Invariant(6339, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 102256106440L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 102256106440L);
			}
		});
		invariants6999.add(new Invariant(6340, "blockManagerInstance.lastRedundancyCycleTS == 118249501"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118249501);
			}
		});
		invariants6999.add(new Invariant(6341, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118255501933054L || NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118256132753101L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118255501933054L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118256132753101L);
			}
		});
		invariants6999.add(new Invariant(6342, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 279406993408L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 279406993408L);
			}
		});
		invariants6999.add(new Invariant(6343, "blockManagerInstance.heartbeatManager.stats.capacityUsed == 519254"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 519254);
			}
		});
		invariants6999.add(new Invariant(6344, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 102277206954L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 102277206954L);
			}
		});
		invariants6999.add(new Invariant(6345, "blockManagerInstance.lastRedundancyCycleTS == 118255501"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118255501);
			}
		});
		invariants6999.add(new Invariant(6346, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118246132142019L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118246132142019L);
			}
		});
		invariants6999.add(new Invariant(6347, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 279495172096L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 279495172096L);
			}
		});
		invariants6999.add(new Invariant(6348, "blockManagerInstance.heartbeatManager.stats.capacityUsed == 514059"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 514059);
			}
		});
		invariants6999.add(new Invariant(6349, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 102189033461L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 102189033461L);
			}
		});
		invariants6999.add(new Invariant(6350, "blockManagerInstance.lastRedundancyCycleTS == 118243501"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118243501);
			}
		});
		invariants6999.add(new Invariant(6351, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118261502235321L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118261502235321L);
			}
		});
		invariants6999.add(new Invariant(6352, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 279333814272L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 279333814272L);
			}
		});
		invariants6999.add(new Invariant(6353, "blockManagerInstance.heartbeatManager.stats.capacityUsed == 497495"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 497495);
			}
		});
		invariants6999.add(new Invariant(6354, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 102350407849L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 102350407849L);
			}
		});
		invariants6999.add(new Invariant(6355, "blockManagerInstance.lastRedundancyCycleTS == 118261502"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118261502);
			}
		});
		invariants6999.add(new Invariant(6356, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118237499701551L || NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118238131701704L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118237499701551L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118238131701704L);
			}
		});
		invariants6999.add(new Invariant(6357, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118256132753101L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118256132753101L);
			}
		});
		invariants6999.add(new Invariant(6358, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 279371628544L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 279371628544L);
			}
		});
		invariants6999.add(new Invariant(6359, "blockManagerInstance.heartbeatManager.stats.capacityUsed == 534929"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 534929);
			}
		});
		invariants6999.add(new Invariant(6360, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 102312556143L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 102312556143L);
			}
		});
		invariants6999.add(new Invariant(6361, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118258502076073L || NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118260132986416L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118258502076073L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118260132986416L);
			}
		});
		invariants6999.add(new Invariant(6362, "blockManagerInstance.lastRedundancyCycleTS == 118258502"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118258502);
			}
		});
		invariants6999.add(new Invariant(6363, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == 24 || DataNode.instance.data.asyncDiskService.numDeletedBlocks == 45"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == 24 || ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == 45);
			}
		});
		invariants6999.add(new Invariant(6364, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118250132357453L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118250132357453L);
			}
		});
		invariants6999.add(new Invariant(6365, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 279428096000L || blockManagerInstance.heartbeatManager.stats.capacityRemaining == 279440744448L || blockManagerInstance.heartbeatManager.stats.capacityRemaining == 279453442048L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 279428096000L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 279440744448L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 279453442048L);
			}
		});
		invariants6999.add(new Invariant(6366, "blockManagerInstance.heartbeatManager.stats.capacityUsed == 517176 || blockManagerInstance.heartbeatManager.stats.capacityUsed == 524449 || blockManagerInstance.heartbeatManager.stats.capacityUsed == 536917"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 517176 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 524449 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 536917);
			}
		});
		invariants6999.add(new Invariant(6367, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 102230753119L || blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 102243438251L || blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 102256106440L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 102230753119L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 102243438251L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 102256106440L);
			}
		});
		invariants6999.add(new Invariant(6368, "DataNode.instance.data.asyncDiskService.numDeletedBlocks >= NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() >= ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6369, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118264502431332L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118264502431332L);
			}
		});
		invariants6999.add(new Invariant(6370, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 279299497984L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 279299497984L);
			}
		});
		invariants6999.add(new Invariant(6371, "blockManagerInstance.heartbeatManager.stats.capacityUsed == 514119"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 514119);
			}
		});
		invariants6999.add(new Invariant(6372, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 102384707513L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 102384707513L);
			}
		});
		invariants6999.add(new Invariant(6373, "blockManagerInstance.lastRedundancyCycleTS == 118264502"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118264502);
			}
		});
		invariants6999.add(new Invariant(6374, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118246132142019L || NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118246501362927L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118246132142019L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118246501362927L);
			}
		});
		invariants6999.add(new Invariant(6375, "blockManagerInstance.lastRedundancyCycleTS == 118243501 || blockManagerInstance.lastRedundancyCycleTS == 118246501"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118243501 || ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118246501);
			}
		});
		invariants6999.add(new Invariant(6376, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == 9"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == 9);
			}
		});
		invariants6999.add(new Invariant(6377, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118243098468603L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118243098468603L);
			}
		});
		invariants6999.add(new Invariant(6378, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 279528374272L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 279528374272L);
			}
		});
		invariants6999.add(new Invariant(6379, "blockManagerInstance.heartbeatManager.stats.capacityUsed == 471460"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 471460);
			}
		});
		invariants6999.add(new Invariant(6380, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 102155873884L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 102155873884L);
			}
		});
		invariants6999.add(new Invariant(6381, "blockManagerInstance.lastRedundancyCycleTS == 118240501"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118240501);
			}
		});
		invariants6999.add(new Invariant(6382, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118244132058005L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118244132058005L);
			}
		});
		invariants6999.add(new Invariant(6383, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118260132986416L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118260132986416L);
			}
		});
		invariants6999.add(new Invariant(6384, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 279464132608L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 279464132608L);
			}
		});
		invariants6999.add(new Invariant(6385, "blockManagerInstance.heartbeatManager.stats.capacityUsed == 520293"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 520293);
			}
		});
		invariants6999.add(new Invariant(6386, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 102220066715L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 102220066715L);
			}
		});
		invariants6999.add(new Invariant(6387, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118246501362927L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118246501362927L);
			}
		});
		invariants6999.add(new Invariant(6388, "blockManagerInstance.lastRedundancyCycleTS == 118246501"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118246501);
			}
		});
		invariants6999.add(new Invariant(6389, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118240131829827L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118240131829827L);
			}
		});
		invariants6999.add(new Invariant(6390, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118258502076073L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118258502076073L);
			}
		});
		invariants6999.add(new Invariant(6391, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 279333814272L || blockManagerInstance.heartbeatManager.stats.capacityRemaining == 279346233344L || blockManagerInstance.heartbeatManager.stats.capacityRemaining == 279358652416L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 279333814272L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 279346233344L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 279358652416L);
			}
		});
		invariants6999.add(new Invariant(6392, "blockManagerInstance.heartbeatManager.stats.capacityUsed == 497495 || blockManagerInstance.heartbeatManager.stats.capacityUsed == 500642 || blockManagerInstance.heartbeatManager.stats.capacityUsed == 511032"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 497495 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 500642 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 511032);
			}
		});
		invariants6999.add(new Invariant(6393, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 102325566558L || blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 102337975240L || blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 102350407849L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 102325566558L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 102337975240L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 102350407849L);
			}
		});
		invariants6999.add(new Invariant(6394, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118249501594268L || NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118250132357453L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118249501594268L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118250132357453L);
			}
		});
		invariants6999.add(new Invariant(6395, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118240501051926L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118240501051926L);
			}
		});
		invariants6999.add(new Invariant(6396, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118248132247701L || NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118249098483106L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118248132247701L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118249098483106L);
			}
		});
		invariants6999.add(new Invariant(6397, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118243501206200L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118243501206200L);
			}
		});
		invariants6999.add(new Invariant(6398, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118243501206200L || NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118244132058005L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118243501206200L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118244132058005L);
			}
		});
		invariants6999.add(new Invariant(6399, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118261098484622L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118261098484622L);
			}
		});
		invariants6999.add(new Invariant(6400, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache == 65"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() == 65);
			}
		});
		invariants6999.add(new Invariant(6401, "DataNode.instance.id.infoPort == 45471"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() == 45471);
			}
		});
		invariants6999.add(new Invariant(6402, "DataNode.instance.id.ipcPort == 42759"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() == 42759);
			}
		});
		invariants6999.add(new Invariant(6403, "DataNode.instance.id.nsInfo.cTime == 1731382299948L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() == 1731382299948L);
			}
		});
		invariants6999.add(new Invariant(6404, "DataNode.instance.id.nsInfo.namespaceID == 222810943"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() == 222810943);
			}
		});
		invariants6999.add(new Invariant(6405, "DataNode.instance.id.xferPort == 45511"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() == 45511);
			}
		});
		invariants6999.add(new Invariant(6406, "DataNode.instance.lastDiskErrorCheck == 118408667"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() == 118408667);
			}
		});
		invariants6999.add(new Invariant(6407, "DataNode.instance.volumeChecker.lastAllVolumesCheck == 118408661"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() == 118408661);
			}
		});
		invariants6999.add(new Invariant(6408, "DataNode.instance.xserver.balanceThrottler.curPeriodStart == 118407972"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() == 118407972);
			}
		});
		invariants6999.add(new Invariant(6409, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118422346405892L || NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118422395951384L || NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118422416850685L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118422346405892L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118422395951384L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118422416850685L);
			}
		});
		invariants6999.add(new Invariant(6410, "NameNode.instance.namesystem.lazyPersistFileScrubberTS == 118407657"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() == 118407657);
			}
		});
		invariants6999.add(new Invariant(6411, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime == 118406321"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() == 118406321);
			}
		});
		invariants6999.add(new Invariant(6412, "NameNode.instance.namesystem.startTime == 1731382301413L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() == 1731382301413L);
			}
		});
		invariants6999.add(new Invariant(6413, "blockManagerInstance.blockReportLeaseManager.nextId == 4971152228154292776L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() == 4971152228154292776L);
			}
		});
		invariants6999.add(new Invariant(6414, "blockManagerInstance.bmSafeMode.startTime == 118406981"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() == 118406981);
			}
		});
		invariants6999.add(new Invariant(6415, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 1404905"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 1404905);
			}
		});
		invariants6999.add(new Invariant(6416, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 185731350528L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 185731350528L);
			}
		});
		invariants6999.add(new Invariant(6417, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 68723724311L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 68723724311L);
			}
		});
		invariants6999.add(new Invariant(6418, "blockManagerInstance.invalidateBlocks.startupTime == 118406324"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue() == 118406324);
			}
		});
		invariants6999.add(new Invariant(6419, "blockManagerInstance.lastRedundancyCycleTS == 118422177"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118422177);
			}
		});
		invariants6999.add(new Invariant(6420, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == blockManagerInstance.storagePolicySuite.defaultPolicyID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.storagePolicySuite.defaultPolicyID"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6421, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == 7"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == 7);
			}
		});
		invariants6999.add(new Invariant(6422, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache == 55"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() == 55);
			}
		});
		invariants6999.add(new Invariant(6423, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 1372769"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 1372769);
			}
		});
		invariants6999.add(new Invariant(6424, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 185749585920L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 185749585920L);
			}
		});
		invariants6999.add(new Invariant(6425, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 68705521055L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 68705521055L);
			}
		});
		invariants6999.add(new Invariant(6426, "blockManagerInstance.lastRedundancyCycleTS == 118415982"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118415982);
			}
		});
		invariants6999.add(new Invariant(6427, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118420892981259L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118420892981259L);
			}
		});
		invariants6999.add(new Invariant(6428, "blockManagerInstance.lastRedundancyCycleTS == 118419177"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118419177);
			}
		});
		invariants6999.add(new Invariant(6429, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118419742910428L || NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118419781061098L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118419742910428L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118419781061098L);
			}
		});
		invariants6999.add(new Invariant(6430, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache == 48"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() == 48);
			}
		});
		invariants6999.add(new Invariant(6431, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 1333385"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 1333385);
			}
		});
		invariants6999.add(new Invariant(6432, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 185770704896L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 185770704896L);
			}
		});
		invariants6999.add(new Invariant(6433, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 68684441463L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 68684441463L);
			}
		});
		invariants6999.add(new Invariant(6434, "blockManagerInstance.lastRedundancyCycleTS == 118412981"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118412981);
			}
		});
		invariants6999.add(new Invariant(6435, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 452274"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 452274);
			}
		});
		invariants6999.add(new Invariant(6436, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 185802752000L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 185802752000L);
			}
		});
		invariants6999.add(new Invariant(6437, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 68653275470L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 68653275470L);
			}
		});
		invariants6999.add(new Invariant(6438, "blockManagerInstance.lastRedundancyCycleTS == 118415982 || blockManagerInstance.lastRedundancyCycleTS == 118419177"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118415982 || ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118419177);
			}
		});
		invariants6999.add(new Invariant(6439, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118408745052210L || NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118408825374177L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118408745052210L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118408825374177L);
			}
		});
		invariants6999.add(new Invariant(6440, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 185804750848L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 185804750848L);
			}
		});
		invariants6999.add(new Invariant(6441, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 68651630592L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 68651630592L);
			}
		});
		invariants6999.add(new Invariant(6442, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118420920448473L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118420920448473L);
			}
		});
		invariants6999.add(new Invariant(6443, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118414576195490L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118414576195490L);
			}
		});
		invariants6999.add(new Invariant(6444, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == 7 || DataNode.instance.data.asyncDiskService.numDeletedBlocks == 17"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == 7 || ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == 17);
			}
		});
		invariants6999.add(new Invariant(6445, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache == 55 || DataNode.instance.data.cacheManager.numBlocksFailedToUncache == 65"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() == 55 || ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() == 65);
			}
		});
		invariants6999.add(new Invariant(6446, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 1372769 || blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 1404905"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 1372769 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 1404905);
			}
		});
		invariants6999.add(new Invariant(6447, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 185731350528L || blockManagerInstance.heartbeatManager.stats.capacityRemaining == 185749585920L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 185731350528L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 185749585920L);
			}
		});
		invariants6999.add(new Invariant(6448, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 68705521055L || blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 68723724311L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 68705521055L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 68723724311L);
			}
		});
		invariants6999.add(new Invariant(6449, "DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS != DataNode.instance.data.cacheManager.numBlocksFailedToUncache"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() != ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6450, "DataNode.instance.data.asyncDiskService.numDeletedBlocks >= blockManagerInstance.storagePolicySuite.defaultPolicyID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() >= ((Number)(InvariantChecker.getValue("blockManagerInstance.storagePolicySuite.defaultPolicyID"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6451, "DataNode.instance.data.cacheManager.revocationMs < blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6452, "DataNode.instance.dnConf.blockReportSplitThreshold < blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportSplitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6453, "DataNode.instance.dnConf.socketWriteTimeout < blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketWriteTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6454, "DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout < blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6455, "NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval < blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6456, "NameNode.instance.namesystem.dir.maxDirItems < blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxDirItems"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6457, "NameNode.instance.namesystem.editLogRollerThreshold < blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogRollerThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6458, "NameNode.instance.namesystem.leaseManager.hardLimit < blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.hardLimit"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6459, "blockManagerInstance.datanodeManager.heartbeatExpireInterval < blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatExpireInterval"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6460, "DataNode.instance.id.infoPort == 38887"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() == 38887);
			}
		});
		invariants6999.add(new Invariant(6461, "DataNode.instance.id.ipcPort == 36181"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() == 36181);
			}
		});
		invariants6999.add(new Invariant(6462, "DataNode.instance.id.nsInfo.cTime == 1731382162757L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() == 1731382162757L);
			}
		});
		invariants6999.add(new Invariant(6463, "DataNode.instance.id.nsInfo.namespaceID == 479260240"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() == 479260240);
			}
		});
		invariants6999.add(new Invariant(6464, "DataNode.instance.id.xferPort == 40003"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() == 40003);
			}
		});
		invariants6999.add(new Invariant(6465, "DataNode.instance.lastDiskErrorCheck == 118271468"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() == 118271468);
			}
		});
		invariants6999.add(new Invariant(6466, "DataNode.instance.volumeChecker.lastAllVolumesCheck == 118271461"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() == 118271461);
			}
		});
		invariants6999.add(new Invariant(6467, "DataNode.instance.xserver.balanceThrottler.curPeriodStart == 118270702"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() == 118270702);
			}
		});
		invariants6999.add(new Invariant(6468, "NameNode.instance.namesystem.lazyPersistFileScrubberTS == 118270345"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() == 118270345);
			}
		});
		invariants6999.add(new Invariant(6469, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime == 118268954"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() == 118268954);
			}
		});
		invariants6999.add(new Invariant(6470, "NameNode.instance.namesystem.startTime == 1731382164046L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() == 1731382164046L);
			}
		});
		invariants6999.add(new Invariant(6471, "blockManagerInstance.blockReportLeaseManager.nextId == -5232127714966073996L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() == -5232127714966073996L);
			}
		});
		invariants6999.add(new Invariant(6472, "blockManagerInstance.bmSafeMode.startTime == 118269662"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() == 118269662);
			}
		});
		invariants6999.add(new Invariant(6473, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 186215153664L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 186215153664L);
			}
		});
		invariants6999.add(new Invariant(6474, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 68241227776L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 68241227776L);
			}
		});
		invariants6999.add(new Invariant(6475, "blockManagerInstance.invalidateBlocks.startupTime == 118268957"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue() == 118268957);
			}
		});
		invariants6999.add(new Invariant(6476, "blockManagerInstance.lastRedundancyCycleTS == 118272662"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118272662);
			}
		});
		invariants6999.add(new Invariant(6477, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == DataNode.instance.diskBalancer.bandwidth"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.bandwidth"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6478, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6479, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == NameNode.instance.namesystem.fsImage.SHUTDOWN_HOOK_PRIORITY"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.SHUTDOWN_HOOK_PRIORITY"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6480, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == blockManagerInstance.datanodeManager.heartbeatManager.REPORT_STALE_NODE_NODES_PER_LINE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatManager.REPORT_STALE_NODE_NODES_PER_LINE"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6481, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == blockManagerInstance.heartbeatManager.REPORT_STALE_NODE_NODES_PER_LINE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.REPORT_STALE_NODE_NODES_PER_LINE"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6482, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == 10"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == 10);
			}
		});
		invariants6999.add(new Invariant(6483, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 181214"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 181214);
			}
		});
		invariants6999.add(new Invariant(6484, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 186177208320L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 186177208320L);
			}
		});
		invariants6999.add(new Invariant(6485, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 68279090210L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 68279090210L);
			}
		});
		invariants6999.add(new Invariant(6486, "blockManagerInstance.lastRedundancyCycleTS == 118278662"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118278662);
			}
		});
		invariants6999.add(new Invariant(6487, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 278516"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 278516);
			}
		});
		invariants6999.add(new Invariant(6488, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 186089783296L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 186089783296L);
			}
		});
		invariants6999.add(new Invariant(6489, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 68366417932L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 68366417932L);
			}
		});
		invariants6999.add(new Invariant(6490, "blockManagerInstance.lastRedundancyCycleTS == 118287663"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118287663);
			}
		});
		invariants6999.add(new Invariant(6491, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 127298"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 127298);
			}
		});
		invariants6999.add(new Invariant(6492, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 186200719360L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 186200719360L);
			}
		});
		invariants6999.add(new Invariant(6493, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 68255633086L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 68255633086L);
			}
		});
		invariants6999.add(new Invariant(6494, "blockManagerInstance.lastRedundancyCycleTS == 118275662"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118275662);
			}
		});
		invariants6999.add(new Invariant(6495, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 98304 || blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 127298"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 98304 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 127298);
			}
		});
		invariants6999.add(new Invariant(6496, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 186200719360L || blockManagerInstance.heartbeatManager.stats.capacityRemaining == 186215153664L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 186200719360L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 186215153664L);
			}
		});
		invariants6999.add(new Invariant(6497, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 68241227776L || blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 68255633086L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 68241227776L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 68255633086L);
			}
		});
		invariants6999.add(new Invariant(6498, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 201854 || blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 278516"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 201854 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 278516);
			}
		});
		invariants6999.add(new Invariant(6499, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 186068484096L || blockManagerInstance.heartbeatManager.stats.capacityRemaining == 186089783296L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 186068484096L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 186089783296L);
			}
		});
		invariants6999.add(new Invariant(6500, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 68366417932L || blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 68387793794L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 68366417932L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 68387793794L);
			}
		});
		invariants6999.add(new Invariant(6501, "blockManagerInstance.lastRedundancyCycleTS == 118290664"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118290664);
			}
		});
		invariants6999.add(new Invariant(6502, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 201854"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 201854);
			}
		});
		invariants6999.add(new Invariant(6503, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 186068484096L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 186068484096L);
			}
		});
		invariants6999.add(new Invariant(6504, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 68387793794L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 68387793794L);
			}
		});
		invariants6999.add(new Invariant(6505, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 206066"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 206066);
			}
		});
		invariants6999.add(new Invariant(6506, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 186155794432L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 186155794432L);
			}
		});
		invariants6999.add(new Invariant(6507, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 68300479246L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 68300479246L);
			}
		});
		invariants6999.add(new Invariant(6508, "blockManagerInstance.lastRedundancyCycleTS == 118278662 || blockManagerInstance.lastRedundancyCycleTS == 118281663"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118278662 || ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118281663);
			}
		});
		invariants6999.add(new Invariant(6509, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 257806"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 257806);
			}
		});
		invariants6999.add(new Invariant(6510, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 185979469824L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 185979469824L);
			}
		});
		invariants6999.add(new Invariant(6511, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 68342534386L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 68342534386L);
			}
		});
		invariants6999.add(new Invariant(6512, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == 10 || DataNode.instance.data.asyncDiskService.numDeletedBlocks == 17 || DataNode.instance.data.asyncDiskService.numDeletedBlocks == 30"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == 10 || ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == 17 || ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == 30);
			}
		});
		invariants6999.add(new Invariant(6513, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache == 10 || DataNode.instance.data.cacheManager.numBlocksFailedToUncache == 16 || DataNode.instance.data.cacheManager.numBlocksFailedToUncache == 30"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() == 10 || ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() == 16 || ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() == 30);
			}
		});
		invariants6999.add(new Invariant(6514, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 181214 || blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 206066"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 181214 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 206066);
			}
		});
		invariants6999.add(new Invariant(6515, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 186155794432L || blockManagerInstance.heartbeatManager.stats.capacityRemaining == 186177208320L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 186155794432L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 186177208320L);
			}
		});
		invariants6999.add(new Invariant(6516, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 68279090210L || blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 68300479246L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 68279090210L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 68300479246L);
			}
		});
		invariants6999.add(new Invariant(6517, "DataNode.instance.data.asyncDiskService.numDeletedBlocks >= DataNode.instance.diskBalancer.bandwidth"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() >= ((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.bandwidth"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6518, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache >= DataNode.instance.diskBalancer.bandwidth"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() >= ((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.bandwidth"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6519, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache != NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() != ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6520, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache <= blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6521, "blockManagerInstance.lastRedundancyCycleTS == 118275662 || blockManagerInstance.lastRedundancyCycleTS == 118278662"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118275662 || ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118278662);
			}
		});
		invariants6999.add(new Invariant(6522, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME == blockManagerInstance.defaultReplication"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.defaultReplication"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6523, "DataNode.instance.id.infoPort == 36667"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() == 36667);
			}
		});
		invariants6999.add(new Invariant(6524, "DataNode.instance.id.ipcPort == 45091"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() == 45091);
			}
		});
		invariants6999.add(new Invariant(6525, "DataNode.instance.id.nsInfo.cTime == 1731382261563L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() == 1731382261563L);
			}
		});
		invariants6999.add(new Invariant(6526, "DataNode.instance.id.nsInfo.namespaceID == 329010625"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() == 329010625);
			}
		});
		invariants6999.add(new Invariant(6527, "DataNode.instance.id.xferPort == 45719"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() == 45719);
			}
		});
		invariants6999.add(new Invariant(6528, "DataNode.instance.lastDiskErrorCheck == 118370276"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() == 118370276);
			}
		});
		invariants6999.add(new Invariant(6529, "DataNode.instance.volumeChecker.lastAllVolumesCheck == 118370268"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() == 118370268);
			}
		});
		invariants6999.add(new Invariant(6530, "DataNode.instance.xserver.balanceThrottler.curPeriodStart == 118369502"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() == 118369502);
			}
		});
		invariants6999.add(new Invariant(6531, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118371127570972L || NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118371163690353L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118371127570972L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118371163690353L);
			}
		});
		invariants6999.add(new Invariant(6532, "NameNode.instance.namesystem.lazyPersistFileScrubberTS == 118368505"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() == 118368505);
			}
		});
		invariants6999.add(new Invariant(6533, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime == 118367815"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() == 118367815);
			}
		});
		invariants6999.add(new Invariant(6534, "NameNode.instance.namesystem.startTime == 1731382262907L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() == 1731382262907L);
			}
		});
		invariants6999.add(new Invariant(6535, "blockManagerInstance.blockReportLeaseManager.nextId == 1046953084607022056L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() == 1046953084607022056L);
			}
		});
		invariants6999.add(new Invariant(6536, "blockManagerInstance.bmSafeMode.startTime == 118368467"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() == 118368467);
			}
		});
		invariants6999.add(new Invariant(6537, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 371638960128L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 371638960128L);
			}
		});
		invariants6999.add(new Invariant(6538, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 137273802752L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 137273802752L);
			}
		});
		invariants6999.add(new Invariant(6539, "blockManagerInstance.invalidateBlocks.startupTime == 118367817"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue() == 118367817);
			}
		});
		invariants6999.add(new Invariant(6540, "DataNode.instance.id.infoPort == 43141"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() == 43141);
			}
		});
		invariants6999.add(new Invariant(6541, "DataNode.instance.id.ipcPort == 41197"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() == 41197);
			}
		});
		invariants6999.add(new Invariant(6542, "DataNode.instance.id.nsInfo.cTime == 1731382319811L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() == 1731382319811L);
			}
		});
		invariants6999.add(new Invariant(6543, "DataNode.instance.id.nsInfo.namespaceID == 1696677352"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() == 1696677352);
			}
		});
		invariants6999.add(new Invariant(6544, "DataNode.instance.id.xferPort == 35323"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() == 35323);
			}
		});
		invariants6999.add(new Invariant(6545, "DataNode.instance.lastDiskErrorCheck == 118428666"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() == 118428666);
			}
		});
		invariants6999.add(new Invariant(6546, "DataNode.instance.volumeChecker.lastAllVolumesCheck == 118428659"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() == 118428659);
			}
		});
		invariants6999.add(new Invariant(6547, "DataNode.instance.xserver.balanceThrottler.curPeriodStart == 118427943"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() == 118427943);
			}
		});
		invariants6999.add(new Invariant(6548, "NameNode.instance.namesystem.lazyPersistFileScrubberTS == 118427609"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() == 118427609);
			}
		});
		invariants6999.add(new Invariant(6549, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime == 118426183"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() == 118426183);
			}
		});
		invariants6999.add(new Invariant(6550, "NameNode.instance.namesystem.startTime == 1731382321275L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() == 1731382321275L);
			}
		});
		invariants6999.add(new Invariant(6551, "blockManagerInstance.blockReportLeaseManager.nextId == 218200049256990486L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() == 218200049256990486L);
			}
		});
		invariants6999.add(new Invariant(6552, "blockManagerInstance.bmSafeMode.startTime == 118426825"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() == 118426825);
			}
		});
		invariants6999.add(new Invariant(6553, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 185719406592L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 185719406592L);
			}
		});
		invariants6999.add(new Invariant(6554, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 68736974848L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 68736974848L);
			}
		});
		invariants6999.add(new Invariant(6555, "blockManagerInstance.invalidateBlocks.startupTime == 118426185"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue() == 118426185);
			}
		});
		invariants6999.add(new Invariant(6556, "blockManagerInstance.lastRedundancyCycleTS == 118429828"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118429828);
			}
		});
		invariants6999.add(new Invariant(6557, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 123156 || blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 183285"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 123156 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 183285);
			}
		});
		invariants6999.add(new Invariant(6558, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 185687441408L || blockManagerInstance.heartbeatManager.stats.capacityRemaining == 185708806144L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 185687441408L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 185708806144L);
			}
		});
		invariants6999.add(new Invariant(6559, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 68747550444L || blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 68768855051L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 68747550444L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 68768855051L);
			}
		});
		invariants6999.add(new Invariant(6560, "blockManagerInstance.lastRedundancyCycleTS == 118432828"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118432828);
			}
		});
		invariants6999.add(new Invariant(6561, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 183285"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 183285);
			}
		});
		invariants6999.add(new Invariant(6562, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 185687441408L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 185687441408L);
			}
		});
		invariants6999.add(new Invariant(6563, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 68768855051L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 68768855051L);
			}
		});
		invariants6999.add(new Invariant(6564, "blockManagerInstance.lastRedundancyCycleTS == 118435828"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118435828);
			}
		});
		invariants6999.add(new Invariant(6565, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == 1 || DataNode.instance.data.asyncDiskService.numDeletedBlocks == 52"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == 1 || ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == 52);
			}
		});
		invariants6999.add(new Invariant(6566, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache == 52 || DataNode.instance.data.cacheManager.numBlocksFailedToUncache == 65"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() == 52 || ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() == 65);
			}
		});
		invariants6999.add(new Invariant(6567, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 205996 || blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 212209"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 205996 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 212209);
			}
		});
		invariants6999.add(new Invariant(6568, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 185616859136L || blockManagerInstance.heartbeatManager.stats.capacityRemaining == 185638600704L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 185616859136L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 185638600704L);
			}
		});
		invariants6999.add(new Invariant(6569, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 68817673044L || blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 68839408399L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 68817673044L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 68839408399L);
			}
		});
		invariants6999.add(new Invariant(6570, "blockManagerInstance.lastRedundancyCycleTS == 118444829"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118444829);
			}
		});
		invariants6999.add(new Invariant(6571, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME <= DataNode.instance.data.asyncDiskService.numDeletedBlocks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() <= ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6572, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME != DataNode.instance.data.asyncDiskService.numDeletedBlocks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() != ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6573, "DataNode.instance.data.asyncDiskService.numDeletedBlocks != blockManagerInstance.blockReportLeaseManager.maxPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.maxPending"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6574, "DataNode.instance.data.asyncDiskService.numDeletedBlocks != blockManagerInstance.neededReconstruction.LEVEL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.LEVEL"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6575, "DataNode.instance.data.asyncDiskService.numDeletedBlocks != blockManagerInstance.storagePolicySuite.defaultPolicyID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.storagePolicySuite.defaultPolicyID"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6576, "DataNode.instance.data.asyncDiskService.numDeletedBlocks >= daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants6999.add(new Invariant(6577, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == 52"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == 52);
			}
		});
		invariants6999.add(new Invariant(6578, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 205996"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 205996);
			}
		});
		invariants6999.add(new Invariant(6579, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 185638600704L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 185638600704L);
			}
		});
		invariants6999.add(new Invariant(6580, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 68817673044L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 68817673044L);
			}
		});
		invariants6999.add(new Invariant(6581, "blockManagerInstance.lastRedundancyCycleTS == 118441829"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118441829);
			}
		});
		invariants6999.add(new Invariant(6582, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == 29 || DataNode.instance.data.asyncDiskService.numDeletedBlocks == 52"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == 29 || ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == 52);
			}
		});
		invariants6999.add(new Invariant(6583, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 205996 || blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 210173"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 205996 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 210173);
			}
		});
		invariants6999.add(new Invariant(6584, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 185638600704L || blockManagerInstance.heartbeatManager.stats.capacityRemaining == 185654984704L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 185638600704L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 185654984704L);
			}
		});
		invariants6999.add(new Invariant(6585, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 68801284867L || blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 68817673044L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 68801284867L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 68817673044L);
			}
		});
		invariants6999.add(new Invariant(6586, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME == DataNode.instance.data.asyncDiskService.numDeletedBlocks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6587, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.numDeletedBlocks-1) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.cacheManager.numBlocksCached)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue()-1) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue()));
			}
		});
		invariants6999.add(new Invariant(6588, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 212209"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 212209);
			}
		});
		invariants6999.add(new Invariant(6589, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 185616859136L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 185616859136L);
			}
		});
		invariants6999.add(new Invariant(6590, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 68839408399L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 68839408399L);
			}
		});
		invariants6999.add(new Invariant(6591, "blockManagerInstance.lastRedundancyCycleTS == 118447830"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118447830);
			}
		});
		invariants6999.add(new Invariant(6592, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 123156"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 123156);
			}
		});
		invariants6999.add(new Invariant(6593, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 185708806144L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 185708806144L);
			}
		});
		invariants6999.add(new Invariant(6594, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 68747550444L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 68747550444L);
			}
		});
		invariants6999.add(new Invariant(6595, "blockManagerInstance.lastRedundancyCycleTS == 118432828 || blockManagerInstance.lastRedundancyCycleTS == 118435828"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118432828 || ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118435828);
			}
		});
		invariants6999.add(new Invariant(6596, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == 29"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == 29);
			}
		});
		invariants6999.add(new Invariant(6597, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 185537626112L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 185537626112L);
			}
		});
		invariants6999.add(new Invariant(6598, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 68784429838L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 68784429838L);
			}
		});
		invariants6999.add(new Invariant(6599, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 210173"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 210173);
			}
		});
		invariants6999.add(new Invariant(6600, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 185654984704L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 185654984704L);
			}
		});
		invariants6999.add(new Invariant(6601, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 68801284867L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 68801284867L);
			}
		});
		invariants6999.add(new Invariant(6602, "blockManagerInstance.lastRedundancyCycleTS == 118438829"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118438829);
			}
		});
		invariants6999.add(new Invariant(6603, "blockManagerInstance.lastRedundancyCycleTS == 118441829 || blockManagerInstance.lastRedundancyCycleTS == 118444829"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118441829 || ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118444829);
			}
		});
		invariants6999.add(new Invariant(6604, "blockManagerInstance.lastRedundancyCycleTS == 118438829 || blockManagerInstance.lastRedundancyCycleTS == 118441829"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118438829 || ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118441829);
			}
		});
		invariants6999.add(new Invariant(6605, "DataNode.instance.id.infoPort == 35493"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() == 35493);
			}
		});
		invariants6999.add(new Invariant(6606, "DataNode.instance.id.ipcPort == 43145"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() == 43145);
			}
		});
		invariants6999.add(new Invariant(6607, "DataNode.instance.id.nsInfo.cTime == 1731382458870L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() == 1731382458870L);
			}
		});
		invariants6999.add(new Invariant(6608, "DataNode.instance.id.nsInfo.namespaceID == 1468547079"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() == 1468547079);
			}
		});
		invariants6999.add(new Invariant(6609, "DataNode.instance.id.xferPort == 41619"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() == 41619);
			}
		});
		invariants6999.add(new Invariant(6610, "DataNode.instance.lastDiskErrorCheck == 118570216"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() == 118570216);
			}
		});
		invariants6999.add(new Invariant(6611, "DataNode.instance.storage.namespaceID == 1552351488"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() == 1552351488);
			}
		});
		invariants6999.add(new Invariant(6612, "DataNode.instance.volumeChecker.lastAllVolumesCheck == 118570182"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() == 118570182);
			}
		});
		invariants6999.add(new Invariant(6613, "DataNode.instance.xserver.balanceThrottler.curPeriodStart == 118569215"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() == 118569215);
			}
		});
		invariants6999.add(new Invariant(6614, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118570825038028L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118570825038028L);
			}
		});
		invariants6999.add(new Invariant(6615, "NameNode.instance.namesystem.lazyPersistFileScrubberTS == 118568825"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() == 118568825);
			}
		});
		invariants6999.add(new Invariant(6616, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime == 118567606"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() == 118567606);
			}
		});
		invariants6999.add(new Invariant(6617, "NameNode.instance.namesystem.startTime == 1731382462698L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() == 1731382462698L);
			}
		});
		invariants6999.add(new Invariant(6618, "blockManagerInstance.blockReportLeaseManager.nextId == 1271799686729321727L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() == 1271799686729321727L);
			}
		});
		invariants6999.add(new Invariant(6619, "blockManagerInstance.bmSafeMode.startTime == 118568790"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() == 118568790);
			}
		});
		invariants6999.add(new Invariant(6620, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 277815894016L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 277815894016L);
			}
		});
		invariants6999.add(new Invariant(6621, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 103868579840L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 103868579840L);
			}
		});
		invariants6999.add(new Invariant(6622, "blockManagerInstance.invalidateBlocks.startupTime == 118567610"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue() == 118567610);
			}
		});
		invariants6999.add(new Invariant(6623, "DataNode.instance.id.nsInfo.cTime == 1731382461713L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() == 1731382461713L);
			}
		});
		invariants6999.add(new Invariant(6624, "DataNode.instance.id.nsInfo.namespaceID == 924127513"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() == 924127513);
			}
		});
		invariants6999.add(new Invariant(6625, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118576284270678L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118576284270678L);
			}
		});
		invariants6999.add(new Invariant(6626, "NameNode.instance.namesystem.lazyPersistFileScrubberTS == 118573955"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() == 118573955);
			}
		});
		invariants6999.add(new Invariant(6627, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime == 118573674"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() == 118573674);
			}
		});
		invariants6999.add(new Invariant(6628, "NameNode.instance.namesystem.startTime == 1731382468766L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() == 1731382468766L);
			}
		});
		invariants6999.add(new Invariant(6629, "blockManagerInstance.blockReportLeaseManager.nextId == 6491487498767150841L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() == 6491487498767150841L);
			}
		});
		invariants6999.add(new Invariant(6630, "blockManagerInstance.bmSafeMode.startTime == 118573914"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() == 118573914);
			}
		});
		invariants6999.add(new Invariant(6631, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 277801869312L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 277801869312L);
			}
		});
		invariants6999.add(new Invariant(6632, "blockManagerInstance.heartbeatManager.stats.capacityUsed == 442368"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 442368);
			}
		});
		invariants6999.add(new Invariant(6633, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 103882407936L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 103882407936L);
			}
		});
		invariants6999.add(new Invariant(6634, "blockManagerInstance.invalidateBlocks.startupTime == 118573675"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue() == 118573675);
			}
		});
		invariants6999.add(new Invariant(6635, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118571790313752L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118571790313752L);
			}
		});
		invariants6999.add(new Invariant(6636, "blockManagerInstance.lastRedundancyCycleTS == 118571792"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118571792);
			}
		});
		invariants6999.add(new Invariant(6637, "NameNode.instance.namesystem.fsRunning == NameNode.instance.namesystem.leaseManager.shouldRunMonitor"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.fsRunning"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.shouldRunMonitor"))).booleanValue());
			}
		});
		invariants6999.add(new Invariant(6638, "DataNode.instance.id.nsInfo.cTime == 1731382458870L || DataNode.instance.id.nsInfo.cTime == 1731382461713L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() == 1731382458870L || ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() == 1731382461713L);
			}
		});
		invariants6999.add(new Invariant(6639, "DataNode.instance.id.nsInfo.namespaceID == 924127513 || DataNode.instance.id.nsInfo.namespaceID == 1468547079"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() == 924127513 || ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() == 1468547079);
			}
		});
		invariants6999.add(new Invariant(6640, "NameNode.instance.namesystem.fsImage.lastAppliedTxId == 0 || NameNode.instance.namesystem.fsImage.lastAppliedTxId == 4 || NameNode.instance.namesystem.fsImage.lastAppliedTxId == 50"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() == 4 || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() == 50);
			}
		});
		invariants6999.add(new Invariant(6641, "blockManagerInstance.bmSafeMode.startTime == 0 || blockManagerInstance.bmSafeMode.startTime == 118568790 || blockManagerInstance.bmSafeMode.startTime == 118573914"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() == 118568790 || ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() == 118573914);
			}
		});
		invariants6999.add(new Invariant(6642, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 0 || blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 98304 || blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 147456"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 98304 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 147456);
			}
		});
		invariants6999.add(new Invariant(6643, "blockManagerInstance.heartbeatManager.stats.capacityTotal == 0 || blockManagerInstance.heartbeatManager.stats.capacityTotal == 268200361984L || blockManagerInstance.heartbeatManager.stats.capacityTotal == 402300542976L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue() == 268200361984L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue() == 402300542976L);
			}
		});
		invariants6999.add(new Invariant(6644, "blockManagerInstance.heartbeatManager.stats.capacityUsed >= 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() >= 0);
			}
		});
		invariants6999.add(new Invariant(6645, "blockManagerInstance.heartbeatManager.stats.nodesInService == 0 || blockManagerInstance.heartbeatManager.stats.nodesInService == 2 || blockManagerInstance.heartbeatManager.stats.nodesInService == 3"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() == 2 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() == 3);
			}
		});
		invariants6999.add(new Invariant(6646, "blockManagerInstance.lastRedundancyCycleTS == -1 || blockManagerInstance.lastRedundancyCycleTS == 118571792"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == -1 || ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118571792);
			}
		});
		invariants6999.add(new Invariant(6647, "DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6648, "DataNode.instance.NUM_CORES < DataNode.instance.id.nsInfo.cTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.NUM_CORES"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6649, "DataNode.instance.NUM_CORES < DataNode.instance.id.nsInfo.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.NUM_CORES"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6650, "DataNode.instance.NUM_CORES < NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.NUM_CORES"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6651, "DataNode.instance.NUM_CORES != NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.NUM_CORES"))).intValue() != ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6652, "DataNode.instance.NUM_CORES < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.NUM_CORES"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6653, "DataNode.instance.NUM_CORES < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.NUM_CORES"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6654, "DataNode.instance.NUM_CORES < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.NUM_CORES"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6655, "DataNode.instance.NUM_CORES != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.NUM_CORES"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6656, "DataNode.instance.NUM_CORES != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.NUM_CORES"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6657, "DataNode.instance.NUM_CORES != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.NUM_CORES"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6658, "DataNode.instance.NUM_CORES != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.NUM_CORES"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6659, "DataNode.instance.NUM_CORES != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.NUM_CORES"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6660, "DataNode.instance.NUM_CORES != blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.NUM_CORES"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6661, "DataNode.instance.NUM_CORES != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.NUM_CORES"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6662, "DataNode.instance.NUM_CORES < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.NUM_CORES"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6663, "DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs < DataNode.instance.id.nsInfo.cTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6664, "DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs < DataNode.instance.id.nsInfo.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6665, "DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs > NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6666, "DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs > NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6667, "DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6668, "DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6669, "DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6670, "DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6671, "DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6672, "DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6673, "DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6674, "DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6675, "DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs != blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6676, "DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6677, "DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6678, "DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION != NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue() != ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6679, "DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6680, "DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6681, "DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION != blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6682, "DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6683, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME < DataNode.instance.id.nsInfo.cTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6684, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME < DataNode.instance.id.nsInfo.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6685, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME < NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6686, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME != NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() != ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6687, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6688, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6689, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6690, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6691, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6692, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6693, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6694, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6695, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME != blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6696, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6697, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME != blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6698, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6699, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME < DataNode.instance.id.nsInfo.cTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6700, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME < DataNode.instance.id.nsInfo.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6701, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME < NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6702, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6703, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6704, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6705, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6706, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6707, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6708, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6709, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6710, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME != blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6711, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6712, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6713, "DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS < DataNode.instance.id.nsInfo.cTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6714, "DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS < DataNode.instance.id.nsInfo.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6715, "DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS > NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6716, "DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS > NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6717, "DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6718, "DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6719, "DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6720, "DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6721, "DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6722, "DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6723, "DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6724, "DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6725, "DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS != blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6726, "DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6727, "DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6728, "DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS < DataNode.instance.id.nsInfo.cTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6729, "DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS < DataNode.instance.id.nsInfo.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6730, "DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS > NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6731, "DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS > NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6732, "DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6733, "DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6734, "DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6735, "DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6736, "DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6737, "DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6738, "DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6739, "DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6740, "DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS != blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6741, "DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6742, "DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6743, "DataNode.instance.data.asyncDiskService.numDeletedBlocks <= NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() <= ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6744, "DataNode.instance.data.asyncDiskService.numDeletedBlocks != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6745, "DataNode.instance.data.asyncDiskService.numDeletedBlocks <= blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6746, "DataNode.instance.data.asyncDiskService.numDeletedBlocks <= blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6747, "DataNode.instance.data.asyncDiskService.numDeletedBlocks <= blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6748, "DataNode.instance.data.asyncDiskService.numDeletedBlocks <= blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6749, "DataNode.instance.data.asyncDiskService.numDeletedBlocks <= blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6750, "DataNode.instance.data.asyncDiskService.numDeletedBlocks <= blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6751, "DataNode.instance.data.asyncDiskService.numDeletedBlocks <= blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6752, "DataNode.instance.data.cacheManager.revocationMs > NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationMs"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6753, "DataNode.instance.data.cacheManager.revocationMs < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationMs"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6754, "DataNode.instance.data.cacheManager.revocationMs != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6755, "DataNode.instance.data.cacheManager.revocationMs < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6756, "DataNode.instance.data.cacheManager.revocationPollingMs > NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationPollingMs"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6757, "DataNode.instance.data.cacheManager.revocationPollingMs < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationPollingMs"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6758, "DataNode.instance.data.cacheManager.revocationPollingMs != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationPollingMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6759, "DataNode.instance.data.cacheManager.revocationPollingMs != blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationPollingMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6760, "DataNode.instance.data.cacheManager.revocationPollingMs < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationPollingMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6761, "DataNode.instance.data.maxDataLength > NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.maxDataLength"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6762, "DataNode.instance.data.maxDataLength < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.maxDataLength"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6763, "DataNode.instance.data.maxDataLength != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.maxDataLength"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6764, "DataNode.instance.data.maxDataLength < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.maxDataLength"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6765, "DataNode.instance.data.smallBufferSize > NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.smallBufferSize"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6766, "DataNode.instance.data.smallBufferSize < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.smallBufferSize"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6767, "DataNode.instance.data.smallBufferSize != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.smallBufferSize"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6768, "DataNode.instance.data.smallBufferSize != blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.smallBufferSize"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6769, "DataNode.instance.data.smallBufferSize < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.smallBufferSize"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6770, "DataNode.instance.data.volsConfigured != NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue() != ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6771, "DataNode.instance.data.volsConfigured != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6772, "DataNode.instance.data.volsConfigured != blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6773, "DataNode.instance.directoryScanner.MILLIS_PER_SECOND < DataNode.instance.id.nsInfo.cTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.MILLIS_PER_SECOND"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6774, "DataNode.instance.directoryScanner.MILLIS_PER_SECOND < DataNode.instance.id.nsInfo.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.MILLIS_PER_SECOND"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6775, "DataNode.instance.directoryScanner.MILLIS_PER_SECOND > NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.MILLIS_PER_SECOND"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6776, "DataNode.instance.directoryScanner.MILLIS_PER_SECOND > NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.MILLIS_PER_SECOND"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6777, "DataNode.instance.directoryScanner.MILLIS_PER_SECOND < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.MILLIS_PER_SECOND"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6778, "DataNode.instance.directoryScanner.MILLIS_PER_SECOND < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.MILLIS_PER_SECOND"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6779, "DataNode.instance.directoryScanner.MILLIS_PER_SECOND < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.MILLIS_PER_SECOND"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6780, "DataNode.instance.directoryScanner.MILLIS_PER_SECOND != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.MILLIS_PER_SECOND"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6781, "DataNode.instance.directoryScanner.MILLIS_PER_SECOND != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.MILLIS_PER_SECOND"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6782, "DataNode.instance.directoryScanner.MILLIS_PER_SECOND != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.MILLIS_PER_SECOND"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6783, "DataNode.instance.directoryScanner.MILLIS_PER_SECOND != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.MILLIS_PER_SECOND"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6784, "DataNode.instance.directoryScanner.MILLIS_PER_SECOND != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.MILLIS_PER_SECOND"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6785, "DataNode.instance.directoryScanner.MILLIS_PER_SECOND != blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.MILLIS_PER_SECOND"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6786, "DataNode.instance.directoryScanner.MILLIS_PER_SECOND != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.MILLIS_PER_SECOND"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6787, "DataNode.instance.directoryScanner.MILLIS_PER_SECOND < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.MILLIS_PER_SECOND"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6788, "DataNode.instance.directoryScanner.scanPeriodMsecs < DataNode.instance.id.nsInfo.cTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.scanPeriodMsecs"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6789, "DataNode.instance.directoryScanner.scanPeriodMsecs < DataNode.instance.id.nsInfo.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.scanPeriodMsecs"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6790, "DataNode.instance.directoryScanner.scanPeriodMsecs > NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.scanPeriodMsecs"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6791, "DataNode.instance.directoryScanner.scanPeriodMsecs > NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.scanPeriodMsecs"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6792, "DataNode.instance.directoryScanner.scanPeriodMsecs < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.scanPeriodMsecs"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6793, "DataNode.instance.directoryScanner.scanPeriodMsecs < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.scanPeriodMsecs"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6794, "DataNode.instance.directoryScanner.scanPeriodMsecs < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.scanPeriodMsecs"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6795, "DataNode.instance.directoryScanner.scanPeriodMsecs != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.scanPeriodMsecs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6796, "DataNode.instance.directoryScanner.scanPeriodMsecs != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.scanPeriodMsecs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6797, "DataNode.instance.directoryScanner.scanPeriodMsecs != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.scanPeriodMsecs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6798, "DataNode.instance.directoryScanner.scanPeriodMsecs != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.scanPeriodMsecs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6799, "DataNode.instance.directoryScanner.scanPeriodMsecs != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.scanPeriodMsecs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6800, "DataNode.instance.directoryScanner.scanPeriodMsecs < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.scanPeriodMsecs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6801, "DataNode.instance.diskBalancer.bandwidth < DataNode.instance.id.nsInfo.cTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.bandwidth"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6802, "DataNode.instance.diskBalancer.bandwidth < DataNode.instance.id.nsInfo.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.bandwidth"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6803, "DataNode.instance.diskBalancer.bandwidth < NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.bandwidth"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6804, "DataNode.instance.diskBalancer.bandwidth != NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.bandwidth"))).intValue() != ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6805, "DataNode.instance.diskBalancer.bandwidth < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.bandwidth"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6806, "DataNode.instance.diskBalancer.bandwidth < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.bandwidth"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6807, "DataNode.instance.diskBalancer.bandwidth < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.bandwidth"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6808, "DataNode.instance.diskBalancer.bandwidth != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.bandwidth"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6809, "DataNode.instance.diskBalancer.bandwidth != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.bandwidth"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6810, "DataNode.instance.diskBalancer.bandwidth != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.bandwidth"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6811, "DataNode.instance.diskBalancer.bandwidth != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.bandwidth"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6812, "DataNode.instance.diskBalancer.bandwidth != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.bandwidth"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6813, "DataNode.instance.diskBalancer.bandwidth != blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.bandwidth"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6814, "DataNode.instance.diskBalancer.bandwidth != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.bandwidth"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6815, "DataNode.instance.diskBalancer.bandwidth < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.bandwidth"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6816, "DataNode.instance.diskBalancer.planValidityInterval < DataNode.instance.id.nsInfo.cTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.planValidityInterval"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6817, "DataNode.instance.diskBalancer.planValidityInterval < DataNode.instance.id.nsInfo.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.planValidityInterval"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6818, "DataNode.instance.diskBalancer.planValidityInterval > NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.planValidityInterval"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6819, "DataNode.instance.diskBalancer.planValidityInterval > NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.planValidityInterval"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6820, "DataNode.instance.diskBalancer.planValidityInterval < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.planValidityInterval"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6821, "DataNode.instance.diskBalancer.planValidityInterval < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.planValidityInterval"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6822, "DataNode.instance.diskBalancer.planValidityInterval < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.planValidityInterval"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6823, "DataNode.instance.diskBalancer.planValidityInterval != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.planValidityInterval"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6824, "DataNode.instance.diskBalancer.planValidityInterval != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.planValidityInterval"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6825, "DataNode.instance.diskBalancer.planValidityInterval != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.planValidityInterval"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6826, "DataNode.instance.diskBalancer.planValidityInterval != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.planValidityInterval"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6827, "DataNode.instance.diskBalancer.planValidityInterval != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.planValidityInterval"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6828, "DataNode.instance.diskBalancer.planValidityInterval < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.planValidityInterval"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6829, "DataNode.instance.dnConf.blockReportSplitThreshold > NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportSplitThreshold"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6830, "DataNode.instance.dnConf.blockReportSplitThreshold < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportSplitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6831, "DataNode.instance.dnConf.blockReportSplitThreshold != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportSplitThreshold"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6832, "DataNode.instance.dnConf.blockReportSplitThreshold < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportSplitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6833, "DataNode.instance.dnConf.bpReadyTimeout != NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.bpReadyTimeout"))).intValue() != ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6834, "DataNode.instance.dnConf.bpReadyTimeout < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.bpReadyTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6835, "DataNode.instance.dnConf.bpReadyTimeout != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.bpReadyTimeout"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6836, "DataNode.instance.dnConf.bpReadyTimeout != blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.bpReadyTimeout"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6837, "DataNode.instance.dnConf.bpReadyTimeout < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.bpReadyTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6838, "DataNode.instance.dnConf.cacheReportInterval > NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.cacheReportInterval"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6839, "DataNode.instance.dnConf.cacheReportInterval < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.cacheReportInterval"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6840, "DataNode.instance.dnConf.cacheReportInterval != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.cacheReportInterval"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6841, "DataNode.instance.dnConf.cacheReportInterval != blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.cacheReportInterval"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6842, "DataNode.instance.dnConf.cacheReportInterval < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.cacheReportInterval"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6843, "DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs > NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6844, "DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6845, "DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6846, "DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs != blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6847, "DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6848, "DataNode.instance.dnConf.heartBeatInterval > NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.heartBeatInterval"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6849, "DataNode.instance.dnConf.heartBeatInterval < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.heartBeatInterval"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6850, "DataNode.instance.dnConf.heartBeatInterval != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.heartBeatInterval"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6851, "DataNode.instance.dnConf.heartBeatInterval != blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.heartBeatInterval"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6852, "DataNode.instance.dnConf.heartBeatInterval < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.heartBeatInterval"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6853, "DataNode.instance.dnConf.lifelineIntervalMs > NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.lifelineIntervalMs"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6854, "DataNode.instance.dnConf.lifelineIntervalMs < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.lifelineIntervalMs"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6855, "DataNode.instance.dnConf.lifelineIntervalMs != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.lifelineIntervalMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6856, "DataNode.instance.dnConf.lifelineIntervalMs != blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.lifelineIntervalMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6857, "DataNode.instance.dnConf.lifelineIntervalMs < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.lifelineIntervalMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6858, "DataNode.instance.dnConf.outliersReportIntervalMs > NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.outliersReportIntervalMs"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6859, "DataNode.instance.dnConf.outliersReportIntervalMs < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.outliersReportIntervalMs"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6860, "DataNode.instance.dnConf.outliersReportIntervalMs != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.outliersReportIntervalMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6861, "DataNode.instance.dnConf.outliersReportIntervalMs < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.outliersReportIntervalMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6862, "DataNode.instance.dnConf.readaheadLength > NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.readaheadLength"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6863, "DataNode.instance.dnConf.readaheadLength < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.readaheadLength"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6864, "DataNode.instance.dnConf.readaheadLength != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.readaheadLength"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6865, "DataNode.instance.dnConf.readaheadLength < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.readaheadLength"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6866, "DataNode.instance.dnConf.restartReplicaExpiry > NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.restartReplicaExpiry"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6867, "DataNode.instance.dnConf.restartReplicaExpiry < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.restartReplicaExpiry"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6868, "DataNode.instance.dnConf.restartReplicaExpiry != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.restartReplicaExpiry"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6869, "DataNode.instance.dnConf.restartReplicaExpiry != blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.restartReplicaExpiry"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6870, "DataNode.instance.dnConf.restartReplicaExpiry < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.restartReplicaExpiry"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6871, "DataNode.instance.dnConf.socketKeepaliveTimeout > NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketKeepaliveTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6872, "DataNode.instance.dnConf.socketKeepaliveTimeout < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketKeepaliveTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6873, "DataNode.instance.dnConf.socketKeepaliveTimeout != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketKeepaliveTimeout"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6874, "DataNode.instance.dnConf.socketKeepaliveTimeout != blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketKeepaliveTimeout"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6875, "DataNode.instance.dnConf.socketKeepaliveTimeout < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketKeepaliveTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6876, "DataNode.instance.dnConf.socketTimeout > NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6877, "DataNode.instance.dnConf.socketTimeout < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6878, "DataNode.instance.dnConf.socketTimeout != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketTimeout"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6879, "DataNode.instance.dnConf.socketTimeout != blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketTimeout"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6880, "DataNode.instance.dnConf.socketTimeout < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6881, "DataNode.instance.dnConf.socketWriteTimeout > NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketWriteTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6882, "DataNode.instance.dnConf.socketWriteTimeout < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketWriteTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6883, "DataNode.instance.dnConf.socketWriteTimeout != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketWriteTimeout"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6884, "DataNode.instance.dnConf.socketWriteTimeout < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketWriteTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6885, "DataNode.instance.id.infoPort < DataNode.instance.id.nsInfo.cTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6886, "DataNode.instance.id.infoPort < DataNode.instance.id.nsInfo.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6887, "DataNode.instance.id.infoPort > NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6888, "DataNode.instance.id.infoPort > NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6889, "DataNode.instance.id.infoPort < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6890, "DataNode.instance.id.infoPort < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6891, "DataNode.instance.id.infoPort < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6892, "DataNode.instance.id.infoPort != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6893, "DataNode.instance.id.infoPort != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6894, "DataNode.instance.id.infoPort != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6895, "DataNode.instance.id.infoPort != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6896, "DataNode.instance.id.infoPort != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6897, "DataNode.instance.id.infoPort != blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6898, "DataNode.instance.id.infoPort != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6899, "DataNode.instance.id.infoPort < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6900, "DataNode.instance.id.ipcPort < DataNode.instance.id.nsInfo.cTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6901, "DataNode.instance.id.ipcPort < DataNode.instance.id.nsInfo.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6902, "DataNode.instance.id.ipcPort > NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6903, "DataNode.instance.id.ipcPort > NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6904, "DataNode.instance.id.ipcPort < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6905, "DataNode.instance.id.ipcPort < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6906, "DataNode.instance.id.ipcPort < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6907, "DataNode.instance.id.ipcPort != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6908, "DataNode.instance.id.ipcPort != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6909, "DataNode.instance.id.ipcPort != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6910, "DataNode.instance.id.ipcPort != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6911, "DataNode.instance.id.ipcPort != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6912, "DataNode.instance.id.ipcPort != blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6913, "DataNode.instance.id.ipcPort != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6914, "DataNode.instance.id.ipcPort < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6915, "DataNode.instance.id.nsInfo.cTime > DataNode.instance.id.xferPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6916, "DataNode.instance.id.nsInfo.cTime > DataNode.instance.lastDiskErrorCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6917, "DataNode.instance.id.nsInfo.cTime > DataNode.instance.shortCircuitRegistry.SHM_LENGTH"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.shortCircuitRegistry.SHM_LENGTH"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6918, "DataNode.instance.id.nsInfo.cTime > NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6919, "DataNode.instance.id.nsInfo.cTime > NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6920, "DataNode.instance.id.nsInfo.cTime != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6921, "DataNode.instance.id.nsInfo.cTime > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6922, "DataNode.instance.id.nsInfo.layoutVersion < NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6923, "DataNode.instance.id.nsInfo.layoutVersion < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6924, "DataNode.instance.id.nsInfo.layoutVersion != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.layoutVersion"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6925, "DataNode.instance.id.nsInfo.layoutVersion < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6926, "DataNode.instance.id.nsInfo.namespaceID > DataNode.instance.id.xferPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6927, "DataNode.instance.id.nsInfo.namespaceID > DataNode.instance.lastDiskErrorCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6928, "DataNode.instance.id.nsInfo.namespaceID > DataNode.instance.shortCircuitRegistry.SHM_LENGTH"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.shortCircuitRegistry.SHM_LENGTH"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6929, "DataNode.instance.id.nsInfo.namespaceID < DataNode.instance.storage.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6930, "DataNode.instance.id.nsInfo.namespaceID > NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6931, "DataNode.instance.id.nsInfo.namespaceID > NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6932, "DataNode.instance.id.nsInfo.namespaceID != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6933, "DataNode.instance.id.nsInfo.namespaceID > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6934, "DataNode.instance.id.xferPort > NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6935, "DataNode.instance.id.xferPort > NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6936, "DataNode.instance.id.xferPort < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6937, "DataNode.instance.id.xferPort < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6938, "DataNode.instance.id.xferPort < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6939, "DataNode.instance.id.xferPort != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6940, "DataNode.instance.id.xferPort != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6941, "DataNode.instance.id.xferPort != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6942, "DataNode.instance.id.xferPort != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6943, "DataNode.instance.id.xferPort != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6944, "DataNode.instance.id.xferPort != blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6945, "DataNode.instance.id.xferPort != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6946, "DataNode.instance.id.xferPort < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6947, "DataNode.instance.lastDiskErrorCheck > NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6948, "DataNode.instance.lastDiskErrorCheck > NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6949, "DataNode.instance.lastDiskErrorCheck != NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() != ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6950, "DataNode.instance.lastDiskErrorCheck != NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() != ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6951, "DataNode.instance.lastDiskErrorCheck < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6952, "DataNode.instance.lastDiskErrorCheck != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6953, "DataNode.instance.lastDiskErrorCheck != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6954, "DataNode.instance.lastDiskErrorCheck != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6955, "DataNode.instance.lastDiskErrorCheck != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6956, "DataNode.instance.lastDiskErrorCheck != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6957, "DataNode.instance.lastDiskErrorCheck != blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6958, "DataNode.instance.shortCircuitRegistry.SHM_LENGTH > NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.shortCircuitRegistry.SHM_LENGTH"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6959, "DataNode.instance.shortCircuitRegistry.SHM_LENGTH > NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.shortCircuitRegistry.SHM_LENGTH"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6960, "DataNode.instance.shortCircuitRegistry.SHM_LENGTH < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.shortCircuitRegistry.SHM_LENGTH"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6961, "DataNode.instance.shortCircuitRegistry.SHM_LENGTH < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.shortCircuitRegistry.SHM_LENGTH"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6962, "DataNode.instance.shortCircuitRegistry.SHM_LENGTH < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.shortCircuitRegistry.SHM_LENGTH"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6963, "DataNode.instance.shortCircuitRegistry.SHM_LENGTH != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.shortCircuitRegistry.SHM_LENGTH"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6964, "DataNode.instance.shortCircuitRegistry.SHM_LENGTH != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.shortCircuitRegistry.SHM_LENGTH"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6965, "DataNode.instance.shortCircuitRegistry.SHM_LENGTH != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.shortCircuitRegistry.SHM_LENGTH"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6966, "DataNode.instance.shortCircuitRegistry.SHM_LENGTH != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.shortCircuitRegistry.SHM_LENGTH"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6967, "DataNode.instance.shortCircuitRegistry.SHM_LENGTH != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.shortCircuitRegistry.SHM_LENGTH"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6968, "DataNode.instance.shortCircuitRegistry.SHM_LENGTH != blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.shortCircuitRegistry.SHM_LENGTH"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6969, "DataNode.instance.shortCircuitRegistry.SHM_LENGTH != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.shortCircuitRegistry.SHM_LENGTH"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6970, "DataNode.instance.shortCircuitRegistry.SHM_LENGTH < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.shortCircuitRegistry.SHM_LENGTH"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6971, "DataNode.instance.storage.layoutVersion < NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6972, "DataNode.instance.storage.layoutVersion != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6973, "DataNode.instance.storage.namespaceID > NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6974, "DataNode.instance.storage.namespaceID > NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6975, "DataNode.instance.storage.namespaceID > NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6976, "DataNode.instance.storage.namespaceID > NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6977, "DataNode.instance.storage.namespaceID != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6978, "DataNode.instance.storage.namespaceID > blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6979, "DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout > NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6980, "DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6981, "DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6982, "DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6983, "DataNode.instance.volumeChecker.lastAllVolumesCheck > NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6984, "DataNode.instance.volumeChecker.lastAllVolumesCheck != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6985, "DataNode.instance.xserver.balanceThrottler.bytesPerPeriod > NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.bytesPerPeriod"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6986, "DataNode.instance.xserver.balanceThrottler.bytesPerPeriod < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.bytesPerPeriod"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6987, "DataNode.instance.xserver.balanceThrottler.bytesPerPeriod != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.bytesPerPeriod"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6988, "DataNode.instance.xserver.balanceThrottler.bytesPerPeriod < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.bytesPerPeriod"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6989, "DataNode.instance.xserver.balanceThrottler.curPeriodStart > NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6990, "DataNode.instance.xserver.balanceThrottler.curPeriodStart != NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() != ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6991, "DataNode.instance.xserver.balanceThrottler.curPeriodStart != NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() != ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6992, "DataNode.instance.xserver.balanceThrottler.curPeriodStart != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6993, "DataNode.instance.xserver.balanceThrottler.curPeriodStart != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6994, "DataNode.instance.xserver.balanceThrottler.maxThreads >= NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.maxThreads"))).intValue() >= ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6995, "DataNode.instance.xserver.balanceThrottler.maxThreads < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.maxThreads"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6996, "DataNode.instance.xserver.balanceThrottler.maxThreads != blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.maxThreads"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6997, "DataNode.instance.xserver.balanceThrottler.maxThreads != blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.maxThreads"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6998, "DataNode.instance.xserver.balanceThrottler.maxThreads < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.maxThreads"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants6999.add(new Invariant(6999, "DataNode.instance.xserver.balanceThrottler.periodExtension > NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.periodExtension"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
	}
	static {
installInv6999();	}
}
