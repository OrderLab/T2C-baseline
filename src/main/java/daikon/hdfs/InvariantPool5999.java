package daikon.hdfs;
import daikon.*;
import java.util.Set;
import java.util.ArrayList;
import java.util.List;
//this class is automatically generated by our scripts
public class InvariantPool5999{

	public static List<Invariant> invariants5999 = new ArrayList<>();

	public static void installInv5999(){
		invariants5999.add(new Invariant(5000, "DataNode.instance.dnConf.blockReportInterval < NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportInterval"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5001, "DataNode.instance.dnConf.blockReportInterval < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportInterval"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5002, "DataNode.instance.dnConf.blockReportInterval < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportInterval"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5003, "DataNode.instance.dnConf.blockReportInterval != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportInterval"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5004, "DataNode.instance.dnConf.blockReportSplitThreshold < DataNode.instance.id.nsInfo.cTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportSplitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5005, "DataNode.instance.dnConf.blockReportSplitThreshold < DataNode.instance.id.nsInfo.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportSplitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5006, "DataNode.instance.dnConf.blockReportSplitThreshold < DataNode.instance.xserver.balanceThrottler.curPeriodStart"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportSplitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5007, "DataNode.instance.dnConf.blockReportSplitThreshold > NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportSplitThreshold"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5008, "DataNode.instance.dnConf.blockReportSplitThreshold < NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportSplitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5009, "DataNode.instance.dnConf.blockReportSplitThreshold < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportSplitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5010, "DataNode.instance.dnConf.blockReportSplitThreshold < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportSplitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5011, "DataNode.instance.dnConf.blockReportSplitThreshold != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportSplitThreshold"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5012, "DataNode.instance.dnConf.bpReadyTimeout < DataNode.instance.id.nsInfo.cTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.bpReadyTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5013, "DataNode.instance.dnConf.bpReadyTimeout < DataNode.instance.id.nsInfo.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.bpReadyTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5014, "DataNode.instance.dnConf.bpReadyTimeout < DataNode.instance.xserver.balanceThrottler.curPeriodStart"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.bpReadyTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5015, "DataNode.instance.dnConf.bpReadyTimeout < NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.bpReadyTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5016, "DataNode.instance.dnConf.bpReadyTimeout < NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.bpReadyTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5017, "DataNode.instance.dnConf.bpReadyTimeout < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.bpReadyTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5018, "DataNode.instance.dnConf.bpReadyTimeout < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.bpReadyTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5019, "DataNode.instance.dnConf.bpReadyTimeout != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.bpReadyTimeout"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5020, "DataNode.instance.dnConf.cacheReportInterval < DataNode.instance.id.nsInfo.cTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.cacheReportInterval"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5021, "DataNode.instance.dnConf.cacheReportInterval < DataNode.instance.id.nsInfo.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.cacheReportInterval"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5022, "DataNode.instance.dnConf.cacheReportInterval < DataNode.instance.xserver.balanceThrottler.curPeriodStart"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.cacheReportInterval"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5023, "DataNode.instance.dnConf.cacheReportInterval > NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.cacheReportInterval"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5024, "DataNode.instance.dnConf.cacheReportInterval < NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.cacheReportInterval"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5025, "DataNode.instance.dnConf.cacheReportInterval < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.cacheReportInterval"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5026, "DataNode.instance.dnConf.cacheReportInterval < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.cacheReportInterval"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5027, "DataNode.instance.dnConf.cacheReportInterval != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.cacheReportInterval"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5028, "DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs < DataNode.instance.id.nsInfo.cTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5029, "DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs < DataNode.instance.id.nsInfo.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5030, "DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs < DataNode.instance.xserver.balanceThrottler.curPeriodStart"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5031, "DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs > NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5032, "DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs < NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5033, "DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5034, "DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5035, "DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5036, "DataNode.instance.dnConf.heartBeatInterval < DataNode.instance.id.nsInfo.cTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.heartBeatInterval"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5037, "DataNode.instance.dnConf.heartBeatInterval < DataNode.instance.id.nsInfo.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.heartBeatInterval"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5038, "DataNode.instance.dnConf.heartBeatInterval < DataNode.instance.xserver.balanceThrottler.curPeriodStart"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.heartBeatInterval"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5039, "DataNode.instance.dnConf.heartBeatInterval > NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.heartBeatInterval"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5040, "DataNode.instance.dnConf.heartBeatInterval < NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.heartBeatInterval"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5041, "DataNode.instance.dnConf.heartBeatInterval < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.heartBeatInterval"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5042, "DataNode.instance.dnConf.heartBeatInterval < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.heartBeatInterval"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5043, "DataNode.instance.dnConf.heartBeatInterval != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.heartBeatInterval"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5044, "DataNode.instance.dnConf.ibrInterval < DataNode.instance.id.nsInfo.cTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5045, "DataNode.instance.dnConf.ibrInterval < DataNode.instance.id.nsInfo.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5046, "DataNode.instance.dnConf.ibrInterval < DataNode.instance.xserver.balanceThrottler.curPeriodStart"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5047, "DataNode.instance.dnConf.ibrInterval < NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5048, "DataNode.instance.dnConf.ibrInterval < NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5049, "DataNode.instance.dnConf.ibrInterval < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5050, "DataNode.instance.dnConf.ibrInterval < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5051, "DataNode.instance.dnConf.ibrInterval <= blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5052, "DataNode.instance.dnConf.lifelineIntervalMs < DataNode.instance.id.nsInfo.cTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.lifelineIntervalMs"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5053, "DataNode.instance.dnConf.lifelineIntervalMs < DataNode.instance.id.nsInfo.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.lifelineIntervalMs"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5054, "DataNode.instance.dnConf.lifelineIntervalMs < DataNode.instance.xserver.balanceThrottler.curPeriodStart"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.lifelineIntervalMs"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5055, "DataNode.instance.dnConf.lifelineIntervalMs > NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.lifelineIntervalMs"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5056, "DataNode.instance.dnConf.lifelineIntervalMs < NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.lifelineIntervalMs"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5057, "DataNode.instance.dnConf.lifelineIntervalMs < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.lifelineIntervalMs"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5058, "DataNode.instance.dnConf.lifelineIntervalMs < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.lifelineIntervalMs"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5059, "DataNode.instance.dnConf.lifelineIntervalMs != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.lifelineIntervalMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5060, "DataNode.instance.dnConf.maxDataLength < DataNode.instance.id.nsInfo.cTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.maxDataLength"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5061, "DataNode.instance.dnConf.maxDataLength < DataNode.instance.id.nsInfo.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.maxDataLength"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5062, "DataNode.instance.dnConf.maxDataLength < DataNode.instance.xserver.balanceThrottler.curPeriodStart"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.maxDataLength"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5063, "DataNode.instance.dnConf.maxDataLength > NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.maxDataLength"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5064, "DataNode.instance.dnConf.maxDataLength < NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.maxDataLength"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5065, "DataNode.instance.dnConf.maxDataLength < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.maxDataLength"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5066, "DataNode.instance.dnConf.maxDataLength < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.maxDataLength"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5067, "DataNode.instance.dnConf.maxDataLength != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.maxDataLength"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5068, "DataNode.instance.dnConf.outliersReportIntervalMs < DataNode.instance.id.nsInfo.cTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.outliersReportIntervalMs"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5069, "DataNode.instance.dnConf.outliersReportIntervalMs < DataNode.instance.id.nsInfo.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.outliersReportIntervalMs"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5070, "DataNode.instance.dnConf.outliersReportIntervalMs < DataNode.instance.xserver.balanceThrottler.curPeriodStart"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.outliersReportIntervalMs"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5071, "DataNode.instance.dnConf.outliersReportIntervalMs > NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.outliersReportIntervalMs"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5072, "DataNode.instance.dnConf.outliersReportIntervalMs < NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.outliersReportIntervalMs"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5073, "DataNode.instance.dnConf.outliersReportIntervalMs < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.outliersReportIntervalMs"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5074, "DataNode.instance.dnConf.outliersReportIntervalMs < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.outliersReportIntervalMs"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5075, "DataNode.instance.dnConf.outliersReportIntervalMs != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.outliersReportIntervalMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5076, "DataNode.instance.dnConf.readaheadLength < DataNode.instance.id.nsInfo.cTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.readaheadLength"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5077, "DataNode.instance.dnConf.readaheadLength < DataNode.instance.id.nsInfo.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.readaheadLength"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5078, "DataNode.instance.dnConf.readaheadLength < DataNode.instance.xserver.balanceThrottler.curPeriodStart"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.readaheadLength"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5079, "DataNode.instance.dnConf.readaheadLength > NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.readaheadLength"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5080, "DataNode.instance.dnConf.readaheadLength < NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.readaheadLength"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5081, "DataNode.instance.dnConf.readaheadLength < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.readaheadLength"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5082, "DataNode.instance.dnConf.readaheadLength < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.readaheadLength"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5083, "DataNode.instance.dnConf.readaheadLength != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.readaheadLength"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5084, "DataNode.instance.dnConf.restartReplicaExpiry < DataNode.instance.id.nsInfo.cTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.restartReplicaExpiry"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5085, "DataNode.instance.dnConf.restartReplicaExpiry < DataNode.instance.id.nsInfo.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.restartReplicaExpiry"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5086, "DataNode.instance.dnConf.restartReplicaExpiry < DataNode.instance.xserver.balanceThrottler.curPeriodStart"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.restartReplicaExpiry"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5087, "DataNode.instance.dnConf.restartReplicaExpiry > NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.restartReplicaExpiry"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5088, "DataNode.instance.dnConf.restartReplicaExpiry < NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.restartReplicaExpiry"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5089, "DataNode.instance.dnConf.restartReplicaExpiry < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.restartReplicaExpiry"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5090, "DataNode.instance.dnConf.restartReplicaExpiry < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.restartReplicaExpiry"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5091, "DataNode.instance.dnConf.restartReplicaExpiry != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.restartReplicaExpiry"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5092, "DataNode.instance.dnConf.socketKeepaliveTimeout < DataNode.instance.id.nsInfo.cTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketKeepaliveTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5093, "DataNode.instance.dnConf.socketKeepaliveTimeout < DataNode.instance.id.nsInfo.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketKeepaliveTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5094, "DataNode.instance.dnConf.socketKeepaliveTimeout < DataNode.instance.xserver.balanceThrottler.curPeriodStart"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketKeepaliveTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5095, "DataNode.instance.dnConf.socketKeepaliveTimeout > NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketKeepaliveTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5096, "DataNode.instance.dnConf.socketKeepaliveTimeout < NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketKeepaliveTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5097, "DataNode.instance.dnConf.socketKeepaliveTimeout < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketKeepaliveTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5098, "DataNode.instance.dnConf.socketKeepaliveTimeout < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketKeepaliveTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5099, "DataNode.instance.dnConf.socketKeepaliveTimeout != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketKeepaliveTimeout"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5100, "DataNode.instance.dnConf.socketTimeout < DataNode.instance.id.nsInfo.cTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5101, "DataNode.instance.dnConf.socketTimeout < DataNode.instance.id.nsInfo.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5102, "DataNode.instance.dnConf.socketTimeout < DataNode.instance.xserver.balanceThrottler.curPeriodStart"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5103, "DataNode.instance.dnConf.socketTimeout > NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5104, "DataNode.instance.dnConf.socketTimeout < NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5105, "DataNode.instance.dnConf.socketTimeout < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5106, "DataNode.instance.dnConf.socketTimeout < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5107, "DataNode.instance.dnConf.socketTimeout != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketTimeout"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5108, "DataNode.instance.dnConf.socketWriteTimeout < DataNode.instance.id.nsInfo.cTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketWriteTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5109, "DataNode.instance.dnConf.socketWriteTimeout < DataNode.instance.id.nsInfo.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketWriteTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5110, "DataNode.instance.dnConf.socketWriteTimeout < DataNode.instance.xserver.balanceThrottler.curPeriodStart"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketWriteTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5111, "DataNode.instance.dnConf.socketWriteTimeout > NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketWriteTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5112, "DataNode.instance.dnConf.socketWriteTimeout < NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketWriteTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5113, "DataNode.instance.dnConf.socketWriteTimeout < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketWriteTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5114, "DataNode.instance.dnConf.socketWriteTimeout < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketWriteTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5115, "DataNode.instance.dnConf.socketWriteTimeout != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketWriteTimeout"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5116, "DataNode.instance.dnConf.volsConfigured != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.volsConfigured"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5117, "DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS < DataNode.instance.id.nsInfo.cTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5118, "DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS < DataNode.instance.id.nsInfo.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5119, "DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS < DataNode.instance.xserver.balanceThrottler.curPeriodStart"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5120, "DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS < NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5121, "DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS < NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5122, "DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5123, "DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5124, "DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5125, "DataNode.instance.httpServer.HTTP_MAX_THREADS < DataNode.instance.id.nsInfo.cTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_MAX_THREADS"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5126, "DataNode.instance.httpServer.HTTP_MAX_THREADS < DataNode.instance.id.nsInfo.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_MAX_THREADS"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5127, "DataNode.instance.httpServer.HTTP_MAX_THREADS < DataNode.instance.xserver.balanceThrottler.curPeriodStart"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_MAX_THREADS"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5128, "DataNode.instance.httpServer.HTTP_MAX_THREADS < NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_MAX_THREADS"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5129, "DataNode.instance.httpServer.HTTP_MAX_THREADS < NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_MAX_THREADS"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5130, "DataNode.instance.httpServer.HTTP_MAX_THREADS < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_MAX_THREADS"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5131, "DataNode.instance.httpServer.HTTP_MAX_THREADS < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_MAX_THREADS"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5132, "DataNode.instance.httpServer.HTTP_MAX_THREADS != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_MAX_THREADS"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5133, "DataNode.instance.id.nsInfo.cTime > DataNode.instance.id.nsInfo.layoutVersion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.layoutVersion"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5134, "DataNode.instance.id.nsInfo.cTime > DataNode.instance.id.nsInfo.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5135, "DataNode.instance.id.nsInfo.cTime > DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5136, "DataNode.instance.id.nsInfo.cTime > DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5137, "DataNode.instance.id.nsInfo.cTime > DataNode.instance.xserver.balanceThrottler.bytesPerPeriod"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.bytesPerPeriod"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5138, "DataNode.instance.id.nsInfo.cTime > DataNode.instance.xserver.balanceThrottler.curPeriodStart"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5139, "DataNode.instance.id.nsInfo.cTime > DataNode.instance.xserver.balanceThrottler.maxThreads"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.maxThreads"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5140, "DataNode.instance.id.nsInfo.cTime > DataNode.instance.xserver.balanceThrottler.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.period"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5141, "DataNode.instance.id.nsInfo.cTime > DataNode.instance.xserver.balanceThrottler.periodExtension"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.periodExtension"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5142, "DataNode.instance.id.nsInfo.cTime > DataNode.instance.xserver.estimateBlockSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.estimateBlockSize"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5143, "DataNode.instance.id.nsInfo.cTime > DataNode.instance.xserver.maxXceiverCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.maxXceiverCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5144, "DataNode.instance.id.nsInfo.cTime != NameNode.instance.ACTIVE_STATE.lastHATransitionTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() != ((Number)(InvariantChecker.getValue("NameNode.instance.ACTIVE_STATE.lastHATransitionTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5145, "DataNode.instance.id.nsInfo.cTime > NameNode.instance.DEFAULT_PORT"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.DEFAULT_PORT"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5146, "DataNode.instance.id.nsInfo.cTime > NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5147, "DataNode.instance.id.nsInfo.cTime > NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5148, "DataNode.instance.id.nsInfo.cTime > NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5149, "DataNode.instance.id.nsInfo.cTime > NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5150, "DataNode.instance.id.nsInfo.cTime > NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5151, "DataNode.instance.id.nsInfo.cTime > NameNode.instance.namesystem.cacheManager.scanIntervalMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.scanIntervalMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5152, "DataNode.instance.id.nsInfo.cTime > NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5153, "DataNode.instance.id.nsInfo.cTime > NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5154, "DataNode.instance.id.nsInfo.cTime > NameNode.instance.namesystem.dir.inodeXAttrsLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.inodeXAttrsLimit"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5155, "DataNode.instance.id.nsInfo.cTime > NameNode.instance.namesystem.dir.maxComponentLength"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxComponentLength"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5156, "DataNode.instance.id.nsInfo.cTime > NameNode.instance.namesystem.dir.maxDirItems"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxDirItems"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5157, "DataNode.instance.id.nsInfo.cTime > NameNode.instance.namesystem.dir.xattrMaxSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.xattrMaxSize"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5158, "DataNode.instance.id.nsInfo.cTime > NameNode.instance.namesystem.editLogRollerThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogRollerThreshold"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5159, "DataNode.instance.id.nsInfo.cTime < NameNode.instance.namesystem.editLogTailer.DFS_HA_TAILEDITS_MAX_TXNS_PER_LOCK_DEFAULT"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.DFS_HA_TAILEDITS_MAX_TXNS_PER_LOCK_DEFAULT"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5160, "DataNode.instance.id.nsInfo.cTime > NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5161, "DataNode.instance.id.nsInfo.cTime > NameNode.instance.namesystem.editLogTailer.lastRollTriggerTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastRollTriggerTxId"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5162, "DataNode.instance.id.nsInfo.cTime > NameNode.instance.namesystem.editLogTailer.logRollPeriodMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.logRollPeriodMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5163, "DataNode.instance.id.nsInfo.cTime > NameNode.instance.namesystem.editLogTailer.maxRetries"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.maxRetries"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5164, "DataNode.instance.id.nsInfo.cTime > NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5165, "DataNode.instance.id.nsInfo.cTime > NameNode.instance.namesystem.leaseManager.hardLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.hardLimit"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5166, "DataNode.instance.id.nsInfo.cTime > NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5167, "DataNode.instance.id.nsInfo.cTime > NameNode.instance.namesystem.leaseRecheckIntervalMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseRecheckIntervalMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5168, "DataNode.instance.id.nsInfo.cTime > NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5169, "DataNode.instance.id.nsInfo.cTime > NameNode.instance.namesystem.nnResourceChecker.duReserved"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.nnResourceChecker.duReserved"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5170, "DataNode.instance.id.nsInfo.cTime > NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5171, "DataNode.instance.id.nsInfo.cTime > NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5172, "DataNode.instance.id.nsInfo.cTime < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5173, "DataNode.instance.id.nsInfo.cTime > blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5174, "DataNode.instance.id.nsInfo.cTime > blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5175, "DataNode.instance.id.nsInfo.cTime > blockManagerInstance.blockReportLeaseManager.maxPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.maxPending"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5176, "DataNode.instance.id.nsInfo.cTime > blockManagerInstance.blocksMap.capacity"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blocksMap.capacity"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5177, "DataNode.instance.id.nsInfo.cTime > blockManagerInstance.datanodeManager.defaultInfoPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoPort"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5178, "DataNode.instance.id.nsInfo.cTime > blockManagerInstance.datanodeManager.defaultInfoSecurePort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoSecurePort"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5179, "DataNode.instance.id.nsInfo.cTime > blockManagerInstance.datanodeManager.defaultIpcPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultIpcPort"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5180, "DataNode.instance.id.nsInfo.cTime > blockManagerInstance.datanodeManager.defaultXferPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultXferPort"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5181, "DataNode.instance.id.nsInfo.cTime > blockManagerInstance.datanodeManager.heartbeatExpireInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatExpireInterval"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5182, "DataNode.instance.id.nsInfo.cTime > blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5183, "DataNode.instance.id.nsInfo.cTime > blockManagerInstance.neededReconstruction.LEVEL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.LEVEL"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5184, "DataNode.instance.id.nsInfo.cTime > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5185, "DataNode.instance.id.nsInfo.cTime > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5186, "DataNode.instance.id.nsInfo.cTime > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5187, "DataNode.instance.id.nsInfo.cTime > blockManagerInstance.replQueueResetToHeadThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueResetToHeadThreshold"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5188, "DataNode.instance.id.nsInfo.cTime > blockManagerInstance.storagePolicySuite.defaultPolicyID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.storagePolicySuite.defaultPolicyID"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5189, "DataNode.instance.id.nsInfo.layoutVersion < DataNode.instance.id.nsInfo.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5190, "DataNode.instance.id.nsInfo.layoutVersion < DataNode.instance.xserver.balanceThrottler.curPeriodStart"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5191, "DataNode.instance.id.nsInfo.layoutVersion < NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5192, "DataNode.instance.id.nsInfo.layoutVersion < NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5193, "DataNode.instance.id.nsInfo.layoutVersion < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5194, "DataNode.instance.id.nsInfo.layoutVersion < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5195, "DataNode.instance.id.nsInfo.namespaceID > DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5196, "DataNode.instance.id.nsInfo.namespaceID > DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5197, "DataNode.instance.id.nsInfo.namespaceID > DataNode.instance.xserver.balanceThrottler.bytesPerPeriod"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.bytesPerPeriod"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5198, "DataNode.instance.id.nsInfo.namespaceID > DataNode.instance.xserver.balanceThrottler.curPeriodStart"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5199, "DataNode.instance.id.nsInfo.namespaceID > DataNode.instance.xserver.balanceThrottler.maxThreads"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.maxThreads"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5200, "DataNode.instance.id.nsInfo.namespaceID > DataNode.instance.xserver.balanceThrottler.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.period"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5201, "DataNode.instance.id.nsInfo.namespaceID > DataNode.instance.xserver.balanceThrottler.periodExtension"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.periodExtension"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5202, "DataNode.instance.id.nsInfo.namespaceID > DataNode.instance.xserver.estimateBlockSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.estimateBlockSize"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5203, "DataNode.instance.id.nsInfo.namespaceID > DataNode.instance.xserver.maxXceiverCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.maxXceiverCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5204, "DataNode.instance.id.nsInfo.namespaceID < NameNode.instance.ACTIVE_STATE.lastHATransitionTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.ACTIVE_STATE.lastHATransitionTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5205, "DataNode.instance.id.nsInfo.namespaceID > NameNode.instance.DEFAULT_PORT"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.DEFAULT_PORT"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5206, "DataNode.instance.id.nsInfo.namespaceID > NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5207, "DataNode.instance.id.nsInfo.namespaceID > NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5208, "DataNode.instance.id.nsInfo.namespaceID > NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5209, "DataNode.instance.id.nsInfo.namespaceID > NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5210, "DataNode.instance.id.nsInfo.namespaceID > NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5211, "DataNode.instance.id.nsInfo.namespaceID > NameNode.instance.namesystem.cacheManager.scanIntervalMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.scanIntervalMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5212, "DataNode.instance.id.nsInfo.namespaceID > NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5213, "DataNode.instance.id.nsInfo.namespaceID > NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5214, "DataNode.instance.id.nsInfo.namespaceID > NameNode.instance.namesystem.dir.inodeXAttrsLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.inodeXAttrsLimit"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5215, "DataNode.instance.id.nsInfo.namespaceID > NameNode.instance.namesystem.dir.maxComponentLength"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxComponentLength"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5216, "DataNode.instance.id.nsInfo.namespaceID > NameNode.instance.namesystem.dir.maxDirItems"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxDirItems"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5217, "DataNode.instance.id.nsInfo.namespaceID > NameNode.instance.namesystem.dir.xattrMaxSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.xattrMaxSize"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5218, "DataNode.instance.id.nsInfo.namespaceID > NameNode.instance.namesystem.editLogRollerThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogRollerThreshold"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5219, "DataNode.instance.id.nsInfo.namespaceID < NameNode.instance.namesystem.editLogTailer.DFS_HA_TAILEDITS_MAX_TXNS_PER_LOCK_DEFAULT"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.DFS_HA_TAILEDITS_MAX_TXNS_PER_LOCK_DEFAULT"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5220, "DataNode.instance.id.nsInfo.namespaceID > NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5221, "DataNode.instance.id.nsInfo.namespaceID > NameNode.instance.namesystem.editLogTailer.lastRollTriggerTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastRollTriggerTxId"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5222, "DataNode.instance.id.nsInfo.namespaceID > NameNode.instance.namesystem.editLogTailer.logRollPeriodMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.logRollPeriodMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5223, "DataNode.instance.id.nsInfo.namespaceID > NameNode.instance.namesystem.editLogTailer.maxRetries"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.maxRetries"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5224, "DataNode.instance.id.nsInfo.namespaceID > NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5225, "DataNode.instance.id.nsInfo.namespaceID > NameNode.instance.namesystem.leaseManager.hardLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.hardLimit"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5226, "DataNode.instance.id.nsInfo.namespaceID > NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5227, "DataNode.instance.id.nsInfo.namespaceID > NameNode.instance.namesystem.leaseRecheckIntervalMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseRecheckIntervalMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5228, "DataNode.instance.id.nsInfo.namespaceID > NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5229, "DataNode.instance.id.nsInfo.namespaceID > NameNode.instance.namesystem.nnResourceChecker.duReserved"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.nnResourceChecker.duReserved"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5230, "DataNode.instance.id.nsInfo.namespaceID > NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5231, "DataNode.instance.id.nsInfo.namespaceID > NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5232, "DataNode.instance.id.nsInfo.namespaceID < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5233, "DataNode.instance.id.nsInfo.namespaceID > blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5234, "DataNode.instance.id.nsInfo.namespaceID != blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5235, "DataNode.instance.id.nsInfo.namespaceID > blockManagerInstance.blockReportLeaseManager.maxPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.maxPending"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5236, "DataNode.instance.id.nsInfo.namespaceID > blockManagerInstance.blocksMap.capacity"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blocksMap.capacity"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5237, "DataNode.instance.id.nsInfo.namespaceID > blockManagerInstance.datanodeManager.defaultInfoPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoPort"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5238, "DataNode.instance.id.nsInfo.namespaceID > blockManagerInstance.datanodeManager.defaultInfoSecurePort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoSecurePort"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5239, "DataNode.instance.id.nsInfo.namespaceID > blockManagerInstance.datanodeManager.defaultIpcPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultIpcPort"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5240, "DataNode.instance.id.nsInfo.namespaceID > blockManagerInstance.datanodeManager.defaultXferPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultXferPort"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5241, "DataNode.instance.id.nsInfo.namespaceID > blockManagerInstance.datanodeManager.heartbeatExpireInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatExpireInterval"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5242, "DataNode.instance.id.nsInfo.namespaceID != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5243, "DataNode.instance.id.nsInfo.namespaceID != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5244, "DataNode.instance.id.nsInfo.namespaceID != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5245, "DataNode.instance.id.nsInfo.namespaceID > blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5246, "DataNode.instance.id.nsInfo.namespaceID > blockManagerInstance.neededReconstruction.LEVEL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.LEVEL"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5247, "DataNode.instance.id.nsInfo.namespaceID > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5248, "DataNode.instance.id.nsInfo.namespaceID > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5249, "DataNode.instance.id.nsInfo.namespaceID > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5250, "DataNode.instance.id.nsInfo.namespaceID > blockManagerInstance.replQueueResetToHeadThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueResetToHeadThreshold"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5251, "DataNode.instance.id.nsInfo.namespaceID > blockManagerInstance.storagePolicySuite.defaultPolicyID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.storagePolicySuite.defaultPolicyID"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5252, "DataNode.instance.storage.layoutVersion < NameNode.instance.ACTIVE_STATE.lastHATransitionTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.ACTIVE_STATE.lastHATransitionTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5253, "DataNode.instance.storage.layoutVersion < NameNode.instance.namesystem.editLogTailer.DFS_HA_TAILEDITS_MAX_TXNS_PER_LOCK_DEFAULT"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.DFS_HA_TAILEDITS_MAX_TXNS_PER_LOCK_DEFAULT"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5254, "DataNode.instance.storage.layoutVersion < NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5255, "DataNode.instance.storage.layoutVersion > NameNode.instance.namesystem.editLogTailer.lastRollTriggerTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastRollTriggerTxId"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5256, "DataNode.instance.storage.layoutVersion > NameNode.instance.namesystem.editLogTailer.logRollPeriodMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.logRollPeriodMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5257, "DataNode.instance.storage.namespaceID < NameNode.instance.ACTIVE_STATE.lastHATransitionTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.ACTIVE_STATE.lastHATransitionTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5258, "DataNode.instance.storage.namespaceID < NameNode.instance.namesystem.editLogTailer.DFS_HA_TAILEDITS_MAX_TXNS_PER_LOCK_DEFAULT"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.DFS_HA_TAILEDITS_MAX_TXNS_PER_LOCK_DEFAULT"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5259, "DataNode.instance.storage.namespaceID != NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5260, "DataNode.instance.storage.namespaceID > NameNode.instance.namesystem.editLogTailer.lastRollTriggerTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastRollTriggerTxId"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5261, "DataNode.instance.storage.namespaceID > NameNode.instance.namesystem.editLogTailer.logRollPeriodMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.logRollPeriodMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5262, "DataNode.instance.storage.namespaceID != NameNode.instance.namesystem.editLogTailer.maxRetries"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.maxRetries"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5263, "DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks < DataNode.instance.xserver.balanceThrottler.curPeriodStart"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5264, "DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks > NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5265, "DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks < NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5266, "DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5267, "DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5268, "DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5269, "DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout < DataNode.instance.xserver.balanceThrottler.curPeriodStart"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5270, "DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout > NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5271, "DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout < NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5272, "DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5273, "DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5274, "DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5275, "DataNode.instance.volumeChecker.lastAllVolumesCheck < NameNode.instance.ACTIVE_STATE.lastHATransitionTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.ACTIVE_STATE.lastHATransitionTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5276, "DataNode.instance.volumeChecker.lastAllVolumesCheck < NameNode.instance.namesystem.editLogTailer.DFS_HA_TAILEDITS_MAX_TXNS_PER_LOCK_DEFAULT"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.DFS_HA_TAILEDITS_MAX_TXNS_PER_LOCK_DEFAULT"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5277, "DataNode.instance.volumeChecker.lastAllVolumesCheck != NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() != ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5278, "DataNode.instance.volumeChecker.lastAllVolumesCheck > NameNode.instance.namesystem.editLogTailer.lastRollTriggerTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastRollTriggerTxId"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5279, "DataNode.instance.volumeChecker.lastAllVolumesCheck > NameNode.instance.namesystem.editLogTailer.logRollPeriodMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.logRollPeriodMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5280, "DataNode.instance.volumeChecker.lastAllVolumesCheck > NameNode.instance.namesystem.editLogTailer.maxRetries"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.maxRetries"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5281, "DataNode.instance.volumeChecker.numSyncDatasetChecks < NameNode.instance.ACTIVE_STATE.lastHATransitionTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.ACTIVE_STATE.lastHATransitionTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5282, "DataNode.instance.volumeChecker.numSyncDatasetChecks < NameNode.instance.namesystem.editLogTailer.DFS_HA_TAILEDITS_MAX_TXNS_PER_LOCK_DEFAULT"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.DFS_HA_TAILEDITS_MAX_TXNS_PER_LOCK_DEFAULT"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5283, "DataNode.instance.volumeChecker.numSyncDatasetChecks < NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5284, "DataNode.instance.volumeChecker.numSyncDatasetChecks > NameNode.instance.namesystem.editLogTailer.lastRollTriggerTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastRollTriggerTxId"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5285, "DataNode.instance.volumeChecker.numSyncDatasetChecks > NameNode.instance.namesystem.editLogTailer.logRollPeriodMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.logRollPeriodMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5286, "DataNode.instance.volumeChecker.numSyncDatasetChecks != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5287, "DataNode.instance.xserver.balanceThrottler.bytesPerPeriod < DataNode.instance.xserver.balanceThrottler.curPeriodStart"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.bytesPerPeriod"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5288, "DataNode.instance.xserver.balanceThrottler.bytesPerPeriod > NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.bytesPerPeriod"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5289, "DataNode.instance.xserver.balanceThrottler.bytesPerPeriod < NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.bytesPerPeriod"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5290, "DataNode.instance.xserver.balanceThrottler.bytesPerPeriod < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.bytesPerPeriod"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5291, "DataNode.instance.xserver.balanceThrottler.bytesPerPeriod < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.bytesPerPeriod"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5292, "DataNode.instance.xserver.balanceThrottler.bytesPerPeriod != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.bytesPerPeriod"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5293, "DataNode.instance.xserver.balanceThrottler.curPeriodStart > DataNode.instance.xserver.balanceThrottler.maxThreads"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.maxThreads"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5294, "DataNode.instance.xserver.balanceThrottler.curPeriodStart > DataNode.instance.xserver.balanceThrottler.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.period"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5295, "DataNode.instance.xserver.balanceThrottler.curPeriodStart > DataNode.instance.xserver.balanceThrottler.periodExtension"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.periodExtension"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5296, "DataNode.instance.xserver.balanceThrottler.curPeriodStart < DataNode.instance.xserver.estimateBlockSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.estimateBlockSize"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5297, "DataNode.instance.xserver.balanceThrottler.curPeriodStart > DataNode.instance.xserver.maxXceiverCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.maxXceiverCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5298, "DataNode.instance.xserver.balanceThrottler.curPeriodStart < NameNode.instance.ACTIVE_STATE.lastHATransitionTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.ACTIVE_STATE.lastHATransitionTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5299, "DataNode.instance.xserver.balanceThrottler.curPeriodStart > NameNode.instance.DEFAULT_PORT"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.DEFAULT_PORT"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5300, "DataNode.instance.xserver.balanceThrottler.curPeriodStart > NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5301, "DataNode.instance.xserver.balanceThrottler.curPeriodStart > NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5302, "DataNode.instance.xserver.balanceThrottler.curPeriodStart > NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5303, "DataNode.instance.xserver.balanceThrottler.curPeriodStart > NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5304, "DataNode.instance.xserver.balanceThrottler.curPeriodStart > NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5305, "DataNode.instance.xserver.balanceThrottler.curPeriodStart > NameNode.instance.namesystem.cacheManager.scanIntervalMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.scanIntervalMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5306, "DataNode.instance.xserver.balanceThrottler.curPeriodStart > NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5307, "DataNode.instance.xserver.balanceThrottler.curPeriodStart > NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5308, "DataNode.instance.xserver.balanceThrottler.curPeriodStart > NameNode.instance.namesystem.dir.inodeXAttrsLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.inodeXAttrsLimit"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5309, "DataNode.instance.xserver.balanceThrottler.curPeriodStart > NameNode.instance.namesystem.dir.maxComponentLength"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxComponentLength"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5310, "DataNode.instance.xserver.balanceThrottler.curPeriodStart > NameNode.instance.namesystem.dir.maxDirItems"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxDirItems"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5311, "DataNode.instance.xserver.balanceThrottler.curPeriodStart > NameNode.instance.namesystem.dir.xattrMaxSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.xattrMaxSize"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5312, "DataNode.instance.xserver.balanceThrottler.curPeriodStart > NameNode.instance.namesystem.editLogRollerThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogRollerThreshold"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5313, "DataNode.instance.xserver.balanceThrottler.curPeriodStart < NameNode.instance.namesystem.editLogTailer.DFS_HA_TAILEDITS_MAX_TXNS_PER_LOCK_DEFAULT"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.DFS_HA_TAILEDITS_MAX_TXNS_PER_LOCK_DEFAULT"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5314, "DataNode.instance.xserver.balanceThrottler.curPeriodStart > NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5315, "DataNode.instance.xserver.balanceThrottler.curPeriodStart > NameNode.instance.namesystem.editLogTailer.lastRollTriggerTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastRollTriggerTxId"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5316, "DataNode.instance.xserver.balanceThrottler.curPeriodStart > NameNode.instance.namesystem.editLogTailer.logRollPeriodMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.logRollPeriodMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5317, "DataNode.instance.xserver.balanceThrottler.curPeriodStart > NameNode.instance.namesystem.editLogTailer.maxRetries"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.maxRetries"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5318, "DataNode.instance.xserver.balanceThrottler.curPeriodStart > NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5319, "DataNode.instance.xserver.balanceThrottler.curPeriodStart > NameNode.instance.namesystem.leaseManager.hardLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.hardLimit"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5320, "DataNode.instance.xserver.balanceThrottler.curPeriodStart > NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5321, "DataNode.instance.xserver.balanceThrottler.curPeriodStart > NameNode.instance.namesystem.leaseRecheckIntervalMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseRecheckIntervalMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5322, "DataNode.instance.xserver.balanceThrottler.curPeriodStart > NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5323, "DataNode.instance.xserver.balanceThrottler.curPeriodStart > NameNode.instance.namesystem.nnResourceChecker.duReserved"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.nnResourceChecker.duReserved"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5324, "DataNode.instance.xserver.balanceThrottler.curPeriodStart > NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5325, "DataNode.instance.xserver.balanceThrottler.curPeriodStart > NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5326, "DataNode.instance.xserver.balanceThrottler.curPeriodStart < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5327, "DataNode.instance.xserver.balanceThrottler.curPeriodStart > blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5328, "DataNode.instance.xserver.balanceThrottler.curPeriodStart < blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5329, "DataNode.instance.xserver.balanceThrottler.curPeriodStart > blockManagerInstance.blockReportLeaseManager.maxPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.maxPending"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5330, "DataNode.instance.xserver.balanceThrottler.curPeriodStart > blockManagerInstance.blocksMap.capacity"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blocksMap.capacity"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5331, "DataNode.instance.xserver.balanceThrottler.curPeriodStart > blockManagerInstance.datanodeManager.defaultInfoPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoPort"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5332, "DataNode.instance.xserver.balanceThrottler.curPeriodStart > blockManagerInstance.datanodeManager.defaultInfoSecurePort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoSecurePort"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5333, "DataNode.instance.xserver.balanceThrottler.curPeriodStart > blockManagerInstance.datanodeManager.defaultIpcPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultIpcPort"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5334, "DataNode.instance.xserver.balanceThrottler.curPeriodStart > blockManagerInstance.datanodeManager.defaultXferPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultXferPort"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5335, "DataNode.instance.xserver.balanceThrottler.curPeriodStart > blockManagerInstance.datanodeManager.heartbeatExpireInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatExpireInterval"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5336, "DataNode.instance.xserver.balanceThrottler.curPeriodStart != blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5337, "DataNode.instance.xserver.balanceThrottler.curPeriodStart > blockManagerInstance.neededReconstruction.LEVEL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.LEVEL"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5338, "DataNode.instance.xserver.balanceThrottler.curPeriodStart > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5339, "DataNode.instance.xserver.balanceThrottler.curPeriodStart > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5340, "DataNode.instance.xserver.balanceThrottler.curPeriodStart > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5341, "DataNode.instance.xserver.balanceThrottler.curPeriodStart > blockManagerInstance.replQueueResetToHeadThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueResetToHeadThreshold"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5342, "DataNode.instance.xserver.balanceThrottler.curPeriodStart > blockManagerInstance.storagePolicySuite.defaultPolicyID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.storagePolicySuite.defaultPolicyID"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5343, "DataNode.instance.xserver.balanceThrottler.maxThreads > NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.maxThreads"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5344, "DataNode.instance.xserver.balanceThrottler.maxThreads < NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.maxThreads"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5345, "DataNode.instance.xserver.balanceThrottler.maxThreads < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.maxThreads"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5346, "DataNode.instance.xserver.balanceThrottler.maxThreads < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.maxThreads"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5347, "DataNode.instance.xserver.balanceThrottler.maxThreads != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.maxThreads"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5348, "DataNode.instance.xserver.balanceThrottler.period > NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.period"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5349, "DataNode.instance.xserver.balanceThrottler.period < NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.period"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5350, "DataNode.instance.xserver.balanceThrottler.period < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.period"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5351, "DataNode.instance.xserver.balanceThrottler.period < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.period"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5352, "DataNode.instance.xserver.balanceThrottler.period != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.period"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5353, "DataNode.instance.xserver.balanceThrottler.periodExtension > NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.periodExtension"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5354, "DataNode.instance.xserver.balanceThrottler.periodExtension < NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.periodExtension"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5355, "DataNode.instance.xserver.balanceThrottler.periodExtension < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.periodExtension"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5356, "DataNode.instance.xserver.balanceThrottler.periodExtension < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.periodExtension"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5357, "DataNode.instance.xserver.balanceThrottler.periodExtension != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.periodExtension"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5358, "DataNode.instance.xserver.estimateBlockSize > NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.estimateBlockSize"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5359, "DataNode.instance.xserver.estimateBlockSize > NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.estimateBlockSize"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5360, "DataNode.instance.xserver.estimateBlockSize > NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.estimateBlockSize"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5361, "DataNode.instance.xserver.estimateBlockSize < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.estimateBlockSize"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5362, "DataNode.instance.xserver.maxXceiverCount > NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.maxXceiverCount"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5363, "DataNode.instance.xserver.maxXceiverCount < NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.maxXceiverCount"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5364, "DataNode.instance.xserver.maxXceiverCount < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.maxXceiverCount"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5365, "DataNode.instance.xserver.maxXceiverCount < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.maxXceiverCount"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5366, "DataNode.instance.xserver.maxXceiverCount != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.maxXceiverCount"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5367, "NameNode.instance.ACTIVE_STATE.lastHATransitionTime > NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.ACTIVE_STATE.lastHATransitionTime"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5368, "NameNode.instance.ACTIVE_STATE.lastHATransitionTime > NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.ACTIVE_STATE.lastHATransitionTime"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5369, "NameNode.instance.ACTIVE_STATE.lastHATransitionTime < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.ACTIVE_STATE.lastHATransitionTime"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5370, "NameNode.instance.ACTIVE_STATE.lastHATransitionTime > NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.ACTIVE_STATE.lastHATransitionTime"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5371, "NameNode.instance.ACTIVE_STATE.lastHATransitionTime != NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.ACTIVE_STATE.lastHATransitionTime"))).intValue() != ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5372, "NameNode.instance.ACTIVE_STATE.lastHATransitionTime < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.ACTIVE_STATE.lastHATransitionTime"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5373, "NameNode.instance.ACTIVE_STATE.lastHATransitionTime > blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.ACTIVE_STATE.lastHATransitionTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5374, "NameNode.instance.ACTIVE_STATE.lastHATransitionTime > blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.ACTIVE_STATE.lastHATransitionTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5375, "NameNode.instance.ACTIVE_STATE.lastHATransitionTime > blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.ACTIVE_STATE.lastHATransitionTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5376, "NameNode.instance.ACTIVE_STATE.lastHATransitionTime > blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.ACTIVE_STATE.lastHATransitionTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5377, "NameNode.instance.ACTIVE_STATE.lastHATransitionTime > blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.ACTIVE_STATE.lastHATransitionTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5378, "NameNode.instance.ACTIVE_STATE.lastHATransitionTime > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.ACTIVE_STATE.lastHATransitionTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5379, "NameNode.instance.DEFAULT_PORT > NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.DEFAULT_PORT"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5380, "NameNode.instance.DEFAULT_PORT < NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.DEFAULT_PORT"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5381, "NameNode.instance.DEFAULT_PORT < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.DEFAULT_PORT"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5382, "NameNode.instance.DEFAULT_PORT < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.DEFAULT_PORT"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5383, "NameNode.instance.DEFAULT_PORT != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.DEFAULT_PORT"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5384, "NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS > NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5385, "NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS < NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5386, "NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5387, "NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5388, "NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5389, "NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL > NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5390, "NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL < NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5391, "NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5392, "NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5393, "NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5394, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE > NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5395, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE < NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5396, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE < NameNode.instance.namesystem.cacheManager.scanIntervalMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.scanIntervalMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5397, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE > NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5398, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE < NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5399, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE < NameNode.instance.namesystem.dir.inodeXAttrsLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.inodeXAttrsLimit"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5400, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE < NameNode.instance.namesystem.dir.maxComponentLength"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxComponentLength"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5401, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE < NameNode.instance.namesystem.dir.maxDirItems"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxDirItems"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5402, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE < NameNode.instance.namesystem.dir.xattrMaxSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.xattrMaxSize"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5403, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE < NameNode.instance.namesystem.editLogRollerThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogRollerThreshold"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5404, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE < NameNode.instance.namesystem.editLogTailer.DFS_HA_TAILEDITS_MAX_TXNS_PER_LOCK_DEFAULT"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.DFS_HA_TAILEDITS_MAX_TXNS_PER_LOCK_DEFAULT"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5405, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE < NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5406, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE > NameNode.instance.namesystem.editLogTailer.lastRollTriggerTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastRollTriggerTxId"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5407, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE > NameNode.instance.namesystem.editLogTailer.logRollPeriodMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.logRollPeriodMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5408, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE > NameNode.instance.namesystem.editLogTailer.maxRetries"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.maxRetries"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5409, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE < NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5410, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE < NameNode.instance.namesystem.leaseManager.hardLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.hardLimit"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5411, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5412, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE < NameNode.instance.namesystem.leaseRecheckIntervalMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseRecheckIntervalMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5413, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE > NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5414, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE < NameNode.instance.namesystem.nnResourceChecker.duReserved"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.nnResourceChecker.duReserved"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5415, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE > NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5416, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE < NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5417, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5418, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE <= blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5419, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE < blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5420, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE > blockManagerInstance.blockReportLeaseManager.maxPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.maxPending"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5421, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE < blockManagerInstance.blocksMap.capacity"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blocksMap.capacity"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5422, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5423, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE < blockManagerInstance.datanodeManager.defaultInfoPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoPort"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5424, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE < blockManagerInstance.datanodeManager.defaultInfoSecurePort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoSecurePort"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5425, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE < blockManagerInstance.datanodeManager.defaultIpcPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultIpcPort"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5426, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE < blockManagerInstance.datanodeManager.defaultXferPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultXferPort"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5427, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE < blockManagerInstance.datanodeManager.heartbeatExpireInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatExpireInterval"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5428, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5429, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE > blockManagerInstance.neededReconstruction.LEVEL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.LEVEL"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5430, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5431, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5432, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5433, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE < blockManagerInstance.replQueueResetToHeadThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueResetToHeadThreshold"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5434, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE > blockManagerInstance.storagePolicySuite.defaultPolicyID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.storagePolicySuite.defaultPolicyID"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5435, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size < NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5436, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5437, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5438, "NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses < NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5439, "NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5440, "NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5441, "NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5442, "NameNode.instance.namesystem.cacheManager.scanIntervalMs < NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.scanIntervalMs"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5443, "NameNode.instance.namesystem.cacheManager.scanIntervalMs < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.scanIntervalMs"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5444, "NameNode.instance.namesystem.cacheManager.scanIntervalMs < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.scanIntervalMs"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5445, "NameNode.instance.namesystem.cacheManager.scanIntervalMs != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.scanIntervalMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5446, "NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE < NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5447, "NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5448, "NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5449, "NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5450, "NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval < NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5451, "NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5452, "NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5453, "NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5454, "NameNode.instance.namesystem.dir.inodeXAttrsLimit < NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.inodeXAttrsLimit"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5455, "NameNode.instance.namesystem.dir.inodeXAttrsLimit < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.inodeXAttrsLimit"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5456, "NameNode.instance.namesystem.dir.inodeXAttrsLimit < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.inodeXAttrsLimit"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5457, "NameNode.instance.namesystem.dir.inodeXAttrsLimit != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.inodeXAttrsLimit"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5458, "NameNode.instance.namesystem.dir.maxComponentLength < NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxComponentLength"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5459, "NameNode.instance.namesystem.dir.maxComponentLength < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxComponentLength"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5460, "NameNode.instance.namesystem.dir.maxComponentLength < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxComponentLength"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5461, "NameNode.instance.namesystem.dir.maxComponentLength != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxComponentLength"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5462, "NameNode.instance.namesystem.dir.maxDirItems < NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxDirItems"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5463, "NameNode.instance.namesystem.dir.maxDirItems < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxDirItems"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5464, "NameNode.instance.namesystem.dir.maxDirItems < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxDirItems"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5465, "NameNode.instance.namesystem.dir.maxDirItems != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxDirItems"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5466, "NameNode.instance.namesystem.dir.xattrMaxSize < NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.xattrMaxSize"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5467, "NameNode.instance.namesystem.dir.xattrMaxSize < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.xattrMaxSize"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5468, "NameNode.instance.namesystem.dir.xattrMaxSize < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.xattrMaxSize"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5469, "NameNode.instance.namesystem.dir.xattrMaxSize != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.xattrMaxSize"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5470, "NameNode.instance.namesystem.editLogRollerThreshold < NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogRollerThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5471, "NameNode.instance.namesystem.editLogRollerThreshold < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogRollerThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5472, "NameNode.instance.namesystem.editLogRollerThreshold < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogRollerThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5473, "NameNode.instance.namesystem.editLogRollerThreshold != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogRollerThreshold"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5474, "NameNode.instance.namesystem.editLogTailer.DFS_HA_TAILEDITS_MAX_TXNS_PER_LOCK_DEFAULT > NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.DFS_HA_TAILEDITS_MAX_TXNS_PER_LOCK_DEFAULT"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5475, "NameNode.instance.namesystem.editLogTailer.DFS_HA_TAILEDITS_MAX_TXNS_PER_LOCK_DEFAULT > NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.DFS_HA_TAILEDITS_MAX_TXNS_PER_LOCK_DEFAULT"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5476, "NameNode.instance.namesystem.editLogTailer.DFS_HA_TAILEDITS_MAX_TXNS_PER_LOCK_DEFAULT > NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.DFS_HA_TAILEDITS_MAX_TXNS_PER_LOCK_DEFAULT"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5477, "NameNode.instance.namesystem.editLogTailer.DFS_HA_TAILEDITS_MAX_TXNS_PER_LOCK_DEFAULT > NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.DFS_HA_TAILEDITS_MAX_TXNS_PER_LOCK_DEFAULT"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5478, "NameNode.instance.namesystem.editLogTailer.DFS_HA_TAILEDITS_MAX_TXNS_PER_LOCK_DEFAULT > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.DFS_HA_TAILEDITS_MAX_TXNS_PER_LOCK_DEFAULT"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5479, "NameNode.instance.namesystem.editLogTailer.DFS_HA_TAILEDITS_MAX_TXNS_PER_LOCK_DEFAULT > blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.DFS_HA_TAILEDITS_MAX_TXNS_PER_LOCK_DEFAULT"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5480, "NameNode.instance.namesystem.editLogTailer.DFS_HA_TAILEDITS_MAX_TXNS_PER_LOCK_DEFAULT > blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.DFS_HA_TAILEDITS_MAX_TXNS_PER_LOCK_DEFAULT"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5481, "NameNode.instance.namesystem.editLogTailer.DFS_HA_TAILEDITS_MAX_TXNS_PER_LOCK_DEFAULT > blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.DFS_HA_TAILEDITS_MAX_TXNS_PER_LOCK_DEFAULT"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5482, "NameNode.instance.namesystem.editLogTailer.DFS_HA_TAILEDITS_MAX_TXNS_PER_LOCK_DEFAULT > blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.DFS_HA_TAILEDITS_MAX_TXNS_PER_LOCK_DEFAULT"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5483, "NameNode.instance.namesystem.editLogTailer.DFS_HA_TAILEDITS_MAX_TXNS_PER_LOCK_DEFAULT > blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.DFS_HA_TAILEDITS_MAX_TXNS_PER_LOCK_DEFAULT"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5484, "NameNode.instance.namesystem.editLogTailer.DFS_HA_TAILEDITS_MAX_TXNS_PER_LOCK_DEFAULT > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.DFS_HA_TAILEDITS_MAX_TXNS_PER_LOCK_DEFAULT"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5485, "NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs > NameNode.instance.namesystem.editLogTailer.lastRollTriggerTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastRollTriggerTxId"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5486, "NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs > NameNode.instance.namesystem.editLogTailer.logRollPeriodMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.logRollPeriodMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5487, "NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs > NameNode.instance.namesystem.editLogTailer.maxRetries"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.maxRetries"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5488, "NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5489, "NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs > NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5490, "NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs > NameNode.instance.namesystem.leaseManager.hardLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.hardLimit"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5491, "NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs > NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5492, "NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs > NameNode.instance.namesystem.leaseRecheckIntervalMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseRecheckIntervalMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5493, "NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs > NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5494, "NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs > NameNode.instance.namesystem.nnResourceChecker.duReserved"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.nnResourceChecker.duReserved"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5495, "NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs > NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5496, "NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs > NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5497, "NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5498, "NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs > blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5499, "NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs < blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5500, "NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs > blockManagerInstance.blockReportLeaseManager.maxPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.maxPending"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5501, "NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5502, "NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs > blockManagerInstance.blocksMap.capacity"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blocksMap.capacity"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5503, "NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs > blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5504, "NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs > blockManagerInstance.datanodeManager.defaultInfoPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoPort"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5505, "NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs > blockManagerInstance.datanodeManager.defaultInfoSecurePort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoSecurePort"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5506, "NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs > blockManagerInstance.datanodeManager.defaultIpcPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultIpcPort"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5507, "NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs > blockManagerInstance.datanodeManager.defaultXferPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultXferPort"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5508, "NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs > blockManagerInstance.datanodeManager.heartbeatExpireInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatExpireInterval"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5509, "NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs > blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5510, "NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5511, "NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5512, "NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5513, "NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5514, "NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs != blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5515, "NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs > blockManagerInstance.neededReconstruction.LEVEL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.LEVEL"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5516, "NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5517, "NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5518, "NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5519, "NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs > blockManagerInstance.replQueueResetToHeadThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueResetToHeadThreshold"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5520, "NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs > blockManagerInstance.storagePolicySuite.defaultPolicyID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.storagePolicySuite.defaultPolicyID"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5521, "NameNode.instance.namesystem.editLogTailer.lastRollTriggerTxId < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastRollTriggerTxId"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5522, "NameNode.instance.namesystem.editLogTailer.lastRollTriggerTxId < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastRollTriggerTxId"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5523, "NameNode.instance.namesystem.editLogTailer.lastRollTriggerTxId < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastRollTriggerTxId"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5524, "NameNode.instance.namesystem.editLogTailer.lastRollTriggerTxId < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastRollTriggerTxId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5525, "NameNode.instance.namesystem.editLogTailer.lastRollTriggerTxId < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastRollTriggerTxId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5526, "NameNode.instance.namesystem.editLogTailer.lastRollTriggerTxId < blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastRollTriggerTxId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5527, "NameNode.instance.namesystem.editLogTailer.lastRollTriggerTxId < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastRollTriggerTxId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5528, "NameNode.instance.namesystem.editLogTailer.lastRollTriggerTxId < blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastRollTriggerTxId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5529, "NameNode.instance.namesystem.editLogTailer.lastRollTriggerTxId < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastRollTriggerTxId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5530, "NameNode.instance.namesystem.editLogTailer.lastRollTriggerTxId < blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastRollTriggerTxId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5531, "NameNode.instance.namesystem.editLogTailer.logRollPeriodMs < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.logRollPeriodMs"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5532, "NameNode.instance.namesystem.editLogTailer.logRollPeriodMs < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.logRollPeriodMs"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5533, "NameNode.instance.namesystem.editLogTailer.logRollPeriodMs < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.logRollPeriodMs"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5534, "NameNode.instance.namesystem.editLogTailer.logRollPeriodMs < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.logRollPeriodMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5535, "NameNode.instance.namesystem.editLogTailer.logRollPeriodMs < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.logRollPeriodMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5536, "NameNode.instance.namesystem.editLogTailer.logRollPeriodMs < blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.logRollPeriodMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5537, "NameNode.instance.namesystem.editLogTailer.logRollPeriodMs < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.logRollPeriodMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5538, "NameNode.instance.namesystem.editLogTailer.logRollPeriodMs < blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.logRollPeriodMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5539, "NameNode.instance.namesystem.editLogTailer.logRollPeriodMs < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.logRollPeriodMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5540, "NameNode.instance.namesystem.editLogTailer.logRollPeriodMs < blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.logRollPeriodMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5541, "NameNode.instance.namesystem.editLogTailer.maxRetries < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.maxRetries"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5542, "NameNode.instance.namesystem.editLogTailer.maxRetries < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.maxRetries"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5543, "NameNode.instance.namesystem.editLogTailer.maxRetries < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.maxRetries"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5544, "NameNode.instance.namesystem.editLogTailer.maxRetries < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.maxRetries"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5545, "NameNode.instance.namesystem.editLogTailer.maxRetries != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.maxRetries"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5546, "NameNode.instance.namesystem.editLogTailer.maxRetries != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.maxRetries"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5547, "NameNode.instance.namesystem.editLogTailer.maxRetries != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.maxRetries"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5548, "NameNode.instance.namesystem.editLogTailer.maxRetries != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.maxRetries"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5549, "NameNode.instance.namesystem.editLogTailer.maxRetries != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.maxRetries"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5550, "NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5551, "NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5552, "NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5553, "NameNode.instance.namesystem.leaseManager.hardLimit < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.hardLimit"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5554, "NameNode.instance.namesystem.leaseManager.hardLimit < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.hardLimit"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5555, "NameNode.instance.namesystem.leaseManager.hardLimit != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.hardLimit"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5556, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime > NameNode.instance.namesystem.leaseRecheckIntervalMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseRecheckIntervalMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5557, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime > NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5558, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime > NameNode.instance.namesystem.nnResourceChecker.duReserved"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.nnResourceChecker.duReserved"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5559, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime > NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5560, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime > NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5561, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5562, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime > blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5563, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime < blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5564, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime > blockManagerInstance.blockReportLeaseManager.maxPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.maxPending"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5565, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime > blockManagerInstance.blocksMap.capacity"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blocksMap.capacity"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5566, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5567, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime > blockManagerInstance.datanodeManager.defaultInfoPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoPort"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5568, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime > blockManagerInstance.datanodeManager.defaultInfoSecurePort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoSecurePort"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5569, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime > blockManagerInstance.datanodeManager.defaultIpcPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultIpcPort"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5570, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime > blockManagerInstance.datanodeManager.defaultXferPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultXferPort"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5571, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime > blockManagerInstance.datanodeManager.heartbeatExpireInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatExpireInterval"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5572, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5573, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime > blockManagerInstance.neededReconstruction.LEVEL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.LEVEL"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5574, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5575, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5576, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5577, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime > blockManagerInstance.replQueueResetToHeadThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueResetToHeadThreshold"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5578, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime > blockManagerInstance.storagePolicySuite.defaultPolicyID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.storagePolicySuite.defaultPolicyID"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5579, "NameNode.instance.namesystem.leaseRecheckIntervalMs < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseRecheckIntervalMs"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5580, "NameNode.instance.namesystem.leaseRecheckIntervalMs != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseRecheckIntervalMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5581, "NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5582, "NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5583, "NameNode.instance.namesystem.nnResourceChecker.duReserved < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.nnResourceChecker.duReserved"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5584, "NameNode.instance.namesystem.nnResourceChecker.duReserved != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.nnResourceChecker.duReserved"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5585, "NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5586, "NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5587, "NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5588, "NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5589, "NameNode.instance.namesystem.startTime > blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5590, "NameNode.instance.namesystem.startTime > blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5591, "NameNode.instance.namesystem.startTime > blockManagerInstance.blockReportLeaseManager.maxPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.maxPending"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5592, "NameNode.instance.namesystem.startTime > blockManagerInstance.blocksMap.capacity"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blocksMap.capacity"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5593, "NameNode.instance.namesystem.startTime > blockManagerInstance.datanodeManager.defaultInfoPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoPort"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5594, "NameNode.instance.namesystem.startTime > blockManagerInstance.datanodeManager.defaultInfoSecurePort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoSecurePort"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5595, "NameNode.instance.namesystem.startTime > blockManagerInstance.datanodeManager.defaultIpcPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultIpcPort"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5596, "NameNode.instance.namesystem.startTime > blockManagerInstance.datanodeManager.defaultXferPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultXferPort"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5597, "NameNode.instance.namesystem.startTime > blockManagerInstance.datanodeManager.heartbeatExpireInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatExpireInterval"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5598, "NameNode.instance.namesystem.startTime > blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5599, "NameNode.instance.namesystem.startTime > blockManagerInstance.neededReconstruction.LEVEL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.LEVEL"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5600, "NameNode.instance.namesystem.startTime > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5601, "NameNode.instance.namesystem.startTime > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5602, "NameNode.instance.namesystem.startTime > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5603, "NameNode.instance.namesystem.startTime > blockManagerInstance.replQueueResetToHeadThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueResetToHeadThreshold"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5604, "NameNode.instance.namesystem.startTime > blockManagerInstance.storagePolicySuite.defaultPolicyID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.storagePolicySuite.defaultPolicyID"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5605, "DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs == blockManagerInstance.datanodeManager.timeBetweenResendingCachingDirectivesMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.timeBetweenResendingCachingDirectivesMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5606, "DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs == blockManagerInstance.placementPolicies.ecPolicy.staleInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.placementPolicies.ecPolicy.staleInterval"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5607, "DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs == blockManagerInstance.placementPolicies.replicationPolicy.staleInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.placementPolicies.replicationPolicy.staleInterval"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5608, "DataNode.instance.data.fsRunning == NameNode.instance.namesystem.alwaysUseDelegationTokensForTests"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.data.fsRunning"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.alwaysUseDelegationTokensForTests"))).booleanValue());
			}
		});
		invariants5999.add(new Invariant(5609, "DataNode.instance.id.infoPort == 42617"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() == 42617);
			}
		});
		invariants5999.add(new Invariant(5610, "DataNode.instance.id.ipcPort == 34951"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() == 34951);
			}
		});
		invariants5999.add(new Invariant(5611, "DataNode.instance.id.nsInfo.cTime == 1731382408191L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() == 1731382408191L);
			}
		});
		invariants5999.add(new Invariant(5612, "DataNode.instance.id.nsInfo.namespaceID == 419279956"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() == 419279956);
			}
		});
		invariants5999.add(new Invariant(5613, "DataNode.instance.id.xferPort == 45491"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() == 45491);
			}
		});
		invariants5999.add(new Invariant(5614, "DataNode.instance.lastDiskErrorCheck == 118516966"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() == 118516966);
			}
		});
		invariants5999.add(new Invariant(5615, "DataNode.instance.volumeChecker.lastAllVolumesCheck == 118516959"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() == 118516959);
			}
		});
		invariants5999.add(new Invariant(5616, "DataNode.instance.xserver.balanceThrottler.curPeriodStart == 118516245"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() == 118516245);
			}
		});
		invariants5999.add(new Invariant(5617, "NameNode.instance.namesystem.lazyPersistFileScrubberTS == 118515900"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() == 118515900);
			}
		});
		invariants5999.add(new Invariant(5618, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime == 118514559"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() == 118514559);
			}
		});
		invariants5999.add(new Invariant(5619, "NameNode.instance.namesystem.startTime == 1731382409651L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() == 1731382409651L);
			}
		});
		invariants5999.add(new Invariant(5620, "blockManagerInstance.blockReportLeaseManager.nextId == 5932638678100223020L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() == 5932638678100223020L);
			}
		});
		invariants5999.add(new Invariant(5621, "blockManagerInstance.bmSafeMode.startTime == 118515255"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() == 118515255);
			}
		});
		invariants5999.add(new Invariant(5622, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 185410699264L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 185410699264L);
			}
		});
		invariants5999.add(new Invariant(5623, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 69045682176L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 69045682176L);
			}
		});
		invariants5999.add(new Invariant(5624, "blockManagerInstance.invalidateBlocks.startupTime == 118514561"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue() == 118514561);
			}
		});
		invariants5999.add(new Invariant(5625, "blockManagerInstance.lastRedundancyCycleTS == 118518255"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118518255);
			}
		});
		invariants5999.add(new Invariant(5626, "DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS == DataNode.instance.data.asyncDiskService.numDeletedBlocks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5627, "DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS == DataNode.instance.data.cacheManager.numBlocksFailedToUncache"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5628, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 139924 || blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 147137"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 139924 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 147137);
			}
		});
		invariants5999.add(new Invariant(5629, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 185296060416L || blockManagerInstance.heartbeatManager.stats.capacityRemaining == 185313443840L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 185296060416L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 185313443840L);
			}
		});
		invariants5999.add(new Invariant(5630, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 69142888767L || blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 69160279404L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 69142888767L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 69160279404L);
			}
		});
		invariants5999.add(new Invariant(5631, "blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount == 2 || blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount == 3"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue() == 2 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue() == 3);
			}
		});
		invariants5999.add(new Invariant(5632, "blockManagerInstance.lastRedundancyCycleTS == 118536258"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118536258);
			}
		});
		invariants5999.add(new Invariant(5633, "DataNode.instance.data.volsConfigured <= blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5634, "NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS < blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5635, "NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5636, "NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5637, "NameNode.instance.namesystem.dir.maxComponentLength < blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxComponentLength"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5638, "NameNode.instance.namesystem.dir.maxComponentLength < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxComponentLength"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5639, "NameNode.instance.namesystem.dir.maxComponentLength < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxComponentLength"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5640, "blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount < blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5641, "blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants5999.add(new Invariant(5642, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 139924"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 139924);
			}
		});
		invariants5999.add(new Invariant(5643, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 185296060416L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 185296060416L);
			}
		});
		invariants5999.add(new Invariant(5644, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 69160279404L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 69160279404L);
			}
		});
		invariants5999.add(new Invariant(5645, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 147137"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 147137);
			}
		});
		invariants5999.add(new Invariant(5646, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 185313443840L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 185313443840L);
			}
		});
		invariants5999.add(new Invariant(5647, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 69142888767L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 69142888767L);
			}
		});
		invariants5999.add(new Invariant(5648, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 144020"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 144020);
			}
		});
		invariants5999.add(new Invariant(5649, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 185379176448L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 185379176448L);
			}
		});
		invariants5999.add(new Invariant(5650, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 69077159276L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 69077159276L);
			}
		});
		invariants5999.add(new Invariant(5651, "blockManagerInstance.lastRedundancyCycleTS == 118524256"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118524256);
			}
		});
		invariants5999.add(new Invariant(5652, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == 27"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == 27);
			}
		});
		invariants5999.add(new Invariant(5653, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 154410"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 154410);
			}
		});
		invariants5999.add(new Invariant(5654, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 185361907712L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 185361907712L);
			}
		});
		invariants5999.add(new Invariant(5655, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 69094417622L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 69094417622L);
			}
		});
		invariants5999.add(new Invariant(5656, "blockManagerInstance.lastRedundancyCycleTS == 118527256"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118527256);
			}
		});
		invariants5999.add(new Invariant(5657, "blockManagerInstance.lastRedundancyCycleTS == 118521256"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118521256);
			}
		});
		invariants5999.add(new Invariant(5658, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == 27 || DataNode.instance.data.asyncDiskService.numDeletedBlocks == 49 || DataNode.instance.data.asyncDiskService.numDeletedBlocks == 60"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == 27 || ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == 49 || ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == 60);
			}
		});
		invariants5999.add(new Invariant(5659, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache == 60 || DataNode.instance.data.cacheManager.numBlocksFailedToUncache == 89 || DataNode.instance.data.cacheManager.numBlocksFailedToUncache == 113"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() == 60 || ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() == 89 || ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() == 113);
			}
		});
		invariants5999.add(new Invariant(5660, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 162752 || blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 177298"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 162752 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 177298);
			}
		});
		invariants5999.add(new Invariant(5661, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 185226690560L || blockManagerInstance.heartbeatManager.stats.capacityRemaining == 185245106176L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 185226690560L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 185245106176L);
			}
		});
		invariants5999.add(new Invariant(5662, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 69211210816L || blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 69229611886L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 69211210816L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 69229611886L);
			}
		});
		invariants5999.add(new Invariant(5663, "blockManagerInstance.lastRedundancyCycleTS == 118548259"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118548259);
			}
		});
		invariants5999.add(new Invariant(5664, "blockManagerInstance.replQueueCallsSinceReset == 11"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue() == 11);
			}
		});
		invariants5999.add(new Invariant(5665, "DataNode.instance.NUM_CORES != DataNode.instance.data.asyncDiskService.numDeletedBlocks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.NUM_CORES"))).intValue() != ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5666, "DataNode.instance.NUM_CORES < DataNode.instance.data.cacheManager.numBlocksFailedToUncache"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.NUM_CORES"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5667, "DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS != DataNode.instance.data.cacheManager.numBlocksFailedToUncache"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS"))).intValue() != ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5668, "DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS >= DataNode.instance.data.asyncDiskService.numDeletedBlocks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() >= ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5669, "DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS <= DataNode.instance.data.cacheManager.numBlocksFailedToUncache"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() <= ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5670, "DataNode.instance.data.asyncDiskService.numDeletedBlocks <= DataNode.instance.data.cacheManager.numBlocksFailedToUncache"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() <= ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5671, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5672, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < NameNode.instance.namesystem.dir.maxComponentLength"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxComponentLength"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5673, "DataNode.instance.data.asyncDiskService.numDeletedBlocks != blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5674, "DataNode.instance.data.asyncDiskService.numDeletedBlocks > blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5675, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache > DataNode.instance.dnConf.bpReadyTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.bpReadyTimeout"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5676, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache > DataNode.instance.xserver.balanceThrottler.maxThreads"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.maxThreads"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5677, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5678, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache > NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5679, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache != NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() != ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5680, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < NameNode.instance.namesystem.dir.maxComponentLength"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxComponentLength"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5681, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache > NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5682, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache > NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5683, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache > blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5684, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache > blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5685, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5686, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5687, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 139924 || blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 140963"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 139924 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 140963);
			}
		});
		invariants5999.add(new Invariant(5688, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 185280233472L || blockManagerInstance.heartbeatManager.stats.capacityRemaining == 185296060416L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 185280233472L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 185296060416L);
			}
		});
		invariants5999.add(new Invariant(5689, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 69160279404L || blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 69176105309L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 69160279404L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 69176105309L);
			}
		});
		invariants5999.add(new Invariant(5690, "blockManagerInstance.lastRedundancyCycleTS == 118539258"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118539258);
			}
		});
		invariants5999.add(new Invariant(5691, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == 49"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == 49);
			}
		});
		invariants5999.add(new Invariant(5692, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache == 113"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() == 113);
			}
		});
		invariants5999.add(new Invariant(5693, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 177298"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 177298);
			}
		});
		invariants5999.add(new Invariant(5694, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 185226690560L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 185226690560L);
			}
		});
		invariants5999.add(new Invariant(5695, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 69229611886L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 69229611886L);
			}
		});
		invariants5999.add(new Invariant(5696, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 140963"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 140963);
			}
		});
		invariants5999.add(new Invariant(5697, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 185280233472L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 185280233472L);
			}
		});
		invariants5999.add(new Invariant(5698, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 69176105309L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 69176105309L);
			}
		});
		invariants5999.add(new Invariant(5699, "blockManagerInstance.lastRedundancyCycleTS == 118542258"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118542258);
			}
		});
		invariants5999.add(new Invariant(5700, "blockManagerInstance.replQueueCallsSinceReset == 9"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue() == 9);
			}
		});
		invariants5999.add(new Invariant(5701, "blockManagerInstance.lastRedundancyCycleTS == 118539258 || blockManagerInstance.lastRedundancyCycleTS == 118542258"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118539258 || ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118542258);
			}
		});
		invariants5999.add(new Invariant(5702, "blockManagerInstance.replQueueCallsSinceReset == 8 || blockManagerInstance.replQueueCallsSinceReset == 9"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue() == 8 || ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue() == 9);
			}
		});
		invariants5999.add(new Invariant(5703, "NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5704, "NameNode.instance.namesystem.dir.maxComponentLength < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxComponentLength"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5705, "blockManagerInstance.blockReportLeaseManager.maxPending < blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.maxPending"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5706, "blockManagerInstance.replQueueCallsSinceReset > blockManagerInstance.storagePolicySuite.defaultPolicyID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.storagePolicySuite.defaultPolicyID"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5707, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 110772"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 110772);
			}
		});
		invariants5999.add(new Invariant(5708, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 185398968320L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 185398968320L);
			}
		});
		invariants5999.add(new Invariant(5709, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 69057400652L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 69057400652L);
			}
		});
		invariants5999.add(new Invariant(5710, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == 38 || DataNode.instance.data.asyncDiskService.numDeletedBlocks == 50 || DataNode.instance.data.asyncDiskService.numDeletedBlocks == 60"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == 38 || ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == 50 || ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == 60);
			}
		});
		invariants5999.add(new Invariant(5711, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache == 38 || DataNode.instance.data.cacheManager.numBlocksFailedToUncache == 48 || DataNode.instance.data.cacheManager.numBlocksFailedToUncache == 60"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() == 38 || ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() == 48 || ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() == 60);
			}
		});
		invariants5999.add(new Invariant(5712, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 147137 || blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 154410"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 147137 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 154410);
			}
		});
		invariants5999.add(new Invariant(5713, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 185313443840L || blockManagerInstance.heartbeatManager.stats.capacityRemaining == 185332523008L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 185313443840L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 185332523008L);
			}
		});
		invariants5999.add(new Invariant(5714, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 69123802326L || blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 69142888767L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 69123802326L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 69142888767L);
			}
		});
		invariants5999.add(new Invariant(5715, "blockManagerInstance.lastRedundancyCycleTS == 118533257 || blockManagerInstance.lastRedundancyCycleTS == 118536258"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118533257 || ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118536258);
			}
		});
		invariants5999.add(new Invariant(5716, "DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS >= DataNode.instance.data.cacheManager.numBlocksFailedToUncache"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() >= ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5717, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache != DataNode.instance.xserver.balanceThrottler.maxThreads"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() != ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.maxThreads"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5718, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache % blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() % ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue() == 0);
			}
		});
		invariants5999.add(new Invariant(5719, "9539584 * DataNode.instance.data.asyncDiskService.numDeletedBlocks + 11 * blockManagerInstance.heartbeatManager.stats.capacityRemaining + 95395840 * daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE) - 2.03902025728E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (9539584 * ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() + 11 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() + 95395840 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))) - 2.03902025728E12 == 0);
			}
		});
		invariants5999.add(new Invariant(5720, "9539584 * DataNode.instance.data.asyncDiskService.numDeletedBlocks + 11 * blockManagerInstance.heartbeatManager.stats.capacityRemaining + 95395840 * daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)-1 - 2.03892486144E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (9539584 * ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() + 11 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() + 95395840 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0])))-1 - 2.03892486144E12 == 0);
			}
		});
		invariants5999.add(new Invariant(5721, "9539584 * DataNode.instance.data.cacheManager.numBlocksFailedToUncache + 11 * blockManagerInstance.heartbeatManager.stats.capacityRemaining + 114475008 * daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE) - 2.03902025728E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (9539584 * ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() + 11 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() + 114475008 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))) - 2.03902025728E12 == 0);
			}
		});
		invariants5999.add(new Invariant(5722, "9539584 * DataNode.instance.data.cacheManager.numBlocksFailedToUncache + 11 * blockManagerInstance.heartbeatManager.stats.capacityRemaining + 114475008 * daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)-1 - 2.038905782272E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (9539584 * ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() + 11 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() + 114475008 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0])))-1 - 2.038905782272E12 == 0);
			}
		});
		invariants5999.add(new Invariant(5723, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 142981"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 142981);
			}
		});
		invariants5999.add(new Invariant(5724, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 185347129344L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 185347129344L);
			}
		});
		invariants5999.add(new Invariant(5725, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 69109215611L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 69109215611L);
			}
		});
		invariants5999.add(new Invariant(5726, "blockManagerInstance.lastRedundancyCycleTS == 118527256 || blockManagerInstance.lastRedundancyCycleTS == 118530257"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118527256 || ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118530257);
			}
		});
		invariants5999.add(new Invariant(5727, "blockManagerInstance.replQueueCallsSinceReset == 4 || blockManagerInstance.replQueueCallsSinceReset == 5"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue() == 4 || ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue() == 5);
			}
		});
		invariants5999.add(new Invariant(5728, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME <= blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5729, "blockManagerInstance.lastRedundancyCycleTS == 118530257"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118530257);
			}
		});
		invariants5999.add(new Invariant(5730, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 152362"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 152362);
			}
		});
		invariants5999.add(new Invariant(5731, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 185260982272L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 185260982272L);
			}
		});
		invariants5999.add(new Invariant(5732, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 69195345110L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 69195345110L);
			}
		});
		invariants5999.add(new Invariant(5733, "blockManagerInstance.lastRedundancyCycleTS == 118542258 || blockManagerInstance.lastRedundancyCycleTS == 118545259"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118542258 || ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118545259);
			}
		});
		invariants5999.add(new Invariant(5734, "blockManagerInstance.replQueueCallsSinceReset == 9 || blockManagerInstance.replQueueCallsSinceReset == 10"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue() == 9 || ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue() == 10);
			}
		});
		invariants5999.add(new Invariant(5735, "DataNode.instance.diskBalancer.bandwidth >= blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.bandwidth"))).intValue() >= ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5736, "DataNode.instance.diskBalancer.bandwidth == blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.bandwidth"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5737, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 162752"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 162752);
			}
		});
		invariants5999.add(new Invariant(5738, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 185245106176L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 185245106176L);
			}
		});
		invariants5999.add(new Invariant(5739, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 69211210816L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 69211210816L);
			}
		});
		invariants5999.add(new Invariant(5740, "blockManagerInstance.lastRedundancyCycleTS == 118545259"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118545259);
			}
		});
		invariants5999.add(new Invariant(5741, "blockManagerInstance.lastRedundancyCycleTS == 118536258 || blockManagerInstance.lastRedundancyCycleTS == 118539258"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118536258 || ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118539258);
			}
		});
		invariants5999.add(new Invariant(5742, "blockManagerInstance.replQueueCallsSinceReset >= blockManagerInstance.storagePolicySuite.defaultPolicyID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue() >= ((Number)(InvariantChecker.getValue("blockManagerInstance.storagePolicySuite.defaultPolicyID"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5743, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME == DataNode.instance.volumeChecker.numSkippedChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSkippedChecks"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5744, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME == blockManagerInstance.bmSafeMode.blockReplQueueThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.blockReplQueueThreshold"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5745, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME == blockManagerInstance.bmSafeMode.blockSafe"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.blockSafe"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5746, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME == blockManagerInstance.bmSafeMode.blockThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.blockThreshold"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5747, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5748, "DataNode.instance.data.volsConfigured == blockManagerInstance.bmSafeMode.blockTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.blockTotal"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5749, "blockManagerInstance.bmSafeMode.lastStatusReport == blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.lastStatusReport"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5750, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, blockManagerInstance.bmSafeMode.blockTotal-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.blockTotal"))).intValue()-1));
			}
		});
		invariants5999.add(new Invariant(5751, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.numDeletedBlocks) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.volumeChecker.numSkippedChecks-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSkippedChecks"))).intValue()-1));
			}
		});
		invariants5999.add(new Invariant(5752, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.numDeletedBlocks) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, blockManagerInstance.bmSafeMode.blockReplQueueThreshold-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.blockReplQueueThreshold"))).intValue()-1));
			}
		});
		invariants5999.add(new Invariant(5753, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.numDeletedBlocks) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, blockManagerInstance.bmSafeMode.blockSafe-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.blockSafe"))).intValue()-1));
			}
		});
		invariants5999.add(new Invariant(5754, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.numDeletedBlocks) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, blockManagerInstance.bmSafeMode.blockThreshold-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.blockThreshold"))).intValue()-1));
			}
		});
		invariants5999.add(new Invariant(5755, "DataNode.instance.id.infoPort == 42037"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() == 42037);
			}
		});
		invariants5999.add(new Invariant(5756, "DataNode.instance.id.ipcPort == 40665"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() == 40665);
			}
		});
		invariants5999.add(new Invariant(5757, "DataNode.instance.id.nsInfo.cTime == 1731382346909L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() == 1731382346909L);
			}
		});
		invariants5999.add(new Invariant(5758, "DataNode.instance.id.nsInfo.namespaceID == 1028734054"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() == 1028734054);
			}
		});
		invariants5999.add(new Invariant(5759, "DataNode.instance.id.xferPort == 41813"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() == 41813);
			}
		});
		invariants5999.add(new Invariant(5760, "DataNode.instance.lastDiskErrorCheck == 118456694"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() == 118456694);
			}
		});
		invariants5999.add(new Invariant(5761, "DataNode.instance.storage.namespaceID == 226535997"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() == 226535997);
			}
		});
		invariants5999.add(new Invariant(5762, "DataNode.instance.volumeChecker.lastAllVolumesCheck == 118456252"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() == 118456252);
			}
		});
		invariants5999.add(new Invariant(5763, "DataNode.instance.xserver.balanceThrottler.curPeriodStart == 118455282"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() == 118455282);
			}
		});
		invariants5999.add(new Invariant(5764, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE == 54"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() == 54);
			}
		});
		invariants5999.add(new Invariant(5765, "NameNode.instance.namesystem.fsImage.lastAppliedTxId == 39"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() == 39);
			}
		});
		invariants5999.add(new Invariant(5766, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118483782601614L || NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118485379598313L || NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118485384859832L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118483782601614L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118485379598313L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118485384859832L);
			}
		});
		invariants5999.add(new Invariant(5767, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime == 118479033"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() == 118479033);
			}
		});
		invariants5999.add(new Invariant(5768, "NameNode.instance.namesystem.startTime == 1731382374125L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() == 1731382374125L);
			}
		});
		invariants5999.add(new Invariant(5769, "blockManagerInstance.blockReportLeaseManager.nextId == 8708349875696419992L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() == 8708349875696419992L);
			}
		});
		invariants5999.add(new Invariant(5770, "blockManagerInstance.bmSafeMode.lastStatusReport == 118479375"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.lastStatusReport"))).intValue() == 118479375);
			}
		});
		invariants5999.add(new Invariant(5771, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 98376"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 98376);
			}
		});
		invariants5999.add(new Invariant(5772, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 185565659136L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 185565659136L);
			}
		});
		invariants5999.add(new Invariant(5773, "blockManagerInstance.heartbeatManager.stats.capacityUsed == 217493"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 217493);
			}
		});
		invariants5999.add(new Invariant(5774, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 68890603115L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 68890603115L);
			}
		});
		invariants5999.add(new Invariant(5775, "blockManagerInstance.invalidateBlocks.startupTime == 118479044"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue() == 118479044);
			}
		});
		invariants5999.add(new Invariant(5776, "blockManagerInstance.lastRedundancyCycleTS == 118482378 || blockManagerInstance.lastRedundancyCycleTS == 118485379"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118482378 || ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118485379);
			}
		});
		invariants5999.add(new Invariant(5777, "blockManagerInstance.lowRedundancyBlocksCount == 1 || blockManagerInstance.lowRedundancyBlocksCount == 2"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue() == 1 || ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue() == 2);
			}
		});
		invariants5999.add(new Invariant(5778, "daikon.Quant.fuzzy.eq(blockManagerInstance.reconstructionQueuesInitProgress, 1.0)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.fuzzy.eq(((Number)(InvariantChecker.getValue("blockManagerInstance.reconstructionQueuesInitProgress"))).doubleValue(), 1.0));
			}
		});
		invariants5999.add(new Invariant(5779, "blockManagerInstance.replQueueCallsSinceReset == 1 || blockManagerInstance.replQueueCallsSinceReset == 2"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue() == 1 || ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue() == 2);
			}
		});
		invariants5999.add(new Invariant(5780, "DataNode.instance.NUM_CORES > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.NUM_CORES"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5781, "DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5782, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME <= blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5783, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME <= blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5784, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5785, "DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5786, "DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5787, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5788, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5789, "DataNode.instance.data.cacheManager.revocationMs > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5790, "DataNode.instance.data.cacheManager.revocationPollingMs > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationPollingMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5791, "DataNode.instance.data.maxDataLength > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.maxDataLength"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5792, "DataNode.instance.data.smallBufferSize > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.smallBufferSize"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5793, "DataNode.instance.data.volsConfigured >= blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue() >= ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5794, "DataNode.instance.directoryScanner.MILLIS_PER_SECOND > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.MILLIS_PER_SECOND"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5795, "DataNode.instance.directoryScanner.scanPeriodMsecs > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.scanPeriodMsecs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5796, "DataNode.instance.diskBalancer.bandwidth > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.bandwidth"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5797, "DataNode.instance.diskBalancer.planValidityInterval > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.planValidityInterval"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5798, "DataNode.instance.dnConf.blockReportSplitThreshold > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportSplitThreshold"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5799, "DataNode.instance.dnConf.bpReadyTimeout > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.bpReadyTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5800, "DataNode.instance.dnConf.cacheReportInterval > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.cacheReportInterval"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5801, "DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5802, "DataNode.instance.dnConf.heartBeatInterval > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.heartBeatInterval"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5803, "DataNode.instance.dnConf.lifelineIntervalMs > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.lifelineIntervalMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5804, "DataNode.instance.dnConf.outliersReportIntervalMs > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.outliersReportIntervalMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5805, "DataNode.instance.dnConf.readaheadLength > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.readaheadLength"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5806, "DataNode.instance.dnConf.restartReplicaExpiry > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.restartReplicaExpiry"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5807, "DataNode.instance.dnConf.socketKeepaliveTimeout > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketKeepaliveTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5808, "DataNode.instance.dnConf.socketTimeout > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5809, "DataNode.instance.dnConf.socketWriteTimeout > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketWriteTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5810, "DataNode.instance.id.infoPort > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5811, "DataNode.instance.id.ipcPort > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5812, "DataNode.instance.id.nsInfo.cTime > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5813, "DataNode.instance.id.nsInfo.layoutVersion < blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5814, "DataNode.instance.id.nsInfo.namespaceID > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5815, "DataNode.instance.id.xferPort > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5816, "DataNode.instance.lastDiskErrorCheck > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5817, "DataNode.instance.shortCircuitRegistry.SHM_LENGTH > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.shortCircuitRegistry.SHM_LENGTH"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5818, "DataNode.instance.storage.layoutVersion < blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5819, "DataNode.instance.storage.namespaceID > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5820, "DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5821, "DataNode.instance.volumeChecker.lastAllVolumesCheck > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5822, "DataNode.instance.xserver.balanceThrottler.bytesPerPeriod > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.bytesPerPeriod"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5823, "DataNode.instance.xserver.balanceThrottler.curPeriodStart > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5824, "DataNode.instance.xserver.balanceThrottler.maxThreads > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.maxThreads"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5825, "DataNode.instance.xserver.balanceThrottler.periodExtension > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.periodExtension"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5826, "DataNode.instance.xserver.estimateBlockSize > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.estimateBlockSize"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5827, "DataNode.instance.xserver.maxXceiverCount > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.maxXceiverCount"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5828, "NameNode.instance.DEFAULT_PORT > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.DEFAULT_PORT"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5829, "NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5830, "NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5831, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5832, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size < blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5833, "NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5834, "NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5835, "NameNode.instance.namesystem.dir.maxComponentLength > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxComponentLength"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5836, "NameNode.instance.namesystem.dir.maxDirItems > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxDirItems"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5837, "NameNode.instance.namesystem.dir.xattrMaxSize > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.xattrMaxSize"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5838, "NameNode.instance.namesystem.editLogRollerThreshold > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogRollerThreshold"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5839, "NameNode.instance.namesystem.fsImage.lastAppliedTxId < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5840, "NameNode.instance.namesystem.fsImage.lastAppliedTxId > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5841, "NameNode.instance.namesystem.fsImage.lastAppliedTxId > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5842, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos > blockManagerInstance.bmSafeMode.lastStatusReport"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.lastStatusReport"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5843, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos > blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5844, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos % blockManagerInstance.lowRedundancyBlocksCount == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() % ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue() == 0);
			}
		});
		invariants5999.add(new Invariant(5845, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5846, "NameNode.instance.namesystem.leaseManager.hardLimit > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.hardLimit"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5847, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5848, "NameNode.instance.namesystem.leaseRecheckIntervalMs > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseRecheckIntervalMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5849, "NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5850, "NameNode.instance.namesystem.nnResourceChecker.duReserved > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.nnResourceChecker.duReserved"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5851, "NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5852, "NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5853, "NameNode.instance.namesystem.startTime > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5854, "blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5855, "blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5856, "blockManagerInstance.blockReportLeaseManager.maxPending > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.maxPending"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5857, "blockManagerInstance.blockReportLeaseManager.nextId > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5858, "blockManagerInstance.blocksMap.capacity > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blocksMap.capacity"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5859, "blockManagerInstance.bmSafeMode.lastStatusReport < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.lastStatusReport"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5860, "blockManagerInstance.bmSafeMode.lastStatusReport > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.lastStatusReport"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5861, "blockManagerInstance.bmSafeMode.lastStatusReport > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.lastStatusReport"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5862, "blockManagerInstance.datanodeManager.defaultInfoPort > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoPort"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5863, "blockManagerInstance.datanodeManager.defaultInfoSecurePort > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoSecurePort"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5864, "blockManagerInstance.datanodeManager.defaultIpcPort > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultIpcPort"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5865, "blockManagerInstance.datanodeManager.defaultXferPort > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultXferPort"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5866, "blockManagerInstance.datanodeManager.heartbeatExpireInterval > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatExpireInterval"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5867, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5868, "blockManagerInstance.heartbeatManager.stats.capacityRemaining > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5869, "blockManagerInstance.heartbeatManager.stats.capacityTotal > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5870, "blockManagerInstance.heartbeatManager.stats.capacityUsed < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5871, "blockManagerInstance.heartbeatManager.stats.capacityUsed > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5872, "blockManagerInstance.heartbeatManager.stats.capacityUsed > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5873, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5874, "blockManagerInstance.invalidateBlocks.startupTime > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5875, "blockManagerInstance.lastRedundancyCycleTS > blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5876, "blockManagerInstance.lowRedundancyBlocksCount < blockManagerInstance.neededReconstruction.LEVEL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.LEVEL"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5877, "blockManagerInstance.lowRedundancyBlocksCount < blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5878, "blockManagerInstance.lowRedundancyBlocksCount < blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5879, "blockManagerInstance.lowRedundancyBlocksCount < blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5880, "blockManagerInstance.lowRedundancyBlocksCount < blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5881, "blockManagerInstance.lowRedundancyBlocksCount != blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5882, "blockManagerInstance.lowRedundancyBlocksCount < blockManagerInstance.replQueueResetToHeadThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueResetToHeadThreshold"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5883, "blockManagerInstance.lowRedundancyBlocksCount < blockManagerInstance.storagePolicySuite.defaultPolicyID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.storagePolicySuite.defaultPolicyID"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5884, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE == 26"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() == 26);
			}
		});
		invariants5999.add(new Invariant(5885, "NameNode.instance.namesystem.lazyPersistFileScrubberTS == 118454999"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() == 118454999);
			}
		});
		invariants5999.add(new Invariant(5886, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime == 118454619"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() == 118454619);
			}
		});
		invariants5999.add(new Invariant(5887, "NameNode.instance.namesystem.startTime == 1731382349711L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() == 1731382349711L);
			}
		});
		invariants5999.add(new Invariant(5888, "blockManagerInstance.blockReportLeaseManager.nextId == 6073730542720156053L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() == 6073730542720156053L);
			}
		});
		invariants5999.add(new Invariant(5889, "blockManagerInstance.bmSafeMode.startTime == 118454963"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() == 118454963);
			}
		});
		invariants5999.add(new Invariant(5890, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 185594593280L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 185594593280L);
			}
		});
		invariants5999.add(new Invariant(5891, "blockManagerInstance.heartbeatManager.stats.capacityUsed == 196608"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 196608);
			}
		});
		invariants5999.add(new Invariant(5892, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 68861689856L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 68861689856L);
			}
		});
		invariants5999.add(new Invariant(5893, "blockManagerInstance.invalidateBlocks.startupTime == 118454624"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue() == 118454624);
			}
		});
		invariants5999.add(new Invariant(5894, "blockManagerInstance.heartbeatManager.stats.capacityUsed > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants5999.add(new Invariant(5895, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME == blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5896, "blockManagerInstance.blockReportLeaseManager.maxPending == blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.maxPending"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5897, "blockManagerInstance.blockReportLeaseManager.maxPending == blockManagerInstance.heartbeatManager.stats.xceiverCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.maxPending"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.xceiverCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5898, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.numDeletedBlocks) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, blockManagerInstance.lowRedundancyBlocksCount-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue()-1));
			}
		});
		invariants5999.add(new Invariant(5899, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118487384979154L || NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118488379991860L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118487384979154L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118488379991860L);
			}
		});
		invariants5999.add(new Invariant(5900, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 185540689920L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 185540689920L);
			}
		});
		invariants5999.add(new Invariant(5901, "blockManagerInstance.heartbeatManager.stats.capacityUsed == 235204"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 235204);
			}
		});
		invariants5999.add(new Invariant(5902, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 68915554620L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 68915554620L);
			}
		});
		invariants5999.add(new Invariant(5903, "blockManagerInstance.lastRedundancyCycleTS == 118485379 || blockManagerInstance.lastRedundancyCycleTS == 118488380"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118485379 || ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118488380);
			}
		});
		invariants5999.add(new Invariant(5904, "blockManagerInstance.replQueueCallsSinceReset == 2 || blockManagerInstance.replQueueCallsSinceReset == 3"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue() == 2 || ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue() == 3);
			}
		});
		invariants5999.add(new Invariant(5905, "DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION >= blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue() >= ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5906, "DataNode.instance.data.volsConfigured <= blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5907, "DataNode.instance.data.cacheManager.numBlocksCached == NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5908, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.cacheManager.numBlocksCached) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.volumeChecker.numSkippedChecks-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSkippedChecks"))).intValue()-1));
			}
		});
		invariants5999.add(new Invariant(5909, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.cacheManager.numBlocksCached) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, blockManagerInstance.bmSafeMode.blockReplQueueThreshold-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.blockReplQueueThreshold"))).intValue()-1));
			}
		});
		invariants5999.add(new Invariant(5910, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.cacheManager.numBlocksCached) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, blockManagerInstance.bmSafeMode.blockSafe-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.blockSafe"))).intValue()-1));
			}
		});
		invariants5999.add(new Invariant(5911, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.cacheManager.numBlocksCached) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, blockManagerInstance.bmSafeMode.blockThreshold-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.blockThreshold"))).intValue()-1));
			}
		});
		invariants5999.add(new Invariant(5912, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.cacheManager.numBlocksCached) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, blockManagerInstance.lowRedundancyBlocksCount-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue()-1));
			}
		});
		invariants5999.add(new Invariant(5913, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118499385785616L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118499385785616L);
			}
		});
		invariants5999.add(new Invariant(5914, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 185473691648L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 185473691648L);
			}
		});
		invariants5999.add(new Invariant(5915, "blockManagerInstance.heartbeatManager.stats.capacityUsed == 230976"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 230976);
			}
		});
		invariants5999.add(new Invariant(5916, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 68982553024L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 68982553024L);
			}
		});
		invariants5999.add(new Invariant(5917, "blockManagerInstance.lastRedundancyCycleTS == 118497381"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118497381);
			}
		});
		invariants5999.add(new Invariant(5918, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118489385080143L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118489385080143L);
			}
		});
		invariants5999.add(new Invariant(5919, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 185521025024L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 185521025024L);
			}
		});
		invariants5999.add(new Invariant(5920, "blockManagerInstance.heartbeatManager.stats.capacityUsed == 249678"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 249678);
			}
		});
		invariants5999.add(new Invariant(5921, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 68935200946L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 68935200946L);
			}
		});
		invariants5999.add(new Invariant(5922, "blockManagerInstance.lastRedundancyCycleTS == 118488380"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118488380);
			}
		});
		invariants5999.add(new Invariant(5923, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118500381363203L || NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118501385937639L || NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118501408738383L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118500381363203L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118501385937639L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118501408738383L);
			}
		});
		invariants5999.add(new Invariant(5924, "blockManagerInstance.lastRedundancyCycleTS == 118500381"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118500381);
			}
		});
		invariants5999.add(new Invariant(5925, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118491385213075L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118491385213075L);
			}
		});
		invariants5999.add(new Invariant(5926, "blockManagerInstance.lastRedundancyCycleTS == 118491380"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118491380);
			}
		});
		invariants5999.add(new Invariant(5927, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == 8"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == 8);
			}
		});
		invariants5999.add(new Invariant(5928, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache == 72"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() == 72);
			}
		});
		invariants5999.add(new Invariant(5929, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118506382376032L || NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118507386343319L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118506382376032L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118507386343319L);
			}
		});
		invariants5999.add(new Invariant(5930, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 185435037696L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 185435037696L);
			}
		});
		invariants5999.add(new Invariant(5931, "blockManagerInstance.heartbeatManager.stats.capacityUsed == 263215"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 263215);
			}
		});
		invariants5999.add(new Invariant(5932, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 69021187025L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 69021187025L);
			}
		});
		invariants5999.add(new Invariant(5933, "blockManagerInstance.lastRedundancyCycleTS == 118506382"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118506382);
			}
		});
		invariants5999.add(new Invariant(5934, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118485707278107L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118485707278107L);
			}
		});
		invariants5999.add(new Invariant(5935, "blockManagerInstance.lastRedundancyCycleTS == 118485379"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118485379);
			}
		});
		invariants5999.add(new Invariant(5936, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118509393319764L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118509393319764L);
			}
		});
		invariants5999.add(new Invariant(5937, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 185417842688L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 185417842688L);
			}
		});
		invariants5999.add(new Invariant(5938, "blockManagerInstance.heartbeatManager.stats.capacityUsed == 254873"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 254873);
			}
		});
		invariants5999.add(new Invariant(5939, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 69038382183L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 69038382183L);
			}
		});
		invariants5999.add(new Invariant(5940, "blockManagerInstance.lastRedundancyCycleTS == 118509382"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118509382);
			}
		});
		invariants5999.add(new Invariant(5941, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118488379991860L || NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118489385080143L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118488379991860L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118489385080143L);
			}
		});
		invariants5999.add(new Invariant(5942, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118499385785616L || NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118500381363203L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118499385785616L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118500381363203L);
			}
		});
		invariants5999.add(new Invariant(5943, "blockManagerInstance.lastRedundancyCycleTS == 118497381 || blockManagerInstance.lastRedundancyCycleTS == 118500381"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118497381 || ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118500381);
			}
		});
		invariants5999.add(new Invariant(5944, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118503386095075L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118503386095075L);
			}
		});
		invariants5999.add(new Invariant(5945, "blockManagerInstance.lastRedundancyCycleTS == 118503381"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118503381);
			}
		});
		invariants5999.add(new Invariant(5946, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118501408738383L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118501408738383L);
			}
		});
		invariants5999.add(new Invariant(5947, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 185451757568L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 185451757568L);
			}
		});
		invariants5999.add(new Invariant(5948, "blockManagerInstance.heartbeatManager.stats.capacityUsed == 238279"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 238279);
			}
		});
		invariants5999.add(new Invariant(5949, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 69004483897L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 69004483897L);
			}
		});
		invariants5999.add(new Invariant(5950, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118495385518141L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118495385518141L);
			}
		});
		invariants5999.add(new Invariant(5951, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 185482870784L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 185482870784L);
			}
		});
		invariants5999.add(new Invariant(5952, "blockManagerInstance.heartbeatManager.stats.capacityUsed == 255912"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 255912);
			}
		});
		invariants5999.add(new Invariant(5953, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 68973353048L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 68973353048L);
			}
		});
		invariants5999.add(new Invariant(5954, "blockManagerInstance.lastRedundancyCycleTS == 118494380"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118494380);
			}
		});
		invariants5999.add(new Invariant(5955, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118491385213075L || NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118493385358730L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118491385213075L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118493385358730L);
			}
		});
		invariants5999.add(new Invariant(5956, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 185500205056L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 185500205056L);
			}
		});
		invariants5999.add(new Invariant(5957, "blockManagerInstance.heartbeatManager.stats.capacityUsed == 264224"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 264224);
			}
		});
		invariants5999.add(new Invariant(5958, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 68956010464L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 68956010464L);
			}
		});
		invariants5999.add(new Invariant(5959, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118493385358730L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118493385358730L);
			}
		});
		invariants5999.add(new Invariant(5960, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118494380683880L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118494380683880L);
			}
		});
		invariants5999.add(new Invariant(5961, "DataNode.instance.data.volsConfigured == blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5962, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, blockManagerInstance.lowRedundancyBlocksCount-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue()-1));
			}
		});
		invariants5999.add(new Invariant(5963, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118483782601614L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118483782601614L);
			}
		});
		invariants5999.add(new Invariant(5964, "blockManagerInstance.lastRedundancyCycleTS == 118482378"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118482378);
			}
		});
		invariants5999.add(new Invariant(5965, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == 8 || DataNode.instance.data.asyncDiskService.numDeletedBlocks == 60 || DataNode.instance.data.asyncDiskService.numDeletedBlocks == 63"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == 8 || ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == 60 || ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == 63);
			}
		});
		invariants5999.add(new Invariant(5966, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache == 60 || DataNode.instance.data.cacheManager.numBlocksFailedToUncache == 62 || DataNode.instance.data.cacheManager.numBlocksFailedToUncache == 72"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() == 60 || ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() == 62 || ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() == 72);
			}
		});
		invariants5999.add(new Invariant(5967, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 185451757568L || blockManagerInstance.heartbeatManager.stats.capacityRemaining == 185473691648L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 185451757568L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 185473691648L);
			}
		});
		invariants5999.add(new Invariant(5968, "blockManagerInstance.heartbeatManager.stats.capacityUsed == 230976 || blockManagerInstance.heartbeatManager.stats.capacityUsed == 238279"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 230976 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue() == 238279);
			}
		});
		invariants5999.add(new Invariant(5969, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 68982553024L || blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 69004483897L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 68982553024L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 69004483897L);
			}
		});
		invariants5999.add(new Invariant(5970, "DataNode.instance.NUM_CORES < blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.NUM_CORES"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5971, "DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs < blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5972, "DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION < blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5973, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME < blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5974, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME < blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5975, "DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS < blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5976, "DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS < blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5977, "DataNode.instance.data.asyncDiskService.numDeletedBlocks != DataNode.instance.diskBalancer.bandwidth"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() != ((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.bandwidth"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5978, "DataNode.instance.data.asyncDiskService.numDeletedBlocks != NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() != ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5979, "DataNode.instance.data.asyncDiskService.numDeletedBlocks != NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() != ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5980, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < blockManagerInstance.bmSafeMode.lastStatusReport"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.lastStatusReport"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5981, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5982, "DataNode.instance.data.asyncDiskService.numDeletedBlocks != blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5983, "DataNode.instance.data.cacheManager.numBlocksCached < blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5984, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < DataNode.instance.storage.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5985, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache > NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5986, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < blockManagerInstance.bmSafeMode.lastStatusReport"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.lastStatusReport"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5987, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5988, "DataNode.instance.data.cacheManager.revocationMs > blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5989, "DataNode.instance.data.cacheManager.revocationPollingMs < blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationPollingMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5990, "DataNode.instance.data.maxDataLength > blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.maxDataLength"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5991, "DataNode.instance.data.smallBufferSize < blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.smallBufferSize"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5992, "DataNode.instance.directoryScanner.MILLIS_PER_SECOND < blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.MILLIS_PER_SECOND"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5993, "DataNode.instance.directoryScanner.scanPeriodMsecs > blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.scanPeriodMsecs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5994, "DataNode.instance.diskBalancer.bandwidth < blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.bandwidth"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5995, "DataNode.instance.diskBalancer.planValidityInterval > blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.planValidityInterval"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5996, "DataNode.instance.dnConf.blockReportSplitThreshold > blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportSplitThreshold"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5997, "DataNode.instance.dnConf.bpReadyTimeout < blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.bpReadyTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5998, "DataNode.instance.dnConf.cacheReportInterval < blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.cacheReportInterval"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants5999.add(new Invariant(5999, "DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs < blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
	}
	static {
installInv5999();	}
}
