package daikon.hdfs;
import daikon.*;
import java.util.Set;
import java.util.ArrayList;
import java.util.List;
//this class is automatically generated by our scripts
public class InvariantPool999{

	public static List<Invariant> invariants999 = new ArrayList<>();

	public static void installInv999(){
		invariants999.add(new Invariant(0, "DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT == daikon.Quant.size(DataNode.instance.directoryScanner.diffs_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("DataNode.instance.directoryScanner.diffs")).toArray(new Object[0])))-1);
			}
		});
		invariants999.add(new Invariant(1, "DataNode.instance.NUM_CORES == NameNode.instance.namesystem.dir.inodeXAttrsLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.NUM_CORES"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.inodeXAttrsLimit"))).intValue());
			}
		});
		invariants999.add(new Invariant(2, "DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs == NameNode.instance.namesystem.cacheManager.scanIntervalMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.scanIntervalMs"))).intValue());
			}
		});
		invariants999.add(new Invariant(3, "DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs == blockManagerInstance.datanodeManager.staleInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.staleInterval"))).intValue());
			}
		});
		invariants999.add(new Invariant(4, "DataNode.instance.cacheReportsDisabledForTests == DataNode.instance.connectToDnViaHostname"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.cacheReportsDisabledForTests"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("DataNode.instance.connectToDnViaHostname"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(5, "DataNode.instance.cacheReportsDisabledForTests == DataNode.instance.data.blockPinningEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.cacheReportsDisabledForTests"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("DataNode.instance.data.blockPinningEnabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(6, "DataNode.instance.cacheReportsDisabledForTests == DataNode.instance.directoryScanner.retainDiffs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.cacheReportsDisabledForTests"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("DataNode.instance.directoryScanner.retainDiffs"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(7, "DataNode.instance.cacheReportsDisabledForTests == DataNode.instance.dnConf.allowNonLocalLazyPersist"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.cacheReportsDisabledForTests"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.allowNonLocalLazyPersist"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(8, "DataNode.instance.cacheReportsDisabledForTests == DataNode.instance.fileIoProvider.profilingEventHook.isEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.cacheReportsDisabledForTests"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("DataNode.instance.fileIoProvider.profilingEventHook.isEnabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(9, "DataNode.instance.cacheReportsDisabledForTests == DataNode.instance.heartbeatsDisabledForTests"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.cacheReportsDisabledForTests"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("DataNode.instance.heartbeatsDisabledForTests"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(10, "DataNode.instance.cacheReportsDisabledForTests == DataNode.instance.ibrDisabledForTests"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.cacheReportsDisabledForTests"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("DataNode.instance.ibrDisabledForTests"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(11, "DataNode.instance.cacheReportsDisabledForTests == DataNode.instance.id.exportedKeys.isBlockTokenEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.cacheReportsDisabledForTests"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("DataNode.instance.id.exportedKeys.isBlockTokenEnabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(12, "DataNode.instance.cacheReportsDisabledForTests == DataNode.instance.isBlockTokenEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.cacheReportsDisabledForTests"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("DataNode.instance.isBlockTokenEnabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(13, "DataNode.instance.cacheReportsDisabledForTests == DataNode.instance.pipelineSupportECN"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.cacheReportsDisabledForTests"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("DataNode.instance.pipelineSupportECN"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(14, "DataNode.instance.cacheReportsDisabledForTests == DataNode.instance.shortCircuitRegistry.enabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.cacheReportsDisabledForTests"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("DataNode.instance.shortCircuitRegistry.enabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(15, "DataNode.instance.cacheReportsDisabledForTests == DataNode.instance.shutdownForUpgrade"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.cacheReportsDisabledForTests"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("DataNode.instance.shutdownForUpgrade"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(16, "DataNode.instance.cacheReportsDisabledForTests == DataNode.instance.shutdownInProgress"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.cacheReportsDisabledForTests"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("DataNode.instance.shutdownInProgress"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(17, "DataNode.instance.cacheReportsDisabledForTests == blockManagerInstance.bmSafeMode.haEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.cacheReportsDisabledForTests"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.haEnabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(18, "DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION == blockManagerInstance.datanodeManager.heartbeatIntervalSeconds"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatIntervalSeconds"))).intValue());
			}
		});
		invariants999.add(new Invariant(19, "DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION == daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(20, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME == DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME"))).intValue());
			}
		});
		invariants999.add(new Invariant(21, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME == DataNode.instance.directoryScanner.diffs.serialVersionUID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.diffs.serialVersionUID"))).intValue());
			}
		});
		invariants999.add(new Invariant(22, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME == DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue());
			}
		});
		invariants999.add(new Invariant(23, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME == DataNode.instance.id.nsInfo.CAPABILITIES_SUPPORTED"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.CAPABILITIES_SUPPORTED"))).intValue());
			}
		});
		invariants999.add(new Invariant(24, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME == DataNode.instance.id.nsInfo.capabilities"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.capabilities"))).intValue());
			}
		});
		invariants999.add(new Invariant(25, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME == DataNode.instance.volumeChecker.numSyncDatasetChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue());
			}
		});
		invariants999.add(new Invariant(26, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME == blockManagerInstance.bmSafeMode.safeReplication"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.safeReplication"))).intValue());
			}
		});
		invariants999.add(new Invariant(27, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME == blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants999.add(new Invariant(28, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME == DataNode.instance.httpServer.HTTP_MAX_THREADS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_MAX_THREADS"))).intValue());
			}
		});
		invariants999.add(new Invariant(29, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME == blockManagerInstance.blockReportThread.MAX_LOCK_HOLD_MS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportThread.MAX_LOCK_HOLD_MS"))).intValue());
			}
		});
		invariants999.add(new Invariant(30, "DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS == DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS"))).intValue());
			}
		});
		invariants999.add(new Invariant(31, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == DataNode.instance.data.cacheManager.numBlocksCached"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue());
			}
		});
		invariants999.add(new Invariant(32, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == DataNode.instance.directoryScanner.timeRunningMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.timeRunningMs"))).intValue());
			}
		});
		invariants999.add(new Invariant(33, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == DataNode.instance.directoryScanner.timeWaitingMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.timeWaitingMs"))).intValue());
			}
		});
		invariants999.add(new Invariant(34, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == DataNode.instance.diskBalancer.currentResult.result"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.currentResult.result"))).intValue());
			}
		});
		invariants999.add(new Invariant(35, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == DataNode.instance.dnConf.ibrInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue());
			}
		});
		invariants999.add(new Invariant(36, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == DataNode.instance.fileIoProvider.profilingEventHook.sampleRangeMax"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.fileIoProvider.profilingEventHook.sampleRangeMax"))).intValue());
			}
		});
		invariants999.add(new Invariant(37, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == DataNode.instance.id.exportedKeys.keyUpdateInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.id.exportedKeys.keyUpdateInterval"))).intValue());
			}
		});
		invariants999.add(new Invariant(38, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == DataNode.instance.id.exportedKeys.tokenLifetime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.id.exportedKeys.tokenLifetime"))).intValue());
			}
		});
		invariants999.add(new Invariant(39, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == DataNode.instance.id.infoSecurePort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.id.infoSecurePort"))).intValue());
			}
		});
		invariants999.add(new Invariant(40, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == DataNode.instance.infoSecurePort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.infoSecurePort"))).intValue());
			}
		});
		invariants999.add(new Invariant(41, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == DataNode.instance.xmitsInProgress"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.xmitsInProgress"))).intValue());
			}
		});
		invariants999.add(new Invariant(42, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == blockManagerInstance.blockIdManager.legacyGenerationStampLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStampLimit"))).intValue());
			}
		});
		invariants999.add(new Invariant(43, "DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME == DataNode.instance.data.asyncLazyPersistService.MAXIMUM_THREADS_PER_VOLUME"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.MAXIMUM_THREADS_PER_VOLUME"))).intValue());
			}
		});
		invariants999.add(new Invariant(44, "DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME == DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue());
			}
		});
		invariants999.add(new Invariant(45, "DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME == DataNode.instance.volumeChecker.numSyncDatasetChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue());
			}
		});
		invariants999.add(new Invariant(46, "DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME == blockManagerInstance.bmSafeMode.safeReplication"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.safeReplication"))).intValue());
			}
		});
		invariants999.add(new Invariant(47, "DataNode.instance.data.blockPinningEnabled == DataNode.instance.data.isNativeIOAvailable"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.data.blockPinningEnabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("DataNode.instance.data.isNativeIOAvailable"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(48, "DataNode.instance.data.blockPinningEnabled == DataNode.instance.dnConf.allowNonLocalLazyPersist"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.data.blockPinningEnabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.allowNonLocalLazyPersist"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(49, "DataNode.instance.data.blockPinningEnabled == blockManagerInstance.bmSafeMode.haEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.data.blockPinningEnabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.haEnabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(50, "DataNode.instance.data.cacheManager.numBlocksCached == DataNode.instance.data.cacheManager.numBlocksFailedToCache"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToCache"))).intValue());
			}
		});
		invariants999.add(new Invariant(51, "DataNode.instance.data.cacheManager.numBlocksCached == DataNode.instance.data.cacheManager.numBlocksFailedToUncache"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue());
			}
		});
		invariants999.add(new Invariant(52, "DataNode.instance.data.cacheManager.numBlocksCached == DataNode.instance.data.volFailuresTolerated"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.data.volFailuresTolerated"))).intValue());
			}
		});
		invariants999.add(new Invariant(53, "DataNode.instance.data.cacheManager.numBlocksCached == DataNode.instance.dnConf.ibrInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue());
			}
		});
		invariants999.add(new Invariant(54, "DataNode.instance.data.cacheManager.numBlocksCached == blockManagerInstance.blockIdManager.legacyGenerationStampLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStampLimit"))).intValue());
			}
		});
		invariants999.add(new Invariant(55, "DataNode.instance.data.cacheManager.revocationMs == DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationMs"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks"))).intValue());
			}
		});
		invariants999.add(new Invariant(56, "DataNode.instance.data.cacheManager.revocationPollingMs == DataNode.instance.xserver.balanceThrottler.period"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationPollingMs"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.period"))).intValue());
			}
		});
		invariants999.add(new Invariant(57, "DataNode.instance.data.cacheManager.revocationPollingMs == blockManagerInstance.maxCorruptFilesReturned"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationPollingMs"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.maxCorruptFilesReturned"))).intValue());
			}
		});
		invariants999.add(new Invariant(58, "DataNode.instance.data.fsRunning == DataNode.instance.directoryScanner.shouldRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.data.fsRunning"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("DataNode.instance.directoryScanner.shouldRun"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(59, "DataNode.instance.data.fsRunning == DataNode.instance.dnConf.pmemCacheRecoveryEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.data.fsRunning"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.pmemCacheRecoveryEnabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(60, "DataNode.instance.data.fsRunning == blockManagerInstance.checkNSRunning"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.data.fsRunning"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.checkNSRunning"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(61, "DataNode.instance.data.fsRunning == blockManagerInstance.datanodeManager.shouldSendCachingCommands"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.data.fsRunning"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.shouldSendCachingCommands"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(62, "DataNode.instance.data.maxDataLength == DataNode.instance.dnConf.maxDataLength"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.maxDataLength"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.maxDataLength"))).intValue());
			}
		});
		invariants999.add(new Invariant(63, "DataNode.instance.data.smallBufferSize == NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.smallBufferSize"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN"))).intValue());
			}
		});
		invariants999.add(new Invariant(64, "DataNode.instance.data.volsConfigured == DataNode.instance.dnConf.volsConfigured"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.volsConfigured"))).intValue());
			}
		});
		invariants999.add(new Invariant(65, "DataNode.instance.data.volsConfigured == blockManagerInstance.blocksReplWorkMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.blocksReplWorkMultiplier"))).intValue());
			}
		});
		invariants999.add(new Invariant(66, "DataNode.instance.data.volsConfigured == daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])))-1);
			}
		});
		invariants999.add(new Invariant(67, "DataNode.instance.directoryScanner.MILLIS_PER_SECOND == DataNode.instance.directoryScanner.RECONCILE_BLOCKS_BATCH_SIZE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.MILLIS_PER_SECOND"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.RECONCILE_BLOCKS_BATCH_SIZE"))).intValue());
			}
		});
		invariants999.add(new Invariant(68, "DataNode.instance.directoryScanner.MILLIS_PER_SECOND == DataNode.instance.directoryScanner.throttleLimitMsPerSec"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.MILLIS_PER_SECOND"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.throttleLimitMsPerSec"))).intValue());
			}
		});
		invariants999.add(new Invariant(69, "DataNode.instance.directoryScanner.MILLIS_PER_SECOND == DataNode.instance.maxNumberOfBlocksToLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.MILLIS_PER_SECOND"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.maxNumberOfBlocksToLog"))).intValue());
			}
		});
		invariants999.add(new Invariant(70, "DataNode.instance.directoryScanner.MILLIS_PER_SECOND == NameNode.instance.namesystem.blockDeletionIncrement"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.MILLIS_PER_SECOND"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.blockDeletionIncrement"))).intValue());
			}
		});
		invariants999.add(new Invariant(71, "DataNode.instance.directoryScanner.MILLIS_PER_SECOND == blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.MILLIS_PER_SECOND"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP"))).intValue());
			}
		});
		invariants999.add(new Invariant(72, "DataNode.instance.directoryScanner.diffs_FOR_ENCLOSING_USE == NameNode.instance.namesystem.cacheManager.directivesById_FOR_ENCLOSING_USE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return ((Set.class.cast(InvariantChecker.getValue("DataNode.instance.directoryScanner.diffs")).toArray(new Object[0])) == (Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.directivesById")).toArray(new Object[0])));
			}
		});
		invariants999.add(new Invariant(73, "DataNode.instance.directoryScanner.diffs_FOR_ENCLOSING_USE == NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return ((Set.class.cast(InvariantChecker.getValue("DataNode.instance.directoryScanner.diffs")).toArray(new Object[0])) == (Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0])));
			}
		});
		invariants999.add(new Invariant(74, "DataNode.instance.directoryScanner.diffs_FOR_ENCLOSING_USE == NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return ((Set.class.cast(InvariantChecker.getValue("DataNode.instance.directoryScanner.diffs")).toArray(new Object[0])) == (Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0])));
			}
		});
		invariants999.add(new Invariant(75, "DataNode.instance.directoryScanner.diffs_FOR_ENCLOSING_USE == NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return ((Set.class.cast(InvariantChecker.getValue("DataNode.instance.directoryScanner.diffs")).toArray(new Object[0])) == (Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])));
			}
		});
		invariants999.add(new Invariant(76, "DataNode.instance.directoryScanner.scanPeriodMsecs == DataNode.instance.dnConf.blockReportInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.scanPeriodMsecs"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportInterval"))).intValue());
			}
		});
		invariants999.add(new Invariant(77, "DataNode.instance.directoryScanner.shouldRun == DataNode.instance.diskBalancer.isDiskBalancerEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.directoryScanner.shouldRun"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("DataNode.instance.diskBalancer.isDiskBalancerEnabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(78, "DataNode.instance.directoryScanner.shouldRun == DataNode.instance.dnConf.pmemCacheRecoveryEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.directoryScanner.shouldRun"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.pmemCacheRecoveryEnabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(79, "DataNode.instance.directoryScanner.shouldRun == DataNode.instance.hasAnyBlockPoolRegistered"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.directoryScanner.shouldRun"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("DataNode.instance.hasAnyBlockPoolRegistered"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(80, "DataNode.instance.directoryScanner.shouldRun == DataNode.instance.isPermissionEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.directoryScanner.shouldRun"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("DataNode.instance.isPermissionEnabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(81, "DataNode.instance.directoryScanner.shouldRun == DataNode.instance.shouldRun"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.directoryScanner.shouldRun"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("DataNode.instance.shouldRun"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(82, "DataNode.instance.directoryScanner.shouldRun == blockManagerInstance.checkNSRunning"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.directoryScanner.shouldRun"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.checkNSRunning"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(83, "DataNode.instance.directoryScanner.shouldRun == blockManagerInstance.datanodeManager.shouldSendCachingCommands"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.directoryScanner.shouldRun"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.shouldSendCachingCommands"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(84, "DataNode.instance.diskBalancer.bandwidth == NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.bandwidth"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE"))).intValue());
			}
		});
		invariants999.add(new Invariant(85, "DataNode.instance.diskBalancer.bandwidth == blockManagerInstance.datanodeManager.heartbeatManager.REPORT_STALE_NODE_NODES_PER_LINE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.bandwidth"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatManager.REPORT_STALE_NODE_NODES_PER_LINE"))).intValue());
			}
		});
		invariants999.add(new Invariant(86, "DataNode.instance.dnConf.allowNonLocalLazyPersist == DataNode.instance.dnConf.connectToDnViaHostname"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.allowNonLocalLazyPersist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.connectToDnViaHostname"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(87, "DataNode.instance.dnConf.allowNonLocalLazyPersist == DataNode.instance.dnConf.diskStatsEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.allowNonLocalLazyPersist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.diskStatsEnabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(88, "DataNode.instance.dnConf.allowNonLocalLazyPersist == DataNode.instance.dnConf.dropCacheBehindReads"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.allowNonLocalLazyPersist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.dropCacheBehindReads"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(89, "DataNode.instance.dnConf.allowNonLocalLazyPersist == DataNode.instance.dnConf.dropCacheBehindWrites"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.allowNonLocalLazyPersist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.dropCacheBehindWrites"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(90, "DataNode.instance.dnConf.allowNonLocalLazyPersist == DataNode.instance.dnConf.encryptDataTransfer"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.allowNonLocalLazyPersist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.encryptDataTransfer"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(91, "DataNode.instance.dnConf.allowNonLocalLazyPersist == DataNode.instance.dnConf.ignoreSecurePortsForTesting"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.allowNonLocalLazyPersist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.ignoreSecurePortsForTesting"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(92, "DataNode.instance.dnConf.allowNonLocalLazyPersist == DataNode.instance.dnConf.overwriteDownstreamDerivedQOP"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.allowNonLocalLazyPersist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.overwriteDownstreamDerivedQOP"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(93, "DataNode.instance.dnConf.allowNonLocalLazyPersist == DataNode.instance.dnConf.peerStatsEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.allowNonLocalLazyPersist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.peerStatsEnabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(94, "DataNode.instance.dnConf.allowNonLocalLazyPersist == DataNode.instance.dnConf.syncBehindWrites"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.allowNonLocalLazyPersist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.syncBehindWrites"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(95, "DataNode.instance.dnConf.allowNonLocalLazyPersist == DataNode.instance.dnConf.syncBehindWritesInBackground"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.allowNonLocalLazyPersist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.syncBehindWritesInBackground"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(96, "DataNode.instance.dnConf.allowNonLocalLazyPersist == DataNode.instance.dnConf.syncOnClose"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.allowNonLocalLazyPersist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.syncOnClose"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(97, "DataNode.instance.dnConf.allowNonLocalLazyPersist == DataNode.instance.fileIoProvider.faultInjectorEventHook.isEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.allowNonLocalLazyPersist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("DataNode.instance.fileIoProvider.faultInjectorEventHook.isEnabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(98, "DataNode.instance.dnConf.allowNonLocalLazyPersist == DataNode.instance.xserver.closed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.allowNonLocalLazyPersist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("DataNode.instance.xserver.closed"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(99, "DataNode.instance.dnConf.allowNonLocalLazyPersist == NameNode.instance.STANDBY_STATE.isObserver"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.allowNonLocalLazyPersist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.STANDBY_STATE.isObserver"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(100, "DataNode.instance.dnConf.allowNonLocalLazyPersist == NameNode.instance.allowStaleStandbyReads"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.allowNonLocalLazyPersist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.allowStaleStandbyReads"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(101, "DataNode.instance.dnConf.allowNonLocalLazyPersist == NameNode.instance.haEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.allowNonLocalLazyPersist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.haEnabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(102, "DataNode.instance.dnConf.allowNonLocalLazyPersist == NameNode.instance.namesystem.alwaysUseDelegationTokensForTests"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.allowNonLocalLazyPersist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.alwaysUseDelegationTokensForTests"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(103, "DataNode.instance.dnConf.allowNonLocalLazyPersist == NameNode.instance.namesystem.datanodeStatistics.enableLogStaleNodes"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.allowNonLocalLazyPersist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.enableLogStaleNodes"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(104, "DataNode.instance.dnConf.allowNonLocalLazyPersist == NameNode.instance.namesystem.dir.isPermissionContentSummarySubAccess"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.allowNonLocalLazyPersist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.isPermissionContentSummarySubAccess"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(105, "DataNode.instance.dnConf.allowNonLocalLazyPersist == NameNode.instance.namesystem.dir.posixAclInheritanceEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.allowNonLocalLazyPersist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.posixAclInheritanceEnabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(106, "DataNode.instance.dnConf.allowNonLocalLazyPersist == NameNode.instance.namesystem.dir.skipQuotaCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.allowNonLocalLazyPersist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.skipQuotaCheck"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(107, "DataNode.instance.dnConf.allowNonLocalLazyPersist == NameNode.instance.namesystem.dtpReplaceDatanodeOnFailure.bestEffort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.allowNonLocalLazyPersist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.dtpReplaceDatanodeOnFailure.bestEffort"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(108, "DataNode.instance.dnConf.allowNonLocalLazyPersist == NameNode.instance.namesystem.fsImage.exitAfterSave"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.allowNonLocalLazyPersist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.exitAfterSave"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(109, "DataNode.instance.dnConf.allowNonLocalLazyPersist == NameNode.instance.namesystem.fsLock.metricsEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.allowNonLocalLazyPersist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.metricsEnabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(110, "DataNode.instance.dnConf.allowNonLocalLazyPersist == NameNode.instance.namesystem.haEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.allowNonLocalLazyPersist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.haEnabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(111, "DataNode.instance.dnConf.allowNonLocalLazyPersist == NameNode.instance.namesystem.isDefaultAuditLogger"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.allowNonLocalLazyPersist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.isDefaultAuditLogger"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(112, "DataNode.instance.dnConf.allowNonLocalLazyPersist == NameNode.instance.namesystem.manualSafeMode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.allowNonLocalLazyPersist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.manualSafeMode"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(113, "DataNode.instance.dnConf.allowNonLocalLazyPersist == NameNode.instance.namesystem.needRollbackFsImage"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.allowNonLocalLazyPersist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.needRollbackFsImage"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(114, "DataNode.instance.dnConf.allowNonLocalLazyPersist == NameNode.instance.namesystem.resourceLowSafeMode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.allowNonLocalLazyPersist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.resourceLowSafeMode"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(115, "DataNode.instance.dnConf.allowNonLocalLazyPersist == NameNode.instance.namesystem.snapshotManager.allowNestedSnapshots"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.allowNonLocalLazyPersist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.allowNestedSnapshots"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(116, "DataNode.instance.dnConf.allowNonLocalLazyPersist == NameNode.instance.namesystem.snapshotManager.captureOpenFiles"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.allowNonLocalLazyPersist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.captureOpenFiles"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(117, "DataNode.instance.dnConf.allowNonLocalLazyPersist == NameNode.instance.namesystem.snapshotManager.skipCaptureAccessTimeOnlyChange"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.allowNonLocalLazyPersist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.skipCaptureAccessTimeOnlyChange"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(118, "DataNode.instance.dnConf.allowNonLocalLazyPersist == NameNode.instance.namesystem.startingActiveService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.allowNonLocalLazyPersist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.startingActiveService"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(119, "DataNode.instance.dnConf.allowNonLocalLazyPersist == NameNode.instance.stopRequested"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.allowNonLocalLazyPersist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.stopRequested"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(120, "DataNode.instance.dnConf.allowNonLocalLazyPersist == blockManagerInstance.bmSafeMode.haEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.allowNonLocalLazyPersist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.haEnabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(121, "DataNode.instance.dnConf.cacheReportInterval == NameNode.instance.namesystem.fsLock.lockSuppressWarningIntervalMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.cacheReportInterval"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.lockSuppressWarningIntervalMs"))).intValue());
			}
		});
		invariants999.add(new Invariant(122, "DataNode.instance.dnConf.cacheReportInterval == NameNode.instance.namesystem.maxBlocksPerFile"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.cacheReportInterval"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.maxBlocksPerFile"))).intValue());
			}
		});
		invariants999.add(new Invariant(123, "DataNode.instance.dnConf.cacheReportInterval == blockManagerInstance.blocksPerPostpondedRescan"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.cacheReportInterval"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.blocksPerPostpondedRescan"))).intValue());
			}
		});
		invariants999.add(new Invariant(124, "DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs == NameNode.instance.namesystem.lazyPersistFileScrubIntervalSec"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubIntervalSec"))).intValue());
			}
		});
		invariants999.add(new Invariant(125, "DataNode.instance.dnConf.heartBeatInterval == NameNode.instance.namesystem.edekCacheLoaderDelay"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.heartBeatInterval"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.edekCacheLoaderDelay"))).intValue());
			}
		});
		invariants999.add(new Invariant(126, "DataNode.instance.dnConf.heartBeatInterval == blockManagerInstance.placementPolicies.ecPolicy.heartbeatInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.heartBeatInterval"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.placementPolicies.ecPolicy.heartbeatInterval"))).intValue());
			}
		});
		invariants999.add(new Invariant(127, "DataNode.instance.dnConf.ibrInterval == DataNode.instance.dnConf.initialBlockReportDelayMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.initialBlockReportDelayMs"))).intValue());
			}
		});
		invariants999.add(new Invariant(128, "DataNode.instance.dnConf.ibrInterval == DataNode.instance.dnConf.maxLockedMemory"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.maxLockedMemory"))).intValue());
			}
		});
		invariants999.add(new Invariant(129, "DataNode.instance.dnConf.ibrInterval == DataNode.instance.dnConf.transferSocketRecvBufferSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.transferSocketRecvBufferSize"))).intValue());
			}
		});
		invariants999.add(new Invariant(130, "DataNode.instance.dnConf.ibrInterval == DataNode.instance.dnConf.transferSocketSendBufferSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.transferSocketSendBufferSize"))).intValue());
			}
		});
		invariants999.add(new Invariant(131, "DataNode.instance.dnConf.ibrInterval == DataNode.instance.dnConf.volFailuresTolerated"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.volFailuresTolerated"))).intValue());
			}
		});
		invariants999.add(new Invariant(132, "DataNode.instance.dnConf.ibrInterval == DataNode.instance.storage.cTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.storage.cTime"))).intValue());
			}
		});
		invariants999.add(new Invariant(133, "DataNode.instance.dnConf.ibrInterval == DataNode.instance.storageLocationChecker.delegateChecker.diskCheckTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.storageLocationChecker.delegateChecker.diskCheckTimeout"))).intValue());
			}
		});
		invariants999.add(new Invariant(134, "DataNode.instance.dnConf.ibrInterval == DataNode.instance.volumeChecker.maxVolumeFailuresTolerated"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.maxVolumeFailuresTolerated"))).intValue());
			}
		});
		invariants999.add(new Invariant(135, "DataNode.instance.dnConf.ibrInterval == DataNode.instance.volumeChecker.numAsyncDatasetChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numAsyncDatasetChecks"))).intValue());
			}
		});
		invariants999.add(new Invariant(136, "DataNode.instance.dnConf.ibrInterval == DataNode.instance.volumeChecker.numSkippedChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSkippedChecks"))).intValue());
			}
		});
		invariants999.add(new Invariant(137, "DataNode.instance.dnConf.ibrInterval == DataNode.instance.volumeChecker.numVolumeChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numVolumeChecks"))).intValue());
			}
		});
		invariants999.add(new Invariant(138, "DataNode.instance.dnConf.ibrInterval == DataNode.instance.xserver.balanceThrottler.bytesAlreadyUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.bytesAlreadyUsed"))).intValue());
			}
		});
		invariants999.add(new Invariant(139, "DataNode.instance.dnConf.ibrInterval == DataNode.instance.xserver.balanceThrottler.numThreads"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.numThreads"))).intValue());
			}
		});
		invariants999.add(new Invariant(140, "DataNode.instance.dnConf.ibrInterval == NameNode.instance.ACTIVE_STATE.lastHATransitionTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.ACTIVE_STATE.lastHATransitionTime"))).intValue());
			}
		});
		invariants999.add(new Invariant(141, "DataNode.instance.dnConf.ibrInterval == NameNode.instance.OBSERVER_STATE.lastHATransitionTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.OBSERVER_STATE.lastHATransitionTime"))).intValue());
			}
		});
		invariants999.add(new Invariant(142, "DataNode.instance.dnConf.ibrInterval == NameNode.instance.STANDBY_STATE.lastHATransitionTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.STANDBY_STATE.lastHATransitionTime"))).intValue());
			}
		});
		invariants999.add(new Invariant(143, "DataNode.instance.dnConf.ibrInterval == NameNode.instance.namesystem.dir.yieldCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.yieldCount"))).intValue());
			}
		});
		invariants999.add(new Invariant(144, "DataNode.instance.dnConf.ibrInterval == NameNode.instance.namesystem.fsImage.lastAppliedTxId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue());
			}
		});
		invariants999.add(new Invariant(145, "DataNode.instance.dnConf.ibrInterval == NameNode.instance.namesystem.fsLock.longestReadLockHeldIntervalMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.longestReadLockHeldIntervalMs"))).intValue());
			}
		});
		invariants999.add(new Invariant(146, "DataNode.instance.dnConf.ibrInterval == NameNode.instance.namesystem.fsLock.numReadLockWarningsSuppressed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.numReadLockWarningsSuppressed"))).intValue());
			}
		});
		invariants999.add(new Invariant(147, "DataNode.instance.dnConf.ibrInterval == NameNode.instance.namesystem.fsLock.timeStampOfLastReadLockReportMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.timeStampOfLastReadLockReportMs"))).intValue());
			}
		});
		invariants999.add(new Invariant(148, "DataNode.instance.dnConf.ibrInterval == NameNode.instance.namesystem.maxFsObjects"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.maxFsObjects"))).intValue());
			}
		});
		invariants999.add(new Invariant(149, "DataNode.instance.dnConf.ibrInterval == NameNode.instance.namesystem.minBlockSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.minBlockSize"))).intValue());
			}
		});
		invariants999.add(new Invariant(150, "DataNode.instance.dnConf.ibrInterval == NameNode.instance.namesystem.numCommittedAllowed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.numCommittedAllowed"))).intValue());
			}
		});
		invariants999.add(new Invariant(151, "DataNode.instance.dnConf.ibrInterval == NameNode.instance.namesystem.snapshotManager.numSnapshots"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue());
			}
		});
		invariants999.add(new Invariant(152, "DataNode.instance.dnConf.ibrInterval == NameNode.instance.namesystem.snapshotManager.snapshotCounter"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue());
			}
		});
		invariants999.add(new Invariant(153, "DataNode.instance.dnConf.ibrInterval == NameNode.instance.state.lastHATransitionTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.state.lastHATransitionTime"))).intValue());
			}
		});
		invariants999.add(new Invariant(154, "DataNode.instance.dnConf.ibrInterval == blockManagerInstance.blockIdManager.legacyGenerationStampLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStampLimit"))).intValue());
			}
		});
		invariants999.add(new Invariant(155, "DataNode.instance.dnConf.pmemCacheRecoveryEnabled == DataNode.instance.dnConf.tcpNoDelay"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.pmemCacheRecoveryEnabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.tcpNoDelay"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(156, "DataNode.instance.dnConf.pmemCacheRecoveryEnabled == DataNode.instance.dnConf.transferToAllowed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.pmemCacheRecoveryEnabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.transferToAllowed"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(157, "DataNode.instance.dnConf.pmemCacheRecoveryEnabled == NameNode.instance.OBSERVER_STATE.isObserver"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.pmemCacheRecoveryEnabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.OBSERVER_STATE.isObserver"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(158, "DataNode.instance.dnConf.pmemCacheRecoveryEnabled == NameNode.instance.namesystem.cacheManager.enabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.pmemCacheRecoveryEnabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.enabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(159, "DataNode.instance.dnConf.pmemCacheRecoveryEnabled == NameNode.instance.namesystem.dir.CHECK_RESERVED_FILE_NAMES"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.pmemCacheRecoveryEnabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.CHECK_RESERVED_FILE_NAMES"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(160, "DataNode.instance.dnConf.pmemCacheRecoveryEnabled == NameNode.instance.namesystem.dir.aclsEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.pmemCacheRecoveryEnabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.aclsEnabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(161, "DataNode.instance.dnConf.pmemCacheRecoveryEnabled == NameNode.instance.namesystem.dir.isPermissionEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.pmemCacheRecoveryEnabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.isPermissionEnabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(162, "DataNode.instance.dnConf.pmemCacheRecoveryEnabled == NameNode.instance.namesystem.dir.quotaByStorageTypeEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.pmemCacheRecoveryEnabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.quotaByStorageTypeEnabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(163, "DataNode.instance.dnConf.pmemCacheRecoveryEnabled == NameNode.instance.namesystem.dir.storagePolicyEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.pmemCacheRecoveryEnabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.storagePolicyEnabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(164, "DataNode.instance.dnConf.pmemCacheRecoveryEnabled == NameNode.instance.namesystem.dir.xattrsEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.pmemCacheRecoveryEnabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.xattrsEnabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(165, "DataNode.instance.dnConf.pmemCacheRecoveryEnabled == NameNode.instance.namesystem.fsImage.isUpgradeFinalized"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.pmemCacheRecoveryEnabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.isUpgradeFinalized"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(166, "DataNode.instance.dnConf.pmemCacheRecoveryEnabled == NameNode.instance.namesystem.fsRunning"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.pmemCacheRecoveryEnabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.fsRunning"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(167, "DataNode.instance.dnConf.pmemCacheRecoveryEnabled == NameNode.instance.namesystem.hasResourcesAvailable"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.pmemCacheRecoveryEnabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.hasResourcesAvailable"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(168, "DataNode.instance.dnConf.pmemCacheRecoveryEnabled == NameNode.instance.namesystem.imageLoaded"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.pmemCacheRecoveryEnabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.imageLoaded"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(169, "DataNode.instance.dnConf.pmemCacheRecoveryEnabled == NameNode.instance.namesystem.isPermissionEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.pmemCacheRecoveryEnabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.isPermissionEnabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(170, "DataNode.instance.dnConf.pmemCacheRecoveryEnabled == NameNode.instance.namesystem.leaseManager.shouldRunMonitor"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.pmemCacheRecoveryEnabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.shouldRunMonitor"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(171, "DataNode.instance.dnConf.pmemCacheRecoveryEnabled == NameNode.instance.namesystem.snapshotManager.snapshotDiffAllowSnapRootDescendant"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.pmemCacheRecoveryEnabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotDiffAllowSnapRootDescendant"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(172, "DataNode.instance.dnConf.pmemCacheRecoveryEnabled == NameNode.instance.namesystem.standbyShouldCheckpoint"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.pmemCacheRecoveryEnabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.standbyShouldCheckpoint"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(173, "DataNode.instance.dnConf.pmemCacheRecoveryEnabled == NameNode.instance.namesystem.topConf.isEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.pmemCacheRecoveryEnabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.topConf.isEnabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(174, "DataNode.instance.dnConf.pmemCacheRecoveryEnabled == NameNode.instance.namesystem.topMetrics.isMetricsSourceEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.pmemCacheRecoveryEnabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.isMetricsSourceEnabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(175, "DataNode.instance.dnConf.pmemCacheRecoveryEnabled == NameNode.instance.rpcServer.serviceAuthEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.pmemCacheRecoveryEnabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.rpcServer.serviceAuthEnabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(176, "DataNode.instance.dnConf.pmemCacheRecoveryEnabled == NameNode.instance.started"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.pmemCacheRecoveryEnabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.started"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(177, "DataNode.instance.dnConf.pmemCacheRecoveryEnabled == blockManagerInstance.checkNSRunning"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.pmemCacheRecoveryEnabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.checkNSRunning"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(178, "DataNode.instance.dnConf.pmemCacheRecoveryEnabled == blockManagerInstance.datanodeManager.shouldSendCachingCommands"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.pmemCacheRecoveryEnabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.shouldSendCachingCommands"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(179, "DataNode.instance.dnConf.socketTimeout == DataNode.instance.dnConf.xceiverStopTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketTimeout"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.xceiverStopTimeout"))).intValue());
			}
		});
		invariants999.add(new Invariant(180, "DataNode.instance.dnConf.socketTimeout == NameNode.instance.namesystem.leaseManager.softLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketTimeout"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.softLimit"))).intValue());
			}
		});
		invariants999.add(new Invariant(181, "DataNode.instance.dnConf.volsConfigured == blockManagerInstance.blocksReplWorkMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.volsConfigured"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.blocksReplWorkMultiplier"))).intValue());
			}
		});
		invariants999.add(new Invariant(182, "DataNode.instance.dnConf.volsConfigured == daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.volsConfigured"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])))-1);
			}
		});
		invariants999.add(new Invariant(183, "DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS == DataNode.instance.httpServer.HTTP_SELECTOR_THREADS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_SELECTOR_THREADS"))).intValue());
			}
		});
		invariants999.add(new Invariant(184, "DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS == NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.sequenceNumber"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.sequenceNumber"))).intValue());
			}
		});
		invariants999.add(new Invariant(185, "DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS == NameNode.instance.namesystem.cacheManager.nextDirectiveId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.nextDirectiveId"))).intValue());
			}
		});
		invariants999.add(new Invariant(186, "DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS == NameNode.instance.namesystem.nnResourceChecker.minimumRedundantVolumes"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.nnResourceChecker.minimumRedundantVolumes"))).intValue());
			}
		});
		invariants999.add(new Invariant(187, "DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS == blockManagerInstance.bmSafeMode.safeReplication"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.safeReplication"))).intValue());
			}
		});
		invariants999.add(new Invariant(188, "DataNode.instance.httpServer.HTTP_MAX_THREADS == NameNode.instance.namesystem.dir.quotaInitThreads"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_MAX_THREADS"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.quotaInitThreads"))).intValue());
			}
		});
		invariants999.add(new Invariant(189, "DataNode.instance.httpServer.HTTP_MAX_THREADS == NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_COUNT_MAX"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_MAX_THREADS"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_COUNT_MAX"))).intValue());
			}
		});
		invariants999.add(new Invariant(190, "DataNode.instance.httpServer.HTTP_MAX_THREADS == blockManagerInstance.blockReportThread.MAX_LOCK_HOLD_MS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_MAX_THREADS"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportThread.MAX_LOCK_HOLD_MS"))).intValue());
			}
		});
		invariants999.add(new Invariant(191, "DataNode.instance.id.infoPort == DataNode.instance.infoPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.infoPort"))).intValue());
			}
		});
		invariants999.add(new Invariant(192, "DataNode.instance.id.nsInfo.namespaceID == DataNode.instance.storage.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue());
			}
		});
		invariants999.add(new Invariant(193, "DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks == DataNode.instance.volumeChecker.delegateChecker.minMsBetweenChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.delegateChecker.minMsBetweenChecks"))).intValue());
			}
		});
		invariants999.add(new Invariant(194, "DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks == DataNode.instance.volumeChecker.minDiskCheckGapMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.minDiskCheckGapMs"))).intValue());
			}
		});
		invariants999.add(new Invariant(195, "DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout == DataNode.instance.volumeChecker.diskCheckTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.diskCheckTimeout"))).intValue());
			}
		});
		invariants999.add(new Invariant(196, "DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout == DataNode.instance.volumeChecker.maxAllowedTimeForCheckMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.maxAllowedTimeForCheckMs"))).intValue());
			}
		});
		invariants999.add(new Invariant(197, "DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout == blockManagerInstance.storageInfoDefragmentInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.storageInfoDefragmentInterval"))).intValue());
			}
		});
		invariants999.add(new Invariant(198, "DataNode.instance.xserver.balanceThrottler.bytesPerPeriod == DataNode.instance.xserver.balanceThrottler.curReserve"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.bytesPerPeriod"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curReserve"))).intValue());
			}
		});
		invariants999.add(new Invariant(199, "DataNode.instance.xserver.balanceThrottler.period == NameNode.instance.namesystem.dir.contentSleepMicroSec"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.period"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.contentSleepMicroSec"))).intValue());
			}
		});
		invariants999.add(new Invariant(200, "DataNode.instance.xserver.balanceThrottler.period == blockManagerInstance.maxCorruptFilesReturned"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.period"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.maxCorruptFilesReturned"))).intValue());
			}
		});
		invariants999.add(new Invariant(201, "NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS == NameNode.instance.namesystem.dir.contentCountLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.contentCountLimit"))).intValue());
			}
		});
		invariants999.add(new Invariant(202, "NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS == NameNode.instance.namesystem.fsImage.LOAD_EDIT_LOG_INTERVAL_MS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.LOAD_EDIT_LOG_INTERVAL_MS"))).intValue());
			}
		});
		invariants999.add(new Invariant(203, "NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS == NameNode.instance.namesystem.fsLock.readLockReportingThresholdMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.readLockReportingThresholdMs"))).intValue());
			}
		});
		invariants999.add(new Invariant(204, "NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS == NameNode.instance.namesystem.fsLock.writeLockReportingThresholdMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockReportingThresholdMs"))).intValue());
			}
		});
		invariants999.add(new Invariant(205, "NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS == NameNode.instance.namesystem.resourceRecheckInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.resourceRecheckInterval"))).intValue());
			}
		});
		invariants999.add(new Invariant(206, "NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL == NameNode.instance.namesystem.dir.accessTimePrecision"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.accessTimePrecision"))).intValue());
			}
		});
		invariants999.add(new Invariant(207, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE == blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants999.add(new Invariant(208, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size == blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.size"))).intValue());
			}
		});
		invariants999.add(new Invariant(209, "NameNode.instance.namesystem.blockDeletionIncrement == NameNode.instance.namesystem.dir.lsLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.blockDeletionIncrement"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.lsLimit"))).intValue());
			}
		});
		invariants999.add(new Invariant(210, "NameNode.instance.namesystem.blockDeletionIncrement == NameNode.instance.namesystem.edekCacheLoaderInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.blockDeletionIncrement"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.edekCacheLoaderInterval"))).intValue());
			}
		});
		invariants999.add(new Invariant(211, "NameNode.instance.namesystem.blockDeletionIncrement == NameNode.instance.namesystem.maxListOpenFilesResponses"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.blockDeletionIncrement"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.maxListOpenFilesResponses"))).intValue());
			}
		});
		invariants999.add(new Invariant(212, "NameNode.instance.namesystem.blockDeletionIncrement == NameNode.instance.namesystem.snapshotDiffReportLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.blockDeletionIncrement"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotDiffReportLimit"))).intValue());
			}
		});
		invariants999.add(new Invariant(213, "NameNode.instance.namesystem.blockDeletionIncrement == blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.blockDeletionIncrement"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP"))).intValue());
			}
		});
		invariants999.add(new Invariant(214, "daikon.Quant.pairwiseEqual(NameNode.instance.namesystem.cacheManager.directivesById_FOR_ENCLOSING_USE, NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.pairwiseEqual((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.directivesById")).toArray(new Object[0])), (Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(215, "NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses == NameNode.instance.namesystem.cacheManager.maxListCachePoolsResponses"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.maxListCachePoolsResponses"))).intValue());
			}
		});
		invariants999.add(new Invariant(216, "NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses == NameNode.instance.namesystem.maxCorruptFileBlocksReturn"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.maxCorruptFileBlocksReturn"))).intValue());
			}
		});
		invariants999.add(new Invariant(217, "NameNode.instance.namesystem.cacheManager.scanIntervalMs == blockManagerInstance.datanodeManager.staleInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.scanIntervalMs"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.staleInterval"))).intValue());
			}
		});
		invariants999.add(new Invariant(218, "NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE == NameNode.instance.namesystem.fsImage.SHUTDOWN_HOOK_PRIORITY"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.SHUTDOWN_HOOK_PRIORITY"))).intValue());
			}
		});
		invariants999.add(new Invariant(219, "NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE == blockManagerInstance.datanodeManager.heartbeatManager.REPORT_STALE_NODE_NODES_PER_LINE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatManager.REPORT_STALE_NODE_NODES_PER_LINE"))).intValue());
			}
		});
		invariants999.add(new Invariant(220, "NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval == NameNode.instance.namesystem.editLogRollerInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogRollerInterval"))).intValue());
			}
		});
		invariants999.add(new Invariant(221, "NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval == blockManagerInstance.blockReportLeaseManager.leaseExpiryMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.leaseExpiryMs"))).intValue());
			}
		});
		invariants999.add(new Invariant(222, "blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID == blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MAXIMUM_CAPACITY"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MAXIMUM_CAPACITY"))).intValue());
			}
		});
		invariants999.add(new Invariant(223, "blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP == blockManagerInstance.blockIdManager.impendingGenerationStamp.LAST_RESERVED_STAMP"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.impendingGenerationStamp.LAST_RESERVED_STAMP"))).intValue());
			}
		});
		invariants999.add(new Invariant(224, "blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP == blockManagerInstance.blockIdManager.legacyGenerationStamp.LAST_RESERVED_STAMP"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStamp.LAST_RESERVED_STAMP"))).intValue());
			}
		});
		invariants999.add(new Invariant(225, "blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP == blockManagerInstance.datanodeManager.blockInvalidateLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.blockInvalidateLimit"))).intValue());
			}
		});
		invariants999.add(new Invariant(226, "blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP == blockManagerInstance.invalidateBlocks.blockInvalidateLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.blockInvalidateLimit"))).intValue());
			}
		});
		invariants999.add(new Invariant(227, "blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP == blockManagerInstance.maxNumBlocksToLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.maxNumBlocksToLog"))).intValue());
			}
		});
		invariants999.add(new Invariant(228, "blockManagerInstance.blockIdManager.legacyGenerationStampLimit == blockManagerInstance.blockReportLeaseManager.deferredHead.leaseId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStampLimit"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.deferredHead.leaseId"))).intValue());
			}
		});
		invariants999.add(new Invariant(229, "blockManagerInstance.blockIdManager.legacyGenerationStampLimit == blockManagerInstance.blockReportLeaseManager.deferredHead.leaseTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStampLimit"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.deferredHead.leaseTimeMs"))).intValue());
			}
		});
		invariants999.add(new Invariant(230, "blockManagerInstance.blockIdManager.legacyGenerationStampLimit == blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStampLimit"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants999.add(new Invariant(231, "blockManagerInstance.blockIdManager.legacyGenerationStampLimit == blockManagerInstance.blockReportLeaseManager.pendingHead.leaseId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStampLimit"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.pendingHead.leaseId"))).intValue());
			}
		});
		invariants999.add(new Invariant(232, "blockManagerInstance.blockIdManager.legacyGenerationStampLimit == blockManagerInstance.blockReportLeaseManager.pendingHead.leaseTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStampLimit"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.pendingHead.leaseTimeMs"))).intValue());
			}
		});
		invariants999.add(new Invariant(233, "blockManagerInstance.blockIdManager.legacyGenerationStampLimit == blockManagerInstance.blockReportThread.lastFull"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStampLimit"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportThread.lastFull"))).intValue());
			}
		});
		invariants999.add(new Invariant(234, "blockManagerInstance.blockIdManager.legacyGenerationStampLimit == blockManagerInstance.bmSafeMode.blockReplQueueThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStampLimit"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.blockReplQueueThreshold"))).intValue());
			}
		});
		invariants999.add(new Invariant(235, "blockManagerInstance.blockIdManager.legacyGenerationStampLimit == blockManagerInstance.bmSafeMode.blockSafe"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStampLimit"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.blockSafe"))).intValue());
			}
		});
		invariants999.add(new Invariant(236, "blockManagerInstance.blockIdManager.legacyGenerationStampLimit == blockManagerInstance.bmSafeMode.blockThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStampLimit"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.blockThreshold"))).intValue());
			}
		});
		invariants999.add(new Invariant(237, "blockManagerInstance.blockIdManager.legacyGenerationStampLimit == blockManagerInstance.bmSafeMode.blockTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStampLimit"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.blockTotal"))).intValue());
			}
		});
		invariants999.add(new Invariant(238, "blockManagerInstance.blockIdManager.legacyGenerationStampLimit == blockManagerInstance.bmSafeMode.datanodeThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStampLimit"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.datanodeThreshold"))).intValue());
			}
		});
		invariants999.add(new Invariant(239, "blockManagerInstance.blockIdManager.legacyGenerationStampLimit == blockManagerInstance.bmSafeMode.extension"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStampLimit"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.extension"))).intValue());
			}
		});
		invariants999.add(new Invariant(240, "blockManagerInstance.blockIdManager.legacyGenerationStampLimit == blockManagerInstance.bmSafeMode.lastStatusReport"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStampLimit"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.lastStatusReport"))).intValue());
			}
		});
		invariants999.add(new Invariant(241, "blockManagerInstance.blockIdManager.legacyGenerationStampLimit == blockManagerInstance.bmSafeMode.reachedTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStampLimit"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.reachedTime"))).intValue());
			}
		});
		invariants999.add(new Invariant(242, "blockManagerInstance.blockIdManager.legacyGenerationStampLimit == blockManagerInstance.corruptReplicaBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStampLimit"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.corruptReplicaBlocksCount"))).intValue());
			}
		});
		invariants999.add(new Invariant(243, "blockManagerInstance.blockIdManager.legacyGenerationStampLimit == blockManagerInstance.datanodeManager.numStaleNodes"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStampLimit"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.numStaleNodes"))).intValue());
			}
		});
		invariants999.add(new Invariant(244, "blockManagerInstance.blockIdManager.legacyGenerationStampLimit == blockManagerInstance.datanodeManager.numStaleStorages"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStampLimit"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.numStaleStorages"))).intValue());
			}
		});
		invariants999.add(new Invariant(245, "blockManagerInstance.blockIdManager.legacyGenerationStampLimit == blockManagerInstance.excessRedundancyMap.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStampLimit"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.excessRedundancyMap.size"))).intValue());
			}
		});
		invariants999.add(new Invariant(246, "blockManagerInstance.blockIdManager.legacyGenerationStampLimit == blockManagerInstance.heartbeatManager.stats.cacheCapacity"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStampLimit"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.cacheCapacity"))).intValue());
			}
		});
		invariants999.add(new Invariant(247, "blockManagerInstance.blockIdManager.legacyGenerationStampLimit == blockManagerInstance.heartbeatManager.stats.cacheUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStampLimit"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.cacheUsed"))).intValue());
			}
		});
		invariants999.add(new Invariant(248, "blockManagerInstance.blockIdManager.legacyGenerationStampLimit == blockManagerInstance.heartbeatManager.stats.expiredHeartbeats"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStampLimit"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.expiredHeartbeats"))).intValue());
			}
		});
		invariants999.add(new Invariant(249, "blockManagerInstance.blockIdManager.legacyGenerationStampLimit == blockManagerInstance.invalidateBlocks.blockIdManager.legacyGenerationStampLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStampLimit"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.blockIdManager.legacyGenerationStampLimit"))).intValue());
			}
		});
		invariants999.add(new Invariant(250, "blockManagerInstance.blockIdManager.legacyGenerationStampLimit == blockManagerInstance.invalidateBlocks.pendingPeriodInMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStampLimit"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.pendingPeriodInMs"))).intValue());
			}
		});
		invariants999.add(new Invariant(251, "blockManagerInstance.blockIdManager.legacyGenerationStampLimit == blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStampLimit"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants999.add(new Invariant(252, "blockManagerInstance.blockIdManager.legacyGenerationStampLimit == blockManagerInstance.neededReconstruction.QUEUE_HIGHEST_PRIORITY"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStampLimit"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.QUEUE_HIGHEST_PRIORITY"))).intValue());
			}
		});
		invariants999.add(new Invariant(253, "blockManagerInstance.blockIdManager.legacyGenerationStampLimit == blockManagerInstance.pendingDNMessages.count"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStampLimit"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingDNMessages.count"))).intValue());
			}
		});
		invariants999.add(new Invariant(254, "blockManagerInstance.blockIdManager.legacyGenerationStampLimit == blockManagerInstance.pendingReconstruction.timedOutCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStampLimit"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingReconstruction.timedOutCount"))).intValue());
			}
		});
		invariants999.add(new Invariant(255, "blockManagerInstance.blockIdManager.legacyGenerationStampLimit == blockManagerInstance.pendingReconstructionBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStampLimit"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingReconstructionBlocksCount"))).intValue());
			}
		});
		invariants999.add(new Invariant(256, "blockManagerInstance.blockIdManager.legacyGenerationStampLimit == blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.modification"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStampLimit"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.modification"))).intValue());
			}
		});
		invariants999.add(new Invariant(257, "blockManagerInstance.blockIdManager.legacyGenerationStampLimit == blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStampLimit"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.size"))).intValue());
			}
		});
		invariants999.add(new Invariant(258, "blockManagerInstance.blockIdManager.legacyGenerationStampLimit == blockManagerInstance.providedStorageMap.capacity"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStampLimit"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.providedStorageMap.capacity"))).intValue());
			}
		});
		invariants999.add(new Invariant(259, "blockManagerInstance.blockIdManager.legacyGenerationStampLimit == blockManagerInstance.providedStorageMap.defaultReplication"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStampLimit"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.providedStorageMap.defaultReplication"))).intValue());
			}
		});
		invariants999.add(new Invariant(260, "blockManagerInstance.blockIdManager.legacyGenerationStampLimit == blockManagerInstance.scheduledReplicationBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStampLimit"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.scheduledReplicationBlocksCount"))).intValue());
			}
		});
		invariants999.add(new Invariant(261, "blockManagerInstance.blockIdManager.legacyGenerationStampLimit == blockManagerInstance.startupDelayBlockDeletionInMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStampLimit"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.startupDelayBlockDeletionInMs"))).intValue());
			}
		});
		invariants999.add(new Invariant(262, "blockManagerInstance.blockIdManager.legacyGenerationStampLimit == daikon.Quant.size(DataNode.instance.directoryScanner.diffs_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStampLimit"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("DataNode.instance.directoryScanner.diffs")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(263, "blockManagerInstance.blockIdManager.legacyGenerationStampLimit == daikon.Quant.size(NameNode.instance.namesystem.cacheManager.directivesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStampLimit"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.directivesById")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(264, "blockManagerInstance.blockIdManager.legacyGenerationStampLimit == daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStampLimit"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(265, "blockManagerInstance.blockReportLeaseManager.leaseExpiryMs == blockManagerInstance.datanodeManager.heartbeatManager.heartbeatRecheckInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.leaseExpiryMs"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatManager.heartbeatRecheckInterval"))).intValue());
			}
		});
		invariants999.add(new Invariant(266, "blockManagerInstance.blockReportLeaseManager.leaseExpiryMs == blockManagerInstance.datanodeManager.heartbeatRecheckInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.leaseExpiryMs"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatRecheckInterval"))).intValue());
			}
		});
		invariants999.add(new Invariant(267, "blockManagerInstance.blockReportLeaseManager.leaseExpiryMs == blockManagerInstance.heartbeatManager.heartbeatRecheckInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.leaseExpiryMs"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.heartbeatRecheckInterval"))).intValue());
			}
		});
		invariants999.add(new Invariant(268, "blockManagerInstance.blockReportLeaseManager.leaseExpiryMs == blockManagerInstance.pendingReconstruction.DEFAULT_RECHECK_INTERVAL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.leaseExpiryMs"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingReconstruction.DEFAULT_RECHECK_INTERVAL"))).intValue());
			}
		});
		invariants999.add(new Invariant(269, "blockManagerInstance.blockReportLeaseManager.leaseExpiryMs == blockManagerInstance.pendingReconstruction.timeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.leaseExpiryMs"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingReconstruction.timeout"))).intValue());
			}
		});
		invariants999.add(new Invariant(270, "blockManagerInstance.blockReportThread.MAX_LOCK_HOLD_MS == blockManagerInstance.neededReconstruction.QUEUE_WITH_CORRUPT_BLOCKS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportThread.MAX_LOCK_HOLD_MS"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.QUEUE_WITH_CORRUPT_BLOCKS"))).intValue());
			}
		});
		invariants999.add(new Invariant(271, "blockManagerInstance.blockReportThread.MAX_LOCK_HOLD_MS == blockManagerInstance.placementPolicies.ecPolicy.tolerateHeartbeatMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportThread.MAX_LOCK_HOLD_MS"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.placementPolicies.ecPolicy.tolerateHeartbeatMultiplier"))).intValue());
			}
		});
		invariants999.add(new Invariant(272, "blockManagerInstance.blockReportThread.MAX_LOCK_HOLD_MS == blockManagerInstance.placementPolicies.replicationPolicy.tolerateHeartbeatMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportThread.MAX_LOCK_HOLD_MS"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.placementPolicies.replicationPolicy.tolerateHeartbeatMultiplier"))).intValue());
			}
		});
		invariants999.add(new Invariant(273, "blockManagerInstance.blockReportThread.MAX_LOCK_HOLD_MS == blockManagerInstance.replicationStreamsHardLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportThread.MAX_LOCK_HOLD_MS"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.replicationStreamsHardLimit"))).intValue());
			}
		});
		invariants999.add(new Invariant(274, "blockManagerInstance.blockReportThread.MAX_LOCK_HOLD_MS == blockManagerInstance.storageInfoDefragmentTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportThread.MAX_LOCK_HOLD_MS"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.storageInfoDefragmentTimeout"))).intValue());
			}
		});
		invariants999.add(new Invariant(275, "blockManagerInstance.blockReportThread.MAX_LOCK_HOLD_MS == blockManagerInstance.storagePolicySuite.ID_BIT_LENGTH"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportThread.MAX_LOCK_HOLD_MS"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.storagePolicySuite.ID_BIT_LENGTH"))).intValue());
			}
		});
		invariants999.add(new Invariant(276, "blockManagerInstance.blocksPerPostpondedRescan == blockManagerInstance.datanodeManager.blocksPerPostponedMisreplicatedBlocksRescan"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blocksPerPostpondedRescan"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.blocksPerPostponedMisreplicatedBlocksRescan"))).intValue());
			}
		});
		invariants999.add(new Invariant(277, "blockManagerInstance.blocksPerPostpondedRescan == blockManagerInstance.numBlocksPerIteration"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blocksPerPostpondedRescan"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.numBlocksPerIteration"))).intValue());
			}
		});
		invariants999.add(new Invariant(278, "blockManagerInstance.blocksReplWorkMultiplier == blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.sequenceNumber"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blocksReplWorkMultiplier"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.sequenceNumber"))).intValue());
			}
		});
		invariants999.add(new Invariant(279, "blockManagerInstance.blocksReplWorkMultiplier == blockManagerInstance.maxReplicationStreams"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blocksReplWorkMultiplier"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.maxReplicationStreams"))).intValue());
			}
		});
		invariants999.add(new Invariant(280, "blockManagerInstance.blocksReplWorkMultiplier == blockManagerInstance.neededReconstruction.QUEUE_LOW_REDUNDANCY"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blocksReplWorkMultiplier"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.QUEUE_LOW_REDUNDANCY"))).intValue());
			}
		});
		invariants999.add(new Invariant(281, "blockManagerInstance.blocksReplWorkMultiplier == blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blocksReplWorkMultiplier"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandMultiplier"))).intValue());
			}
		});
		invariants999.add(new Invariant(282, "blockManagerInstance.bmSafeMode.haEnabled == blockManagerInstance.bmSafeMode.inRollBack"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.haEnabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.inRollBack"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(283, "blockManagerInstance.bmSafeMode.haEnabled == blockManagerInstance.datanodeManager.avoidStaleDataNodesForRead"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.haEnabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.avoidStaleDataNodesForRead"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(284, "blockManagerInstance.bmSafeMode.haEnabled == blockManagerInstance.datanodeManager.avoidStaleDataNodesForWrite"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.haEnabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.avoidStaleDataNodesForWrite"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(285, "blockManagerInstance.bmSafeMode.haEnabled == blockManagerInstance.datanodeManager.dataNodeDiskStatsEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.haEnabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.dataNodeDiskStatsEnabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(286, "blockManagerInstance.bmSafeMode.haEnabled == blockManagerInstance.datanodeManager.dataNodePeerStatsEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.haEnabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.dataNodePeerStatsEnabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(287, "blockManagerInstance.bmSafeMode.haEnabled == blockManagerInstance.datanodeManager.hasClusterEverBeenMultiRack"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.haEnabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.hasClusterEverBeenMultiRack"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(288, "blockManagerInstance.bmSafeMode.haEnabled == blockManagerInstance.datanodeManager.heartbeatManager.enableLogStaleNodes"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.haEnabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatManager.enableLogStaleNodes"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(289, "blockManagerInstance.bmSafeMode.haEnabled == blockManagerInstance.datanodeManager.rejectUnresolvedTopologyDN"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.haEnabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.rejectUnresolvedTopologyDN"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(290, "blockManagerInstance.bmSafeMode.haEnabled == blockManagerInstance.encryptDataTransfer"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.haEnabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.encryptDataTransfer"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(291, "blockManagerInstance.bmSafeMode.haEnabled == blockManagerInstance.hasNonEcBlockUsingStripedID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.haEnabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.hasNonEcBlockUsingStripedID"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(292, "blockManagerInstance.bmSafeMode.haEnabled == blockManagerInstance.heartbeatManager.enableLogStaleNodes"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.haEnabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.enableLogStaleNodes"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(293, "blockManagerInstance.bmSafeMode.haEnabled == blockManagerInstance.providedStorageMap.providedEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.haEnabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.providedStorageMap.providedEnabled"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(294, "blockManagerInstance.bmSafeMode.haEnabled == blockManagerInstance.shouldPostponeBlocksFromFuture"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.haEnabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.shouldPostponeBlocksFromFuture"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(295, "daikon.Quant.fuzzy.eq(blockManagerInstance.bmSafeMode.replQueueThreshold, blockManagerInstance.bmSafeMode.threshold)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.fuzzy.eq(((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.replQueueThreshold"))).doubleValue(), ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.threshold"))).doubleValue()));
			}
		});
		invariants999.add(new Invariant(296, "blockManagerInstance.bmSafeMode.safeReplication == blockManagerInstance.defaultReplication"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.safeReplication"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.defaultReplication"))).intValue());
			}
		});
		invariants999.add(new Invariant(297, "blockManagerInstance.bmSafeMode.safeReplication == blockManagerInstance.neededReconstruction.QUEUE_VERY_LOW_REDUNDANCY"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.safeReplication"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.QUEUE_VERY_LOW_REDUNDANCY"))).intValue());
			}
		});
		invariants999.add(new Invariant(298, "blockManagerInstance.checkNSRunning == blockManagerInstance.datanodeManager.checkIpHostnameInRegistration"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("blockManagerInstance.checkNSRunning"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.checkIpHostnameInRegistration"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(299, "blockManagerInstance.checkNSRunning == blockManagerInstance.datanodeManager.useDfsNetworkTopology"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("blockManagerInstance.checkNSRunning"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.useDfsNetworkTopology"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(300, "blockManagerInstance.checkNSRunning == blockManagerInstance.pendingReconstruction.fsRunning"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("blockManagerInstance.checkNSRunning"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.pendingReconstruction.fsRunning"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(301, "blockManagerInstance.checkNSRunning == blockManagerInstance.placementPolicies.ecPolicy.considerLoad"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("blockManagerInstance.checkNSRunning"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.placementPolicies.ecPolicy.considerLoad"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(302, "blockManagerInstance.checkNSRunning == blockManagerInstance.placementPolicies.ecPolicy.preferLocalNode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("blockManagerInstance.checkNSRunning"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.placementPolicies.ecPolicy.preferLocalNode"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(303, "blockManagerInstance.checkNSRunning == blockManagerInstance.placementPolicies.replicationPolicy.considerLoad"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("blockManagerInstance.checkNSRunning"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.placementPolicies.replicationPolicy.considerLoad"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(304, "blockManagerInstance.checkNSRunning == blockManagerInstance.placementPolicies.replicationPolicy.preferLocalNode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("blockManagerInstance.checkNSRunning"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.placementPolicies.replicationPolicy.preferLocalNode"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(305, "blockManagerInstance.datanodeManager.heartbeatIntervalSeconds == blockManagerInstance.neededReconstruction.QUEUE_REPLICAS_BADLY_DISTRIBUTED"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatIntervalSeconds"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.QUEUE_REPLICAS_BADLY_DISTRIBUTED"))).intValue());
			}
		});
		invariants999.add(new Invariant(306, "blockManagerInstance.datanodeManager.heartbeatIntervalSeconds == blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.shrinkThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatIntervalSeconds"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.shrinkThreshold"))).intValue());
			}
		});
		invariants999.add(new Invariant(307, "blockManagerInstance.datanodeManager.heartbeatManager.REPORT_STALE_NODE_NODES_PER_LINE == blockManagerInstance.heartbeatManager.REPORT_STALE_NODE_NODES_PER_LINE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatManager.REPORT_STALE_NODE_NODES_PER_LINE"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.REPORT_STALE_NODE_NODES_PER_LINE"))).intValue());
			}
		});
		invariants999.add(new Invariant(308, "blockManagerInstance.datanodeManager.shouldSendCachingCommands == blockManagerInstance.initializedReplQueues"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.shouldSendCachingCommands"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.initializedReplQueues"))).booleanValue());
			}
		});
		invariants999.add(new Invariant(309, "blockManagerInstance.datanodeManager.staleInterval == blockManagerInstance.datanodeManager.timeBetweenResendingCachingDirectivesMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.staleInterval"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.timeBetweenResendingCachingDirectivesMs"))).intValue());
			}
		});
		invariants999.add(new Invariant(310, "blockManagerInstance.datanodeManager.staleInterval == blockManagerInstance.placementPolicies.ecPolicy.staleInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.staleInterval"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.placementPolicies.ecPolicy.staleInterval"))).intValue());
			}
		});
		invariants999.add(new Invariant(311, "blockManagerInstance.datanodeManager.staleInterval == blockManagerInstance.placementPolicies.replicationPolicy.staleInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.staleInterval"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.placementPolicies.replicationPolicy.staleInterval"))).intValue());
			}
		});
		invariants999.add(new Invariant(312, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed == blockManagerInstance.heartbeatManager.stats.capacityUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsed"))).intValue());
			}
		});
		invariants999.add(new Invariant(313, "blockManagerInstance.heartbeatManager.stats.nodesInService == blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue());
			}
		});
		invariants999.add(new Invariant(314, "blockManagerInstance.heartbeatManager.stats.nodesInService == blockManagerInstance.heartbeatManager.stats.xceiverCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.xceiverCount"))).intValue());
			}
		});
		invariants999.add(new Invariant(315, "blockManagerInstance.minReplication == blockManagerInstance.minReplicationToBeInMaintenance"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.minReplication"))).shortValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.minReplicationToBeInMaintenance"))).shortValue());
			}
		});
		invariants999.add(new Invariant(316, "daikon.Quant.fuzzy.eq(blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.DEFAULT_MAX_LOAD_FACTOR, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.maxLoadFactor)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.fuzzy.eq(((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.DEFAULT_MAX_LOAD_FACTOR"))).doubleValue(), ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.maxLoadFactor"))).doubleValue()));
			}
		});
		invariants999.add(new Invariant(317, "daikon.Quant.fuzzy.eq(blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.DEFAULT_MAX_LOAD_FACTOR, blockManagerInstance.storageInfoDefragmentRatio)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.fuzzy.eq(((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.DEFAULT_MAX_LOAD_FACTOR"))).doubleValue(), ((Number)(InvariantChecker.getValue("blockManagerInstance.storageInfoDefragmentRatio"))).doubleValue()));
			}
		});
		invariants999.add(new Invariant(318, "daikon.Quant.fuzzy.eq(blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.DEFAUT_MIN_LOAD_FACTOR, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.minLoadFactor)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.fuzzy.eq(((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.DEFAUT_MIN_LOAD_FACTOR"))).doubleValue(), ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.minLoadFactor"))).doubleValue()));
			}
		});
		invariants999.add(new Invariant(319, "blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY == blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.capacity"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.capacity"))).intValue());
			}
		});
		invariants999.add(new Invariant(320, "blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY == blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.initialCapacity"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.initialCapacity"))).intValue());
			}
		});
		invariants999.add(new Invariant(321, "daikon.Quant.fuzzy.eq(blockManagerInstance.placementPolicies.ecPolicy.considerLoadFactor, blockManagerInstance.placementPolicies.replicationPolicy.considerLoadFactor)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.fuzzy.eq(((Number)(InvariantChecker.getValue("blockManagerInstance.placementPolicies.ecPolicy.considerLoadFactor"))).doubleValue(), ((Number)(InvariantChecker.getValue("blockManagerInstance.placementPolicies.replicationPolicy.considerLoadFactor"))).doubleValue()));
			}
		});
		invariants999.add(new Invariant(322, "blockManagerInstance.placementPolicies.ecPolicy.heartbeatInterval == blockManagerInstance.placementPolicies.replicationPolicy.heartbeatInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.placementPolicies.ecPolicy.heartbeatInterval"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.placementPolicies.replicationPolicy.heartbeatInterval"))).intValue());
			}
		});
		invariants999.add(new Invariant(323, "blockManagerInstance.placementPolicies.ecPolicy.heartbeatInterval == blockManagerInstance.redundancyRecheckIntervalMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.placementPolicies.ecPolicy.heartbeatInterval"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.redundancyRecheckIntervalMs"))).intValue());
			}
		});
		invariants999.add(new Invariant(324, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION-1) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.volsConfigured)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue()-1) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue()));
			}
		});
		invariants999.add(new Invariant(325, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME"))).intValue()));
			}
		});
		invariants999.add(new Invariant(326, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.directoryScanner.diffs.serialVersionUID)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.diffs.serialVersionUID"))).intValue()));
			}
		});
		invariants999.add(new Invariant(327, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue()));
			}
		});
		invariants999.add(new Invariant(328, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.id.nsInfo.CAPABILITIES_SUPPORTED)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.CAPABILITIES_SUPPORTED"))).intValue()));
			}
		});
		invariants999.add(new Invariant(329, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.id.nsInfo.capabilities)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.capabilities"))).intValue()));
			}
		});
		invariants999.add(new Invariant(330, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.volumeChecker.numSyncDatasetChecks)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue()));
			}
		});
		invariants999.add(new Invariant(331, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME-1) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.numDeletedBlocks)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue()-1) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue()));
			}
		});
		invariants999.add(new Invariant(332, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.numDeletedBlocks) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.cacheManager.numBlocksCached)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue()));
			}
		});
		invariants999.add(new Invariant(333, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.numDeletedBlocks) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.directoryScanner.diffs.serialVersionUID-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.diffs.serialVersionUID"))).intValue()-1));
			}
		});
		invariants999.add(new Invariant(334, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.numDeletedBlocks) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.directoryScanner.timeRunningMs)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.timeRunningMs"))).intValue()));
			}
		});
		invariants999.add(new Invariant(335, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.numDeletedBlocks) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.directoryScanner.timeWaitingMs)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.timeWaitingMs"))).intValue()));
			}
		});
		invariants999.add(new Invariant(336, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.numDeletedBlocks) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.diskBalancer.currentResult.result)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.currentResult.result"))).intValue()));
			}
		});
		invariants999.add(new Invariant(337, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.numDeletedBlocks) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.dnConf.ibrInterval)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue()));
			}
		});
		invariants999.add(new Invariant(338, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.numDeletedBlocks) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.fileIoProvider.profilingEventHook.sampleRangeMax)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.fileIoProvider.profilingEventHook.sampleRangeMax"))).intValue()));
			}
		});
		invariants999.add(new Invariant(339, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.numDeletedBlocks) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.id.exportedKeys.keyUpdateInterval)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.id.exportedKeys.keyUpdateInterval"))).intValue()));
			}
		});
		invariants999.add(new Invariant(340, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.numDeletedBlocks) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.id.exportedKeys.tokenLifetime)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.id.exportedKeys.tokenLifetime"))).intValue()));
			}
		});
		invariants999.add(new Invariant(341, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.numDeletedBlocks) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.id.infoSecurePort)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.id.infoSecurePort"))).intValue()));
			}
		});
		invariants999.add(new Invariant(342, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.numDeletedBlocks) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.id.nsInfo.CAPABILITIES_SUPPORTED-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.CAPABILITIES_SUPPORTED"))).intValue()-1));
			}
		});
		invariants999.add(new Invariant(343, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.numDeletedBlocks) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.id.nsInfo.capabilities-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.capabilities"))).intValue()-1));
			}
		});
		invariants999.add(new Invariant(344, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.numDeletedBlocks) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.infoSecurePort)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.infoSecurePort"))).intValue()));
			}
		});
		invariants999.add(new Invariant(345, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.numDeletedBlocks) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.xmitsInProgress)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.xmitsInProgress"))).intValue()));
			}
		});
		invariants999.add(new Invariant(346, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncLazyPersistService.MAXIMUM_THREADS_PER_VOLUME)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.MAXIMUM_THREADS_PER_VOLUME"))).intValue()));
			}
		});
		invariants999.add(new Invariant(347, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.volsConfigured-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue()-1));
			}
		});
		invariants999.add(new Invariant(348, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue()));
			}
		});
		invariants999.add(new Invariant(349, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.volumeChecker.numSyncDatasetChecks)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue()));
			}
		});
		invariants999.add(new Invariant(350, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME-1) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.cacheManager.numBlocksCached)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME"))).intValue()-1) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue()));
			}
		});
		invariants999.add(new Invariant(351, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncLazyPersistService.MAXIMUM_THREADS_PER_VOLUME-1) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.cacheManager.numBlocksCached)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.MAXIMUM_THREADS_PER_VOLUME"))).intValue()-1) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue()));
			}
		});
		invariants999.add(new Invariant(352, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.cacheManager.numBlocksCached) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.cacheManager.numBlocksFailedToCache)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToCache"))).intValue()));
			}
		});
		invariants999.add(new Invariant(353, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.cacheManager.numBlocksCached) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.cacheManager.numBlocksFailedToUncache)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue()));
			}
		});
		invariants999.add(new Invariant(354, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.cacheManager.numBlocksCached) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.volFailuresTolerated)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.volFailuresTolerated"))).intValue()));
			}
		});
		invariants999.add(new Invariant(355, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.cacheManager.numBlocksCached) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.dnConf.ibrInterval)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue()));
			}
		});
		invariants999.add(new Invariant(356, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.volsConfigured) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.dnConf.volsConfigured)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.volsConfigured"))).intValue()));
			}
		});
		invariants999.add(new Invariant(357, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.dnConf.ibrInterval) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.dnConf.initialBlockReportDelayMs)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.initialBlockReportDelayMs"))).intValue()));
			}
		});
		invariants999.add(new Invariant(358, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.dnConf.ibrInterval) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.dnConf.maxLockedMemory)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.maxLockedMemory"))).intValue()));
			}
		});
		invariants999.add(new Invariant(359, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.dnConf.ibrInterval) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.dnConf.transferSocketRecvBufferSize)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.transferSocketRecvBufferSize"))).intValue()));
			}
		});
		invariants999.add(new Invariant(360, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.dnConf.ibrInterval) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.dnConf.transferSocketSendBufferSize)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.transferSocketSendBufferSize"))).intValue()));
			}
		});
		invariants999.add(new Invariant(361, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.dnConf.ibrInterval) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.dnConf.volFailuresTolerated)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.volFailuresTolerated"))).intValue()));
			}
		});
		invariants999.add(new Invariant(362, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.dnConf.ibrInterval) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue()-1));
			}
		});
		invariants999.add(new Invariant(363, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.dnConf.ibrInterval) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.httpServer.HTTP_SELECTOR_THREADS-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_SELECTOR_THREADS"))).intValue()-1));
			}
		});
		invariants999.add(new Invariant(364, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.dnConf.ibrInterval) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.storage.cTime)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.storage.cTime"))).intValue()));
			}
		});
		invariants999.add(new Invariant(365, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.dnConf.ibrInterval) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.storageLocationChecker.delegateChecker.diskCheckTimeout)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.storageLocationChecker.delegateChecker.diskCheckTimeout"))).intValue()));
			}
		});
		invariants999.add(new Invariant(366, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.dnConf.ibrInterval) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.volumeChecker.maxVolumeFailuresTolerated)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.maxVolumeFailuresTolerated"))).intValue()));
			}
		});
		invariants999.add(new Invariant(367, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.dnConf.ibrInterval) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.volumeChecker.numAsyncDatasetChecks)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numAsyncDatasetChecks"))).intValue()));
			}
		});
		invariants999.add(new Invariant(368, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.dnConf.ibrInterval) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.volumeChecker.numSkippedChecks)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSkippedChecks"))).intValue()));
			}
		});
		invariants999.add(new Invariant(369, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.dnConf.ibrInterval) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.volumeChecker.numVolumeChecks)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numVolumeChecks"))).intValue()));
			}
		});
		invariants999.add(new Invariant(370, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.dnConf.ibrInterval) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.xserver.balanceThrottler.bytesAlreadyUsed)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.bytesAlreadyUsed"))).intValue()));
			}
		});
		invariants999.add(new Invariant(371, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.dnConf.ibrInterval) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.xserver.balanceThrottler.numThreads)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.numThreads"))).intValue()));
			}
		});
		invariants999.add(new Invariant(372, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.dnConf.ibrInterval) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, NameNode.instance.ACTIVE_STATE.lastHATransitionTime)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("NameNode.instance.ACTIVE_STATE.lastHATransitionTime"))).intValue()));
			}
		});
		invariants999.add(new Invariant(373, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.dnConf.ibrInterval) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, NameNode.instance.OBSERVER_STATE.lastHATransitionTime)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("NameNode.instance.OBSERVER_STATE.lastHATransitionTime"))).intValue()));
			}
		});
		invariants999.add(new Invariant(374, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.dnConf.ibrInterval) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, NameNode.instance.STANDBY_STATE.lastHATransitionTime)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("NameNode.instance.STANDBY_STATE.lastHATransitionTime"))).intValue()));
			}
		});
		invariants999.add(new Invariant(375, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.dnConf.ibrInterval) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.sequenceNumber-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.sequenceNumber"))).intValue()-1));
			}
		});
		invariants999.add(new Invariant(376, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.dnConf.ibrInterval) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size"))).intValue()));
			}
		});
		invariants999.add(new Invariant(377, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.dnConf.ibrInterval) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, NameNode.instance.namesystem.cacheManager.nextDirectiveId-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.nextDirectiveId"))).intValue()-1));
			}
		});
		invariants999.add(new Invariant(378, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.dnConf.ibrInterval) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, NameNode.instance.namesystem.dir.yieldCount)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.yieldCount"))).intValue()));
			}
		});
		invariants999.add(new Invariant(379, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.dnConf.ibrInterval) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, NameNode.instance.namesystem.fsImage.lastAppliedTxId)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue()));
			}
		});
		invariants999.add(new Invariant(380, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.dnConf.ibrInterval) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, NameNode.instance.namesystem.fsLock.longestReadLockHeldIntervalMs)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.longestReadLockHeldIntervalMs"))).intValue()));
			}
		});
		invariants999.add(new Invariant(381, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.dnConf.ibrInterval) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, NameNode.instance.namesystem.fsLock.numReadLockWarningsSuppressed)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.numReadLockWarningsSuppressed"))).intValue()));
			}
		});
		invariants999.add(new Invariant(382, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.dnConf.ibrInterval) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, NameNode.instance.namesystem.fsLock.timeStampOfLastReadLockReportMs)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.timeStampOfLastReadLockReportMs"))).intValue()));
			}
		});
		invariants999.add(new Invariant(383, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.dnConf.ibrInterval) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, NameNode.instance.namesystem.maxFsObjects)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.maxFsObjects"))).intValue()));
			}
		});
		invariants999.add(new Invariant(384, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.dnConf.ibrInterval) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, NameNode.instance.namesystem.minBlockSize)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.minBlockSize"))).intValue()));
			}
		});
		invariants999.add(new Invariant(385, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.dnConf.ibrInterval) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, NameNode.instance.namesystem.nnResourceChecker.minimumRedundantVolumes-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.nnResourceChecker.minimumRedundantVolumes"))).intValue()-1));
			}
		});
		invariants999.add(new Invariant(386, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.dnConf.ibrInterval) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, NameNode.instance.namesystem.numCommittedAllowed)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.numCommittedAllowed"))).intValue()));
			}
		});
		invariants999.add(new Invariant(387, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.dnConf.ibrInterval) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, NameNode.instance.namesystem.snapshotManager.numSnapshots)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.numSnapshots"))).intValue()));
			}
		});
		invariants999.add(new Invariant(388, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.dnConf.ibrInterval) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, NameNode.instance.namesystem.snapshotManager.snapshotCounter)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue()));
			}
		});
		invariants999.add(new Invariant(389, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.dnConf.ibrInterval) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, NameNode.instance.state.lastHATransitionTime)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("NameNode.instance.state.lastHATransitionTime"))).intValue()));
			}
		});
		invariants999.add(new Invariant(390, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.dnConf.volsConfigured-1) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.volsConfigured"))).intValue()-1) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue()));
			}
		});
		invariants999.add(new Invariant(391, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.httpServer.HTTP_SELECTOR_THREADS)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_SELECTOR_THREADS"))).intValue()));
			}
		});
		invariants999.add(new Invariant(392, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.sequenceNumber)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.sequenceNumber"))).intValue()));
			}
		});
		invariants999.add(new Invariant(393, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, NameNode.instance.namesystem.cacheManager.nextDirectiveId)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.nextDirectiveId"))).intValue()));
			}
		});
		invariants999.add(new Invariant(394, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, NameNode.instance.namesystem.nnResourceChecker.minimumRedundantVolumes)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.nnResourceChecker.minimumRedundantVolumes"))).intValue()));
			}
		});
		invariants999.add(new Invariant(395, "daikon.Quant.fuzzy.eq(DataNode.instance.CONGESTION_RATIO, 1.5)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.fuzzy.eq(((Number)(InvariantChecker.getValue("DataNode.instance.CONGESTION_RATIO"))).doubleValue(), 1.5));
			}
		});
		invariants999.add(new Invariant(396, "DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT == -1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT"))).intValue() == -1);
			}
		});
		invariants999.add(new Invariant(397, "DataNode.instance.NUM_CORES == 32"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.NUM_CORES"))).intValue() == 32);
			}
		});
		invariants999.add(new Invariant(398, "DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs == 30000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs"))).intValue() == 30000);
			}
		});
		invariants999.add(new Invariant(399, "DataNode.instance.cacheReportsDisabledForTests == false"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.cacheReportsDisabledForTests"))).booleanValue() == false);
			}
		});
		invariants999.add(new Invariant(400, "DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION == 3"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue() == 3);
			}
		});
		invariants999.add(new Invariant(401, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME == 1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() == 1);
			}
		});
		invariants999.add(new Invariant(402, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME == 4"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() == 4);
			}
		});
		invariants999.add(new Invariant(403, "DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS == 64"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS"))).intValue() == 64);
			}
		});
		invariants999.add(new Invariant(404, "DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS == 60"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() == 60);
			}
		});
		invariants999.add(new Invariant(405, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == 0);
			}
		});
		invariants999.add(new Invariant(406, "DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME == 1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME"))).intValue() == 1);
			}
		});
		invariants999.add(new Invariant(407, "DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS == 60"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() == 60);
			}
		});
		invariants999.add(new Invariant(408, "DataNode.instance.data.blockPinningEnabled == false"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.data.blockPinningEnabled"))).booleanValue() == false);
			}
		});
		invariants999.add(new Invariant(409, "DataNode.instance.data.cacheManager.numBlocksCached == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == 0);
			}
		});
		invariants999.add(new Invariant(410, "DataNode.instance.data.cacheManager.revocationMs == 900000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationMs"))).intValue() == 900000);
			}
		});
		invariants999.add(new Invariant(411, "DataNode.instance.data.cacheManager.revocationPollingMs == 500"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationPollingMs"))).intValue() == 500);
			}
		});
		invariants999.add(new Invariant(412, "DataNode.instance.data.fsRunning == true"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.data.fsRunning"))).booleanValue() == true);
			}
		});
		invariants999.add(new Invariant(413, "DataNode.instance.data.maxDataLength == 67108864"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.maxDataLength"))).intValue() == 67108864);
			}
		});
		invariants999.add(new Invariant(414, "DataNode.instance.data.smallBufferSize == 512"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.smallBufferSize"))).intValue() == 512);
			}
		});
		invariants999.add(new Invariant(415, "DataNode.instance.data.volsConfigured == 2"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue() == 2);
			}
		});
		invariants999.add(new Invariant(416, "DataNode.instance.directoryScanner.MILLIS_PER_SECOND == 1000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.MILLIS_PER_SECOND"))).intValue() == 1000);
			}
		});
		invariants999.add(new Invariant(417, "DataNode.instance.directoryScanner.diffs_FOR_ENCLOSING_USE != null"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return ((Set.class.cast(InvariantChecker.getValue("DataNode.instance.directoryScanner.diffs")).toArray(new Object[0])) != null);
			}
		});
		invariants999.add(new Invariant(418, "daikon.Quant.pairwiseEqual(DataNode.instance.directoryScanner.diffs_FOR_ENCLOSING_USE, new String[] {  })"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.pairwiseEqual((Set.class.cast(InvariantChecker.getValue("DataNode.instance.directoryScanner.diffs")).toArray(new Object[0])), new String[] {  }));
			}
		});
		invariants999.add(new Invariant(419, "DataNode.instance.directoryScanner.scanPeriodMsecs == 21600000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.scanPeriodMsecs"))).intValue() == 21600000);
			}
		});
		invariants999.add(new Invariant(420, "DataNode.instance.directoryScanner.shouldRun == true"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.directoryScanner.shouldRun"))).booleanValue() == true);
			}
		});
		invariants999.add(new Invariant(421, "DataNode.instance.diskBalancer.bandwidth == 10"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.bandwidth"))).intValue() == 10);
			}
		});
		invariants999.add(new Invariant(422, "DataNode.instance.diskBalancer.planValidityInterval == 86400000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.planValidityInterval"))).intValue() == 86400000);
			}
		});
		invariants999.add(new Invariant(423, "DataNode.instance.dnConf.allowNonLocalLazyPersist == false"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.allowNonLocalLazyPersist"))).booleanValue() == false);
			}
		});
		invariants999.add(new Invariant(424, "DataNode.instance.dnConf.blockReportInterval == 21600000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportInterval"))).intValue() == 21600000);
			}
		});
		invariants999.add(new Invariant(425, "DataNode.instance.dnConf.blockReportSplitThreshold == 1000000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportSplitThreshold"))).intValue() == 1000000);
			}
		});
		invariants999.add(new Invariant(426, "DataNode.instance.dnConf.bpReadyTimeout == 20"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.bpReadyTimeout"))).intValue() == 20);
			}
		});
		invariants999.add(new Invariant(427, "DataNode.instance.dnConf.cacheReportInterval == 10000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.cacheReportInterval"))).intValue() == 10000);
			}
		});
		invariants999.add(new Invariant(428, "DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs == 300"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs"))).intValue() == 300);
			}
		});
		invariants999.add(new Invariant(429, "DataNode.instance.dnConf.heartBeatInterval == 3000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.heartBeatInterval"))).intValue() == 3000);
			}
		});
		invariants999.add(new Invariant(430, "DataNode.instance.dnConf.ibrInterval == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == 0);
			}
		});
		invariants999.add(new Invariant(431, "DataNode.instance.dnConf.lifelineIntervalMs == 9000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.lifelineIntervalMs"))).intValue() == 9000);
			}
		});
		invariants999.add(new Invariant(432, "DataNode.instance.dnConf.maxDataLength == 67108864"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.maxDataLength"))).intValue() == 67108864);
			}
		});
		invariants999.add(new Invariant(433, "DataNode.instance.dnConf.outliersReportIntervalMs == 1800000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.outliersReportIntervalMs"))).intValue() == 1800000);
			}
		});
		invariants999.add(new Invariant(434, "DataNode.instance.dnConf.pmemCacheRecoveryEnabled == true"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.pmemCacheRecoveryEnabled"))).booleanValue() == true);
			}
		});
		invariants999.add(new Invariant(435, "DataNode.instance.dnConf.readaheadLength == 4194304"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.readaheadLength"))).intValue() == 4194304);
			}
		});
		invariants999.add(new Invariant(436, "DataNode.instance.dnConf.restartReplicaExpiry == 50000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.restartReplicaExpiry"))).intValue() == 50000);
			}
		});
		invariants999.add(new Invariant(437, "DataNode.instance.dnConf.socketKeepaliveTimeout == 4000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketKeepaliveTimeout"))).intValue() == 4000);
			}
		});
		invariants999.add(new Invariant(438, "DataNode.instance.dnConf.socketTimeout == 60000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketTimeout"))).intValue() == 60000);
			}
		});
		invariants999.add(new Invariant(439, "DataNode.instance.dnConf.socketWriteTimeout == 480000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketWriteTimeout"))).intValue() == 480000);
			}
		});
		invariants999.add(new Invariant(440, "DataNode.instance.dnConf.volsConfigured == 2"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.volsConfigured"))).intValue() == 2);
			}
		});
		invariants999.add(new Invariant(441, "DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS == 1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue() == 1);
			}
		});
		invariants999.add(new Invariant(442, "DataNode.instance.httpServer.HTTP_MAX_THREADS == 4"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_MAX_THREADS"))).intValue() == 4);
			}
		});
		invariants999.add(new Invariant(443, "DataNode.instance.id.infoPort == 37785"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() == 37785);
			}
		});
		invariants999.add(new Invariant(444, "DataNode.instance.id.ipcPort == 43731"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() == 43731);
			}
		});
		invariants999.add(new Invariant(445, "DataNode.instance.id.nsInfo.cTime == 1731381653952L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() == 1731381653952L);
			}
		});
		invariants999.add(new Invariant(446, "DataNode.instance.id.nsInfo.layoutVersion == -65"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.layoutVersion"))).intValue() == -65);
			}
		});
		invariants999.add(new Invariant(447, "DataNode.instance.id.nsInfo.namespaceID == 1620332546"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() == 1620332546);
			}
		});
		invariants999.add(new Invariant(448, "DataNode.instance.id.xferPort == 41255"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() == 41255);
			}
		});
		invariants999.add(new Invariant(449, "DataNode.instance.lastDiskErrorCheck == 117762496"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() == 117762496);
			}
		});
		invariants999.add(new Invariant(450, "DataNode.instance.shortCircuitRegistry.SHM_LENGTH == 8192"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.shortCircuitRegistry.SHM_LENGTH"))).intValue() == 8192);
			}
		});
		invariants999.add(new Invariant(451, "DataNode.instance.storage.layoutVersion == -57"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() == -57);
			}
		});
		invariants999.add(new Invariant(452, "DataNode.instance.storage.namespaceID == 1620332546"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() == 1620332546);
			}
		});
		invariants999.add(new Invariant(453, "DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks == 900000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks"))).intValue() == 900000);
			}
		});
		invariants999.add(new Invariant(454, "DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout == 600000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout"))).intValue() == 600000);
			}
		});
		invariants999.add(new Invariant(455, "DataNode.instance.volumeChecker.lastAllVolumesCheck == 116861143 || DataNode.instance.volumeChecker.lastAllVolumesCheck == 117762491"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() == 116861143 || ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() == 117762491);
			}
		});
		invariants999.add(new Invariant(456, "DataNode.instance.volumeChecker.numSyncDatasetChecks == 0 || DataNode.instance.volumeChecker.numSyncDatasetChecks == 1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() == 1);
			}
		});
		invariants999.add(new Invariant(457, "DataNode.instance.xserver.balanceThrottler.bytesPerPeriod == 5242880"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.bytesPerPeriod"))).intValue() == 5242880);
			}
		});
		invariants999.add(new Invariant(458, "DataNode.instance.xserver.balanceThrottler.curPeriodStart == 117761156"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() == 117761156);
			}
		});
		invariants999.add(new Invariant(459, "DataNode.instance.xserver.balanceThrottler.maxThreads == 50"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.maxThreads"))).intValue() == 50);
			}
		});
		invariants999.add(new Invariant(460, "DataNode.instance.xserver.balanceThrottler.period == 500"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.period"))).intValue() == 500);
			}
		});
		invariants999.add(new Invariant(461, "DataNode.instance.xserver.balanceThrottler.periodExtension == 1500"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.periodExtension"))).intValue() == 1500);
			}
		});
		invariants999.add(new Invariant(462, "DataNode.instance.xserver.estimateBlockSize == 134217728"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.estimateBlockSize"))).intValue() == 134217728);
			}
		});
		invariants999.add(new Invariant(463, "DataNode.instance.xserver.maxXceiverCount == 4096"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.maxXceiverCount"))).intValue() == 4096);
			}
		});
		invariants999.add(new Invariant(464, "NameNode.instance.DEFAULT_PORT == 8020"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.DEFAULT_PORT"))).intValue() == 8020);
			}
		});
		invariants999.add(new Invariant(465, "NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS == 5000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS"))).intValue() == 5000);
			}
		});
		invariants999.add(new Invariant(466, "NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL == 3600000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL"))).intValue() == 3600000);
			}
		});
		invariants999.add(new Invariant(467, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE == 14"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() == 14);
			}
		});
		invariants999.add(new Invariant(468, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size == -9223372036854775808L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size"))).intValue() == -9223372036854775808L);
			}
		});
		invariants999.add(new Invariant(469, "NameNode.instance.namesystem.blockDeletionIncrement == 1000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.blockDeletionIncrement"))).intValue() == 1000);
			}
		});
		invariants999.add(new Invariant(470, "daikon.Quant.fuzzy.eq(NameNode.instance.namesystem.cacheManager.MIN_CACHED_BLOCKS_PERCENT, 0.001)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.fuzzy.eq(((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.MIN_CACHED_BLOCKS_PERCENT"))).doubleValue(), 0.001));
			}
		});
		invariants999.add(new Invariant(471, "NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses == 100"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses"))).intValue() == 100);
			}
		});
		invariants999.add(new Invariant(472, "NameNode.instance.namesystem.cacheManager.scanIntervalMs == 30000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.scanIntervalMs"))).intValue() == 30000);
			}
		});
		invariants999.add(new Invariant(473, "NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE == 10"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE"))).intValue() == 10);
			}
		});
		invariants999.add(new Invariant(474, "NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval == 300000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"))).intValue() == 300000);
			}
		});
		invariants999.add(new Invariant(475, "NameNode.instance.namesystem.dir.inodeXAttrsLimit == 32"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.inodeXAttrsLimit"))).intValue() == 32);
			}
		});
		invariants999.add(new Invariant(476, "NameNode.instance.namesystem.dir.maxComponentLength == 255"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxComponentLength"))).intValue() == 255);
			}
		});
		invariants999.add(new Invariant(477, "NameNode.instance.namesystem.dir.maxDirItems == 1048576"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxDirItems"))).intValue() == 1048576);
			}
		});
		invariants999.add(new Invariant(478, "NameNode.instance.namesystem.dir.xattrMaxSize == 16384"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.xattrMaxSize"))).intValue() == 16384);
			}
		});
		invariants999.add(new Invariant(479, "NameNode.instance.namesystem.editLogRollerThreshold == 500000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogRollerThreshold"))).intValue() == 500000);
			}
		});
		invariants999.add(new Invariant(480, "NameNode.instance.namesystem.lazyPersistFileScrubberTS == 117761078"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() == 117761078);
			}
		});
		invariants999.add(new Invariant(481, "NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN == 512"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN"))).intValue() == 512);
			}
		});
		invariants999.add(new Invariant(482, "NameNode.instance.namesystem.leaseManager.hardLimit == 1200000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.hardLimit"))).intValue() == 1200000);
			}
		});
		invariants999.add(new Invariant(483, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime == 117760335"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() == 117760335);
			}
		});
		invariants999.add(new Invariant(484, "daikon.Quant.eltsNotEqual(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE, null)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.eltsNotEqual((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0])), null));
			}
		});
		invariants999.add(new Invariant(485, "NameNode.instance.namesystem.leaseRecheckIntervalMs == 2000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseRecheckIntervalMs"))).intValue() == 2000);
			}
		});
		invariants999.add(new Invariant(486, "NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs == 25"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"))).intValue() == 25);
			}
		});
		invariants999.add(new Invariant(487, "NameNode.instance.namesystem.nnResourceChecker.duReserved == 104857600"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.nnResourceChecker.duReserved"))).intValue() == 104857600);
			}
		});
		invariants999.add(new Invariant(488, "NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH == 24"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"))).intValue() == 24);
			}
		});
		invariants999.add(new Invariant(489, "NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit == 65536"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit"))).intValue() == 65536);
			}
		});
		invariants999.add(new Invariant(490, "NameNode.instance.namesystem.startTime == 1731381655427L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() == 1731381655427L);
			}
		});
		invariants999.add(new Invariant(491, "daikon.Quant.eltsNotEqual(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, null)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.eltsNotEqual((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), null));
			}
		});
		invariants999.add(new Invariant(492, "blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER == 30"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"))).intValue() == 30);
			}
		});
		invariants999.add(new Invariant(493, "blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID == 1073741824"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"))).intValue() == 1073741824);
			}
		});
		invariants999.add(new Invariant(494, "blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP == 1000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP"))).intValue() == 1000);
			}
		});
		invariants999.add(new Invariant(495, "blockManagerInstance.blockReportLeaseManager.leaseExpiryMs == 300000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.leaseExpiryMs"))).intValue() == 300000);
			}
		});
		invariants999.add(new Invariant(496, "blockManagerInstance.blockReportLeaseManager.maxPending == 6"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.maxPending"))).intValue() == 6);
			}
		});
		invariants999.add(new Invariant(497, "blockManagerInstance.blockReportLeaseManager.nextId == 1579508632195327125L || blockManagerInstance.blockReportLeaseManager.nextId == 1579508632195327126L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() == 1579508632195327125L || ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() == 1579508632195327126L);
			}
		});
		invariants999.add(new Invariant(498, "blockManagerInstance.blockReportThread.MAX_LOCK_HOLD_MS == 4"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportThread.MAX_LOCK_HOLD_MS"))).intValue() == 4);
			}
		});
		invariants999.add(new Invariant(499, "daikon.Quant.fuzzy.eq(blockManagerInstance.blocksInvalidateWorkPct, 0.32)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.fuzzy.eq(((Number)(InvariantChecker.getValue("blockManagerInstance.blocksInvalidateWorkPct"))).doubleValue(), 0.32));
			}
		});
		invariants999.add(new Invariant(500, "blockManagerInstance.blocksMap.capacity == 33554432"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blocksMap.capacity"))).intValue() == 33554432);
			}
		});
		invariants999.add(new Invariant(501, "blockManagerInstance.blocksPerPostpondedRescan == 10000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blocksPerPostpondedRescan"))).intValue() == 10000);
			}
		});
		invariants999.add(new Invariant(502, "blockManagerInstance.blocksReplWorkMultiplier == 2"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blocksReplWorkMultiplier"))).intValue() == 2);
			}
		});
		invariants999.add(new Invariant(503, "blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE == 10 || blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE == 14"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() == 10 || ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() == 14);
			}
		});
		invariants999.add(new Invariant(504, "blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.size == -9223372036854775808L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.size"))).intValue() == -9223372036854775808L);
			}
		});
		invariants999.add(new Invariant(505, "blockManagerInstance.bmSafeMode.haEnabled == false"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.haEnabled"))).booleanValue() == false);
			}
		});
		invariants999.add(new Invariant(506, "daikon.Quant.fuzzy.eq(blockManagerInstance.bmSafeMode.replQueueThreshold, 0.9990000128746033)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.fuzzy.eq(((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.replQueueThreshold"))).doubleValue(), 0.9990000128746033));
			}
		});
		invariants999.add(new Invariant(507, "blockManagerInstance.bmSafeMode.safeReplication == 1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.safeReplication"))).intValue() == 1);
			}
		});
		invariants999.add(new Invariant(508, "blockManagerInstance.bmSafeMode.startTime == 0 || blockManagerInstance.bmSafeMode.startTime == 117761039"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() == 117761039);
			}
		});
		invariants999.add(new Invariant(509, "blockManagerInstance.checkNSRunning == true"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("blockManagerInstance.checkNSRunning"))).booleanValue() == true);
			}
		});
		invariants999.add(new Invariant(510, "blockManagerInstance.datanodeManager.defaultInfoPort == 9864"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoPort"))).intValue() == 9864);
			}
		});
		invariants999.add(new Invariant(511, "blockManagerInstance.datanodeManager.defaultInfoSecurePort == 9865"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoSecurePort"))).intValue() == 9865);
			}
		});
		invariants999.add(new Invariant(512, "blockManagerInstance.datanodeManager.defaultIpcPort == 9867"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultIpcPort"))).intValue() == 9867);
			}
		});
		invariants999.add(new Invariant(513, "blockManagerInstance.datanodeManager.defaultXferPort == 9866"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultXferPort"))).intValue() == 9866);
			}
		});
		invariants999.add(new Invariant(514, "blockManagerInstance.datanodeManager.heartbeatExpireInterval == 630000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatExpireInterval"))).intValue() == 630000);
			}
		});
		invariants999.add(new Invariant(515, "blockManagerInstance.datanodeManager.heartbeatIntervalSeconds == 3"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatIntervalSeconds"))).intValue() == 3);
			}
		});
		invariants999.add(new Invariant(516, "blockManagerInstance.datanodeManager.heartbeatManager.REPORT_STALE_NODE_NODES_PER_LINE == 10"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatManager.REPORT_STALE_NODE_NODES_PER_LINE"))).intValue() == 10);
			}
		});
		invariants999.add(new Invariant(517, "daikon.Quant.fuzzy.eq(blockManagerInstance.datanodeManager.ratioUseStaleDataNodesForWrite, 0.5)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.fuzzy.eq(((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.ratioUseStaleDataNodesForWrite"))).doubleValue(), 0.5));
			}
		});
		invariants999.add(new Invariant(518, "blockManagerInstance.datanodeManager.staleInterval == 30000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.staleInterval"))).intValue() == 30000);
			}
		});
		invariants999.add(new Invariant(519, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 0 || blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 49152"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 49152);
			}
		});
		invariants999.add(new Invariant(520, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 0 || blockManagerInstance.heartbeatManager.stats.capacityRemaining == 96515973120L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 96515973120L);
			}
		});
		invariants999.add(new Invariant(521, "blockManagerInstance.heartbeatManager.stats.capacityTotal == 0 || blockManagerInstance.heartbeatManager.stats.capacityTotal == 134100180992L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue() == 134100180992L);
			}
		});
		invariants999.add(new Invariant(522, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 0 || blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 30712217600L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 30712217600L);
			}
		});
		invariants999.add(new Invariant(523, "blockManagerInstance.heartbeatManager.stats.nodesInService == 0 || blockManagerInstance.heartbeatManager.stats.nodesInService == 1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() == 1);
			}
		});
		invariants999.add(new Invariant(524, "blockManagerInstance.invalidateBlocks.startupTime == 117760337"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue() == 117760337);
			}
		});
		invariants999.add(new Invariant(525, "blockManagerInstance.lastRedundancyCycleTS == -1 || blockManagerInstance.lastRedundancyCycleTS == 117764038 || blockManagerInstance.lastRedundancyCycleTS == 117767039"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == -1 || ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 117764038 || ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 117767039);
			}
		});
		invariants999.add(new Invariant(526, "blockManagerInstance.lastRedundancyCycleTS != 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() != 0);
			}
		});
		invariants999.add(new Invariant(527, "blockManagerInstance.maxCorruptFilesReturned == 500"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.maxCorruptFilesReturned"))).intValue() == 500);
			}
		});
		invariants999.add(new Invariant(528, "blockManagerInstance.maxReplication == 512"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.maxReplication"))).shortValue() == 512);
			}
		});
		invariants999.add(new Invariant(529, "blockManagerInstance.minReplication == 1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.minReplication"))).shortValue() == 1);
			}
		});
		invariants999.add(new Invariant(530, "blockManagerInstance.neededReconstruction.LEVEL == 5"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.LEVEL"))).intValue() == 5);
			}
		});
		invariants999.add(new Invariant(531, "blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval == 90000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval"))).intValue() == 90000);
			}
		});
		invariants999.add(new Invariant(532, "daikon.Quant.fuzzy.eq(blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.DEFAULT_MAX_LOAD_FACTOR, 0.75)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.fuzzy.eq(((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.DEFAULT_MAX_LOAD_FACTOR"))).doubleValue(), 0.75));
			}
		});
		invariants999.add(new Invariant(533, "daikon.Quant.fuzzy.eq(blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.DEFAUT_MIN_LOAD_FACTOR, 0.2)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.fuzzy.eq(((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.DEFAUT_MIN_LOAD_FACTOR"))).doubleValue(), 0.2));
			}
		});
		invariants999.add(new Invariant(534, "blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY == 16"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"))).intValue() == 16);
			}
		});
		invariants999.add(new Invariant(535, "blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold == 12"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"))).intValue() == 12);
			}
		});
		invariants999.add(new Invariant(536, "blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask == 15"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"))).intValue() == 15);
			}
		});
		invariants999.add(new Invariant(537, "daikon.Quant.fuzzy.eq(blockManagerInstance.placementPolicies.ecPolicy.considerLoadFactor, 2.0)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.fuzzy.eq(((Number)(InvariantChecker.getValue("blockManagerInstance.placementPolicies.ecPolicy.considerLoadFactor"))).doubleValue(), 2.0));
			}
		});
		invariants999.add(new Invariant(538, "blockManagerInstance.placementPolicies.ecPolicy.heartbeatInterval == 3000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.placementPolicies.ecPolicy.heartbeatInterval"))).intValue() == 3000);
			}
		});
		invariants999.add(new Invariant(539, "daikon.Quant.fuzzy.eq(blockManagerInstance.reconstructionQueuesInitProgress, 0.0) || daikon.Quant.fuzzy.eq(blockManagerInstance.reconstructionQueuesInitProgress, Double.NaN)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.fuzzy.eq(((Number)(InvariantChecker.getValue("blockManagerInstance.reconstructionQueuesInitProgress"))).doubleValue(), 0.0) || daikon.Quant.fuzzy.eq(((Number)(InvariantChecker.getValue("blockManagerInstance.reconstructionQueuesInitProgress"))).doubleValue(), Double.NaN));
			}
		});
		invariants999.add(new Invariant(540, "blockManagerInstance.replQueueCallsSinceReset == 0 || blockManagerInstance.replQueueCallsSinceReset == 1 || blockManagerInstance.replQueueCallsSinceReset == 2"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue() == 1 || ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue() == 2);
			}
		});
		invariants999.add(new Invariant(541, "blockManagerInstance.replQueueResetToHeadThreshold == 2400"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueResetToHeadThreshold"))).intValue() == 2400);
			}
		});
		invariants999.add(new Invariant(542, "blockManagerInstance.storageInfoDefragmentInterval == 600000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.storageInfoDefragmentInterval"))).intValue() == 600000);
			}
		});
		invariants999.add(new Invariant(543, "blockManagerInstance.storagePolicySuite.defaultPolicyID == 7"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.storagePolicySuite.defaultPolicyID"))).intValue() == 7);
			}
		});
		invariants999.add(new Invariant(544, "daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE) == 0 || daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE) == 1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))) == 0 || daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))) == 1);
			}
		});
		invariants999.add(new Invariant(545, "daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE) == 0 || daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE) == 3"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))) == 0 || daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))) == 3);
			}
		});
		invariants999.add(new Invariant(546, "daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)-1 != 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])))-1 != 0);
			}
		});
		invariants999.add(new Invariant(547, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME) != null"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue()) != null);
			}
		});
		invariants999.add(new Invariant(548, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.numDeletedBlocks) != null"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue()) != null);
			}
		});
		invariants999.add(new Invariant(549, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME) != null"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME"))).intValue()) != null);
			}
		});
		invariants999.add(new Invariant(550, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.cacheManager.numBlocksCached) != null"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue()) != null);
			}
		});
		invariants999.add(new Invariant(551, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.volsConfigured) != null"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue()) != null);
			}
		});
		invariants999.add(new Invariant(552, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.dnConf.ibrInterval) != null"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue()) != null);
			}
		});
		invariants999.add(new Invariant(553, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.dnConf.volsConfigured) != null"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.volsConfigured"))).intValue()) != null);
			}
		});
		invariants999.add(new Invariant(554, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS) != null"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue()) != null);
			}
		});
		invariants999.add(new Invariant(555, "daikon.Quant.fuzzy.ne(DataNode.instance.CONGESTION_RATIO, blockManagerInstance.reconstructionQueuesInitProgress)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.fuzzy.ne(((Number)(InvariantChecker.getValue("DataNode.instance.CONGESTION_RATIO"))).doubleValue(), ((Number)(InvariantChecker.getValue("blockManagerInstance.reconstructionQueuesInitProgress"))).doubleValue()));
			}
		});
		invariants999.add(new Invariant(556, "DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT < DataNode.instance.volumeChecker.lastAllVolumesCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue());
			}
		});
		invariants999.add(new Invariant(557, "DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT < DataNode.instance.volumeChecker.numSyncDatasetChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue());
			}
		});
		invariants999.add(new Invariant(558, "DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants999.add(new Invariant(559, "DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants999.add(new Invariant(560, "DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT < blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants999.add(new Invariant(561, "DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants999.add(new Invariant(562, "DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT < blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants999.add(new Invariant(563, "DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants999.add(new Invariant(564, "DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT < blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants999.add(new Invariant(565, "DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants999.add(new Invariant(566, "DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT < blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants999.add(new Invariant(567, "DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT <= blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants999.add(new Invariant(568, "DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT < blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants999.add(new Invariant(569, "DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT <= daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0])))-1);
			}
		});
		invariants999.add(new Invariant(570, "DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT < daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.MAX_VOLUME_FAILURE_TOLERATED_LIMIT"))).intValue() < daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])))-1);
			}
		});
		invariants999.add(new Invariant(571, "DataNode.instance.NUM_CORES < DataNode.instance.volumeChecker.lastAllVolumesCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.NUM_CORES"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue());
			}
		});
		invariants999.add(new Invariant(572, "DataNode.instance.NUM_CORES > DataNode.instance.volumeChecker.numSyncDatasetChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.NUM_CORES"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue());
			}
		});
		invariants999.add(new Invariant(573, "DataNode.instance.NUM_CORES < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.NUM_CORES"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants999.add(new Invariant(574, "DataNode.instance.NUM_CORES < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.NUM_CORES"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants999.add(new Invariant(575, "DataNode.instance.NUM_CORES > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.NUM_CORES"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants999.add(new Invariant(576, "DataNode.instance.NUM_CORES < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.NUM_CORES"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants999.add(new Invariant(577, "DataNode.instance.NUM_CORES < blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.NUM_CORES"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants999.add(new Invariant(578, "DataNode.instance.NUM_CORES < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.NUM_CORES"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants999.add(new Invariant(579, "DataNode.instance.NUM_CORES < blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.NUM_CORES"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants999.add(new Invariant(580, "DataNode.instance.NUM_CORES < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.NUM_CORES"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants999.add(new Invariant(581, "DataNode.instance.NUM_CORES > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.NUM_CORES"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants999.add(new Invariant(582, "DataNode.instance.NUM_CORES != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.NUM_CORES"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants999.add(new Invariant(583, "DataNode.instance.NUM_CORES > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.NUM_CORES"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants999.add(new Invariant(584, "DataNode.instance.NUM_CORES > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.NUM_CORES"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(585, "DataNode.instance.NUM_CORES > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.NUM_CORES"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(586, "DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs < DataNode.instance.volumeChecker.lastAllVolumesCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue());
			}
		});
		invariants999.add(new Invariant(587, "DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs > DataNode.instance.volumeChecker.numSyncDatasetChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue());
			}
		});
		invariants999.add(new Invariant(588, "DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants999.add(new Invariant(589, "DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants999.add(new Invariant(590, "DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants999.add(new Invariant(591, "DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants999.add(new Invariant(592, "DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs < blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants999.add(new Invariant(593, "DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants999.add(new Invariant(594, "DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs < blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants999.add(new Invariant(595, "DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants999.add(new Invariant(596, "DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants999.add(new Invariant(597, "DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants999.add(new Invariant(598, "DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants999.add(new Invariant(599, "DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(600, "DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(601, "DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION < DataNode.instance.volumeChecker.lastAllVolumesCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue());
			}
		});
		invariants999.add(new Invariant(602, "DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION > DataNode.instance.volumeChecker.numSyncDatasetChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue());
			}
		});
		invariants999.add(new Invariant(603, "DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants999.add(new Invariant(604, "DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants999.add(new Invariant(605, "DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION < blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants999.add(new Invariant(606, "DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants999.add(new Invariant(607, "DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants999.add(new Invariant(608, "DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants999.add(new Invariant(609, "DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants999.add(new Invariant(610, "DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants999.add(new Invariant(611, "DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants999.add(new Invariant(612, "DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants999.add(new Invariant(613, "DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants999.add(new Invariant(614, "DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(615, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME < DataNode.instance.volumeChecker.lastAllVolumesCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue());
			}
		});
		invariants999.add(new Invariant(616, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants999.add(new Invariant(617, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants999.add(new Invariant(618, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME < blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants999.add(new Invariant(619, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants999.add(new Invariant(620, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME < blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants999.add(new Invariant(621, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants999.add(new Invariant(622, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME < blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants999.add(new Invariant(623, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants999.add(new Invariant(624, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants999.add(new Invariant(625, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME >= daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(626, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME < daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() < daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])))-1);
			}
		});
		invariants999.add(new Invariant(627, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME < DataNode.instance.volumeChecker.lastAllVolumesCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue());
			}
		});
		invariants999.add(new Invariant(628, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME > DataNode.instance.volumeChecker.numSyncDatasetChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue());
			}
		});
		invariants999.add(new Invariant(629, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants999.add(new Invariant(630, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants999.add(new Invariant(631, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME < blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants999.add(new Invariant(632, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants999.add(new Invariant(633, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME < blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants999.add(new Invariant(634, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants999.add(new Invariant(635, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME < blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants999.add(new Invariant(636, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants999.add(new Invariant(637, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants999.add(new Invariant(638, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants999.add(new Invariant(639, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants999.add(new Invariant(640, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(641, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(642, "DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS < DataNode.instance.volumeChecker.lastAllVolumesCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue());
			}
		});
		invariants999.add(new Invariant(643, "DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS > DataNode.instance.volumeChecker.numSyncDatasetChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue());
			}
		});
		invariants999.add(new Invariant(644, "DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants999.add(new Invariant(645, "DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants999.add(new Invariant(646, "DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants999.add(new Invariant(647, "DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants999.add(new Invariant(648, "DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS < blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants999.add(new Invariant(649, "DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants999.add(new Invariant(650, "DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS < blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants999.add(new Invariant(651, "DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants999.add(new Invariant(652, "DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants999.add(new Invariant(653, "DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants999.add(new Invariant(654, "DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants999.add(new Invariant(655, "DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(656, "DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(657, "DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS < DataNode.instance.volumeChecker.lastAllVolumesCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue());
			}
		});
		invariants999.add(new Invariant(658, "DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS > DataNode.instance.volumeChecker.numSyncDatasetChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue());
			}
		});
		invariants999.add(new Invariant(659, "DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants999.add(new Invariant(660, "DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants999.add(new Invariant(661, "DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants999.add(new Invariant(662, "DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants999.add(new Invariant(663, "DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS < blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants999.add(new Invariant(664, "DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants999.add(new Invariant(665, "DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS < blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants999.add(new Invariant(666, "DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants999.add(new Invariant(667, "DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants999.add(new Invariant(668, "DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants999.add(new Invariant(669, "DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants999.add(new Invariant(670, "DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(671, "DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(672, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < DataNode.instance.volumeChecker.lastAllVolumesCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue());
			}
		});
		invariants999.add(new Invariant(673, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < DataNode.instance.volumeChecker.numSyncDatasetChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue());
			}
		});
		invariants999.add(new Invariant(674, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants999.add(new Invariant(675, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants999.add(new Invariant(676, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants999.add(new Invariant(677, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants999.add(new Invariant(678, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants999.add(new Invariant(679, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants999.add(new Invariant(680, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants999.add(new Invariant(681, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants999.add(new Invariant(682, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants999.add(new Invariant(683, "DataNode.instance.data.asyncDiskService.numDeletedBlocks != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants999.add(new Invariant(684, "DataNode.instance.data.asyncDiskService.numDeletedBlocks <= blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants999.add(new Invariant(685, "DataNode.instance.data.asyncDiskService.numDeletedBlocks <= daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(686, "DataNode.instance.data.asyncDiskService.numDeletedBlocks >= daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0])))-1);
			}
		});
		invariants999.add(new Invariant(687, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])))-1);
			}
		});
		invariants999.add(new Invariant(688, "DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME < DataNode.instance.volumeChecker.lastAllVolumesCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue());
			}
		});
		invariants999.add(new Invariant(689, "DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants999.add(new Invariant(690, "DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants999.add(new Invariant(691, "DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME < blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants999.add(new Invariant(692, "DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants999.add(new Invariant(693, "DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants999.add(new Invariant(694, "DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants999.add(new Invariant(695, "DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants999.add(new Invariant(696, "DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants999.add(new Invariant(697, "DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME >= blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME"))).intValue() >= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants999.add(new Invariant(698, "DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants999.add(new Invariant(699, "DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME >= daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(700, "DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME < daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME"))).intValue() < daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])))-1);
			}
		});
		invariants999.add(new Invariant(701, "DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS < DataNode.instance.volumeChecker.lastAllVolumesCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue());
			}
		});
		invariants999.add(new Invariant(702, "DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS > DataNode.instance.volumeChecker.numSyncDatasetChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue());
			}
		});
		invariants999.add(new Invariant(703, "DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants999.add(new Invariant(704, "DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants999.add(new Invariant(705, "DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants999.add(new Invariant(706, "DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants999.add(new Invariant(707, "DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants999.add(new Invariant(708, "DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants999.add(new Invariant(709, "DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants999.add(new Invariant(710, "DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants999.add(new Invariant(711, "DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants999.add(new Invariant(712, "DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants999.add(new Invariant(713, "DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants999.add(new Invariant(714, "DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(715, "DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(716, "DataNode.instance.data.cacheManager.numBlocksCached < DataNode.instance.volumeChecker.lastAllVolumesCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue());
			}
		});
		invariants999.add(new Invariant(717, "DataNode.instance.data.cacheManager.numBlocksCached < DataNode.instance.volumeChecker.numSyncDatasetChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue());
			}
		});
		invariants999.add(new Invariant(718, "DataNode.instance.data.cacheManager.numBlocksCached < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants999.add(new Invariant(719, "DataNode.instance.data.cacheManager.numBlocksCached < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants999.add(new Invariant(720, "DataNode.instance.data.cacheManager.numBlocksCached < blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants999.add(new Invariant(721, "DataNode.instance.data.cacheManager.numBlocksCached < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants999.add(new Invariant(722, "DataNode.instance.data.cacheManager.numBlocksCached <= blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants999.add(new Invariant(723, "DataNode.instance.data.cacheManager.numBlocksCached <= blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants999.add(new Invariant(724, "DataNode.instance.data.cacheManager.numBlocksCached <= blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants999.add(new Invariant(725, "DataNode.instance.data.cacheManager.numBlocksCached <= blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants999.add(new Invariant(726, "DataNode.instance.data.cacheManager.numBlocksCached <= blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants999.add(new Invariant(727, "DataNode.instance.data.cacheManager.numBlocksCached != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants999.add(new Invariant(728, "DataNode.instance.data.cacheManager.numBlocksCached <= blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants999.add(new Invariant(729, "DataNode.instance.data.cacheManager.numBlocksCached <= daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(730, "DataNode.instance.data.cacheManager.numBlocksCached >= daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0])))-1);
			}
		});
		invariants999.add(new Invariant(731, "DataNode.instance.data.cacheManager.numBlocksCached < daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() < daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])))-1);
			}
		});
		invariants999.add(new Invariant(732, "DataNode.instance.data.cacheManager.revocationMs < DataNode.instance.volumeChecker.lastAllVolumesCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationMs"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue());
			}
		});
		invariants999.add(new Invariant(733, "DataNode.instance.data.cacheManager.revocationMs > DataNode.instance.volumeChecker.numSyncDatasetChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationMs"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue());
			}
		});
		invariants999.add(new Invariant(734, "DataNode.instance.data.cacheManager.revocationMs < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationMs"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants999.add(new Invariant(735, "DataNode.instance.data.cacheManager.revocationMs < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants999.add(new Invariant(736, "DataNode.instance.data.cacheManager.revocationMs > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants999.add(new Invariant(737, "DataNode.instance.data.cacheManager.revocationMs < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants999.add(new Invariant(738, "DataNode.instance.data.cacheManager.revocationMs > blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants999.add(new Invariant(739, "DataNode.instance.data.cacheManager.revocationMs != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants999.add(new Invariant(740, "DataNode.instance.data.cacheManager.revocationMs != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants999.add(new Invariant(741, "DataNode.instance.data.cacheManager.revocationMs != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants999.add(new Invariant(742, "DataNode.instance.data.cacheManager.revocationMs > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants999.add(new Invariant(743, "DataNode.instance.data.cacheManager.revocationMs != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants999.add(new Invariant(744, "DataNode.instance.data.cacheManager.revocationMs > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants999.add(new Invariant(745, "DataNode.instance.data.cacheManager.revocationMs > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationMs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(746, "DataNode.instance.data.cacheManager.revocationMs > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationMs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(747, "DataNode.instance.data.cacheManager.revocationPollingMs < DataNode.instance.volumeChecker.lastAllVolumesCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationPollingMs"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue());
			}
		});
		invariants999.add(new Invariant(748, "DataNode.instance.data.cacheManager.revocationPollingMs > DataNode.instance.volumeChecker.numSyncDatasetChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationPollingMs"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue());
			}
		});
		invariants999.add(new Invariant(749, "DataNode.instance.data.cacheManager.revocationPollingMs < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationPollingMs"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants999.add(new Invariant(750, "DataNode.instance.data.cacheManager.revocationPollingMs < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationPollingMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants999.add(new Invariant(751, "DataNode.instance.data.cacheManager.revocationPollingMs > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationPollingMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants999.add(new Invariant(752, "DataNode.instance.data.cacheManager.revocationPollingMs < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationPollingMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants999.add(new Invariant(753, "DataNode.instance.data.cacheManager.revocationPollingMs != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationPollingMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants999.add(new Invariant(754, "DataNode.instance.data.cacheManager.revocationPollingMs != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationPollingMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants999.add(new Invariant(755, "DataNode.instance.data.cacheManager.revocationPollingMs != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationPollingMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants999.add(new Invariant(756, "DataNode.instance.data.cacheManager.revocationPollingMs != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationPollingMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants999.add(new Invariant(757, "DataNode.instance.data.cacheManager.revocationPollingMs > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationPollingMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants999.add(new Invariant(758, "DataNode.instance.data.cacheManager.revocationPollingMs != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationPollingMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants999.add(new Invariant(759, "DataNode.instance.data.cacheManager.revocationPollingMs > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationPollingMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants999.add(new Invariant(760, "DataNode.instance.data.cacheManager.revocationPollingMs > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationPollingMs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(761, "DataNode.instance.data.cacheManager.revocationPollingMs > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationPollingMs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(762, "DataNode.instance.data.maxDataLength < DataNode.instance.volumeChecker.lastAllVolumesCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.maxDataLength"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue());
			}
		});
		invariants999.add(new Invariant(763, "DataNode.instance.data.maxDataLength > DataNode.instance.volumeChecker.numSyncDatasetChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.maxDataLength"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue());
			}
		});
		invariants999.add(new Invariant(764, "DataNode.instance.data.maxDataLength < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.maxDataLength"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants999.add(new Invariant(765, "DataNode.instance.data.maxDataLength < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.maxDataLength"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants999.add(new Invariant(766, "DataNode.instance.data.maxDataLength > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.maxDataLength"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants999.add(new Invariant(767, "DataNode.instance.data.maxDataLength < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.maxDataLength"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants999.add(new Invariant(768, "DataNode.instance.data.maxDataLength > blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.maxDataLength"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants999.add(new Invariant(769, "DataNode.instance.data.maxDataLength != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.maxDataLength"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants999.add(new Invariant(770, "DataNode.instance.data.maxDataLength != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.maxDataLength"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants999.add(new Invariant(771, "DataNode.instance.data.maxDataLength != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.maxDataLength"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants999.add(new Invariant(772, "DataNode.instance.data.maxDataLength > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.maxDataLength"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants999.add(new Invariant(773, "DataNode.instance.data.maxDataLength != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.maxDataLength"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants999.add(new Invariant(774, "DataNode.instance.data.maxDataLength > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.maxDataLength"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants999.add(new Invariant(775, "DataNode.instance.data.maxDataLength > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.maxDataLength"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(776, "DataNode.instance.data.maxDataLength > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.maxDataLength"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(777, "DataNode.instance.data.smallBufferSize < DataNode.instance.volumeChecker.lastAllVolumesCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.smallBufferSize"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue());
			}
		});
		invariants999.add(new Invariant(778, "DataNode.instance.data.smallBufferSize > DataNode.instance.volumeChecker.numSyncDatasetChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.smallBufferSize"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue());
			}
		});
		invariants999.add(new Invariant(779, "DataNode.instance.data.smallBufferSize < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.smallBufferSize"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants999.add(new Invariant(780, "DataNode.instance.data.smallBufferSize < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.smallBufferSize"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants999.add(new Invariant(781, "DataNode.instance.data.smallBufferSize > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.smallBufferSize"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants999.add(new Invariant(782, "DataNode.instance.data.smallBufferSize < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.smallBufferSize"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants999.add(new Invariant(783, "DataNode.instance.data.smallBufferSize != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.smallBufferSize"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants999.add(new Invariant(784, "DataNode.instance.data.smallBufferSize != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.smallBufferSize"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants999.add(new Invariant(785, "DataNode.instance.data.smallBufferSize != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.smallBufferSize"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants999.add(new Invariant(786, "DataNode.instance.data.smallBufferSize != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.smallBufferSize"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants999.add(new Invariant(787, "DataNode.instance.data.smallBufferSize > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.smallBufferSize"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants999.add(new Invariant(788, "DataNode.instance.data.smallBufferSize != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.smallBufferSize"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants999.add(new Invariant(789, "DataNode.instance.data.smallBufferSize > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.smallBufferSize"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants999.add(new Invariant(790, "DataNode.instance.data.smallBufferSize > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.smallBufferSize"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(791, "DataNode.instance.data.smallBufferSize > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.smallBufferSize"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(792, "DataNode.instance.data.volsConfigured < DataNode.instance.volumeChecker.lastAllVolumesCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue());
			}
		});
		invariants999.add(new Invariant(793, "DataNode.instance.data.volsConfigured > DataNode.instance.volumeChecker.numSyncDatasetChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue());
			}
		});
		invariants999.add(new Invariant(794, "DataNode.instance.data.volsConfigured < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants999.add(new Invariant(795, "DataNode.instance.data.volsConfigured < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants999.add(new Invariant(796, "DataNode.instance.data.volsConfigured < blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants999.add(new Invariant(797, "DataNode.instance.data.volsConfigured < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants999.add(new Invariant(798, "DataNode.instance.data.volsConfigured != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants999.add(new Invariant(799, "DataNode.instance.data.volsConfigured != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants999.add(new Invariant(800, "DataNode.instance.data.volsConfigured != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants999.add(new Invariant(801, "DataNode.instance.data.volsConfigured != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants999.add(new Invariant(802, "DataNode.instance.data.volsConfigured > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants999.add(new Invariant(803, "DataNode.instance.data.volsConfigured != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants999.add(new Invariant(804, "DataNode.instance.data.volsConfigured >= blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue() >= ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants999.add(new Invariant(805, "DataNode.instance.data.volsConfigured > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(806, "DataNode.instance.directoryScanner.MILLIS_PER_SECOND < DataNode.instance.volumeChecker.lastAllVolumesCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.MILLIS_PER_SECOND"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue());
			}
		});
		invariants999.add(new Invariant(807, "DataNode.instance.directoryScanner.MILLIS_PER_SECOND > DataNode.instance.volumeChecker.numSyncDatasetChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.MILLIS_PER_SECOND"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue());
			}
		});
		invariants999.add(new Invariant(808, "DataNode.instance.directoryScanner.MILLIS_PER_SECOND < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.MILLIS_PER_SECOND"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants999.add(new Invariant(809, "DataNode.instance.directoryScanner.MILLIS_PER_SECOND < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.MILLIS_PER_SECOND"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants999.add(new Invariant(810, "DataNode.instance.directoryScanner.MILLIS_PER_SECOND > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.MILLIS_PER_SECOND"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants999.add(new Invariant(811, "DataNode.instance.directoryScanner.MILLIS_PER_SECOND < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.MILLIS_PER_SECOND"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants999.add(new Invariant(812, "DataNode.instance.directoryScanner.MILLIS_PER_SECOND < blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.MILLIS_PER_SECOND"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants999.add(new Invariant(813, "DataNode.instance.directoryScanner.MILLIS_PER_SECOND < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.MILLIS_PER_SECOND"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants999.add(new Invariant(814, "DataNode.instance.directoryScanner.MILLIS_PER_SECOND < blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.MILLIS_PER_SECOND"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants999.add(new Invariant(815, "DataNode.instance.directoryScanner.MILLIS_PER_SECOND < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.MILLIS_PER_SECOND"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants999.add(new Invariant(816, "DataNode.instance.directoryScanner.MILLIS_PER_SECOND > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.MILLIS_PER_SECOND"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants999.add(new Invariant(817, "DataNode.instance.directoryScanner.MILLIS_PER_SECOND != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.MILLIS_PER_SECOND"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants999.add(new Invariant(818, "DataNode.instance.directoryScanner.MILLIS_PER_SECOND > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.MILLIS_PER_SECOND"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants999.add(new Invariant(819, "DataNode.instance.directoryScanner.MILLIS_PER_SECOND > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.MILLIS_PER_SECOND"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(820, "DataNode.instance.directoryScanner.MILLIS_PER_SECOND > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.MILLIS_PER_SECOND"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(821, "DataNode.instance.directoryScanner.scanPeriodMsecs < DataNode.instance.volumeChecker.lastAllVolumesCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.scanPeriodMsecs"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue());
			}
		});
		invariants999.add(new Invariant(822, "DataNode.instance.directoryScanner.scanPeriodMsecs > DataNode.instance.volumeChecker.numSyncDatasetChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.scanPeriodMsecs"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue());
			}
		});
		invariants999.add(new Invariant(823, "DataNode.instance.directoryScanner.scanPeriodMsecs < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.scanPeriodMsecs"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants999.add(new Invariant(824, "DataNode.instance.directoryScanner.scanPeriodMsecs < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.scanPeriodMsecs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants999.add(new Invariant(825, "DataNode.instance.directoryScanner.scanPeriodMsecs > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.scanPeriodMsecs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants999.add(new Invariant(826, "DataNode.instance.directoryScanner.scanPeriodMsecs < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.scanPeriodMsecs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants999.add(new Invariant(827, "DataNode.instance.directoryScanner.scanPeriodMsecs > blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.scanPeriodMsecs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants999.add(new Invariant(828, "DataNode.instance.directoryScanner.scanPeriodMsecs < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.scanPeriodMsecs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants999.add(new Invariant(829, "DataNode.instance.directoryScanner.scanPeriodMsecs < blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.scanPeriodMsecs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants999.add(new Invariant(830, "DataNode.instance.directoryScanner.scanPeriodMsecs < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.scanPeriodMsecs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants999.add(new Invariant(831, "DataNode.instance.directoryScanner.scanPeriodMsecs > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.scanPeriodMsecs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants999.add(new Invariant(832, "DataNode.instance.directoryScanner.scanPeriodMsecs != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.scanPeriodMsecs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants999.add(new Invariant(833, "DataNode.instance.directoryScanner.scanPeriodMsecs > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.scanPeriodMsecs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants999.add(new Invariant(834, "DataNode.instance.directoryScanner.scanPeriodMsecs > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.scanPeriodMsecs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(835, "DataNode.instance.directoryScanner.scanPeriodMsecs > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.scanPeriodMsecs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(836, "DataNode.instance.diskBalancer.bandwidth < DataNode.instance.volumeChecker.lastAllVolumesCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.bandwidth"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue());
			}
		});
		invariants999.add(new Invariant(837, "DataNode.instance.diskBalancer.bandwidth > DataNode.instance.volumeChecker.numSyncDatasetChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.bandwidth"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue());
			}
		});
		invariants999.add(new Invariant(838, "DataNode.instance.diskBalancer.bandwidth < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.bandwidth"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants999.add(new Invariant(839, "DataNode.instance.diskBalancer.bandwidth < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.bandwidth"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants999.add(new Invariant(840, "DataNode.instance.diskBalancer.bandwidth < blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.bandwidth"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants999.add(new Invariant(841, "DataNode.instance.diskBalancer.bandwidth < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.bandwidth"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants999.add(new Invariant(842, "DataNode.instance.diskBalancer.bandwidth < blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.bandwidth"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants999.add(new Invariant(843, "DataNode.instance.diskBalancer.bandwidth < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.bandwidth"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants999.add(new Invariant(844, "DataNode.instance.diskBalancer.bandwidth < blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.bandwidth"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants999.add(new Invariant(845, "DataNode.instance.diskBalancer.bandwidth < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.bandwidth"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants999.add(new Invariant(846, "DataNode.instance.diskBalancer.bandwidth > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.bandwidth"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants999.add(new Invariant(847, "DataNode.instance.diskBalancer.bandwidth != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.bandwidth"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants999.add(new Invariant(848, "DataNode.instance.diskBalancer.bandwidth > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.bandwidth"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants999.add(new Invariant(849, "DataNode.instance.diskBalancer.bandwidth > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.bandwidth"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(850, "DataNode.instance.diskBalancer.bandwidth > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.bandwidth"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(851, "DataNode.instance.diskBalancer.planValidityInterval < DataNode.instance.volumeChecker.lastAllVolumesCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.planValidityInterval"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue());
			}
		});
		invariants999.add(new Invariant(852, "DataNode.instance.diskBalancer.planValidityInterval > DataNode.instance.volumeChecker.numSyncDatasetChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.planValidityInterval"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue());
			}
		});
		invariants999.add(new Invariant(853, "DataNode.instance.diskBalancer.planValidityInterval < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.planValidityInterval"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants999.add(new Invariant(854, "DataNode.instance.diskBalancer.planValidityInterval < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.planValidityInterval"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants999.add(new Invariant(855, "DataNode.instance.diskBalancer.planValidityInterval > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.planValidityInterval"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants999.add(new Invariant(856, "DataNode.instance.diskBalancer.planValidityInterval < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.planValidityInterval"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants999.add(new Invariant(857, "DataNode.instance.diskBalancer.planValidityInterval > blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.planValidityInterval"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants999.add(new Invariant(858, "DataNode.instance.diskBalancer.planValidityInterval < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.planValidityInterval"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants999.add(new Invariant(859, "DataNode.instance.diskBalancer.planValidityInterval < blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.planValidityInterval"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants999.add(new Invariant(860, "DataNode.instance.diskBalancer.planValidityInterval < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.planValidityInterval"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants999.add(new Invariant(861, "DataNode.instance.diskBalancer.planValidityInterval > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.planValidityInterval"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants999.add(new Invariant(862, "DataNode.instance.diskBalancer.planValidityInterval != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.planValidityInterval"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants999.add(new Invariant(863, "DataNode.instance.diskBalancer.planValidityInterval > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.planValidityInterval"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants999.add(new Invariant(864, "DataNode.instance.diskBalancer.planValidityInterval > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.planValidityInterval"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(865, "DataNode.instance.diskBalancer.planValidityInterval > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.planValidityInterval"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(866, "DataNode.instance.dnConf.blockReportInterval < DataNode.instance.volumeChecker.lastAllVolumesCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportInterval"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue());
			}
		});
		invariants999.add(new Invariant(867, "DataNode.instance.dnConf.blockReportInterval > DataNode.instance.volumeChecker.numSyncDatasetChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportInterval"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue());
			}
		});
		invariants999.add(new Invariant(868, "DataNode.instance.dnConf.blockReportInterval < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportInterval"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants999.add(new Invariant(869, "DataNode.instance.dnConf.blockReportInterval < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportInterval"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants999.add(new Invariant(870, "DataNode.instance.dnConf.blockReportInterval > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportInterval"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants999.add(new Invariant(871, "DataNode.instance.dnConf.blockReportInterval < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportInterval"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants999.add(new Invariant(872, "DataNode.instance.dnConf.blockReportInterval > blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportInterval"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants999.add(new Invariant(873, "DataNode.instance.dnConf.blockReportInterval != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportInterval"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants999.add(new Invariant(874, "DataNode.instance.dnConf.blockReportInterval != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportInterval"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants999.add(new Invariant(875, "DataNode.instance.dnConf.blockReportInterval != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportInterval"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants999.add(new Invariant(876, "DataNode.instance.dnConf.blockReportInterval > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportInterval"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants999.add(new Invariant(877, "DataNode.instance.dnConf.blockReportInterval != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportInterval"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants999.add(new Invariant(878, "DataNode.instance.dnConf.blockReportInterval > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportInterval"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants999.add(new Invariant(879, "DataNode.instance.dnConf.blockReportInterval > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportInterval"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(880, "DataNode.instance.dnConf.blockReportInterval > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportInterval"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(881, "DataNode.instance.dnConf.blockReportSplitThreshold < DataNode.instance.volumeChecker.lastAllVolumesCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportSplitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue());
			}
		});
		invariants999.add(new Invariant(882, "DataNode.instance.dnConf.blockReportSplitThreshold > DataNode.instance.volumeChecker.numSyncDatasetChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportSplitThreshold"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue());
			}
		});
		invariants999.add(new Invariant(883, "DataNode.instance.dnConf.blockReportSplitThreshold < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportSplitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants999.add(new Invariant(884, "DataNode.instance.dnConf.blockReportSplitThreshold < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportSplitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants999.add(new Invariant(885, "DataNode.instance.dnConf.blockReportSplitThreshold > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportSplitThreshold"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants999.add(new Invariant(886, "DataNode.instance.dnConf.blockReportSplitThreshold < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportSplitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants999.add(new Invariant(887, "DataNode.instance.dnConf.blockReportSplitThreshold > blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportSplitThreshold"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants999.add(new Invariant(888, "DataNode.instance.dnConf.blockReportSplitThreshold != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportSplitThreshold"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants999.add(new Invariant(889, "DataNode.instance.dnConf.blockReportSplitThreshold != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportSplitThreshold"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants999.add(new Invariant(890, "DataNode.instance.dnConf.blockReportSplitThreshold != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportSplitThreshold"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants999.add(new Invariant(891, "DataNode.instance.dnConf.blockReportSplitThreshold > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportSplitThreshold"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants999.add(new Invariant(892, "DataNode.instance.dnConf.blockReportSplitThreshold != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportSplitThreshold"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants999.add(new Invariant(893, "DataNode.instance.dnConf.blockReportSplitThreshold > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportSplitThreshold"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants999.add(new Invariant(894, "DataNode.instance.dnConf.blockReportSplitThreshold > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportSplitThreshold"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(895, "DataNode.instance.dnConf.blockReportSplitThreshold > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportSplitThreshold"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(896, "DataNode.instance.dnConf.bpReadyTimeout < DataNode.instance.volumeChecker.lastAllVolumesCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.bpReadyTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue());
			}
		});
		invariants999.add(new Invariant(897, "DataNode.instance.dnConf.bpReadyTimeout > DataNode.instance.volumeChecker.numSyncDatasetChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.bpReadyTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue());
			}
		});
		invariants999.add(new Invariant(898, "DataNode.instance.dnConf.bpReadyTimeout < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.bpReadyTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants999.add(new Invariant(899, "DataNode.instance.dnConf.bpReadyTimeout < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.bpReadyTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants999.add(new Invariant(900, "DataNode.instance.dnConf.bpReadyTimeout > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.bpReadyTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants999.add(new Invariant(901, "DataNode.instance.dnConf.bpReadyTimeout < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.bpReadyTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants999.add(new Invariant(902, "DataNode.instance.dnConf.bpReadyTimeout != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.bpReadyTimeout"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants999.add(new Invariant(903, "DataNode.instance.dnConf.bpReadyTimeout != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.bpReadyTimeout"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants999.add(new Invariant(904, "DataNode.instance.dnConf.bpReadyTimeout != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.bpReadyTimeout"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants999.add(new Invariant(905, "DataNode.instance.dnConf.bpReadyTimeout != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.bpReadyTimeout"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants999.add(new Invariant(906, "DataNode.instance.dnConf.bpReadyTimeout > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.bpReadyTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants999.add(new Invariant(907, "DataNode.instance.dnConf.bpReadyTimeout != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.bpReadyTimeout"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants999.add(new Invariant(908, "DataNode.instance.dnConf.bpReadyTimeout > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.bpReadyTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants999.add(new Invariant(909, "DataNode.instance.dnConf.bpReadyTimeout > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.bpReadyTimeout"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(910, "DataNode.instance.dnConf.bpReadyTimeout > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.bpReadyTimeout"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(911, "DataNode.instance.dnConf.cacheReportInterval < DataNode.instance.volumeChecker.lastAllVolumesCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.cacheReportInterval"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue());
			}
		});
		invariants999.add(new Invariant(912, "DataNode.instance.dnConf.cacheReportInterval > DataNode.instance.volumeChecker.numSyncDatasetChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.cacheReportInterval"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue());
			}
		});
		invariants999.add(new Invariant(913, "DataNode.instance.dnConf.cacheReportInterval < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.cacheReportInterval"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants999.add(new Invariant(914, "DataNode.instance.dnConf.cacheReportInterval < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.cacheReportInterval"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants999.add(new Invariant(915, "DataNode.instance.dnConf.cacheReportInterval > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.cacheReportInterval"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants999.add(new Invariant(916, "DataNode.instance.dnConf.cacheReportInterval < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.cacheReportInterval"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants999.add(new Invariant(917, "DataNode.instance.dnConf.cacheReportInterval != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.cacheReportInterval"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants999.add(new Invariant(918, "DataNode.instance.dnConf.cacheReportInterval != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.cacheReportInterval"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants999.add(new Invariant(919, "DataNode.instance.dnConf.cacheReportInterval != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.cacheReportInterval"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants999.add(new Invariant(920, "DataNode.instance.dnConf.cacheReportInterval != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.cacheReportInterval"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants999.add(new Invariant(921, "DataNode.instance.dnConf.cacheReportInterval > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.cacheReportInterval"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants999.add(new Invariant(922, "DataNode.instance.dnConf.cacheReportInterval != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.cacheReportInterval"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants999.add(new Invariant(923, "DataNode.instance.dnConf.cacheReportInterval > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.cacheReportInterval"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants999.add(new Invariant(924, "DataNode.instance.dnConf.cacheReportInterval > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.cacheReportInterval"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(925, "DataNode.instance.dnConf.cacheReportInterval > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.cacheReportInterval"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(926, "DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs < DataNode.instance.volumeChecker.lastAllVolumesCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue());
			}
		});
		invariants999.add(new Invariant(927, "DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs > DataNode.instance.volumeChecker.numSyncDatasetChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue());
			}
		});
		invariants999.add(new Invariant(928, "DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants999.add(new Invariant(929, "DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants999.add(new Invariant(930, "DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants999.add(new Invariant(931, "DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants999.add(new Invariant(932, "DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants999.add(new Invariant(933, "DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants999.add(new Invariant(934, "DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants999.add(new Invariant(935, "DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants999.add(new Invariant(936, "DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants999.add(new Invariant(937, "DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants999.add(new Invariant(938, "DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants999.add(new Invariant(939, "DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(940, "DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(941, "DataNode.instance.dnConf.heartBeatInterval < DataNode.instance.volumeChecker.lastAllVolumesCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.heartBeatInterval"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue());
			}
		});
		invariants999.add(new Invariant(942, "DataNode.instance.dnConf.heartBeatInterval > DataNode.instance.volumeChecker.numSyncDatasetChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.heartBeatInterval"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue());
			}
		});
		invariants999.add(new Invariant(943, "DataNode.instance.dnConf.heartBeatInterval < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.heartBeatInterval"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants999.add(new Invariant(944, "DataNode.instance.dnConf.heartBeatInterval < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.heartBeatInterval"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants999.add(new Invariant(945, "DataNode.instance.dnConf.heartBeatInterval > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.heartBeatInterval"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants999.add(new Invariant(946, "DataNode.instance.dnConf.heartBeatInterval < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.heartBeatInterval"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants999.add(new Invariant(947, "DataNode.instance.dnConf.heartBeatInterval != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.heartBeatInterval"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants999.add(new Invariant(948, "DataNode.instance.dnConf.heartBeatInterval != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.heartBeatInterval"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants999.add(new Invariant(949, "DataNode.instance.dnConf.heartBeatInterval != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.heartBeatInterval"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants999.add(new Invariant(950, "DataNode.instance.dnConf.heartBeatInterval != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.heartBeatInterval"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants999.add(new Invariant(951, "DataNode.instance.dnConf.heartBeatInterval > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.heartBeatInterval"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants999.add(new Invariant(952, "DataNode.instance.dnConf.heartBeatInterval != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.heartBeatInterval"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants999.add(new Invariant(953, "DataNode.instance.dnConf.heartBeatInterval > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.heartBeatInterval"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants999.add(new Invariant(954, "DataNode.instance.dnConf.heartBeatInterval > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.heartBeatInterval"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(955, "DataNode.instance.dnConf.heartBeatInterval > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.heartBeatInterval"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(956, "DataNode.instance.dnConf.ibrInterval < DataNode.instance.volumeChecker.lastAllVolumesCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue());
			}
		});
		invariants999.add(new Invariant(957, "DataNode.instance.dnConf.ibrInterval <= DataNode.instance.volumeChecker.numSyncDatasetChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() <= ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue());
			}
		});
		invariants999.add(new Invariant(958, "DataNode.instance.dnConf.ibrInterval < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants999.add(new Invariant(959, "DataNode.instance.dnConf.ibrInterval < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants999.add(new Invariant(960, "DataNode.instance.dnConf.ibrInterval < blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants999.add(new Invariant(961, "DataNode.instance.dnConf.ibrInterval < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants999.add(new Invariant(962, "DataNode.instance.dnConf.ibrInterval <= blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants999.add(new Invariant(963, "DataNode.instance.dnConf.ibrInterval <= blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants999.add(new Invariant(964, "DataNode.instance.dnConf.ibrInterval <= blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants999.add(new Invariant(965, "DataNode.instance.dnConf.ibrInterval <= blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants999.add(new Invariant(966, "DataNode.instance.dnConf.ibrInterval <= blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants999.add(new Invariant(967, "DataNode.instance.dnConf.ibrInterval != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants999.add(new Invariant(968, "DataNode.instance.dnConf.ibrInterval <= blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants999.add(new Invariant(969, "DataNode.instance.dnConf.ibrInterval <= daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(970, "DataNode.instance.dnConf.ibrInterval >= daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0])))-1);
			}
		});
		invariants999.add(new Invariant(971, "DataNode.instance.dnConf.ibrInterval < daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() < daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])))-1);
			}
		});
		invariants999.add(new Invariant(972, "DataNode.instance.dnConf.lifelineIntervalMs < DataNode.instance.volumeChecker.lastAllVolumesCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.lifelineIntervalMs"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue());
			}
		});
		invariants999.add(new Invariant(973, "DataNode.instance.dnConf.lifelineIntervalMs > DataNode.instance.volumeChecker.numSyncDatasetChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.lifelineIntervalMs"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue());
			}
		});
		invariants999.add(new Invariant(974, "DataNode.instance.dnConf.lifelineIntervalMs < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.lifelineIntervalMs"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants999.add(new Invariant(975, "DataNode.instance.dnConf.lifelineIntervalMs < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.lifelineIntervalMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants999.add(new Invariant(976, "DataNode.instance.dnConf.lifelineIntervalMs > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.lifelineIntervalMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants999.add(new Invariant(977, "DataNode.instance.dnConf.lifelineIntervalMs < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.lifelineIntervalMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants999.add(new Invariant(978, "DataNode.instance.dnConf.lifelineIntervalMs != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.lifelineIntervalMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants999.add(new Invariant(979, "DataNode.instance.dnConf.lifelineIntervalMs != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.lifelineIntervalMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants999.add(new Invariant(980, "DataNode.instance.dnConf.lifelineIntervalMs != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.lifelineIntervalMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants999.add(new Invariant(981, "DataNode.instance.dnConf.lifelineIntervalMs != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.lifelineIntervalMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants999.add(new Invariant(982, "DataNode.instance.dnConf.lifelineIntervalMs > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.lifelineIntervalMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants999.add(new Invariant(983, "DataNode.instance.dnConf.lifelineIntervalMs != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.lifelineIntervalMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants999.add(new Invariant(984, "DataNode.instance.dnConf.lifelineIntervalMs > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.lifelineIntervalMs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants999.add(new Invariant(985, "DataNode.instance.dnConf.lifelineIntervalMs > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.lifelineIntervalMs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(986, "DataNode.instance.dnConf.lifelineIntervalMs > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.lifelineIntervalMs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants999.add(new Invariant(987, "DataNode.instance.dnConf.maxDataLength < DataNode.instance.volumeChecker.lastAllVolumesCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.maxDataLength"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue());
			}
		});
		invariants999.add(new Invariant(988, "DataNode.instance.dnConf.maxDataLength > DataNode.instance.volumeChecker.numSyncDatasetChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.maxDataLength"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue());
			}
		});
		invariants999.add(new Invariant(989, "DataNode.instance.dnConf.maxDataLength < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.maxDataLength"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants999.add(new Invariant(990, "DataNode.instance.dnConf.maxDataLength < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.maxDataLength"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants999.add(new Invariant(991, "DataNode.instance.dnConf.maxDataLength > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.maxDataLength"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants999.add(new Invariant(992, "DataNode.instance.dnConf.maxDataLength < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.maxDataLength"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants999.add(new Invariant(993, "DataNode.instance.dnConf.maxDataLength > blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.maxDataLength"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants999.add(new Invariant(994, "DataNode.instance.dnConf.maxDataLength != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.maxDataLength"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants999.add(new Invariant(995, "DataNode.instance.dnConf.maxDataLength != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.maxDataLength"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants999.add(new Invariant(996, "DataNode.instance.dnConf.maxDataLength != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.maxDataLength"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants999.add(new Invariant(997, "DataNode.instance.dnConf.maxDataLength > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.maxDataLength"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants999.add(new Invariant(998, "DataNode.instance.dnConf.maxDataLength != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.maxDataLength"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants999.add(new Invariant(999, "DataNode.instance.dnConf.maxDataLength > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.maxDataLength"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
	}
	static {
installInv999();	}
}
