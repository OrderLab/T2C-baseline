package daikon.hdfs;
import daikon.*;
import java.util.Set;
import java.util.ArrayList;
import java.util.List;
//this class is automatically generated by our scripts
public class InvariantPool4999{

	public static List<Invariant> invariants4999 = new ArrayList<>();

	public static void installInv4999(){
		invariants4999.add(new Invariant(4000, "DataNode.instance.data.cacheManager.numBlocksCached == blockManagerInstance.scheduledReplicationBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.scheduledReplicationBlocksCount"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4001, "DataNode.instance.data.cacheManager.numBlocksCached == blockManagerInstance.startupDelayBlockDeletionInMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.startupDelayBlockDeletionInMs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4002, "DataNode.instance.data.cacheManager.numBlocksCached == daikon.Quant.size(DataNode.instance.directoryScanner.diffs_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("DataNode.instance.directoryScanner.diffs")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4003, "DataNode.instance.data.cacheManager.numBlocksCached == daikon.Quant.size(NameNode.instance.namesystem.cacheManager.directivesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.directivesById")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4004, "DataNode.instance.data.cacheManager.numBlocksCached == daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4005, "DataNode.instance.data.cacheManager.numBlocksCached == daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4006, "DataNode.instance.data.volsConfigured == blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4007, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, blockManagerInstance.replQueueCallsSinceReset-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue()-1));
			}
		});
		invariants4999.add(new Invariant(4008, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME-1) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.cacheManager.numBlocksCached)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue()-1) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue()));
			}
		});
		invariants4999.add(new Invariant(4009, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.cacheManager.numBlocksCached) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue()-1));
			}
		});
		invariants4999.add(new Invariant(4010, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.cacheManager.numBlocksCached) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.httpServer.HTTP_SELECTOR_THREADS-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_SELECTOR_THREADS"))).intValue()-1));
			}
		});
		invariants4999.add(new Invariant(4011, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.cacheManager.numBlocksCached) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.id.nsInfo.CAPABILITIES_SUPPORTED-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.CAPABILITIES_SUPPORTED"))).intValue()-1));
			}
		});
		invariants4999.add(new Invariant(4012, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.cacheManager.numBlocksCached) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.id.nsInfo.capabilities-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.capabilities"))).intValue()-1));
			}
		});
		invariants4999.add(new Invariant(4013, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.cacheManager.numBlocksCached) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.volumeChecker.numSyncDatasetChecks-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue()-1));
			}
		});
		invariants4999.add(new Invariant(4014, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.cacheManager.numBlocksCached) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.sequenceNumber-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.sequenceNumber"))).intValue()-1));
			}
		});
		invariants4999.add(new Invariant(4015, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.cacheManager.numBlocksCached) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size"))).intValue()));
			}
		});
		invariants4999.add(new Invariant(4016, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.cacheManager.numBlocksCached) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, NameNode.instance.namesystem.cacheManager.nextDirectiveId-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.nextDirectiveId"))).intValue()-1));
			}
		});
		invariants4999.add(new Invariant(4017, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.cacheManager.numBlocksCached) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, NameNode.instance.namesystem.nnResourceChecker.minimumRedundantVolumes-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.nnResourceChecker.minimumRedundantVolumes"))).intValue()-1));
			}
		});
		invariants4999.add(new Invariant(4018, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.cacheManager.numBlocksCached) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.size)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.size"))).intValue()));
			}
		});
		invariants4999.add(new Invariant(4019, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.cacheManager.numBlocksCached) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, blockManagerInstance.bmSafeMode.safeReplication-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.safeReplication"))).intValue()-1));
			}
		});
		invariants4999.add(new Invariant(4020, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.cacheManager.numBlocksCached) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, blockManagerInstance.defaultReplication-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.defaultReplication"))).intValue()-1));
			}
		});
		invariants4999.add(new Invariant(4021, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.cacheManager.numBlocksCached) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, blockManagerInstance.heartbeatManager.stats.nodesInService-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue()-1));
			}
		});
		invariants4999.add(new Invariant(4022, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.cacheManager.numBlocksCached) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, blockManagerInstance.neededReconstruction.QUEUE_VERY_LOW_REDUNDANCY-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.QUEUE_VERY_LOW_REDUNDANCY"))).intValue()-1));
			}
		});
		invariants4999.add(new Invariant(4023, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == 14"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == 14);
			}
		});
		invariants4999.add(new Invariant(4024, "DataNode.instance.id.infoPort == 32985"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() == 32985);
			}
		});
		invariants4999.add(new Invariant(4025, "DataNode.instance.id.ipcPort == 38853"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() == 38853);
			}
		});
		invariants4999.add(new Invariant(4026, "DataNode.instance.id.nsInfo.cTime == 1731382094714L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() == 1731382094714L);
			}
		});
		invariants4999.add(new Invariant(4027, "DataNode.instance.id.nsInfo.namespaceID == 1728004648"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() == 1728004648);
			}
		});
		invariants4999.add(new Invariant(4028, "DataNode.instance.id.xferPort == 44395"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() == 44395);
			}
		});
		invariants4999.add(new Invariant(4029, "DataNode.instance.lastDiskErrorCheck == 118203547"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() == 118203547);
			}
		});
		invariants4999.add(new Invariant(4030, "DataNode.instance.volumeChecker.lastAllVolumesCheck == 118203541"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() == 118203541);
			}
		});
		invariants4999.add(new Invariant(4031, "DataNode.instance.xserver.balanceThrottler.curPeriodStart == 118202622"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() == 118202622);
			}
		});
		invariants4999.add(new Invariant(4032, "NameNode.instance.namesystem.lazyPersistFileScrubberTS == 118202557"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() == 118202557);
			}
		});
		invariants4999.add(new Invariant(4033, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime == 118200996"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() == 118200996);
			}
		});
		invariants4999.add(new Invariant(4034, "NameNode.instance.namesystem.startTime == 1731382096088L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() == 1731382096088L);
			}
		});
		invariants4999.add(new Invariant(4035, "blockManagerInstance.blockReportLeaseManager.nextId == 41004619899776898L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() == 41004619899776898L);
			}
		});
		invariants4999.add(new Invariant(4036, "blockManagerInstance.bmSafeMode.startTime == 118201679"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() == 118201679);
			}
		});
		invariants4999.add(new Invariant(4037, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 214412"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 214412);
			}
		});
		invariants4999.add(new Invariant(4038, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 93262422016L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 93262422016L);
			}
		});
		invariants4999.add(new Invariant(4039, "blockManagerInstance.heartbeatManager.stats.capacityTotal == 134100180992L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue() == 134100180992L);
			}
		});
		invariants4999.add(new Invariant(4040, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 33965603444L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 33965603444L);
			}
		});
		invariants4999.add(new Invariant(4041, "blockManagerInstance.invalidateBlocks.startupTime == 118200999"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue() == 118200999);
			}
		});
		invariants4999.add(new Invariant(4042, "blockManagerInstance.lastRedundancyCycleTS == 118207679"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118207679);
			}
		});
		invariants4999.add(new Invariant(4043, "DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION == blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4044, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.volsConfigured) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, blockManagerInstance.replQueueCallsSinceReset-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue()-1));
			}
		});
		invariants4999.add(new Invariant(4045, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == 28"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == 28);
			}
		});
		invariants4999.add(new Invariant(4046, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 93252993024L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 93252993024L);
			}
		});
		invariants4999.add(new Invariant(4047, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 33975032436L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 33975032436L);
			}
		});
		invariants4999.add(new Invariant(4048, "blockManagerInstance.lastRedundancyCycleTS == 118210680"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118210680);
			}
		});
		invariants4999.add(new Invariant(4049, "DataNode.instance.data.asyncDiskService.numDeletedBlocks > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4050, "blockManagerInstance.lastRedundancyCycleTS > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4051, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4052, "blockManagerInstance.replQueueCallsSinceReset == blockManagerInstance.storagePolicySuite.defaultPolicyID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.storagePolicySuite.defaultPolicyID"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4053, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == 24"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == 24);
			}
		});
		invariants4999.add(new Invariant(4054, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache == 88"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() == 88);
			}
		});
		invariants4999.add(new Invariant(4055, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 93204881408L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 93204881408L);
			}
		});
		invariants4999.add(new Invariant(4056, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 34023144052L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 34023144052L);
			}
		});
		invariants4999.add(new Invariant(4057, "blockManagerInstance.lastRedundancyCycleTS == 118222681"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118222681);
			}
		});
		invariants4999.add(new Invariant(4058, "blockManagerInstance.replQueueCallsSinceReset == 7"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue() == 7);
			}
		});
		invariants4999.add(new Invariant(4059, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4060, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME == blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4061, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == 38"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == 38);
			}
		});
		invariants4999.add(new Invariant(4062, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 230938"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 230938);
			}
		});
		invariants4999.add(new Invariant(4063, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 93240246272L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 93240246272L);
			}
		});
		invariants4999.add(new Invariant(4064, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 33987762662L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 33987762662L);
			}
		});
		invariants4999.add(new Invariant(4065, "blockManagerInstance.lastRedundancyCycleTS == 118213680"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118213680);
			}
		});
		invariants4999.add(new Invariant(4066, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == DataNode.instance.data.volsConfigured"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4067, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == DataNode.instance.dnConf.volsConfigured"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.volsConfigured"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4068, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == blockManagerInstance.blocksReplWorkMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.blocksReplWorkMultiplier"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4069, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.sequenceNumber"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.sequenceNumber"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4070, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4071, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == blockManagerInstance.heartbeatManager.stats.xceiverCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.xceiverCount"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4072, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == blockManagerInstance.maxReplicationStreams"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.maxReplicationStreams"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4073, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == blockManagerInstance.neededReconstruction.QUEUE_LOW_REDUNDANCY"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.QUEUE_LOW_REDUNDANCY"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4074, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandMultiplier"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4075, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4076, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION-1) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.numDeletedBlocks)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue()-1) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue()));
			}
		});
		invariants4999.add(new Invariant(4077, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.numDeletedBlocks-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue()-1));
			}
		});
		invariants4999.add(new Invariant(4078, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.cacheManager.numBlocksFailedToUncache-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue()-1));
			}
		});
		invariants4999.add(new Invariant(4079, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.numDeletedBlocks) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, blockManagerInstance.datanodeManager.heartbeatIntervalSeconds-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatIntervalSeconds"))).intValue()-1));
			}
		});
		invariants4999.add(new Invariant(4080, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.numDeletedBlocks) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, blockManagerInstance.neededReconstruction.QUEUE_REPLICAS_BADLY_DISTRIBUTED-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.QUEUE_REPLICAS_BADLY_DISTRIBUTED"))).intValue()-1));
			}
		});
		invariants4999.add(new Invariant(4081, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.numDeletedBlocks) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.shrinkThreshold-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.shrinkThreshold"))).intValue()-1));
			}
		});
		invariants4999.add(new Invariant(4082, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 148308"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 148308);
			}
		});
		invariants4999.add(new Invariant(4083, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 93268434944L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 93268434944L);
			}
		});
		invariants4999.add(new Invariant(4084, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 33959656620L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 33959656620L);
			}
		});
		invariants4999.add(new Invariant(4085, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME == blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4086, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME == blockManagerInstance.heartbeatManager.stats.xceiverCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.xceiverCount"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4087, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == NameNode.instance.namesystem.dir.maxComponentLength"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxComponentLength"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4088, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.numDeletedBlocks) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, blockManagerInstance.defaultReplication-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.defaultReplication"))).intValue()-1));
			}
		});
		invariants4999.add(new Invariant(4089, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.numDeletedBlocks) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, blockManagerInstance.heartbeatManager.stats.nodesInService-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue()-1));
			}
		});
		invariants4999.add(new Invariant(4090, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.numDeletedBlocks) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue()-1));
			}
		});
		invariants4999.add(new Invariant(4091, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.numDeletedBlocks) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, blockManagerInstance.heartbeatManager.stats.xceiverCount-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.xceiverCount"))).intValue()-1));
			}
		});
		invariants4999.add(new Invariant(4092, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 49152"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 49152);
			}
		});
		invariants4999.add(new Invariant(4093, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 93275766784L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 93275766784L);
			}
		});
		invariants4999.add(new Invariant(4094, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 33952423936L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 33952423936L);
			}
		});
		invariants4999.add(new Invariant(4095, "blockManagerInstance.lastRedundancyCycleTS == 118204679"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118204679);
			}
		});
		invariants4999.add(new Invariant(4096, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == 14 || DataNode.instance.data.asyncDiskService.numDeletedBlocks == 26 || DataNode.instance.data.asyncDiskService.numDeletedBlocks == 28"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == 14 || ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == 26 || ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == 28);
			}
		});
		invariants4999.add(new Invariant(4097, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache == 14 || DataNode.instance.data.cacheManager.numBlocksFailedToUncache == 24 || DataNode.instance.data.cacheManager.numBlocksFailedToUncache == 28"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() == 14 || ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() == 24 || ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() == 28);
			}
		});
		invariants4999.add(new Invariant(4098, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 93252993024L || blockManagerInstance.heartbeatManager.stats.capacityRemaining == 93262422016L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 93252993024L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 93262422016L);
			}
		});
		invariants4999.add(new Invariant(4099, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 33965603444L || blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 33975032436L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 33965603444L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 33975032436L);
			}
		});
		invariants4999.add(new Invariant(4100, "DataNode.instance.NUM_CORES > DataNode.instance.data.asyncDiskService.numDeletedBlocks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.NUM_CORES"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4101, "DataNode.instance.NUM_CORES > DataNode.instance.data.cacheManager.numBlocksFailedToUncache"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.NUM_CORES"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4102, "DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs > DataNode.instance.data.asyncDiskService.numDeletedBlocks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4103, "DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs > DataNode.instance.data.cacheManager.numBlocksFailedToUncache"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4104, "DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION < DataNode.instance.data.asyncDiskService.numDeletedBlocks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4105, "DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION < DataNode.instance.data.cacheManager.numBlocksFailedToUncache"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4106, "DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4107, "DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4108, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME < DataNode.instance.data.asyncDiskService.numDeletedBlocks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4109, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME < DataNode.instance.data.cacheManager.numBlocksFailedToUncache"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4110, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME < DataNode.instance.data.asyncDiskService.numDeletedBlocks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4111, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME < DataNode.instance.data.cacheManager.numBlocksFailedToUncache"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4112, "DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS > DataNode.instance.data.asyncDiskService.numDeletedBlocks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4113, "DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS > DataNode.instance.data.cacheManager.numBlocksFailedToUncache"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4114, "DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS > DataNode.instance.data.asyncDiskService.numDeletedBlocks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4115, "DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS > DataNode.instance.data.cacheManager.numBlocksFailedToUncache"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4116, "DataNode.instance.data.asyncDiskService.numDeletedBlocks > DataNode.instance.data.cacheManager.numBlocksCached"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4117, "DataNode.instance.data.asyncDiskService.numDeletedBlocks >= DataNode.instance.data.cacheManager.numBlocksFailedToUncache"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() >= ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4118, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < DataNode.instance.data.cacheManager.revocationMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationMs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4119, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < DataNode.instance.data.cacheManager.revocationPollingMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationPollingMs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4120, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < DataNode.instance.data.maxDataLength"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.data.maxDataLength"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4121, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < DataNode.instance.data.smallBufferSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.data.smallBufferSize"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4122, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < DataNode.instance.directoryScanner.MILLIS_PER_SECOND"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.MILLIS_PER_SECOND"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4123, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < DataNode.instance.directoryScanner.scanPeriodMsecs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.scanPeriodMsecs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4124, "DataNode.instance.data.asyncDiskService.numDeletedBlocks > DataNode.instance.diskBalancer.bandwidth"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.bandwidth"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4125, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < DataNode.instance.diskBalancer.planValidityInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.planValidityInterval"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4126, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < DataNode.instance.dnConf.blockReportSplitThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportSplitThreshold"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4127, "DataNode.instance.data.asyncDiskService.numDeletedBlocks != DataNode.instance.dnConf.bpReadyTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() != ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.bpReadyTimeout"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4128, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < DataNode.instance.dnConf.cacheReportInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.cacheReportInterval"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4129, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4130, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < DataNode.instance.dnConf.heartBeatInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.heartBeatInterval"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4131, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < DataNode.instance.dnConf.lifelineIntervalMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.lifelineIntervalMs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4132, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < DataNode.instance.dnConf.outliersReportIntervalMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.outliersReportIntervalMs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4133, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < DataNode.instance.dnConf.readaheadLength"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.readaheadLength"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4134, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < DataNode.instance.dnConf.restartReplicaExpiry"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.restartReplicaExpiry"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4135, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < DataNode.instance.dnConf.socketKeepaliveTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketKeepaliveTimeout"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4136, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < DataNode.instance.dnConf.socketTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketTimeout"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4137, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < DataNode.instance.dnConf.socketWriteTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketWriteTimeout"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4138, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < DataNode.instance.id.infoPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4139, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < DataNode.instance.id.ipcPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4140, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < DataNode.instance.id.nsInfo.cTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4141, "DataNode.instance.data.asyncDiskService.numDeletedBlocks > DataNode.instance.id.nsInfo.layoutVersion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.layoutVersion"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4142, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < DataNode.instance.id.nsInfo.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4143, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < DataNode.instance.id.xferPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4144, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < DataNode.instance.lastDiskErrorCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4145, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < DataNode.instance.shortCircuitRegistry.SHM_LENGTH"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.shortCircuitRegistry.SHM_LENGTH"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4146, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4147, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < DataNode.instance.xserver.balanceThrottler.bytesPerPeriod"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.bytesPerPeriod"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4148, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < DataNode.instance.xserver.balanceThrottler.curPeriodStart"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4149, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < DataNode.instance.xserver.balanceThrottler.maxThreads"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.maxThreads"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4150, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < DataNode.instance.xserver.balanceThrottler.periodExtension"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.periodExtension"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4151, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < DataNode.instance.xserver.estimateBlockSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.estimateBlockSize"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4152, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < DataNode.instance.xserver.maxXceiverCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.maxXceiverCount"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4153, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < NameNode.instance.DEFAULT_PORT"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.DEFAULT_PORT"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4154, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4155, "DataNode.instance.data.asyncDiskService.numDeletedBlocks >= NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() >= ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4156, "DataNode.instance.data.asyncDiskService.numDeletedBlocks > NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4157, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4158, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < NameNode.instance.namesystem.cacheManager.scanIntervalMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.scanIntervalMs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4159, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4160, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < NameNode.instance.namesystem.dir.maxDirItems"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxDirItems"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4161, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < NameNode.instance.namesystem.dir.xattrMaxSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.xattrMaxSize"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4162, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < NameNode.instance.namesystem.editLogRollerThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogRollerThreshold"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4163, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4164, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < NameNode.instance.namesystem.leaseManager.hardLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.hardLimit"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4165, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4166, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < NameNode.instance.namesystem.leaseRecheckIntervalMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseRecheckIntervalMs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4167, "DataNode.instance.data.asyncDiskService.numDeletedBlocks != NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() != ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4168, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < NameNode.instance.namesystem.nnResourceChecker.duReserved"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.nnResourceChecker.duReserved"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4169, "DataNode.instance.data.asyncDiskService.numDeletedBlocks != NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() != ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4170, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4171, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4172, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4173, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4174, "DataNode.instance.data.asyncDiskService.numDeletedBlocks > blockManagerInstance.blockReportLeaseManager.maxPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.maxPending"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4175, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < blockManagerInstance.blocksMap.capacity"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blocksMap.capacity"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4176, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < blockManagerInstance.datanodeManager.defaultInfoPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoPort"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4177, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < blockManagerInstance.datanodeManager.defaultInfoSecurePort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoSecurePort"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4178, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < blockManagerInstance.datanodeManager.defaultIpcPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultIpcPort"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4179, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < blockManagerInstance.datanodeManager.defaultXferPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultXferPort"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4180, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < blockManagerInstance.datanodeManager.heartbeatExpireInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatExpireInterval"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4181, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4182, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4183, "DataNode.instance.data.asyncDiskService.numDeletedBlocks > blockManagerInstance.neededReconstruction.LEVEL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.LEVEL"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4184, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4185, "DataNode.instance.data.asyncDiskService.numDeletedBlocks != blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4186, "DataNode.instance.data.asyncDiskService.numDeletedBlocks > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4187, "DataNode.instance.data.asyncDiskService.numDeletedBlocks != blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4188, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < blockManagerInstance.replQueueResetToHeadThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueResetToHeadThreshold"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4189, "DataNode.instance.data.asyncDiskService.numDeletedBlocks > blockManagerInstance.storagePolicySuite.defaultPolicyID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.storagePolicySuite.defaultPolicyID"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4190, "DataNode.instance.data.cacheManager.numBlocksCached < DataNode.instance.data.cacheManager.numBlocksFailedToUncache"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4191, "DataNode.instance.data.cacheManager.numBlocksCached < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4192, "DataNode.instance.data.cacheManager.numBlocksCached < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4193, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < DataNode.instance.data.cacheManager.revocationMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationMs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4194, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < DataNode.instance.data.cacheManager.revocationPollingMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationPollingMs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4195, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < DataNode.instance.data.maxDataLength"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.data.maxDataLength"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4196, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < DataNode.instance.data.smallBufferSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.data.smallBufferSize"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4197, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < DataNode.instance.directoryScanner.MILLIS_PER_SECOND"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.MILLIS_PER_SECOND"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4198, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < DataNode.instance.directoryScanner.scanPeriodMsecs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.scanPeriodMsecs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4199, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache > DataNode.instance.diskBalancer.bandwidth"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.bandwidth"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4200, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < DataNode.instance.diskBalancer.planValidityInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.planValidityInterval"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4201, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < DataNode.instance.dnConf.blockReportSplitThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportSplitThreshold"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4202, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache != DataNode.instance.dnConf.bpReadyTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() != ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.bpReadyTimeout"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4203, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < DataNode.instance.dnConf.cacheReportInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.cacheReportInterval"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4204, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4205, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < DataNode.instance.dnConf.heartBeatInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.heartBeatInterval"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4206, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < DataNode.instance.dnConf.lifelineIntervalMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.lifelineIntervalMs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4207, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < DataNode.instance.dnConf.outliersReportIntervalMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.outliersReportIntervalMs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4208, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < DataNode.instance.dnConf.readaheadLength"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.readaheadLength"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4209, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < DataNode.instance.dnConf.restartReplicaExpiry"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.restartReplicaExpiry"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4210, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < DataNode.instance.dnConf.socketKeepaliveTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketKeepaliveTimeout"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4211, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < DataNode.instance.dnConf.socketTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketTimeout"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4212, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < DataNode.instance.dnConf.socketWriteTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketWriteTimeout"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4213, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < DataNode.instance.id.infoPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4214, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < DataNode.instance.id.ipcPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4215, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < DataNode.instance.id.nsInfo.cTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4216, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache > DataNode.instance.id.nsInfo.layoutVersion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.layoutVersion"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4217, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < DataNode.instance.id.nsInfo.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4218, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < DataNode.instance.id.xferPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4219, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < DataNode.instance.lastDiskErrorCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4220, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < DataNode.instance.shortCircuitRegistry.SHM_LENGTH"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.shortCircuitRegistry.SHM_LENGTH"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4221, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache > DataNode.instance.storage.layoutVersion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4222, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4223, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < DataNode.instance.volumeChecker.lastAllVolumesCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4224, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < DataNode.instance.xserver.balanceThrottler.bytesPerPeriod"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.bytesPerPeriod"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4225, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < DataNode.instance.xserver.balanceThrottler.curPeriodStart"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4226, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < DataNode.instance.xserver.balanceThrottler.maxThreads"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.maxThreads"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4227, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < DataNode.instance.xserver.balanceThrottler.periodExtension"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.periodExtension"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4228, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < DataNode.instance.xserver.estimateBlockSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.estimateBlockSize"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4229, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < DataNode.instance.xserver.maxXceiverCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.maxXceiverCount"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4230, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < NameNode.instance.DEFAULT_PORT"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.DEFAULT_PORT"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4231, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4232, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache >= NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() >= ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4233, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache > NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4234, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4235, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < NameNode.instance.namesystem.cacheManager.scanIntervalMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.scanIntervalMs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4236, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4237, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < NameNode.instance.namesystem.dir.maxDirItems"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxDirItems"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4238, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < NameNode.instance.namesystem.dir.xattrMaxSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.xattrMaxSize"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4239, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < NameNode.instance.namesystem.editLogRollerThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogRollerThreshold"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4240, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4241, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < NameNode.instance.namesystem.leaseManager.hardLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.hardLimit"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4242, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4243, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < NameNode.instance.namesystem.leaseRecheckIntervalMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseRecheckIntervalMs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4244, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache != NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() != ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4245, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < NameNode.instance.namesystem.nnResourceChecker.duReserved"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.nnResourceChecker.duReserved"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4246, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4247, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4248, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4249, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4250, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache > blockManagerInstance.blockReportLeaseManager.maxPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.maxPending"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4251, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4252, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < blockManagerInstance.blocksMap.capacity"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blocksMap.capacity"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4253, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4254, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < blockManagerInstance.datanodeManager.defaultInfoPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoPort"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4255, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < blockManagerInstance.datanodeManager.defaultInfoSecurePort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoSecurePort"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4256, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < blockManagerInstance.datanodeManager.defaultIpcPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultIpcPort"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4257, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < blockManagerInstance.datanodeManager.defaultXferPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultXferPort"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4258, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < blockManagerInstance.datanodeManager.heartbeatExpireInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatExpireInterval"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4259, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4260, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4261, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4262, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4263, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4264, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4265, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache > blockManagerInstance.neededReconstruction.LEVEL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.LEVEL"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4266, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4267, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache != blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4268, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4269, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache != blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4270, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache < blockManagerInstance.replQueueResetToHeadThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueResetToHeadThreshold"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4271, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache > blockManagerInstance.storagePolicySuite.defaultPolicyID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.storagePolicySuite.defaultPolicyID"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4272, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4273, "DataNode.instance.data.cacheManager.revocationMs < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4274, "DataNode.instance.data.cacheManager.revocationMs < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4275, "DataNode.instance.data.cacheManager.revocationPollingMs < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationPollingMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4276, "DataNode.instance.data.cacheManager.revocationPollingMs < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationPollingMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4277, "DataNode.instance.data.maxDataLength < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.maxDataLength"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4278, "DataNode.instance.data.maxDataLength < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.maxDataLength"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4279, "DataNode.instance.data.smallBufferSize < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.smallBufferSize"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4280, "DataNode.instance.data.smallBufferSize < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.smallBufferSize"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4281, "DataNode.instance.dnConf.blockReportSplitThreshold < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportSplitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4282, "DataNode.instance.dnConf.blockReportSplitThreshold < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportSplitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4283, "DataNode.instance.dnConf.bpReadyTimeout < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.bpReadyTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4284, "DataNode.instance.dnConf.bpReadyTimeout < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.bpReadyTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4285, "DataNode.instance.dnConf.cacheReportInterval < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.cacheReportInterval"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4286, "DataNode.instance.dnConf.cacheReportInterval < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.cacheReportInterval"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4287, "DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4288, "DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4289, "DataNode.instance.dnConf.heartBeatInterval < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.heartBeatInterval"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4290, "DataNode.instance.dnConf.heartBeatInterval < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.heartBeatInterval"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4291, "DataNode.instance.dnConf.lifelineIntervalMs < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.lifelineIntervalMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4292, "DataNode.instance.dnConf.lifelineIntervalMs < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.lifelineIntervalMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4293, "DataNode.instance.dnConf.outliersReportIntervalMs < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.outliersReportIntervalMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4294, "DataNode.instance.dnConf.outliersReportIntervalMs < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.outliersReportIntervalMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4295, "DataNode.instance.dnConf.readaheadLength < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.readaheadLength"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4296, "DataNode.instance.dnConf.readaheadLength < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.readaheadLength"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4297, "DataNode.instance.dnConf.restartReplicaExpiry < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.restartReplicaExpiry"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4298, "DataNode.instance.dnConf.restartReplicaExpiry < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.restartReplicaExpiry"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4299, "DataNode.instance.dnConf.socketKeepaliveTimeout < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketKeepaliveTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4300, "DataNode.instance.dnConf.socketKeepaliveTimeout < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketKeepaliveTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4301, "DataNode.instance.dnConf.socketTimeout < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4302, "DataNode.instance.dnConf.socketTimeout < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4303, "DataNode.instance.dnConf.socketWriteTimeout < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketWriteTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4304, "DataNode.instance.dnConf.socketWriteTimeout < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketWriteTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4305, "DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4306, "DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4307, "DataNode.instance.volumeChecker.lastAllVolumesCheck < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4308, "DataNode.instance.volumeChecker.lastAllVolumesCheck < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4309, "DataNode.instance.xserver.balanceThrottler.bytesPerPeriod < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.bytesPerPeriod"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4310, "DataNode.instance.xserver.balanceThrottler.bytesPerPeriod < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.bytesPerPeriod"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4311, "DataNode.instance.xserver.balanceThrottler.curPeriodStart < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4312, "DataNode.instance.xserver.balanceThrottler.curPeriodStart < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4313, "DataNode.instance.xserver.balanceThrottler.maxThreads < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.maxThreads"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4314, "DataNode.instance.xserver.balanceThrottler.maxThreads < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.maxThreads"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4315, "DataNode.instance.xserver.balanceThrottler.periodExtension < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.periodExtension"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4316, "DataNode.instance.xserver.balanceThrottler.periodExtension < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.periodExtension"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4317, "DataNode.instance.xserver.estimateBlockSize < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.estimateBlockSize"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4318, "DataNode.instance.xserver.estimateBlockSize < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.estimateBlockSize"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4319, "DataNode.instance.xserver.maxXceiverCount < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.maxXceiverCount"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4320, "DataNode.instance.xserver.maxXceiverCount < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.maxXceiverCount"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4321, "NameNode.instance.DEFAULT_PORT < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.DEFAULT_PORT"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4322, "NameNode.instance.DEFAULT_PORT < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.DEFAULT_PORT"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4323, "NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4324, "NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4325, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4326, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4327, "NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4328, "NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4329, "NameNode.instance.namesystem.cacheManager.scanIntervalMs < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.scanIntervalMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4330, "NameNode.instance.namesystem.cacheManager.scanIntervalMs < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.scanIntervalMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4331, "NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4332, "NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4333, "NameNode.instance.namesystem.dir.maxDirItems < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxDirItems"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4334, "NameNode.instance.namesystem.dir.maxDirItems < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxDirItems"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4335, "NameNode.instance.namesystem.dir.xattrMaxSize < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.xattrMaxSize"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4336, "NameNode.instance.namesystem.dir.xattrMaxSize < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.xattrMaxSize"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4337, "NameNode.instance.namesystem.editLogRollerThreshold < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogRollerThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4338, "NameNode.instance.namesystem.editLogRollerThreshold < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogRollerThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4339, "NameNode.instance.namesystem.lazyPersistFileScrubberTS < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4340, "NameNode.instance.namesystem.lazyPersistFileScrubberTS < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4341, "NameNode.instance.namesystem.leaseManager.hardLimit < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.hardLimit"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4342, "NameNode.instance.namesystem.leaseManager.hardLimit < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.hardLimit"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4343, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4344, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4345, "NameNode.instance.namesystem.leaseRecheckIntervalMs < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseRecheckIntervalMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4346, "NameNode.instance.namesystem.leaseRecheckIntervalMs < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseRecheckIntervalMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4347, "NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4348, "NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4349, "NameNode.instance.namesystem.nnResourceChecker.duReserved < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.nnResourceChecker.duReserved"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4350, "NameNode.instance.namesystem.nnResourceChecker.duReserved < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.nnResourceChecker.duReserved"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4351, "NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4352, "NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4353, "NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4354, "NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4355, "blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4356, "blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4357, "blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4358, "blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4359, "blockManagerInstance.blockReportLeaseManager.maxPending < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.maxPending"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4360, "blockManagerInstance.blockReportLeaseManager.maxPending < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.maxPending"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4361, "blockManagerInstance.blocksMap.capacity < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blocksMap.capacity"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4362, "blockManagerInstance.blocksMap.capacity < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blocksMap.capacity"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4363, "blockManagerInstance.bmSafeMode.startTime < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4364, "blockManagerInstance.bmSafeMode.startTime < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4365, "blockManagerInstance.datanodeManager.defaultInfoPort < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoPort"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4366, "blockManagerInstance.datanodeManager.defaultInfoPort < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoPort"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4367, "blockManagerInstance.datanodeManager.defaultInfoSecurePort < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoSecurePort"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4368, "blockManagerInstance.datanodeManager.defaultInfoSecurePort < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoSecurePort"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4369, "blockManagerInstance.datanodeManager.defaultIpcPort < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultIpcPort"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4370, "blockManagerInstance.datanodeManager.defaultIpcPort < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultIpcPort"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4371, "blockManagerInstance.datanodeManager.defaultXferPort < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultXferPort"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4372, "blockManagerInstance.datanodeManager.defaultXferPort < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultXferPort"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4373, "blockManagerInstance.datanodeManager.heartbeatExpireInterval < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatExpireInterval"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4374, "blockManagerInstance.datanodeManager.heartbeatExpireInterval < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatExpireInterval"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4375, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed < blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4376, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed < blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4377, "blockManagerInstance.heartbeatManager.stats.capacityRemaining < blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4378, "blockManagerInstance.heartbeatManager.stats.capacityRemaining > blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4379, "blockManagerInstance.heartbeatManager.stats.capacityRemaining > blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4380, "blockManagerInstance.heartbeatManager.stats.capacityRemaining > blockManagerInstance.neededReconstruction.LEVEL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.LEVEL"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4381, "blockManagerInstance.heartbeatManager.stats.capacityRemaining > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4382, "blockManagerInstance.heartbeatManager.stats.capacityRemaining > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4383, "blockManagerInstance.heartbeatManager.stats.capacityRemaining > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4384, "blockManagerInstance.heartbeatManager.stats.capacityRemaining > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4385, "blockManagerInstance.heartbeatManager.stats.capacityRemaining > blockManagerInstance.replQueueResetToHeadThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueResetToHeadThreshold"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4386, "blockManagerInstance.heartbeatManager.stats.capacityRemaining > blockManagerInstance.storagePolicySuite.defaultPolicyID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.storagePolicySuite.defaultPolicyID"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4387, "blockManagerInstance.heartbeatManager.stats.capacityTotal > blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4388, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs > blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4389, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs > blockManagerInstance.neededReconstruction.LEVEL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.LEVEL"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4390, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4391, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4392, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4393, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4394, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs > blockManagerInstance.replQueueResetToHeadThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueResetToHeadThreshold"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4395, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs > blockManagerInstance.storagePolicySuite.defaultPolicyID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.storagePolicySuite.defaultPolicyID"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4396, "blockManagerInstance.lastRedundancyCycleTS == 118225681"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118225681);
			}
		});
		invariants4999.add(new Invariant(4397, "blockManagerInstance.replQueueCallsSinceReset == 8"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue() == 8);
			}
		});
		invariants4999.add(new Invariant(4398, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == 54"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == 54);
			}
		});
		invariants4999.add(new Invariant(4399, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 313568"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 313568);
			}
		});
		invariants4999.add(new Invariant(4400, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 93227188224L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 93227188224L);
			}
		});
		invariants4999.add(new Invariant(4401, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 34000738080L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 34000738080L);
			}
		});
		invariants4999.add(new Invariant(4402, "blockManagerInstance.lastRedundancyCycleTS == 118216680 || blockManagerInstance.lastRedundancyCycleTS == 118219681"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118216680 || ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118219681);
			}
		});
		invariants4999.add(new Invariant(4403, "blockManagerInstance.replQueueCallsSinceReset == 5 || blockManagerInstance.replQueueCallsSinceReset == 6"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue() == 5 || ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue() == 6);
			}
		});
		invariants4999.add(new Invariant(4404, "DataNode.instance.NUM_CORES < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.NUM_CORES"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4405, "DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.blockScanner.joinVolumeScannersTimeOutMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4406, "DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4407, "DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION < blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4408, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4409, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME < blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4410, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4411, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME < blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4412, "DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAX_DELETED_BLOCKS"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4413, "DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4414, "DataNode.instance.data.asyncDiskService.numDeletedBlocks > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4415, "DataNode.instance.data.cacheManager.numBlocksCached < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4416, "DataNode.instance.data.cacheManager.numBlocksCached < blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4417, "DataNode.instance.data.cacheManager.revocationMs < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4418, "DataNode.instance.data.cacheManager.revocationPollingMs < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationPollingMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4419, "DataNode.instance.data.maxDataLength < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.maxDataLength"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4420, "DataNode.instance.data.smallBufferSize < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.smallBufferSize"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4421, "DataNode.instance.directoryScanner.MILLIS_PER_SECOND < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.MILLIS_PER_SECOND"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4422, "DataNode.instance.directoryScanner.scanPeriodMsecs < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.scanPeriodMsecs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4423, "DataNode.instance.diskBalancer.bandwidth < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.bandwidth"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4424, "DataNode.instance.diskBalancer.planValidityInterval < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.planValidityInterval"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4425, "DataNode.instance.dnConf.blockReportSplitThreshold < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportSplitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4426, "DataNode.instance.dnConf.bpReadyTimeout < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.bpReadyTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4427, "DataNode.instance.dnConf.cacheReportInterval < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.cacheReportInterval"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4428, "DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4429, "DataNode.instance.dnConf.heartBeatInterval < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.heartBeatInterval"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4430, "DataNode.instance.dnConf.lifelineIntervalMs < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.lifelineIntervalMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4431, "DataNode.instance.dnConf.outliersReportIntervalMs < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.outliersReportIntervalMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4432, "DataNode.instance.dnConf.readaheadLength < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.readaheadLength"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4433, "DataNode.instance.dnConf.restartReplicaExpiry < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.restartReplicaExpiry"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4434, "DataNode.instance.dnConf.socketKeepaliveTimeout < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketKeepaliveTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4435, "DataNode.instance.dnConf.socketTimeout < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4436, "DataNode.instance.dnConf.socketWriteTimeout < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketWriteTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4437, "DataNode.instance.id.infoPort < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4438, "DataNode.instance.id.ipcPort < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4439, "DataNode.instance.id.xferPort < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4440, "DataNode.instance.lastDiskErrorCheck < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4441, "DataNode.instance.shortCircuitRegistry.SHM_LENGTH < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.shortCircuitRegistry.SHM_LENGTH"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4442, "DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4443, "DataNode.instance.volumeChecker.lastAllVolumesCheck < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4444, "DataNode.instance.xserver.balanceThrottler.bytesPerPeriod < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.bytesPerPeriod"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4445, "DataNode.instance.xserver.balanceThrottler.curPeriodStart < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4446, "DataNode.instance.xserver.balanceThrottler.maxThreads < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.maxThreads"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4447, "DataNode.instance.xserver.balanceThrottler.periodExtension < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.periodExtension"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4448, "DataNode.instance.xserver.maxXceiverCount < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.maxXceiverCount"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4449, "NameNode.instance.DEFAULT_PORT < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.DEFAULT_PORT"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4450, "NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4451, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4452, "NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4453, "NameNode.instance.namesystem.cacheManager.scanIntervalMs < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.scanIntervalMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4454, "NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4455, "NameNode.instance.namesystem.dir.maxDirItems < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxDirItems"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4456, "NameNode.instance.namesystem.dir.xattrMaxSize < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.xattrMaxSize"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4457, "NameNode.instance.namesystem.editLogRollerThreshold < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogRollerThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4458, "NameNode.instance.namesystem.lazyPersistFileScrubberTS < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4459, "NameNode.instance.namesystem.leaseManager.hardLimit < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.hardLimit"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4460, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4461, "NameNode.instance.namesystem.leaseRecheckIntervalMs < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseRecheckIntervalMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4462, "NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4463, "NameNode.instance.namesystem.nnResourceChecker.duReserved < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.nnResourceChecker.duReserved"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4464, "NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4465, "NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4466, "blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4467, "blockManagerInstance.blockReportLeaseManager.maxPending < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.maxPending"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4468, "blockManagerInstance.blockReportLeaseManager.maxPending >= blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.maxPending"))).intValue() >= ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4469, "blockManagerInstance.blocksMap.capacity < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blocksMap.capacity"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4470, "blockManagerInstance.bmSafeMode.startTime < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4471, "blockManagerInstance.bmSafeMode.startTime > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4472, "blockManagerInstance.datanodeManager.defaultInfoPort < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoPort"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4473, "blockManagerInstance.datanodeManager.defaultInfoSecurePort < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoSecurePort"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4474, "blockManagerInstance.datanodeManager.defaultIpcPort < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultIpcPort"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4475, "blockManagerInstance.datanodeManager.defaultXferPort < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultXferPort"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4476, "blockManagerInstance.datanodeManager.heartbeatExpireInterval < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatExpireInterval"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4477, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4478, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4479, "blockManagerInstance.heartbeatManager.stats.capacityRemaining > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4480, "blockManagerInstance.heartbeatManager.stats.capacityTotal > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4481, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4482, "blockManagerInstance.invalidateBlocks.startupTime < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4483, "blockManagerInstance.lastRedundancyCycleTS > blockManagerInstance.neededReconstruction.LEVEL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.LEVEL"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4484, "blockManagerInstance.lastRedundancyCycleTS > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4485, "blockManagerInstance.lastRedundancyCycleTS > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4486, "blockManagerInstance.lastRedundancyCycleTS > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4487, "blockManagerInstance.lastRedundancyCycleTS > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4488, "blockManagerInstance.lastRedundancyCycleTS > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4489, "blockManagerInstance.lastRedundancyCycleTS > blockManagerInstance.replQueueResetToHeadThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueResetToHeadThreshold"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4490, "blockManagerInstance.lastRedundancyCycleTS > blockManagerInstance.storagePolicySuite.defaultPolicyID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.storagePolicySuite.defaultPolicyID"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4491, "blockManagerInstance.neededReconstruction.LEVEL <= blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.LEVEL"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4492, "blockManagerInstance.blockReportLeaseManager.maxPending == blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.maxPending"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4493, "blockManagerInstance.lastRedundancyCycleTS == 118219681"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118219681);
			}
		});
		invariants4999.add(new Invariant(4494, "blockManagerInstance.neededReconstruction.LEVEL == blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.LEVEL"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4495, "blockManagerInstance.lastRedundancyCycleTS == 118216680"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118216680);
			}
		});
		invariants4999.add(new Invariant(4496, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache == 78"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() == 78);
			}
		});
		invariants4999.add(new Invariant(4497, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 330094"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 330094);
			}
		});
		invariants4999.add(new Invariant(4498, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 93214162944L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 93214162944L);
			}
		});
		invariants4999.add(new Invariant(4499, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 34013746834L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 34013746834L);
			}
		});
		invariants4999.add(new Invariant(4500, "blockManagerInstance.replQueueCallsSinceReset > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4501, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == 38 || DataNode.instance.data.asyncDiskService.numDeletedBlocks == 54"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == 38 || ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == 54);
			}
		});
		invariants4999.add(new Invariant(4502, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 230938 || blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 313568"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 230938 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 313568);
			}
		});
		invariants4999.add(new Invariant(4503, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 93227188224L || blockManagerInstance.heartbeatManager.stats.capacityRemaining == 93240246272L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 93227188224L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 93240246272L);
			}
		});
		invariants4999.add(new Invariant(4504, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 33987762662L || blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 34000738080L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 33987762662L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 34000738080L);
			}
		});
		invariants4999.add(new Invariant(4505, "DataNode.instance.NUM_CORES < DataNode.instance.data.asyncDiskService.numDeletedBlocks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.NUM_CORES"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4506, "DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION < blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4507, "DataNode.instance.data.asyncDiskService.numDeletedBlocks > DataNode.instance.dnConf.bpReadyTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.bpReadyTimeout"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4508, "DataNode.instance.data.asyncDiskService.numDeletedBlocks != DataNode.instance.xserver.balanceThrottler.maxThreads"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() != ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.maxThreads"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4509, "DataNode.instance.data.asyncDiskService.numDeletedBlocks > NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4510, "DataNode.instance.data.asyncDiskService.numDeletedBlocks > NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4511, "DataNode.instance.data.asyncDiskService.numDeletedBlocks > NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4512, "DataNode.instance.data.asyncDiskService.numDeletedBlocks > blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4513, "DataNode.instance.data.asyncDiskService.numDeletedBlocks > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4514, "DataNode.instance.data.asyncDiskService.numDeletedBlocks > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4515, "DataNode.instance.data.cacheManager.numBlocksCached < blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4516, "DataNode.instance.data.cacheManager.revocationPollingMs < blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationPollingMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4517, "DataNode.instance.data.smallBufferSize < blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.smallBufferSize"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4518, "DataNode.instance.dnConf.bpReadyTimeout < blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.bpReadyTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4519, "DataNode.instance.dnConf.cacheReportInterval < blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.cacheReportInterval"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4520, "DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs < blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4521, "DataNode.instance.dnConf.heartBeatInterval < blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.heartBeatInterval"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4522, "DataNode.instance.dnConf.lifelineIntervalMs < blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.lifelineIntervalMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4523, "DataNode.instance.dnConf.restartReplicaExpiry < blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.restartReplicaExpiry"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4524, "DataNode.instance.dnConf.socketKeepaliveTimeout < blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketKeepaliveTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4525, "DataNode.instance.dnConf.socketTimeout < blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4526, "DataNode.instance.xserver.balanceThrottler.maxThreads < blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.maxThreads"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4527, "DataNode.instance.xserver.balanceThrottler.periodExtension < blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.periodExtension"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4528, "DataNode.instance.xserver.maxXceiverCount < blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.maxXceiverCount"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4529, "NameNode.instance.DEFAULT_PORT < blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.DEFAULT_PORT"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4530, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE < blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4531, "NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses < blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4532, "NameNode.instance.namesystem.cacheManager.scanIntervalMs < blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.scanIntervalMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4533, "NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4534, "NameNode.instance.namesystem.dir.xattrMaxSize < blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.xattrMaxSize"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4535, "NameNode.instance.namesystem.leaseRecheckIntervalMs < blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseRecheckIntervalMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4536, "NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs < blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4537, "NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH < blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4538, "NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit < blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4539, "blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER < blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4540, "blockManagerInstance.blockReportLeaseManager.maxPending < blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.maxPending"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4541, "blockManagerInstance.bmSafeMode.startTime > blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4542, "blockManagerInstance.datanodeManager.defaultInfoPort < blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoPort"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4543, "blockManagerInstance.datanodeManager.defaultInfoSecurePort < blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoSecurePort"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4544, "blockManagerInstance.datanodeManager.defaultIpcPort < blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultIpcPort"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4545, "blockManagerInstance.datanodeManager.defaultXferPort < blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultXferPort"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4546, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed < blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4547, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed > blockManagerInstance.neededReconstruction.LEVEL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.LEVEL"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4548, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4549, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4550, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4551, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4552, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed > blockManagerInstance.replQueueResetToHeadThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueResetToHeadThreshold"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4553, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed > blockManagerInstance.storagePolicySuite.defaultPolicyID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.storagePolicySuite.defaultPolicyID"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4554, "26762453 * DataNode.instance.data.asyncDiskService.numDeletedBlocks - 16 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos + 442804352 * daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE) + 1.891495910354898E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (26762453 * ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() - 16 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() + 442804352 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))) + 1.891495910354898E15 == 0);
			}
		});
		invariants4999.add(new Invariant(4555, "blockManagerInstance.lastRedundancyCycleTS == 118222681 || blockManagerInstance.lastRedundancyCycleTS == 118225681"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118222681 || ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118225681);
			}
		});
		invariants4999.add(new Invariant(4556, "blockManagerInstance.replQueueCallsSinceReset == 7 || blockManagerInstance.replQueueCallsSinceReset == 8"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue() == 7 || ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue() == 8);
			}
		});
		invariants4999.add(new Invariant(4557, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME == NameNode.instance.namesystem.snapshotManager.snapshotCounter"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4558, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.cacheManager.numBlocksCached) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, NameNode.instance.namesystem.snapshotManager.snapshotCounter-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshotCounter"))).intValue()-1));
			}
		});
		invariants4999.add(new Invariant(4559, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == 42 || DataNode.instance.data.asyncDiskService.numDeletedBlocks == 56"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == 42 || ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == 56);
			}
		});
		invariants4999.add(new Invariant(4560, "DataNode.instance.id.infoPort == 41027"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() == 41027);
			}
		});
		invariants4999.add(new Invariant(4561, "DataNode.instance.id.ipcPort == 37053"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() == 37053);
			}
		});
		invariants4999.add(new Invariant(4562, "DataNode.instance.id.nsInfo.cTime == 1731382064143L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() == 1731382064143L);
			}
		});
		invariants4999.add(new Invariant(4563, "DataNode.instance.id.nsInfo.namespaceID == 1935513821"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() == 1935513821);
			}
		});
		invariants4999.add(new Invariant(4564, "DataNode.instance.id.xferPort == 38245"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() == 38245);
			}
		});
		invariants4999.add(new Invariant(4565, "DataNode.instance.lastDiskErrorCheck == 118172871"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() == 118172871);
			}
		});
		invariants4999.add(new Invariant(4566, "DataNode.instance.volumeChecker.lastAllVolumesCheck == 118172865"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() == 118172865);
			}
		});
		invariants4999.add(new Invariant(4567, "DataNode.instance.xserver.balanceThrottler.curPeriodStart == 118172040"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() == 118172040);
			}
		});
		invariants4999.add(new Invariant(4568, "NameNode.instance.namesystem.lazyPersistFileScrubberTS == 118171973"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() == 118171973);
			}
		});
		invariants4999.add(new Invariant(4569, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime == 118170466"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() == 118170466);
			}
		});
		invariants4999.add(new Invariant(4570, "NameNode.instance.namesystem.startTime == 1731382065558L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() == 1731382065558L);
			}
		});
		invariants4999.add(new Invariant(4571, "blockManagerInstance.blockReportLeaseManager.nextId == 2200808785020884386L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() == 2200808785020884386L);
			}
		});
		invariants4999.add(new Invariant(4572, "blockManagerInstance.bmSafeMode.startTime == 118171185"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() == 118171185);
			}
		});
		invariants4999.add(new Invariant(4573, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 197886 || blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 263990"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 197886 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 263990);
			}
		});
		invariants4999.add(new Invariant(4574, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 93308002304L || blockManagerInstance.heartbeatManager.stats.capacityRemaining == 93319684096L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 93308002304L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 93319684096L);
			}
		});
		invariants4999.add(new Invariant(4575, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 33908357890L || blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 33919973578L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 33908357890L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 33919973578L);
			}
		});
		invariants4999.add(new Invariant(4576, "blockManagerInstance.invalidateBlocks.startupTime == 118170468"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue() == 118170468);
			}
		});
		invariants4999.add(new Invariant(4577, "blockManagerInstance.lastRedundancyCycleTS == 118186187"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118186187);
			}
		});
		invariants4999.add(new Invariant(4578, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4579, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == 30"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == 30);
			}
		});
		invariants4999.add(new Invariant(4580, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache == 94"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() == 94);
			}
		});
		invariants4999.add(new Invariant(4581, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 247464"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 247464);
			}
		});
		invariants4999.add(new Invariant(4582, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 93281861632L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 93281861632L);
			}
		});
		invariants4999.add(new Invariant(4583, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 33946130776L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 33946130776L);
			}
		});
		invariants4999.add(new Invariant(4584, "blockManagerInstance.lastRedundancyCycleTS == 118195188"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118195188);
			}
		});
		invariants4999.add(new Invariant(4585, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == 42"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == 42);
			}
		});
		invariants4999.add(new Invariant(4586, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 197886"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 197886);
			}
		});
		invariants4999.add(new Invariant(4587, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 93319684096L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 93319684096L);
			}
		});
		invariants4999.add(new Invariant(4588, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 33908357890L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 33908357890L);
			}
		});
		invariants4999.add(new Invariant(4589, "DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION == blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4590, "DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION == blockManagerInstance.heartbeatManager.stats.xceiverCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.xceiverCount"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4591, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME == DataNode.instance.data.asyncDiskService.numDeletedBlocks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4592, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME == DataNode.instance.data.cacheManager.numBlocksFailedToUncache"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4593, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.volsConfigured) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue()-1));
			}
		});
		invariants4999.add(new Invariant(4594, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.volsConfigured) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, blockManagerInstance.heartbeatManager.stats.xceiverCount-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.xceiverCount"))).intValue()-1));
			}
		});
		invariants4999.add(new Invariant(4595, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 173097"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 173097);
			}
		});
		invariants4999.add(new Invariant(4596, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 93344837632L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 93344837632L);
			}
		});
		invariants4999.add(new Invariant(4597, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 33883225047L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 33883225047L);
			}
		});
		invariants4999.add(new Invariant(4598, "blockManagerInstance.lastRedundancyCycleTS == 118177186"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118177186);
			}
		});
		invariants4999.add(new Invariant(4599, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == 36 || DataNode.instance.data.asyncDiskService.numDeletedBlocks == 42"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == 36 || ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == 42);
			}
		});
		invariants4999.add(new Invariant(4600, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 93319684096L || blockManagerInstance.heartbeatManager.stats.capacityRemaining == 93329858560L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 93319684096L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 93329858560L);
			}
		});
		invariants4999.add(new Invariant(4601, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 33898183426L || blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 33908357890L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 33898183426L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 33908357890L);
			}
		});
		invariants4999.add(new Invariant(4602, "blockManagerInstance.lastRedundancyCycleTS == 118183187"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118183187);
			}
		});
		invariants4999.add(new Invariant(4603, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == 36"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == 36);
			}
		});
		invariants4999.add(new Invariant(4604, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 93329858560L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 93329858560L);
			}
		});
		invariants4999.add(new Invariant(4605, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 33898183426L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 33898183426L);
			}
		});
		invariants4999.add(new Invariant(4606, "blockManagerInstance.lastRedundancyCycleTS == 118180186 || blockManagerInstance.lastRedundancyCycleTS == 118183187"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118180186 || ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118183187);
			}
		});
		invariants4999.add(new Invariant(4607, "blockManagerInstance.replQueueCallsSinceReset == 3 || blockManagerInstance.replQueueCallsSinceReset == 4"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue() == 3 || ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue() == 4);
			}
		});
		invariants4999.add(new Invariant(4608, "DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION <= blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4609, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME >= blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() >= ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4610, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME == blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4611, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME == blockManagerInstance.heartbeatManager.stats.xceiverCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.xceiverCount"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4612, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 263990"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 263990);
			}
		});
		invariants4999.add(new Invariant(4613, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 93338345472L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 93338345472L);
			}
		});
		invariants4999.add(new Invariant(4614, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 33889630410L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 33889630410L);
			}
		});
		invariants4999.add(new Invariant(4615, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == 56"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == 56);
			}
		});
		invariants4999.add(new Invariant(4616, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 93308002304L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 93308002304L);
			}
		});
		invariants4999.add(new Invariant(4617, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 33919973578L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 33919973578L);
			}
		});
		invariants4999.add(new Invariant(4618, "blockManagerInstance.lastRedundancyCycleTS == 118186187 || blockManagerInstance.lastRedundancyCycleTS == 118189187"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118186187 || ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118189187);
			}
		});
		invariants4999.add(new Invariant(4619, "blockManagerInstance.lastRedundancyCycleTS == 118180186"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118180186);
			}
		});
		invariants4999.add(new Invariant(4620, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.cacheManager.numBlocksCached) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, blockManagerInstance.replQueueCallsSinceReset-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue()-1));
			}
		});
		invariants4999.add(new Invariant(4621, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == 0 || DataNode.instance.data.asyncDiskService.numDeletedBlocks == 4"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == 4);
			}
		});
		invariants4999.add(new Invariant(4622, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 49152 || blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 173097"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 49152 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 173097);
			}
		});
		invariants4999.add(new Invariant(4623, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 93344837632L || blockManagerInstance.heartbeatManager.stats.capacityRemaining == 93352050688L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 93344837632L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 93352050688L);
			}
		});
		invariants4999.add(new Invariant(4624, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 33876140032L || blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 33883225047L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 33876140032L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 33883225047L);
			}
		});
		invariants4999.add(new Invariant(4625, "blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount == 1 || blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount == 3"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue() == 1 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue() == 3);
			}
		});
		invariants4999.add(new Invariant(4626, "blockManagerInstance.lastRedundancyCycleTS == 118174186"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118174186);
			}
		});
		invariants4999.add(new Invariant(4627, "DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION != DataNode.instance.data.asyncDiskService.numDeletedBlocks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue() != ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4628, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME != DataNode.instance.data.asyncDiskService.numDeletedBlocks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() != ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4629, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME <= blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4630, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME >= DataNode.instance.data.asyncDiskService.numDeletedBlocks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() >= ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4631, "DataNode.instance.data.asyncDiskService.numDeletedBlocks >= DataNode.instance.data.cacheManager.numBlocksCached"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() >= ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4632, "DataNode.instance.data.asyncDiskService.numDeletedBlocks != DataNode.instance.data.volsConfigured"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() != ((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4633, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < DataNode.instance.diskBalancer.bandwidth"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.diskBalancer.bandwidth"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4634, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < DataNode.instance.dnConf.bpReadyTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.bpReadyTimeout"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4635, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4636, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4637, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4638, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < blockManagerInstance.blockReportLeaseManager.maxPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.maxPending"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4639, "DataNode.instance.data.asyncDiskService.numDeletedBlocks != blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4640, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < blockManagerInstance.neededReconstruction.LEVEL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.LEVEL"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4641, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4642, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4643, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4644, "DataNode.instance.data.asyncDiskService.numDeletedBlocks < blockManagerInstance.storagePolicySuite.defaultPolicyID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.storagePolicySuite.defaultPolicyID"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4645, "DataNode.instance.data.cacheManager.numBlocksCached < blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4646, "blockManagerInstance.bmSafeMode.startTime > blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4647, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed > blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4648, "blockManagerInstance.heartbeatManager.stats.capacityRemaining > blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4649, "blockManagerInstance.heartbeatManager.stats.capacityTotal > blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4650, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs > blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4651, "blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount < blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4652, "blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount >= daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4653, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 93352050688L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 93352050688L);
			}
		});
		invariants4999.add(new Invariant(4654, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 33876140032L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 33876140032L);
			}
		});
		invariants4999.add(new Invariant(4655, "blockManagerInstance.lastRedundancyCycleTS == 118189187"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118189187);
			}
		});
		invariants4999.add(new Invariant(4656, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 93291855872L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 93291855872L);
			}
		});
		invariants4999.add(new Invariant(4657, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 33936053906L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 33936053906L);
			}
		});
		invariants4999.add(new Invariant(4658, "blockManagerInstance.lastRedundancyCycleTS == 118189187 || blockManagerInstance.lastRedundancyCycleTS == 118192188"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118189187 || ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118192188);
			}
		});
		invariants4999.add(new Invariant(4659, "blockManagerInstance.replQueueCallsSinceReset == 6 || blockManagerInstance.replQueueCallsSinceReset == 7"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue() == 6 || ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue() == 7);
			}
		});
		invariants4999.add(new Invariant(4660, "DataNode.instance.data.cacheManager.numBlocksFailedToUncache > blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4661, "blockManagerInstance.blockReportLeaseManager.maxPending <= blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.maxPending"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4662, "blockManagerInstance.neededReconstruction.LEVEL < blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.LEVEL"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4663, "blockManagerInstance.replQueueCallsSinceReset <= blockManagerInstance.storagePolicySuite.defaultPolicyID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.storagePolicySuite.defaultPolicyID"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4664, "blockManagerInstance.lastRedundancyCycleTS == 118192188"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118192188);
			}
		});
		invariants4999.add(new Invariant(4665, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos % DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() % ((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue() == 0);
			}
		});
		invariants4999.add(new Invariant(4666, "DataNode.instance.dnConf.allowNonLocalLazyPersist == NameNode.instance.rpcServer.serviceAuthEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.allowNonLocalLazyPersist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.rpcServer.serviceAuthEnabled"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4667, "DataNode.instance.dnConf.xceiverStopTimeout == NameNode.instance.namesystem.leaseManager.softLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.xceiverStopTimeout"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.softLimit"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4668, "blockManagerInstance.blockIdManager.legacyGenerationStampLimit == blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStampLimit"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4669, "blockManagerInstance.lastRedundancyCycleTS == daikon.Quant.size(DataNode.instance.directoryScanner.diffs_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("DataNode.instance.directoryScanner.diffs")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4670, "blockManagerInstance.lastRedundancyCycleTS == daikon.Quant.size(NameNode.instance.namesystem.cacheManager.directivesById_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.directivesById")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4671, "blockManagerInstance.lastRedundancyCycleTS == daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4672, "DataNode.instance.dnConf.socketTimeout == 100000000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketTimeout"))).intValue() == 100000000);
			}
		});
		invariants4999.add(new Invariant(4673, "DataNode.instance.dnConf.xceiverStopTimeout == 60000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.xceiverStopTimeout"))).intValue() == 60000);
			}
		});
		invariants4999.add(new Invariant(4674, "DataNode.instance.id.infoPort == 42451"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() == 42451);
			}
		});
		invariants4999.add(new Invariant(4675, "DataNode.instance.id.ipcPort == 36791"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() == 36791);
			}
		});
		invariants4999.add(new Invariant(4676, "DataNode.instance.id.nsInfo.cTime == 1731382035058L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() == 1731382035058L);
			}
		});
		invariants4999.add(new Invariant(4677, "DataNode.instance.id.nsInfo.namespaceID == 339153920"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() == 339153920);
			}
		});
		invariants4999.add(new Invariant(4678, "DataNode.instance.id.xferPort == 37849"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() == 37849);
			}
		});
		invariants4999.add(new Invariant(4679, "DataNode.instance.lastDiskErrorCheck == 118143719"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() == 118143719);
			}
		});
		invariants4999.add(new Invariant(4680, "DataNode.instance.storage.namespaceID == 339153920"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() == 339153920);
			}
		});
		invariants4999.add(new Invariant(4681, "DataNode.instance.volumeChecker.lastAllVolumesCheck == 117242846 || DataNode.instance.volumeChecker.lastAllVolumesCheck == 118143711"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() == 117242846 || ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() == 118143711);
			}
		});
		invariants4999.add(new Invariant(4682, "DataNode.instance.xserver.balanceThrottler.curPeriodStart == 118142858"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() == 118142858);
			}
		});
		invariants4999.add(new Invariant(4683, "NameNode.instance.namesystem.lazyPersistFileScrubberTS == 118142173"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() == 118142173);
			}
		});
		invariants4999.add(new Invariant(4684, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime == 118141475"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() == 118141475);
			}
		});
		invariants4999.add(new Invariant(4685, "NameNode.instance.namesystem.startTime == 1731382036567L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() == 1731382036567L);
			}
		});
		invariants4999.add(new Invariant(4686, "blockManagerInstance.blockReportLeaseManager.nextId == -5387487438547939749L || blockManagerInstance.blockReportLeaseManager.nextId == -5387487438547939748L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() == -5387487438547939749L || ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() == -5387487438547939748L);
			}
		});
		invariants4999.add(new Invariant(4687, "blockManagerInstance.bmSafeMode.startTime == 0 || blockManagerInstance.bmSafeMode.startTime == 118142134"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() == 118142134);
			}
		});
		invariants4999.add(new Invariant(4688, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 0 || blockManagerInstance.heartbeatManager.stats.capacityRemaining == 93431128064L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 93431128064L);
			}
		});
		invariants4999.add(new Invariant(4689, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 0 || blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 33797062656L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 33797062656L);
			}
		});
		invariants4999.add(new Invariant(4690, "blockManagerInstance.invalidateBlocks.startupTime == 118141477"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue() == 118141477);
			}
		});
		invariants4999.add(new Invariant(4691, "DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME >= DataNode.instance.volumeChecker.numSyncDatasetChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME"))).intValue() >= ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4692, "DataNode.instance.data.cacheManager.numBlocksCached <= DataNode.instance.volumeChecker.numSyncDatasetChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() <= ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4693, "DataNode.instance.dnConf.xceiverStopTimeout < DataNode.instance.volumeChecker.lastAllVolumesCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.xceiverStopTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4694, "DataNode.instance.dnConf.xceiverStopTimeout > DataNode.instance.volumeChecker.numSyncDatasetChecks"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.xceiverStopTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4695, "DataNode.instance.dnConf.xceiverStopTimeout < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.xceiverStopTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4696, "DataNode.instance.dnConf.xceiverStopTimeout > blockManagerInstance.blockReportLeaseManager.nextId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.xceiverStopTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4697, "DataNode.instance.dnConf.xceiverStopTimeout > blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.xceiverStopTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4698, "DataNode.instance.dnConf.xceiverStopTimeout < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.xceiverStopTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4699, "DataNode.instance.dnConf.xceiverStopTimeout > blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.xceiverStopTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4700, "DataNode.instance.dnConf.xceiverStopTimeout != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.xceiverStopTimeout"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4701, "DataNode.instance.dnConf.xceiverStopTimeout != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.xceiverStopTimeout"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4702, "DataNode.instance.dnConf.xceiverStopTimeout != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.xceiverStopTimeout"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4703, "DataNode.instance.dnConf.xceiverStopTimeout > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.xceiverStopTimeout"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4704, "DataNode.instance.dnConf.xceiverStopTimeout > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.xceiverStopTimeout"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4705, "DataNode.instance.dnConf.xceiverStopTimeout > daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.xceiverStopTimeout"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4706, "blockManagerInstance.lastRedundancyCycleTS <= daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4707, "blockManagerInstance.lastRedundancyCycleTS <= daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4708, "49152 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 1628964911 * blockManagerInstance.heartbeatManager.stats.blockPoolUsed - 8.751015395328E12 * daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE) - 5.8069240885460828E18 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (49152 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 1628964911 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() - 8.751015395328E12 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))) - 5.8069240885460828E18 == 0);
			}
		});
		invariants4999.add(new Invariant(4709, "49152 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 1628964911 * blockManagerInstance.heartbeatManager.stats.blockPoolUsed - 8.751015395328E12 * daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)-1 - 5.8069328395614781E18 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (49152 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 1628964911 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() - 8.751015395328E12 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0])))-1 - 5.8069328395614781E18 == 0);
			}
		});
		invariants4999.add(new Invariant(4710, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 1628964911 * blockManagerInstance.heartbeatManager.stats.nodesInService - 178039864 * daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE) - 1.18142173025433E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 1628964911 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() - 178039864 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))) - 1.18142173025433E14 == 0);
			}
		});
		invariants4999.add(new Invariant(4711, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 1628964911 * blockManagerInstance.heartbeatManager.stats.nodesInService - 178039864 * daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)-1 - 1.18142351065297E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 1628964911 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() - 178039864 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0])))-1 - 1.18142351065297E14 == 0);
			}
		});
		invariants4999.add(new Invariant(4712, "DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION == blockManagerInstance.defaultReplication"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.defaultReplication"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4713, "DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME == blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.MAXIMUM_THREADS_PER_VOLUME"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4714, "DataNode.instance.data.fsRunning == NameNode.instance.namesystem.dir.aclsEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.data.fsRunning"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.aclsEnabled"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4715, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.volsConfigured) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, blockManagerInstance.defaultReplication-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.defaultReplication"))).intValue()-1));
			}
		});
		invariants4999.add(new Invariant(4716, "DataNode.instance.id.infoPort == 40235"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() == 40235);
			}
		});
		invariants4999.add(new Invariant(4717, "DataNode.instance.id.ipcPort == 33079"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() == 33079);
			}
		});
		invariants4999.add(new Invariant(4718, "DataNode.instance.id.nsInfo.cTime == 1731382012048L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() == 1731382012048L);
			}
		});
		invariants4999.add(new Invariant(4719, "DataNode.instance.id.nsInfo.namespaceID == 1505413540"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() == 1505413540);
			}
		});
		invariants4999.add(new Invariant(4720, "DataNode.instance.id.xferPort == 35169"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() == 35169);
			}
		});
		invariants4999.add(new Invariant(4721, "DataNode.instance.lastDiskErrorCheck == 118121267"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() == 118121267);
			}
		});
		invariants4999.add(new Invariant(4722, "DataNode.instance.volumeChecker.lastAllVolumesCheck == 118121257"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() == 118121257);
			}
		});
		invariants4999.add(new Invariant(4723, "DataNode.instance.xserver.balanceThrottler.curPeriodStart == 118120521"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() == 118120521);
			}
		});
		invariants4999.add(new Invariant(4724, "NameNode.instance.namesystem.lazyPersistFileScrubberTS == 118119153"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() == 118119153);
			}
		});
		invariants4999.add(new Invariant(4725, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime == 118118369"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() == 118118369);
			}
		});
		invariants4999.add(new Invariant(4726, "NameNode.instance.namesystem.startTime == 1731382013461L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() == 1731382013461L);
			}
		});
		invariants4999.add(new Invariant(4727, "blockManagerInstance.blockReportLeaseManager.nextId == 9007290290417269674L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() == 9007290290417269674L);
			}
		});
		invariants4999.add(new Invariant(4728, "blockManagerInstance.bmSafeMode.startTime == 118119111"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() == 118119111);
			}
		});
		invariants4999.add(new Invariant(4729, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 196608"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 196608);
			}
		});
		invariants4999.add(new Invariant(4730, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 373812035584L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 373812035584L);
			}
		});
		invariants4999.add(new Invariant(4731, "blockManagerInstance.heartbeatManager.stats.capacityTotal == 536400723968L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue() == 536400723968L);
			}
		});
		invariants4999.add(new Invariant(4732, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 135100727296L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 135100727296L);
			}
		});
		invariants4999.add(new Invariant(4733, "blockManagerInstance.invalidateBlocks.startupTime == 118118371"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue() == 118118371);
			}
		});
		invariants4999.add(new Invariant(4734, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == DataNode.instance.storage.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4735, "DataNode.instance.id.infoPort == 45941"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() == 45941);
			}
		});
		invariants4999.add(new Invariant(4736, "DataNode.instance.id.ipcPort == 35761"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() == 35761);
			}
		});
		invariants4999.add(new Invariant(4737, "DataNode.instance.id.xferPort == 34161"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() == 34161);
			}
		});
		invariants4999.add(new Invariant(4738, "DataNode.instance.lastDiskErrorCheck == 118127384"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() == 118127384);
			}
		});
		invariants4999.add(new Invariant(4739, "DataNode.instance.volumeChecker.lastAllVolumesCheck == 118127379"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() == 118127379);
			}
		});
		invariants4999.add(new Invariant(4740, "DataNode.instance.xserver.balanceThrottler.curPeriodStart == 118127075"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() == 118127075);
			}
		});
		invariants4999.add(new Invariant(4741, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE == 28"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() == 28);
			}
		});
		invariants4999.add(new Invariant(4742, "NameNode.instance.namesystem.fsImage.lastAppliedTxId == 98"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() == 98);
			}
		});
		invariants4999.add(new Invariant(4743, "NameNode.instance.namesystem.lazyPersistFileScrubberTS == 118126887"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() == 118126887);
			}
		});
		invariants4999.add(new Invariant(4744, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime == 118126525"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() == 118126525);
			}
		});
		invariants4999.add(new Invariant(4745, "NameNode.instance.namesystem.startTime == 1731382021617L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() == 1731382021617L);
			}
		});
		invariants4999.add(new Invariant(4746, "blockManagerInstance.blockReportLeaseManager.nextId == -1610548108126793778L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() == -1610548108126793778L);
			}
		});
		invariants4999.add(new Invariant(4747, "blockManagerInstance.bmSafeMode.startTime == 118126851"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() == 118126851);
			}
		});
		invariants4999.add(new Invariant(4748, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 197259"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 197259);
			}
		});
		invariants4999.add(new Invariant(4749, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 373776711680L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 373776711680L);
			}
		});
		invariants4999.add(new Invariant(4750, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 135136050549L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 135136050549L);
			}
		});
		invariants4999.add(new Invariant(4751, "blockManagerInstance.invalidateBlocks.startupTime == 118126527"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue() == 118126527);
			}
		});
		invariants4999.add(new Invariant(4752, "NameNode.instance.namesystem.fsImage.lastAppliedTxId < NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4753, "NameNode.instance.namesystem.fsImage.lastAppliedTxId > daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4754, "DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME == DataNode.instance.data.cacheManager.numBlocksFailedToUncache"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4755, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.numDeletedBlocks) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.cacheManager.numBlocksFailedToUncache-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue()-1));
			}
		});
		invariants4999.add(new Invariant(4756, "DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION == NameNode.instance.namesystem.editLogTailer.maxRetries"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.maxRetries"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4757, "DataNode.instance.directoryScanner.MILLIS_PER_SECOND == DataNode.instance.dnConf.heartBeatInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.MILLIS_PER_SECOND"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.heartBeatInterval"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4758, "DataNode.instance.directoryScanner.diffs.serialVersionUID == DataNode.instance.id.nsInfo.CAPABILITIES_SUPPORTED"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.diffs.serialVersionUID"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.CAPABILITIES_SUPPORTED"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4759, "DataNode.instance.directoryScanner.diffs.serialVersionUID == DataNode.instance.id.nsInfo.capabilities"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.diffs.serialVersionUID"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.capabilities"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4760, "DataNode.instance.directoryScanner.shouldRun == NameNode.instance.namesystem.fsRunning"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.directoryScanner.shouldRun"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.fsRunning"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4761, "DataNode.instance.dnConf.allowNonLocalLazyPersist == NameNode.instance.namesystem.editLogTailer.inProgressOk"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.allowNonLocalLazyPersist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.inProgressOk"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4762, "DataNode.instance.dnConf.allowNonLocalLazyPersist == NameNode.instance.namesystem.leaseManager.shouldRunMonitor"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.allowNonLocalLazyPersist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.shouldRunMonitor"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4763, "DataNode.instance.dnConf.allowNonLocalLazyPersist == NameNode.instance.namesystem.standbyShouldCheckpoint"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.allowNonLocalLazyPersist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.standbyShouldCheckpoint"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4764, "DataNode.instance.dnConf.allowNonLocalLazyPersist == NameNode.instance.state.isObserver"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.allowNonLocalLazyPersist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.state.isObserver"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4765, "DataNode.instance.dnConf.allowNonLocalLazyPersist == blockManagerInstance.bmSafeMode.inRollBack"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.allowNonLocalLazyPersist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.inRollBack"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4766, "DataNode.instance.dnConf.allowNonLocalLazyPersist == blockManagerInstance.datanodeManager.avoidStaleDataNodesForRead"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.allowNonLocalLazyPersist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.avoidStaleDataNodesForRead"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4767, "DataNode.instance.dnConf.allowNonLocalLazyPersist == blockManagerInstance.datanodeManager.avoidStaleDataNodesForWrite"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.allowNonLocalLazyPersist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.avoidStaleDataNodesForWrite"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4768, "DataNode.instance.dnConf.allowNonLocalLazyPersist == blockManagerInstance.datanodeManager.dataNodeDiskStatsEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.allowNonLocalLazyPersist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.dataNodeDiskStatsEnabled"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4769, "DataNode.instance.dnConf.allowNonLocalLazyPersist == blockManagerInstance.datanodeManager.dataNodePeerStatsEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.allowNonLocalLazyPersist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.dataNodePeerStatsEnabled"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4770, "DataNode.instance.dnConf.allowNonLocalLazyPersist == blockManagerInstance.datanodeManager.hasClusterEverBeenMultiRack"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.allowNonLocalLazyPersist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.hasClusterEverBeenMultiRack"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4771, "DataNode.instance.dnConf.allowNonLocalLazyPersist == blockManagerInstance.datanodeManager.heartbeatManager.enableLogStaleNodes"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.allowNonLocalLazyPersist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatManager.enableLogStaleNodes"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4772, "DataNode.instance.dnConf.allowNonLocalLazyPersist == blockManagerInstance.datanodeManager.rejectUnresolvedTopologyDN"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.allowNonLocalLazyPersist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.rejectUnresolvedTopologyDN"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4773, "DataNode.instance.dnConf.allowNonLocalLazyPersist == blockManagerInstance.datanodeManager.shouldSendCachingCommands"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.allowNonLocalLazyPersist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.shouldSendCachingCommands"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4774, "DataNode.instance.dnConf.allowNonLocalLazyPersist == blockManagerInstance.encryptDataTransfer"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.allowNonLocalLazyPersist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.encryptDataTransfer"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4775, "DataNode.instance.dnConf.allowNonLocalLazyPersist == blockManagerInstance.hasNonEcBlockUsingStripedID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.allowNonLocalLazyPersist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.hasNonEcBlockUsingStripedID"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4776, "DataNode.instance.dnConf.allowNonLocalLazyPersist == blockManagerInstance.heartbeatManager.enableLogStaleNodes"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.allowNonLocalLazyPersist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.enableLogStaleNodes"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4777, "DataNode.instance.dnConf.allowNonLocalLazyPersist == blockManagerInstance.initializedReplQueues"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.allowNonLocalLazyPersist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.initializedReplQueues"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4778, "DataNode.instance.dnConf.allowNonLocalLazyPersist == blockManagerInstance.providedStorageMap.providedEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.allowNonLocalLazyPersist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.providedStorageMap.providedEnabled"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4779, "DataNode.instance.dnConf.heartBeatInterval == NameNode.instance.namesystem.blockDeletionIncrement"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.heartBeatInterval"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.blockDeletionIncrement"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4780, "DataNode.instance.dnConf.heartBeatInterval == NameNode.instance.namesystem.dir.lsLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.heartBeatInterval"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.lsLimit"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4781, "DataNode.instance.dnConf.heartBeatInterval == NameNode.instance.namesystem.edekCacheLoaderInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.heartBeatInterval"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.edekCacheLoaderInterval"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4782, "DataNode.instance.dnConf.heartBeatInterval == NameNode.instance.namesystem.editLogTailer.sleepTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.heartBeatInterval"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.sleepTimeMs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4783, "DataNode.instance.dnConf.heartBeatInterval == NameNode.instance.namesystem.maxListOpenFilesResponses"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.heartBeatInterval"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.maxListOpenFilesResponses"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4784, "DataNode.instance.dnConf.heartBeatInterval == NameNode.instance.namesystem.snapshotDiffReportLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.heartBeatInterval"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotDiffReportLimit"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4785, "DataNode.instance.dnConf.heartBeatInterval == blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.heartBeatInterval"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4786, "DataNode.instance.dnConf.heartBeatInterval == blockManagerInstance.blockIdManager.impendingGenerationStamp.LAST_RESERVED_STAMP"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.heartBeatInterval"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.impendingGenerationStamp.LAST_RESERVED_STAMP"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4787, "DataNode.instance.dnConf.heartBeatInterval == blockManagerInstance.blockIdManager.legacyGenerationStamp.LAST_RESERVED_STAMP"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.heartBeatInterval"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.legacyGenerationStamp.LAST_RESERVED_STAMP"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4788, "DataNode.instance.dnConf.heartBeatInterval == blockManagerInstance.datanodeManager.blockInvalidateLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.heartBeatInterval"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.blockInvalidateLimit"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4789, "DataNode.instance.dnConf.heartBeatInterval == blockManagerInstance.invalidateBlocks.blockInvalidateLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.heartBeatInterval"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.blockInvalidateLimit"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4790, "DataNode.instance.dnConf.heartBeatInterval == blockManagerInstance.maxNumBlocksToLog"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.heartBeatInterval"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.maxNumBlocksToLog"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4791, "DataNode.instance.dnConf.ibrInterval == NameNode.instance.namesystem.editLogTailer.lastLoadedTxnId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadedTxnId"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4792, "DataNode.instance.dnConf.ibrInterval == NameNode.instance.namesystem.editLogTailer.maxSleepTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.maxSleepTimeMs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4793, "DataNode.instance.dnConf.ibrInterval == NameNode.instance.namesystem.editLogTailer.nnCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.nnCount"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4794, "DataNode.instance.dnConf.ibrInterval == NameNode.instance.namesystem.editLogTailer.nnLoopCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.nnLoopCount"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4795, "DataNode.instance.dnConf.ibrInterval == NameNode.instance.namesystem.lazyPersistFileScrubberTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4796, "DataNode.instance.dnConf.ibrInterval == blockManagerInstance.blockReportLeaseManager.deferredHead.leaseId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.deferredHead.leaseId"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4797, "DataNode.instance.dnConf.ibrInterval == blockManagerInstance.blockReportLeaseManager.deferredHead.leaseTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.deferredHead.leaseTimeMs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4798, "DataNode.instance.dnConf.ibrInterval == blockManagerInstance.blockReportLeaseManager.numPending"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4799, "DataNode.instance.dnConf.ibrInterval == blockManagerInstance.blockReportLeaseManager.pendingHead.leaseId"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.pendingHead.leaseId"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4800, "DataNode.instance.dnConf.ibrInterval == blockManagerInstance.blockReportLeaseManager.pendingHead.leaseTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.pendingHead.leaseTimeMs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4801, "DataNode.instance.dnConf.ibrInterval == blockManagerInstance.blockReportThread.lastFull"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportThread.lastFull"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4802, "DataNode.instance.dnConf.ibrInterval == blockManagerInstance.bmSafeMode.blockReplQueueThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.blockReplQueueThreshold"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4803, "DataNode.instance.dnConf.ibrInterval == blockManagerInstance.bmSafeMode.blockSafe"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.blockSafe"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4804, "DataNode.instance.dnConf.ibrInterval == blockManagerInstance.bmSafeMode.blockThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.blockThreshold"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4805, "DataNode.instance.dnConf.ibrInterval == blockManagerInstance.bmSafeMode.blockTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.blockTotal"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4806, "DataNode.instance.dnConf.ibrInterval == blockManagerInstance.bmSafeMode.datanodeThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.datanodeThreshold"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4807, "DataNode.instance.dnConf.ibrInterval == blockManagerInstance.bmSafeMode.extension"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.extension"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4808, "DataNode.instance.dnConf.ibrInterval == blockManagerInstance.bmSafeMode.lastStatusReport"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.lastStatusReport"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4809, "DataNode.instance.dnConf.ibrInterval == blockManagerInstance.bmSafeMode.reachedTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.reachedTime"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4810, "DataNode.instance.dnConf.ibrInterval == blockManagerInstance.corruptReplicaBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.corruptReplicaBlocksCount"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4811, "DataNode.instance.dnConf.ibrInterval == blockManagerInstance.datanodeManager.numStaleNodes"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.numStaleNodes"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4812, "DataNode.instance.dnConf.ibrInterval == blockManagerInstance.datanodeManager.numStaleStorages"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.numStaleStorages"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4813, "DataNode.instance.dnConf.ibrInterval == blockManagerInstance.excessRedundancyMap.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.excessRedundancyMap.size"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4814, "DataNode.instance.dnConf.ibrInterval == blockManagerInstance.heartbeatManager.stats.cacheCapacity"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.cacheCapacity"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4815, "DataNode.instance.dnConf.ibrInterval == blockManagerInstance.heartbeatManager.stats.cacheUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.cacheUsed"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4816, "DataNode.instance.dnConf.ibrInterval == blockManagerInstance.heartbeatManager.stats.expiredHeartbeats"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.expiredHeartbeats"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4817, "DataNode.instance.dnConf.ibrInterval == blockManagerInstance.invalidateBlocks.blockIdManager.legacyGenerationStampLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.blockIdManager.legacyGenerationStampLimit"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4818, "DataNode.instance.dnConf.ibrInterval == blockManagerInstance.invalidateBlocks.pendingPeriodInMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.pendingPeriodInMs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4819, "DataNode.instance.dnConf.ibrInterval == blockManagerInstance.lowRedundancyBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.lowRedundancyBlocksCount"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4820, "DataNode.instance.dnConf.ibrInterval == blockManagerInstance.neededReconstruction.QUEUE_HIGHEST_PRIORITY"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.QUEUE_HIGHEST_PRIORITY"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4821, "DataNode.instance.dnConf.ibrInterval == blockManagerInstance.pendingDNMessages.count"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingDNMessages.count"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4822, "DataNode.instance.dnConf.ibrInterval == blockManagerInstance.pendingReconstruction.timedOutCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingReconstruction.timedOutCount"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4823, "DataNode.instance.dnConf.ibrInterval == blockManagerInstance.pendingReconstructionBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingReconstructionBlocksCount"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4824, "DataNode.instance.dnConf.ibrInterval == blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.modification"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.modification"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4825, "DataNode.instance.dnConf.ibrInterval == blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.size"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.size"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4826, "DataNode.instance.dnConf.ibrInterval == blockManagerInstance.providedStorageMap.capacity"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.providedStorageMap.capacity"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4827, "DataNode.instance.dnConf.ibrInterval == blockManagerInstance.providedStorageMap.defaultReplication"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.providedStorageMap.defaultReplication"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4828, "DataNode.instance.dnConf.ibrInterval == blockManagerInstance.replQueueCallsSinceReset"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4829, "DataNode.instance.dnConf.ibrInterval == blockManagerInstance.scheduledReplicationBlocksCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.scheduledReplicationBlocksCount"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4830, "DataNode.instance.dnConf.ibrInterval == blockManagerInstance.startupDelayBlockDeletionInMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.startupDelayBlockDeletionInMs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4831, "DataNode.instance.dnConf.ibrInterval == daikon.Quant.size(DataNode.instance.directoryScanner.diffs_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("DataNode.instance.directoryScanner.diffs")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4832, "DataNode.instance.dnConf.ibrInterval == daikon.Quant.size(NameNode.instance.namesystem.cacheManager.directivesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.directivesById")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4833, "DataNode.instance.dnConf.ibrInterval == daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4834, "DataNode.instance.dnConf.ibrInterval == daikon.Quant.size(NameNode.instance.namesystem.snapshotManager.snapshottables_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.snapshottables")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4835, "DataNode.instance.dnConf.lifelineIntervalMs == NameNode.instance.namesystem.edekCacheLoaderDelay"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.lifelineIntervalMs"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.edekCacheLoaderDelay"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4836, "DataNode.instance.dnConf.lifelineIntervalMs == blockManagerInstance.redundancyRecheckIntervalMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.lifelineIntervalMs"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.redundancyRecheckIntervalMs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4837, "DataNode.instance.dnConf.pmemCacheRecoveryEnabled == NameNode.instance.haEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.pmemCacheRecoveryEnabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.haEnabled"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4838, "DataNode.instance.dnConf.pmemCacheRecoveryEnabled == NameNode.instance.namesystem.dir.skipQuotaCheck"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.pmemCacheRecoveryEnabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.skipQuotaCheck"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4839, "DataNode.instance.dnConf.pmemCacheRecoveryEnabled == NameNode.instance.namesystem.haEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.pmemCacheRecoveryEnabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.haEnabled"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4840, "DataNode.instance.dnConf.pmemCacheRecoveryEnabled == blockManagerInstance.bmSafeMode.haEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.pmemCacheRecoveryEnabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.haEnabled"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4841, "DataNode.instance.dnConf.pmemCacheRecoveryEnabled == blockManagerInstance.datanodeManager.checkIpHostnameInRegistration"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.pmemCacheRecoveryEnabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.checkIpHostnameInRegistration"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4842, "DataNode.instance.dnConf.pmemCacheRecoveryEnabled == blockManagerInstance.datanodeManager.useDfsNetworkTopology"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.pmemCacheRecoveryEnabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.useDfsNetworkTopology"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4843, "DataNode.instance.dnConf.pmemCacheRecoveryEnabled == blockManagerInstance.pendingReconstruction.fsRunning"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.pmemCacheRecoveryEnabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.pendingReconstruction.fsRunning"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4844, "DataNode.instance.dnConf.pmemCacheRecoveryEnabled == blockManagerInstance.placementPolicies.ecPolicy.considerLoad"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.pmemCacheRecoveryEnabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.placementPolicies.ecPolicy.considerLoad"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4845, "DataNode.instance.dnConf.pmemCacheRecoveryEnabled == blockManagerInstance.placementPolicies.ecPolicy.preferLocalNode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.pmemCacheRecoveryEnabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.placementPolicies.ecPolicy.preferLocalNode"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4846, "DataNode.instance.dnConf.pmemCacheRecoveryEnabled == blockManagerInstance.placementPolicies.replicationPolicy.considerLoad"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.pmemCacheRecoveryEnabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.placementPolicies.replicationPolicy.considerLoad"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4847, "DataNode.instance.dnConf.pmemCacheRecoveryEnabled == blockManagerInstance.placementPolicies.replicationPolicy.preferLocalNode"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.pmemCacheRecoveryEnabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.placementPolicies.replicationPolicy.preferLocalNode"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4848, "DataNode.instance.dnConf.socketTimeout == NameNode.instance.namesystem.editLogTailer.rollEditsTimeoutMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketTimeout"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.rollEditsTimeoutMs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4849, "DataNode.instance.dnConf.volsConfigured == blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.sequenceNumber"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.volsConfigured"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.sequenceNumber"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4850, "DataNode.instance.dnConf.volsConfigured == blockManagerInstance.maxReplicationStreams"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.volsConfigured"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.maxReplicationStreams"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4851, "DataNode.instance.dnConf.volsConfigured == blockManagerInstance.neededReconstruction.QUEUE_LOW_REDUNDANCY"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.volsConfigured"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.QUEUE_LOW_REDUNDANCY"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4852, "DataNode.instance.dnConf.volsConfigured == blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.volsConfigured"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandMultiplier"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4853, "DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS == blockManagerInstance.datanodeManager.heartbeatIntervalSeconds"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatIntervalSeconds"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4854, "DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS == blockManagerInstance.defaultReplication"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.defaultReplication"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4855, "DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS == blockManagerInstance.neededReconstruction.QUEUE_VERY_LOW_REDUNDANCY"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.QUEUE_VERY_LOW_REDUNDANCY"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4856, "DataNode.instance.httpServer.HTTP_MAX_THREADS == blockManagerInstance.neededReconstruction.QUEUE_WITH_CORRUPT_BLOCKS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_MAX_THREADS"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.QUEUE_WITH_CORRUPT_BLOCKS"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4857, "DataNode.instance.httpServer.HTTP_MAX_THREADS == blockManagerInstance.placementPolicies.ecPolicy.tolerateHeartbeatMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_MAX_THREADS"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.placementPolicies.ecPolicy.tolerateHeartbeatMultiplier"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4858, "DataNode.instance.httpServer.HTTP_MAX_THREADS == blockManagerInstance.placementPolicies.replicationPolicy.tolerateHeartbeatMultiplier"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_MAX_THREADS"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.placementPolicies.replicationPolicy.tolerateHeartbeatMultiplier"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4859, "DataNode.instance.httpServer.HTTP_MAX_THREADS == blockManagerInstance.replicationStreamsHardLimit"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_MAX_THREADS"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.replicationStreamsHardLimit"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4860, "DataNode.instance.httpServer.HTTP_MAX_THREADS == blockManagerInstance.storageInfoDefragmentTimeout"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_MAX_THREADS"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.storageInfoDefragmentTimeout"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4861, "DataNode.instance.httpServer.HTTP_MAX_THREADS == blockManagerInstance.storagePolicySuite.ID_BIT_LENGTH"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_MAX_THREADS"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.storagePolicySuite.ID_BIT_LENGTH"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4862, "DataNode.instance.xserver.closed == NameNode.instance.stopRequested"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.xserver.closed"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("NameNode.instance.stopRequested"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4863, "NameNode.instance.namesystem.cacheManager.scanIntervalMs == blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.scanIntervalMs"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4864, "NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE == blockManagerInstance.heartbeatManager.REPORT_STALE_NODE_NODES_PER_LINE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.REPORT_STALE_NODE_NODES_PER_LINE"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4865, "NameNode.instance.namesystem.editLogTailer.DFS_HA_TAILEDITS_MAX_TXNS_PER_LOCK_DEFAULT == NameNode.instance.namesystem.editLogTailer.maxTxnsPerLock"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.DFS_HA_TAILEDITS_MAX_TXNS_PER_LOCK_DEFAULT"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.maxTxnsPerLock"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4866, "NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs == NameNode.instance.namesystem.editLogTailer.lastRollTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue() == ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastRollTimeMs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4867, "NameNode.instance.namesystem.editLogTailer.maxRetries == blockManagerInstance.neededReconstruction.QUEUE_REPLICAS_BADLY_DISTRIBUTED"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.maxRetries"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.QUEUE_REPLICAS_BADLY_DISTRIBUTED"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4868, "NameNode.instance.namesystem.editLogTailer.maxRetries == blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.shrinkThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.maxRetries"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.shrinkThreshold"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4869, "NameNode.instance.namesystem.editLogTailer.maxRetries == daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.maxRetries"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants4999.add(new Invariant(4870, "NameNode.instance.namesystem.fsRunning == blockManagerInstance.shouldPostponeBlocksFromFuture"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("NameNode.instance.namesystem.fsRunning"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.shouldPostponeBlocksFromFuture"))).booleanValue());
			}
		});
		invariants4999.add(new Invariant(4871, "blockManagerInstance.lastRedundancyCycleTS == daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0])))-1);
			}
		});
		invariants4999.add(new Invariant(4872, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.dnConf.ibrInterval) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.size)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.size"))).intValue()));
			}
		});
		invariants4999.add(new Invariant(4873, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.dnConf.ibrInterval) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, blockManagerInstance.bmSafeMode.safeReplication-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.safeReplication"))).intValue()-1));
			}
		});
		invariants4999.add(new Invariant(4874, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.dnConf.ibrInterval) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, blockManagerInstance.datanodeManager.heartbeatIntervalSeconds-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatIntervalSeconds"))).intValue()-1));
			}
		});
		invariants4999.add(new Invariant(4875, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.dnConf.ibrInterval) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, blockManagerInstance.defaultReplication-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.defaultReplication"))).intValue()-1));
			}
		});
		invariants4999.add(new Invariant(4876, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.dnConf.ibrInterval) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, blockManagerInstance.neededReconstruction.QUEUE_VERY_LOW_REDUNDANCY-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.QUEUE_VERY_LOW_REDUNDANCY"))).intValue()-1));
			}
		});
		invariants4999.add(new Invariant(4877, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.dnConf.volsConfigured) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, NameNode.instance.namesystem.editLogTailer.maxRetries-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.volsConfigured"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.maxRetries"))).intValue()-1));
			}
		});
		invariants4999.add(new Invariant(4878, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.dnConf.volsConfigured) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, blockManagerInstance.neededReconstruction.QUEUE_REPLICAS_BADLY_DISTRIBUTED-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.volsConfigured"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.QUEUE_REPLICAS_BADLY_DISTRIBUTED"))).intValue()-1));
			}
		});
		invariants4999.add(new Invariant(4879, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.dnConf.volsConfigured) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.shrinkThreshold-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.volsConfigured"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.shrinkThreshold"))).intValue()-1));
			}
		});
		invariants4999.add(new Invariant(4880, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, blockManagerInstance.blocksReplWorkMultiplier-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.blocksReplWorkMultiplier"))).intValue()-1));
			}
		});
		invariants4999.add(new Invariant(4881, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.sequenceNumber-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.sequenceNumber"))).intValue()-1));
			}
		});
		invariants4999.add(new Invariant(4882, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, blockManagerInstance.maxReplicationStreams-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.maxReplicationStreams"))).intValue()-1));
			}
		});
		invariants4999.add(new Invariant(4883, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, blockManagerInstance.neededReconstruction.QUEUE_LOW_REDUNDANCY-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.QUEUE_LOW_REDUNDANCY"))).intValue()-1));
			}
		});
		invariants4999.add(new Invariant(4884, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandMultiplier-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandMultiplier"))).intValue()-1));
			}
		});
		invariants4999.add(new Invariant(4885, "DataNode.instance.dnConf.heartBeatInterval == 1000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.heartBeatInterval"))).intValue() == 1000);
			}
		});
		invariants4999.add(new Invariant(4886, "DataNode.instance.dnConf.lifelineIntervalMs == 3000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.lifelineIntervalMs"))).intValue() == 3000);
			}
		});
		invariants4999.add(new Invariant(4887, "DataNode.instance.id.infoPort == 38463"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() == 38463);
			}
		});
		invariants4999.add(new Invariant(4888, "DataNode.instance.id.ipcPort == 41123"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() == 41123);
			}
		});
		invariants4999.add(new Invariant(4889, "DataNode.instance.id.nsInfo.cTime == 1731382268417L || DataNode.instance.id.nsInfo.cTime == 1731382273544L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() == 1731382268417L || ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() == 1731382273544L);
			}
		});
		invariants4999.add(new Invariant(4890, "DataNode.instance.id.nsInfo.namespaceID == 364058305 || DataNode.instance.id.nsInfo.namespaceID == 1079442884"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() == 364058305 || ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() == 1079442884);
			}
		});
		invariants4999.add(new Invariant(4891, "DataNode.instance.id.xferPort == 45205"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() == 45205);
			}
		});
		invariants4999.add(new Invariant(4892, "DataNode.instance.lastDiskErrorCheck == 118379332"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() == 118379332);
			}
		});
		invariants4999.add(new Invariant(4893, "DataNode.instance.storage.namespaceID == 0 || DataNode.instance.storage.namespaceID == 364058305 || DataNode.instance.storage.namespaceID == 1079442884"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() == 364058305 || ((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() == 1079442884);
			}
		});
		invariants4999.add(new Invariant(4894, "DataNode.instance.volumeChecker.lastAllVolumesCheck == 117478995 || DataNode.instance.volumeChecker.lastAllVolumesCheck == 118377438 || DataNode.instance.volumeChecker.lastAllVolumesCheck == 118379331"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() == 117478995 || ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() == 118377438 || ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() == 118379331);
			}
		});
		invariants4999.add(new Invariant(4895, "DataNode.instance.xserver.balanceThrottler.curPeriodStart == 118376621 || DataNode.instance.xserver.balanceThrottler.curPeriodStart == 118378997"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() == 118376621 || ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() == 118378997);
			}
		});
		invariants4999.add(new Invariant(4896, "NameNode.instance.ACTIVE_STATE.lastHATransitionTime == 1731382272856L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.ACTIVE_STATE.lastHATransitionTime"))).intValue() == 1731382272856L);
			}
		});
		invariants4999.add(new Invariant(4897, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE == 26 || NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE == 30"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() == 26 || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() == 30);
			}
		});
		invariants4999.add(new Invariant(4898, "NameNode.instance.namesystem.editLogTailer.DFS_HA_TAILEDITS_MAX_TXNS_PER_LOCK_DEFAULT == 9223372036854775807L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.DFS_HA_TAILEDITS_MAX_TXNS_PER_LOCK_DEFAULT"))).intValue() == 9223372036854775807L);
			}
		});
		invariants4999.add(new Invariant(4899, "NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs == 118376571 || NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs == 118378975"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue() == 118376571 || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue() == 118378975);
			}
		});
		invariants4999.add(new Invariant(4900, "NameNode.instance.namesystem.editLogTailer.lastRollTriggerTxId == -12345"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastRollTriggerTxId"))).intValue() == -12345);
			}
		});
		invariants4999.add(new Invariant(4901, "NameNode.instance.namesystem.editLogTailer.logRollPeriodMs == -1000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.logRollPeriodMs"))).intValue() == -1000);
			}
		});
		invariants4999.add(new Invariant(4902, "NameNode.instance.namesystem.editLogTailer.maxRetries == 3"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.maxRetries"))).intValue() == 3);
			}
		});
		invariants4999.add(new Invariant(4903, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118377956792082L || NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118378976058927L || NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118379357998457L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118377956792082L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118378976058927L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118379357998457L);
			}
		});
		invariants4999.add(new Invariant(4904, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime == 118376313 || NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime == 118378743"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() == 118376313 || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() == 118378743);
			}
		});
		invariants4999.add(new Invariant(4905, "NameNode.instance.namesystem.startTime == 1731382271405L || NameNode.instance.namesystem.startTime == 1731382273835L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() == 1731382271405L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() == 1731382273835L);
			}
		});
		invariants4999.add(new Invariant(4906, "blockManagerInstance.blockReportLeaseManager.nextId == 8333661402711551890L || blockManagerInstance.blockReportLeaseManager.nextId == 8333661402711551891L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() == 8333661402711551890L || ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() == 8333661402711551891L);
			}
		});
		invariants4999.add(new Invariant(4907, "blockManagerInstance.bmSafeMode.startTime == 0 || blockManagerInstance.bmSafeMode.startTime == 118378968"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() == 118378968);
			}
		});
		invariants4999.add(new Invariant(4908, "blockManagerInstance.datanodeManager.heartbeatExpireInterval == 610000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatExpireInterval"))).intValue() == 610000);
			}
		});
		invariants4999.add(new Invariant(4909, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 0 || blockManagerInstance.heartbeatManager.stats.capacityRemaining == 92912230400L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 92912230400L);
			}
		});
		invariants4999.add(new Invariant(4910, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 0 || blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 34315960320L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 34315960320L);
			}
		});
		invariants4999.add(new Invariant(4911, "blockManagerInstance.invalidateBlocks.startupTime == 118378747"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue() == 118378747);
			}
		});
		invariants4999.add(new Invariant(4912, "daikon.Quant.fuzzy.eq(blockManagerInstance.reconstructionQueuesInitProgress, 0.0)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.fuzzy.eq(((Number)(InvariantChecker.getValue("blockManagerInstance.reconstructionQueuesInitProgress"))).doubleValue(), 0.0));
			}
		});
		invariants4999.add(new Invariant(4913, "DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION < DataNode.instance.id.nsInfo.cTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4914, "DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION < DataNode.instance.id.nsInfo.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4915, "DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION < DataNode.instance.xserver.balanceThrottler.curPeriodStart"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4916, "DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION < NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4917, "DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION < NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4918, "DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4919, "DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4920, "DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4921, "DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME < DataNode.instance.id.nsInfo.cTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4922, "DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME < DataNode.instance.id.nsInfo.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4923, "DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME < DataNode.instance.xserver.balanceThrottler.curPeriodStart"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4924, "DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME < NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4925, "DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME < NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4926, "DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4927, "DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4928, "DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4929, "DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS < DataNode.instance.id.nsInfo.cTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4930, "DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS < DataNode.instance.id.nsInfo.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4931, "DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS < DataNode.instance.xserver.balanceThrottler.curPeriodStart"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4932, "DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS > NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4933, "DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS < NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4934, "DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4935, "DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4936, "DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4937, "DataNode.instance.data.cacheManager.numBlocksCached < DataNode.instance.id.nsInfo.cTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4938, "DataNode.instance.data.cacheManager.numBlocksCached < DataNode.instance.id.nsInfo.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4939, "DataNode.instance.data.cacheManager.numBlocksCached < DataNode.instance.xserver.balanceThrottler.curPeriodStart"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4940, "DataNode.instance.data.cacheManager.numBlocksCached < NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4941, "DataNode.instance.data.cacheManager.numBlocksCached < NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4942, "DataNode.instance.data.cacheManager.numBlocksCached < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4943, "DataNode.instance.data.cacheManager.numBlocksCached < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4944, "DataNode.instance.data.cacheManager.numBlocksCached <= blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4945, "DataNode.instance.data.cacheManager.revocationMs < DataNode.instance.id.nsInfo.cTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationMs"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4946, "DataNode.instance.data.cacheManager.revocationMs < DataNode.instance.id.nsInfo.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationMs"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4947, "DataNode.instance.data.cacheManager.revocationMs < DataNode.instance.xserver.balanceThrottler.curPeriodStart"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationMs"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4948, "DataNode.instance.data.cacheManager.revocationMs > NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationMs"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4949, "DataNode.instance.data.cacheManager.revocationMs < NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationMs"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4950, "DataNode.instance.data.cacheManager.revocationMs < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationMs"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4951, "DataNode.instance.data.cacheManager.revocationMs < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationMs"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4952, "DataNode.instance.data.cacheManager.revocationMs != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4953, "DataNode.instance.data.cacheManager.revocationPollingMs < DataNode.instance.id.nsInfo.cTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationPollingMs"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4954, "DataNode.instance.data.cacheManager.revocationPollingMs < DataNode.instance.id.nsInfo.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationPollingMs"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4955, "DataNode.instance.data.cacheManager.revocationPollingMs < DataNode.instance.xserver.balanceThrottler.curPeriodStart"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationPollingMs"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4956, "DataNode.instance.data.cacheManager.revocationPollingMs > NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationPollingMs"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4957, "DataNode.instance.data.cacheManager.revocationPollingMs < NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationPollingMs"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4958, "DataNode.instance.data.cacheManager.revocationPollingMs < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationPollingMs"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4959, "DataNode.instance.data.cacheManager.revocationPollingMs < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationPollingMs"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4960, "DataNode.instance.data.cacheManager.revocationPollingMs != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationPollingMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4961, "DataNode.instance.data.maxDataLength < DataNode.instance.id.nsInfo.cTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.maxDataLength"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4962, "DataNode.instance.data.maxDataLength < DataNode.instance.id.nsInfo.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.maxDataLength"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4963, "DataNode.instance.data.maxDataLength < DataNode.instance.xserver.balanceThrottler.curPeriodStart"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.maxDataLength"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4964, "DataNode.instance.data.maxDataLength > NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.maxDataLength"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4965, "DataNode.instance.data.maxDataLength < NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.maxDataLength"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4966, "DataNode.instance.data.maxDataLength < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.maxDataLength"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4967, "DataNode.instance.data.maxDataLength < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.maxDataLength"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4968, "DataNode.instance.data.maxDataLength != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.maxDataLength"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4969, "DataNode.instance.data.smallBufferSize < DataNode.instance.id.nsInfo.cTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.smallBufferSize"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4970, "DataNode.instance.data.smallBufferSize < DataNode.instance.id.nsInfo.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.smallBufferSize"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4971, "DataNode.instance.data.smallBufferSize < DataNode.instance.xserver.balanceThrottler.curPeriodStart"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.smallBufferSize"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4972, "DataNode.instance.data.smallBufferSize > NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.smallBufferSize"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4973, "DataNode.instance.data.smallBufferSize < NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.smallBufferSize"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4974, "DataNode.instance.data.smallBufferSize < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.smallBufferSize"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4975, "DataNode.instance.data.smallBufferSize < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.smallBufferSize"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4976, "DataNode.instance.data.smallBufferSize != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.smallBufferSize"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4977, "DataNode.instance.data.volsConfigured < DataNode.instance.id.nsInfo.cTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4978, "DataNode.instance.data.volsConfigured < DataNode.instance.id.nsInfo.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4979, "DataNode.instance.data.volsConfigured < DataNode.instance.xserver.balanceThrottler.curPeriodStart"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4980, "DataNode.instance.data.volsConfigured < NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4981, "DataNode.instance.data.volsConfigured < NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4982, "DataNode.instance.data.volsConfigured < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4983, "DataNode.instance.data.volsConfigured < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4984, "DataNode.instance.data.volsConfigured != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4985, "DataNode.instance.directoryScanner.diffs.serialVersionUID < DataNode.instance.id.nsInfo.cTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.diffs.serialVersionUID"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4986, "DataNode.instance.directoryScanner.diffs.serialVersionUID < DataNode.instance.id.nsInfo.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.diffs.serialVersionUID"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4987, "DataNode.instance.directoryScanner.diffs.serialVersionUID > DataNode.instance.storage.layoutVersion"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.diffs.serialVersionUID"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4988, "DataNode.instance.directoryScanner.diffs.serialVersionUID < DataNode.instance.storage.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.diffs.serialVersionUID"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4989, "DataNode.instance.directoryScanner.diffs.serialVersionUID < DataNode.instance.xserver.balanceThrottler.curPeriodStart"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.diffs.serialVersionUID"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4990, "DataNode.instance.directoryScanner.diffs.serialVersionUID < NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.diffs.serialVersionUID"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4991, "DataNode.instance.directoryScanner.diffs.serialVersionUID < NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.diffs.serialVersionUID"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogTailer.lastLoadTimeMs"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4992, "DataNode.instance.directoryScanner.diffs.serialVersionUID < NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.diffs.serialVersionUID"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4993, "DataNode.instance.directoryScanner.diffs.serialVersionUID < NameNode.instance.namesystem.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.diffs.serialVersionUID"))).intValue() < ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4994, "DataNode.instance.directoryScanner.diffs.serialVersionUID != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.diffs.serialVersionUID"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4995, "DataNode.instance.directoryScanner.diffs.serialVersionUID >= blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.diffs.serialVersionUID"))).intValue() >= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4996, "DataNode.instance.dnConf.blockReportInterval < DataNode.instance.id.nsInfo.cTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportInterval"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4997, "DataNode.instance.dnConf.blockReportInterval < DataNode.instance.id.nsInfo.namespaceID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportInterval"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4998, "DataNode.instance.dnConf.blockReportInterval < DataNode.instance.xserver.balanceThrottler.curPeriodStart"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportInterval"))).intValue() < ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue());
			}
		});
		invariants4999.add(new Invariant(4999, "DataNode.instance.dnConf.blockReportInterval > NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportInterval"))).intValue() > ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue());
			}
		});
	}
	static {
installInv4999();	}
}
