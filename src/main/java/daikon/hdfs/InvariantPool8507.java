package daikon.hdfs;
import daikon.*;
import java.util.Set;
import java.util.ArrayList;
import java.util.List;
//this class is automatically generated by our scripts
public class InvariantPool8507{

	public static List<Invariant> invariants8507 = new ArrayList<>();

	public static void installInv8507(){
		invariants8507.add(new Invariant(8000, "blockManagerInstance.blockReportLeaseManager.numPending <= blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8001, "blockManagerInstance.blockReportLeaseManager.numPending <= blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8002, "blockManagerInstance.blockReportLeaseManager.numPending <= blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8003, "blockManagerInstance.blockReportLeaseManager.numPending <= blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8004, "blockManagerInstance.blockReportLeaseManager.numPending < blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8005, "blockManagerInstance.blockReportLeaseManager.numPending != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8006, "blockManagerInstance.blockReportLeaseManager.numPending < blockManagerInstance.maxCorruptFilesReturned"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.maxCorruptFilesReturned"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8007, "blockManagerInstance.blockReportLeaseManager.numPending < blockManagerInstance.neededReconstruction.LEVEL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.LEVEL"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8008, "blockManagerInstance.blockReportLeaseManager.numPending < blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8009, "blockManagerInstance.blockReportLeaseManager.numPending < blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8010, "blockManagerInstance.blockReportLeaseManager.numPending < blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8011, "blockManagerInstance.blockReportLeaseManager.numPending < blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8012, "blockManagerInstance.blockReportLeaseManager.numPending < blockManagerInstance.placementPolicies.ecPolicy.heartbeatInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.placementPolicies.ecPolicy.heartbeatInterval"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8013, "blockManagerInstance.blockReportLeaseManager.numPending < blockManagerInstance.replQueueResetToHeadThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueResetToHeadThreshold"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8014, "blockManagerInstance.blockReportLeaseManager.numPending < blockManagerInstance.storageInfoDefragmentInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.storageInfoDefragmentInterval"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8015, "blockManagerInstance.blockReportLeaseManager.numPending < blockManagerInstance.storagePolicySuite.defaultPolicyID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.storagePolicySuite.defaultPolicyID"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8016, "blockManagerInstance.blockReportLeaseManager.numPending <= daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8017, "blockManagerInstance.blockReportLeaseManager.numPending != daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])))-1);
			}
		});
		invariants8507.add(new Invariant(8018, "2000043051 * DataNode.instance.volumeChecker.numSyncDatasetChecks - NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos + 115117337 * blockManagerInstance.heartbeatManager.stats.nodesInService + 1.18087199426012E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2000043051 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() - ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() + 115117337 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() + 1.18087199426012E14 == 0);
			}
		});
		invariants8507.add(new Invariant(8019, "2 * blockManagerInstance.blockReportLeaseManager.nextId - 2 * blockManagerInstance.blockReportLeaseManager.numPending - 3 * daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE) - 2.5015761302385992E18 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2 * ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() - 2 * ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue() - 3 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))) - 2.5015761302385992E18 == 0);
			}
		});
		invariants8507.add(new Invariant(8020, "2 * blockManagerInstance.blockReportLeaseManager.nextId - 2 * blockManagerInstance.blockReportLeaseManager.numPending - 3 * daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)-1 - 2.5015761302385992E18 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2 * ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() - 2 * ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.numPending"))).intValue() - 3 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0])))-1 - 2.5015761302385992E18 == 0);
			}
		});
		invariants8507.add(new Invariant(8021, "blockManagerInstance.blockReportLeaseManager.nextId - 3 * blockManagerInstance.replQueueCallsSinceReset - 3 * daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE) - 1.25078806511929958E18 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() - 3 * ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue() - 3 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))) - 1.25078806511929958E18 == 0);
			}
		});
		invariants8507.add(new Invariant(8022, "blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount == blockManagerInstance.storagePolicySuite.defaultPolicyID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.storagePolicySuite.defaultPolicyID"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8023, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.cacheManager.numBlocksCached) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.data.cacheManager.numBlocksFailedToUncache-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksFailedToUncache"))).intValue()-1));
			}
		});
		invariants8507.add(new Invariant(8024, "DataNode.instance.id.infoPort == 34537"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() == 34537);
			}
		});
		invariants8507.add(new Invariant(8025, "DataNode.instance.id.ipcPort == 40377"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() == 40377);
			}
		});
		invariants8507.add(new Invariant(8026, "DataNode.instance.id.nsInfo.cTime == 1731381968526L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() == 1731381968526L);
			}
		});
		invariants8507.add(new Invariant(8027, "DataNode.instance.id.nsInfo.namespaceID == 407979337"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() == 407979337);
			}
		});
		invariants8507.add(new Invariant(8028, "DataNode.instance.id.xferPort == 41605"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() == 41605);
			}
		});
		invariants8507.add(new Invariant(8029, "DataNode.instance.lastDiskErrorCheck == 118077516"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() == 118077516);
			}
		});
		invariants8507.add(new Invariant(8030, "DataNode.instance.volumeChecker.lastAllVolumesCheck == 118077509"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() == 118077509);
			}
		});
		invariants8507.add(new Invariant(8031, "DataNode.instance.xserver.balanceThrottler.curPeriodStart == 118076863"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() == 118076863);
			}
		});
		invariants8507.add(new Invariant(8032, "NameNode.instance.namesystem.lazyPersistFileScrubberTS == 118075674"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() == 118075674);
			}
		});
		invariants8507.add(new Invariant(8033, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime == 118074922"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() == 118074922);
			}
		});
		invariants8507.add(new Invariant(8034, "NameNode.instance.namesystem.startTime == 1731381970014L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() == 1731381970014L);
			}
		});
		invariants8507.add(new Invariant(8035, "blockManagerInstance.blockReportLeaseManager.nextId == -3378519502760484963L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() == -3378519502760484963L);
			}
		});
		invariants8507.add(new Invariant(8036, "blockManagerInstance.bmSafeMode.startTime == 118075634"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() == 118075634);
			}
		});
		invariants8507.add(new Invariant(8037, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 171353"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 171353);
			}
		});
		invariants8507.add(new Invariant(8038, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 280291361792L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 280291361792L);
			}
		});
		invariants8507.add(new Invariant(8039, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 101258969767L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 101258969767L);
			}
		});
		invariants8507.add(new Invariant(8040, "blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount == 7"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue() == 7);
			}
		});
		invariants8507.add(new Invariant(8041, "blockManagerInstance.invalidateBlocks.startupTime == 118074924"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue() == 118074924);
			}
		});
		invariants8507.add(new Invariant(8042, "blockManagerInstance.lastRedundancyCycleTS == 118078634"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118078634);
			}
		});
		invariants8507.add(new Invariant(8043, "blockManagerInstance.lastRedundancyCycleTS == 118081635"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118081635);
			}
		});
		invariants8507.add(new Invariant(8044, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 280447598592L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 280447598592L);
			}
		});
		invariants8507.add(new Invariant(8045, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 101236973568L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 101236973568L);
			}
		});
		invariants8507.add(new Invariant(8046, "DataNode.instance.id.infoPort == 35905"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() == 35905);
			}
		});
		invariants8507.add(new Invariant(8047, "DataNode.instance.id.ipcPort == 40999"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() == 40999);
			}
		});
		invariants8507.add(new Invariant(8048, "DataNode.instance.id.nsInfo.cTime == 1731381959142L || DataNode.instance.id.nsInfo.cTime == 1731381963847L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() == 1731381959142L || ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() == 1731381963847L);
			}
		});
		invariants8507.add(new Invariant(8049, "DataNode.instance.id.nsInfo.namespaceID == 227860339 || DataNode.instance.id.nsInfo.namespaceID == 1038947711"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() == 227860339 || ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() == 1038947711);
			}
		});
		invariants8507.add(new Invariant(8050, "DataNode.instance.id.xferPort == 34137"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() == 34137);
			}
		});
		invariants8507.add(new Invariant(8051, "DataNode.instance.lastDiskErrorCheck == 118070308"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() == 118070308);
			}
		});
		invariants8507.add(new Invariant(8052, "DataNode.instance.storage.namespaceID == 0 || DataNode.instance.storage.namespaceID == 227860339 || DataNode.instance.storage.namespaceID == 1038947711"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() == 227860339 || ((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() == 1038947711);
			}
		});
		invariants8507.add(new Invariant(8053, "DataNode.instance.volumeChecker.lastAllVolumesCheck == 117169954 || DataNode.instance.volumeChecker.lastAllVolumesCheck == 118068078 || DataNode.instance.volumeChecker.lastAllVolumesCheck == 118070307"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() == 117169954 || ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() == 118068078 || ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() == 118070307);
			}
		});
		invariants8507.add(new Invariant(8054, "DataNode.instance.xserver.balanceThrottler.curPeriodStart == 118067247 || DataNode.instance.xserver.balanceThrottler.curPeriodStart == 118069956"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() == 118067247 || ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() == 118069956);
			}
		});
		invariants8507.add(new Invariant(8055, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118068542248273L || NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118069929512151L || NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118070334375643L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118068542248273L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118069929512151L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118070334375643L);
			}
		});
		invariants8507.add(new Invariant(8056, "NameNode.instance.namesystem.lazyPersistFileScrubberTS == 118066378 || NameNode.instance.namesystem.lazyPersistFileScrubberTS == 118069929"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() == 118066378 || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() == 118069929);
			}
		});
		invariants8507.add(new Invariant(8057, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime == 118065643 || NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime == 118068985"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() == 118065643 || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() == 118068985);
			}
		});
		invariants8507.add(new Invariant(8058, "NameNode.instance.namesystem.startTime == 1731381960735L || NameNode.instance.namesystem.startTime == 1731381964077L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() == 1731381960735L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() == 1731381964077L);
			}
		});
		invariants8507.add(new Invariant(8059, "blockManagerInstance.blockReportLeaseManager.nextId == 7463640860720084463L || blockManagerInstance.blockReportLeaseManager.nextId == 7463640860720084464L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() == 7463640860720084463L || ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() == 7463640860720084464L);
			}
		});
		invariants8507.add(new Invariant(8060, "blockManagerInstance.bmSafeMode.startTime == 0 || blockManagerInstance.bmSafeMode.startTime == 118069890"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() == 118069890);
			}
		});
		invariants8507.add(new Invariant(8061, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 0 || blockManagerInstance.heartbeatManager.stats.capacityRemaining == 93484843008L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 93484843008L);
			}
		});
		invariants8507.add(new Invariant(8062, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 0 || blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 33743347712L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 33743347712L);
			}
		});
		invariants8507.add(new Invariant(8063, "blockManagerInstance.invalidateBlocks.startupTime == 118068987"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue() == 118068987);
			}
		});
		invariants8507.add(new Invariant(8064, "DataNode.instance.dnConf.volsConfigured == blockManagerInstance.defaultReplication"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.volsConfigured"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.defaultReplication"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8065, "daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS) == daikon.Quant.getElement_Object(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE, blockManagerInstance.defaultReplication-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.defaultReplication"))).intValue()-1));
			}
		});
		invariants8507.add(new Invariant(8066, "DataNode.instance.id.infoPort == 46027"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() == 46027);
			}
		});
		invariants8507.add(new Invariant(8067, "DataNode.instance.id.ipcPort == 39747"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() == 39747);
			}
		});
		invariants8507.add(new Invariant(8068, "DataNode.instance.id.nsInfo.cTime == 1731381604750L || DataNode.instance.id.nsInfo.cTime == 1731381611960L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() == 1731381604750L || ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() == 1731381611960L);
			}
		});
		invariants8507.add(new Invariant(8069, "DataNode.instance.id.nsInfo.namespaceID == 611988159 || DataNode.instance.id.nsInfo.namespaceID == 1938600423"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() == 611988159 || ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() == 1938600423);
			}
		});
		invariants8507.add(new Invariant(8070, "DataNode.instance.id.xferPort == 43153"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() == 43153);
			}
		});
		invariants8507.add(new Invariant(8071, "DataNode.instance.lastDiskErrorCheck == 117718440"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() == 117718440);
			}
		});
		invariants8507.add(new Invariant(8072, "DataNode.instance.storage.namespaceID == 0 || DataNode.instance.storage.namespaceID == 611988159 || DataNode.instance.storage.namespaceID == 1938600423"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() == 611988159 || ((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() == 1938600423);
			}
		});
		invariants8507.add(new Invariant(8073, "DataNode.instance.volumeChecker.lastAllVolumesCheck == 116817913 || DataNode.instance.volumeChecker.lastAllVolumesCheck == 117714906 || DataNode.instance.volumeChecker.lastAllVolumesCheck == 117718429"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() == 116817913 || ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() == 117714906 || ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() == 117718429);
			}
		});
		invariants8507.add(new Invariant(8074, "DataNode.instance.xserver.balanceThrottler.curPeriodStart == 117714167 || DataNode.instance.xserver.balanceThrottler.curPeriodStart == 117717914"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() == 117714167 || ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() == 117717914);
			}
		});
		invariants8507.add(new Invariant(8075, "NameNode.instance.namesystem.lazyPersistFileScrubberTS == 117712422 || NameNode.instance.namesystem.lazyPersistFileScrubberTS == 117717656"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() == 117712422 || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() == 117717656);
			}
		});
		invariants8507.add(new Invariant(8076, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime == 117711349 || NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime == 117717106"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() == 117711349 || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() == 117717106);
			}
		});
		invariants8507.add(new Invariant(8077, "NameNode.instance.namesystem.startTime == 1731381606441L || NameNode.instance.namesystem.startTime == 1731381612198L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() == 1731381606441L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() == 1731381612198L);
			}
		});
		invariants8507.add(new Invariant(8078, "blockManagerInstance.blockReportLeaseManager.nextId == -8305888717269324769L || blockManagerInstance.blockReportLeaseManager.nextId == -8305888717269324768L || blockManagerInstance.blockReportLeaseManager.nextId == -8305888717269324767L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() == -8305888717269324769L || ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() == -8305888717269324768L || ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() == -8305888717269324767L);
			}
		});
		invariants8507.add(new Invariant(8079, "blockManagerInstance.bmSafeMode.startTime == 0 || blockManagerInstance.bmSafeMode.startTime == 117717628"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() == 117717628);
			}
		});
		invariants8507.add(new Invariant(8080, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 0 || blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 49152 || blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 98304"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 49152 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 98304);
			}
		});
		invariants8507.add(new Invariant(8081, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 0 || blockManagerInstance.heartbeatManager.stats.capacityRemaining == 96560349184L || blockManagerInstance.heartbeatManager.stats.capacityRemaining == 193120681984L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 96560349184L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 193120681984L);
			}
		});
		invariants8507.add(new Invariant(8082, "blockManagerInstance.heartbeatManager.stats.capacityTotal == 0 || blockManagerInstance.heartbeatManager.stats.capacityTotal == 134100180992L || blockManagerInstance.heartbeatManager.stats.capacityTotal == 268200361984L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue() == 134100180992L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue() == 268200361984L);
			}
		});
		invariants8507.add(new Invariant(8083, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 0 || blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 30667841536L || blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 61335699456L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 30667841536L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 61335699456L);
			}
		});
		invariants8507.add(new Invariant(8084, "blockManagerInstance.heartbeatManager.stats.nodesInService == 0 || blockManagerInstance.heartbeatManager.stats.nodesInService == 1 || blockManagerInstance.heartbeatManager.stats.nodesInService == 2"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() == 1 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() == 2);
			}
		});
		invariants8507.add(new Invariant(8085, "blockManagerInstance.invalidateBlocks.startupTime == 117717108"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue() == 117717108);
			}
		});
		invariants8507.add(new Invariant(8086, "DataNode.instance.data.volsConfigured >= blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue() >= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8087, "DataNode.instance.dnConf.volsConfigured >= blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.volsConfigured"))).intValue() >= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8088, "DataNode.instance.volumeChecker.numSyncDatasetChecks + blockManagerInstance.blockReportLeaseManager.nextId + 2147483647 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() + ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() + 2147483647 == 0);
			}
		});
		invariants8507.add(new Invariant(8089, "blockManagerInstance.blockReportLeaseManager.nextId - 2 * daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE) + 2147483647 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() - 2 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))) + 2147483647 == 0);
			}
		});
		invariants8507.add(new Invariant(8090, "1.014251469184E12 * DataNode.instance.storage.layoutVersion - 4.7673673813E10 * DataNode.instance.xserver.balanceThrottler.curPeriodStart + 71193 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 2.768627738801281E18 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (1.014251469184E12 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() - 4.7673673813E10 * ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() + 71193 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 2.768627738801281E18 == 0);
			}
		});
		invariants8507.add(new Invariant(8091, "40927232 * DataNode.instance.storage.layoutVersion - 622592 * DataNode.instance.xserver.balanceThrottler.curPeriodStart + 23731 * blockManagerInstance.heartbeatManager.stats.blockPoolUsed + 7.3290231513088E13 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (40927232 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() - 622592 * ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() + 23731 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() + 7.3290231513088E13 == 0);
			}
		});
		invariants8507.add(new Invariant(8092, "2498 * DataNode.instance.storage.layoutVersion - 38 * DataNode.instance.xserver.balanceThrottler.curPeriodStart + 71193 * blockManagerInstance.heartbeatManager.stats.nodesInService + 4.473280732E9 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2498 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() - 38 * ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() + 71193 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() + 4.473280732E9 == 0);
			}
		});
		invariants8507.add(new Invariant(8093, "3.248203264E9 * DataNode.instance.storage.layoutVersion - 1.43021021439E11 * NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE + 228 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 2.6835907307034472E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (3.248203264E9 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() - 1.43021021439E11 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() + 228 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 2.6835907307034472E16 == 0);
			}
		});
		invariants8507.add(new Invariant(8094, "8.12050816E9 * DataNode.instance.storage.layoutVersion + 1.43021021439E11 * NameNode.instance.namesystem.fsImage.lastAppliedTxId + 570 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 6.709906463397972E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (8.12050816E9 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() + 1.43021021439E11 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() + 570 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 6.709906463397972E16 == 0);
			}
		});
		invariants8507.add(new Invariant(8095, "1131393274 * DataNode.instance.storage.layoutVersion - 38 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos + 4.7673673813E10 * blockManagerInstance.heartbeatManager.stats.nodesInService + 4.473270975598648E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (1131393274 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() - 38 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() + 4.7673673813E10 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() + 4.473270975598648E15 == 0);
			}
		});
		invariants8507.add(new Invariant(8096, "85753856 * DataNode.instance.storage.layoutVersion - 933888 * NameNode.instance.namesystem.lazyPersistFileScrubberTS + 49723 * blockManagerInstance.heartbeatManager.stats.blockPoolUsed + 1.09935106326528E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (85753856 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() - 933888 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() + 49723 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() + 1.09935106326528E14 == 0);
			}
		});
		invariants8507.add(new Invariant(8097, "5234 * DataNode.instance.storage.layoutVersion - 57 * NameNode.instance.namesystem.lazyPersistFileScrubberTS + 149169 * blockManagerInstance.heartbeatManager.stats.nodesInService + 6.709906392E9 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (5234 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() - 57 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() + 149169 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() + 6.709906392E9 == 0);
			}
		});
		invariants8507.add(new Invariant(8098, "3309568 * DataNode.instance.storage.layoutVersion - 32768 * NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime + 1919 * blockManagerInstance.heartbeatManager.stats.blockPoolUsed + 3.857354129408E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (3309568 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() - 32768 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() + 1919 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() + 3.857354129408E12 == 0);
			}
		});
		invariants8507.add(new Invariant(8099, "202 * DataNode.instance.storage.layoutVersion - 2 * NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime + 5757 * blockManagerInstance.heartbeatManager.stats.nodesInService + 235434212 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (202 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() - 2 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() + 5757 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() + 235434212 == 0);
			}
		});
		invariants8507.add(new Invariant(8100, "202 * DataNode.instance.storage.layoutVersion - 2 * NameNode.instance.namesystem.startTime + 5757 * blockManagerInstance.heartbeatManager.stats.nodesInService + 3.462763224396E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (202 * ((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() - 2 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() + 5757 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() + 3.462763224396E12 == 0);
			}
		});
		invariants8507.add(new Invariant(8101, "2.509140727E9 * DataNode.instance.volumeChecker.lastAllVolumesCheck - 2.259118061570759E15 * DataNode.instance.volumeChecker.numSyncDatasetChecks - 3523 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos + 1.21609180895133344E17 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (2.509140727E9 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() - 2.259118061570759E15 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() - 3523 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() + 1.21609180895133344E17 == 0);
			}
		});
		invariants8507.add(new Invariant(8102, "98304 * DataNode.instance.volumeChecker.lastAllVolumesCheck - 8.8177999872E10 * DataNode.instance.volumeChecker.numSyncDatasetChecks - 3523 * blockManagerInstance.heartbeatManager.stats.blockPoolUsed - 1.1483668119552E13 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (98304 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() - 8.8177999872E10 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() - 3523 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() - 1.1483668119552E13 == 0);
			}
		});
		invariants8507.add(new Invariant(8103, "6.1335699456E10 * DataNode.instance.volumeChecker.lastAllVolumesCheck - 5.5017693062135808E16 * DataNode.instance.volumeChecker.numSyncDatasetChecks - 3523 * blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs - 7.1651084028451553E18 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (6.1335699456E10 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() - 5.5017693062135808E16 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() - 3523 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() - 7.1651084028451553E18 == 0);
			}
		});
		invariants8507.add(new Invariant(8104, "3747 * DataNode.instance.volumeChecker.lastAllVolumesCheck + 896993 * DataNode.instance.xserver.balanceThrottler.curPeriodStart - 1687116726 * blockManagerInstance.heartbeatManager.stats.nodesInService - 1.06029861552613E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (3747 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() + 896993 * ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() - 1687116726 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() - 1.06029861552613E14 == 0);
			}
		});
		invariants8507.add(new Invariant(8105, "5234 * DataNode.instance.volumeChecker.lastAllVolumesCheck + 896993 * NameNode.instance.namesystem.lazyPersistFileScrubberTS - 2.356650372E9 * blockManagerInstance.heartbeatManager.stats.nodesInService - 1.0620333836505E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (5234 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() + 896993 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() - 2.356650372E9 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() - 1.0620333836505E14 == 0);
			}
		});
		invariants8507.add(new Invariant(8106, "5757 * DataNode.instance.volumeChecker.lastAllVolumesCheck + 896993 * NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime - 2.592135306E9 * blockManagerInstance.heartbeatManager.stats.nodesInService - 1.06263940787399E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (5757 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() + 896993 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() - 2.592135306E9 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() - 1.06263940787399E14 == 0);
			}
		});
		invariants8507.add(new Invariant(8107, "5757 * DataNode.instance.volumeChecker.lastAllVolumesCheck + 896993 * NameNode.instance.namesystem.startTime - 2.592135306E9 * blockManagerInstance.heartbeatManager.stats.nodesInService - 1.55303785899104563E18 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (5757 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() + 896993 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() - 2.592135306E9 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() - 1.55303785899104563E18 == 0);
			}
		});
		invariants8507.add(new Invariant(8108, "3.042754407552E12 * DataNode.instance.volumeChecker.numSyncDatasetChecks + 2.509140727E9 * DataNode.instance.xserver.balanceThrottler.curPeriodStart - 3747 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos + 1.45717249410593728E17 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (3.042754407552E12 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() + 2.509140727E9 * ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() - 3747 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() + 1.45717249410593728E17 == 0);
			}
		});
		invariants8507.add(new Invariant(8109, "122781696 * DataNode.instance.volumeChecker.numSyncDatasetChecks + 32768 * DataNode.instance.xserver.balanceThrottler.curPeriodStart - 1249 * blockManagerInstance.heartbeatManager.stats.blockPoolUsed - 3.857380605952E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (122781696 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() + 32768 * ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() - 1249 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() - 3.857380605952E12 == 0);
			}
		});
		invariants8507.add(new Invariant(8110, "7.6608288620544E13 * DataNode.instance.volumeChecker.numSyncDatasetChecks + 2.0445233152E10 * DataNode.instance.xserver.balanceThrottler.curPeriodStart - 1249 * blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs - 2.4067701978970849E18 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (7.6608288620544E13 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() + 2.0445233152E10 * ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() - 1249 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() - 2.4067701978970849E18 == 0);
			}
		});
		invariants8507.add(new Invariant(8111, "7494 * DataNode.instance.volumeChecker.numSyncDatasetChecks + 2 * DataNode.instance.xserver.balanceThrottler.curPeriodStart - 3747 * blockManagerInstance.heartbeatManager.stats.nodesInService - 235435828 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (7494 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() + 2 * ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() - 3747 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() - 235435828 == 0);
			}
		});
		invariants8507.add(new Invariant(8112, "3.248203264E9 * DataNode.instance.volumeChecker.numSyncDatasetChecks + 2.509140727E9 * NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE - 4 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos + 4.70805391351482E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (3.248203264E9 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() + 2.509140727E9 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() - 4 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() + 4.70805391351482E14 == 0);
			}
		});
		invariants8507.add(new Invariant(8113, "8.12050816E9 * DataNode.instance.volumeChecker.numSyncDatasetChecks - 2.509140727E9 * NameNode.instance.namesystem.fsImage.lastAppliedTxId - 10 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos + 1.17717657252596E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (8.12050816E9 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() - 2.509140727E9 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() - 10 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() + 1.17717657252596E15 == 0);
			}
		});
		invariants8507.add(new Invariant(8114, "4.250273970944E12 * DataNode.instance.volumeChecker.numSyncDatasetChecks - 5234 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos + 2.509140727E9 * NameNode.instance.namesystem.lazyPersistFileScrubberTS + 3.2076405310351155E17 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (4.250273970944E12 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() - 5234 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() + 2.509140727E9 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() + 3.2076405310351155E17 == 0);
			}
		});
		invariants8507.add(new Invariant(8115, "4.674976547712E12 * DataNode.instance.volumeChecker.numSyncDatasetChecks - 5757 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos + 2.509140727E9 * NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime + 3.8233176787401914E17 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (4.674976547712E12 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() - 5757 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() + 2.509140727E9 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() + 3.8233176787401914E17 == 0);
			}
		});
		invariants8507.add(new Invariant(8116, "3.394179822E9 * DataNode.instance.volumeChecker.numSyncDatasetChecks + 2 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 2.509140727E9 * blockManagerInstance.heartbeatManager.stats.nodesInService - 2.35435314505192E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (3.394179822E9 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() + 2 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 2.509140727E9 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() - 2.35435314505192E14 == 0);
			}
		});
		invariants8507.add(new Invariant(8117, "257261568 * DataNode.instance.volumeChecker.numSyncDatasetChecks + 49152 * NameNode.instance.namesystem.lazyPersistFileScrubberTS - 2617 * blockManagerInstance.heartbeatManager.stats.blockPoolUsed - 5.786058227712E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (257261568 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() + 49152 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() - 2617 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() - 5.786058227712E12 == 0);
			}
		});
		invariants8507.add(new Invariant(8118, "1.60515525476352E14 * DataNode.instance.volumeChecker.numSyncDatasetChecks + 3.0667849728E10 * NameNode.instance.namesystem.lazyPersistFileScrubberTS - 2617 * blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs - 3.6101473845403976E18 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (1.60515525476352E14 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() + 3.0667849728E10 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() - 2617 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() - 3.6101473845403976E18 == 0);
			}
		});
		invariants8507.add(new Invariant(8119, "5234 * DataNode.instance.volumeChecker.numSyncDatasetChecks + NameNode.instance.namesystem.lazyPersistFileScrubberTS - 2617 * blockManagerInstance.heartbeatManager.stats.nodesInService - 117717656 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (5234 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() + ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() - 2617 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() - 117717656 == 0);
			}
		});
		invariants8507.add(new Invariant(8120, "188645376 * DataNode.instance.volumeChecker.numSyncDatasetChecks + 32768 * NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime - 1919 * blockManagerInstance.heartbeatManager.stats.blockPoolUsed - 3.857354129408E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (188645376 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() + 32768 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() - 1919 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() - 3.857354129408E12 == 0);
			}
		});
		invariants8507.add(new Invariant(8121, "1.17703207256064E14 * DataNode.instance.volumeChecker.numSyncDatasetChecks + 2.0445233152E10 * NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime - 1919 * blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs - 2.4067536781486981E18 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (1.17703207256064E14 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() + 2.0445233152E10 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() - 1919 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() - 2.4067536781486981E18 == 0);
			}
		});
		invariants8507.add(new Invariant(8122, "11514 * DataNode.instance.volumeChecker.numSyncDatasetChecks + 2 * NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime - 5757 * blockManagerInstance.heartbeatManager.stats.nodesInService - 235434212 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (11514 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() + 2 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() - 5757 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() - 235434212 == 0);
			}
		});
		invariants8507.add(new Invariant(8123, "188645376 * DataNode.instance.volumeChecker.numSyncDatasetChecks + 32768 * NameNode.instance.namesystem.startTime - 1919 * blockManagerInstance.heartbeatManager.stats.blockPoolUsed - 5.6733912668504064E16 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (188645376 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() + 32768 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() - 1919 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() - 5.6733912668504064E16 == 0);
			}
		});
		invariants8507.add(new Invariant(8124, "11514 * DataNode.instance.volumeChecker.numSyncDatasetChecks + 2 * NameNode.instance.namesystem.startTime - 5757 * blockManagerInstance.heartbeatManager.stats.nodesInService - 3.462763224396E12 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (11514 * ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() + 2 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() - 5757 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() - 3.462763224396E12 == 0);
			}
		});
		invariants8507.add(new Invariant(8125, "1131393274 * DataNode.instance.xserver.balanceThrottler.curPeriodStart - 2498 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos + 1.076936249959E12 * blockManagerInstance.heartbeatManager.stats.nodesInService + 1.60873451688074368E17 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (1131393274 * ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() - 2498 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() + 1.076936249959E12 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() + 1.60873451688074368E17 == 0);
			}
		});
		invariants8507.add(new Invariant(8126, "1697089911 * NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE - 4 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos + 1724477582 * blockManagerInstance.heartbeatManager.stats.nodesInService + 4.70826504672698E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (1697089911 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() - 4 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() + 1724477582 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() + 4.70826504672698E14 == 0);
			}
		});
		invariants8507.add(new Invariant(8127, "1697089911 * NameNode.instance.namesystem.fsImage.lastAppliedTxId + 10 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 4.311193955E9 * blockManagerInstance.heartbeatManager.stats.nodesInService - 1.17717657252596E15 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (1697089911 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() + 10 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 4.311193955E9 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() - 1.17717657252596E15 == 0);
			}
		});
		invariants8507.add(new Invariant(8128, "5234 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 1697089911 * NameNode.instance.namesystem.lazyPersistFileScrubberTS - 2.256478916047E12 * blockManagerInstance.heartbeatManager.stats.nodesInService - 4.1635677171591885E17 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (5234 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 1697089911 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() - 2.256478916047E12 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() - 4.1635677171591885E17 == 0);
			}
		});
		invariants8507.add(new Invariant(8129, "3838 * NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 1131393274 * NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime - 1.654636239929E12 * blockManagerInstance.heartbeatManager.stats.nodesInService - 3.186160265723184E17 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (3838 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 1131393274 * ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() - 1.654636239929E12 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() - 3.186160265723184E17 == 0);
			}
		});
		invariants8507.add(new Invariant(8130, "DataNode.instance.id.infoPort == 38217"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() == 38217);
			}
		});
		invariants8507.add(new Invariant(8131, "DataNode.instance.id.ipcPort == 37373"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() == 37373);
			}
		});
		invariants8507.add(new Invariant(8132, "DataNode.instance.id.nsInfo.cTime == 1731381948608L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() == 1731381948608L);
			}
		});
		invariants8507.add(new Invariant(8133, "DataNode.instance.id.nsInfo.namespaceID == 100961160"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() == 100961160);
			}
		});
		invariants8507.add(new Invariant(8134, "DataNode.instance.id.xferPort == 45143"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() == 45143);
			}
		});
		invariants8507.add(new Invariant(8135, "DataNode.instance.lastDiskErrorCheck == 118057595"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() == 118057595);
			}
		});
		invariants8507.add(new Invariant(8136, "DataNode.instance.storage.namespaceID == 100961160"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() == 100961160);
			}
		});
		invariants8507.add(new Invariant(8137, "DataNode.instance.volumeChecker.lastAllVolumesCheck == 117156876 || DataNode.instance.volumeChecker.lastAllVolumesCheck == 118057588"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() == 117156876 || ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() == 118057588);
			}
		});
		invariants8507.add(new Invariant(8138, "DataNode.instance.xserver.balanceThrottler.curPeriodStart == 118056878"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() == 118056878);
			}
		});
		invariants8507.add(new Invariant(8139, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118055682589235L || NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118057682585430L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118055682589235L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118057682585430L);
			}
		});
		invariants8507.add(new Invariant(8140, "NameNode.instance.namesystem.lazyPersistFileScrubberTS == 118055682"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() == 118055682);
			}
		});
		invariants8507.add(new Invariant(8141, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime == 118054874"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() == 118054874);
			}
		});
		invariants8507.add(new Invariant(8142, "NameNode.instance.namesystem.startTime == 1731381949966L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() == 1731381949966L);
			}
		});
		invariants8507.add(new Invariant(8143, "blockManagerInstance.blockReportLeaseManager.nextId == 5417828063669592554L || blockManagerInstance.blockReportLeaseManager.nextId == 5417828063669592557L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() == 5417828063669592554L || ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() == 5417828063669592557L);
			}
		});
		invariants8507.add(new Invariant(8144, "blockManagerInstance.bmSafeMode.startTime == 0 || blockManagerInstance.bmSafeMode.startTime == 118055636"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() == 118055636);
			}
		});
		invariants8507.add(new Invariant(8145, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 0 || blockManagerInstance.heartbeatManager.stats.capacityRemaining == 280463425536L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 280463425536L);
			}
		});
		invariants8507.add(new Invariant(8146, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 0 || blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 101221146624L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 101221146624L);
			}
		});
		invariants8507.add(new Invariant(8147, "blockManagerInstance.invalidateBlocks.startupTime == 118054876"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue() == 118054876);
			}
		});
		invariants8507.add(new Invariant(8148, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == DataNode.instance.id.infoPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8149, "DataNode.instance.data.asyncDiskService.numDeletedBlocks == DataNode.instance.infoPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.infoPort"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8150, "DataNode.instance.directoryScanner.diffs_FOR_ENCLOSING_USE == blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return ((Set.class.cast(InvariantChecker.getValue("DataNode.instance.directoryScanner.diffs")).toArray(new Object[0])) == (Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])));
			}
		});
		invariants8507.add(new Invariant(8151, "DataNode.instance.directoryScanner.shouldRun == DataNode.instance.id.exportedKeys.isBlockTokenEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.directoryScanner.shouldRun"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("DataNode.instance.id.exportedKeys.isBlockTokenEnabled"))).booleanValue());
			}
		});
		invariants8507.add(new Invariant(8152, "DataNode.instance.directoryScanner.shouldRun == DataNode.instance.isBlockTokenEnabled"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.directoryScanner.shouldRun"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("DataNode.instance.isBlockTokenEnabled"))).booleanValue());
			}
		});
		invariants8507.add(new Invariant(8153, "DataNode.instance.dnConf.allowNonLocalLazyPersist == blockManagerInstance.blockTokenSecretManager.shouldWrapQOP"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.allowNonLocalLazyPersist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.shouldWrapQOP"))).booleanValue());
			}
		});
		invariants8507.add(new Invariant(8154, "DataNode.instance.dnConf.allowNonLocalLazyPersist == blockManagerInstance.blockTokenSecretManager.useProto"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.allowNonLocalLazyPersist"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.useProto"))).booleanValue());
			}
		});
		invariants8507.add(new Invariant(8155, "DataNode.instance.dnConf.ibrInterval == blockManagerInstance.blockTokenSecretManager.nnRangeStart"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.nnRangeStart"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8156, "DataNode.instance.dnConf.ibrInterval == blockManagerInstance.datanodeManager.defaultInfoSecurePort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoSecurePort"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8157, "DataNode.instance.dnConf.pmemCacheRecoveryEnabled == blockManagerInstance.blockTokenSecretManager.isMaster"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Boolean)(InvariantChecker.getValue("DataNode.instance.dnConf.pmemCacheRecoveryEnabled"))).booleanValue() == ((Boolean)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.isMaster"))).booleanValue());
			}
		});
		invariants8507.add(new Invariant(8158, "DataNode.instance.id.exportedKeys.keyUpdateInterval == DataNode.instance.id.exportedKeys.tokenLifetime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.exportedKeys.keyUpdateInterval"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.id.exportedKeys.tokenLifetime"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8159, "DataNode.instance.id.exportedKeys.keyUpdateInterval == blockManagerInstance.blockTokenSecretManager.keyUpdateInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.exportedKeys.keyUpdateInterval"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.keyUpdateInterval"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8160, "DataNode.instance.id.infoSecurePort == DataNode.instance.infoSecurePort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoSecurePort"))).intValue() == ((Number)(InvariantChecker.getValue("DataNode.instance.infoSecurePort"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8161, "blockManagerInstance.blockTokenSecretManager.keyUpdateInterval == blockManagerInstance.blockTokenSecretManager.tokenLifetime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.keyUpdateInterval"))).intValue() == ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.tokenLifetime"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8162, "daikon.Quant.getElement_Object(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME-1) == daikon.Quant.getElement_Object(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.numDeletedBlocks)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue()-1) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue()));
			}
		});
		invariants8507.add(new Invariant(8163, "daikon.Quant.getElement_Object(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE, DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME) == daikon.Quant.getElement_Object(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE, DataNode.instance.data.volsConfigured-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue()-1));
			}
		});
		invariants8507.add(new Invariant(8164, "daikon.Quant.getElement_Object(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE, DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME-1) == daikon.Quant.getElement_Object(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE, DataNode.instance.data.cacheManager.numBlocksCached)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME"))).intValue()-1) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue()));
			}
		});
		invariants8507.add(new Invariant(8165, "daikon.Quant.getElement_Object(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE, DataNode.instance.data.asyncLazyPersistService.MAXIMUM_THREADS_PER_VOLUME-1) == daikon.Quant.getElement_Object(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE, DataNode.instance.data.cacheManager.numBlocksCached)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.MAXIMUM_THREADS_PER_VOLUME"))).intValue()-1) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue()));
			}
		});
		invariants8507.add(new Invariant(8166, "daikon.Quant.getElement_Object(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE, DataNode.instance.dnConf.ibrInterval) == daikon.Quant.getElement_Object(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE, DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue()-1));
			}
		});
		invariants8507.add(new Invariant(8167, "daikon.Quant.getElement_Object(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE, DataNode.instance.dnConf.ibrInterval) == daikon.Quant.getElement_Object(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE, DataNode.instance.httpServer.HTTP_SELECTOR_THREADS-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_SELECTOR_THREADS"))).intValue()-1));
			}
		});
		invariants8507.add(new Invariant(8168, "daikon.Quant.getElement_Object(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE, DataNode.instance.dnConf.ibrInterval) == daikon.Quant.getElement_Object(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE, NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.sequenceNumber-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.sequenceNumber"))).intValue()-1));
			}
		});
		invariants8507.add(new Invariant(8169, "daikon.Quant.getElement_Object(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE, DataNode.instance.dnConf.ibrInterval) == daikon.Quant.getElement_Object(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE, NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size"))).intValue()));
			}
		});
		invariants8507.add(new Invariant(8170, "daikon.Quant.getElement_Object(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE, DataNode.instance.dnConf.ibrInterval) == daikon.Quant.getElement_Object(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE, NameNode.instance.namesystem.cacheManager.nextDirectiveId-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.nextDirectiveId"))).intValue()-1));
			}
		});
		invariants8507.add(new Invariant(8171, "daikon.Quant.getElement_Object(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE, DataNode.instance.dnConf.ibrInterval) == daikon.Quant.getElement_Object(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE, NameNode.instance.namesystem.nnResourceChecker.minimumRedundantVolumes-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.nnResourceChecker.minimumRedundantVolumes"))).intValue()-1));
			}
		});
		invariants8507.add(new Invariant(8172, "daikon.Quant.getElement_Object(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE, DataNode.instance.dnConf.ibrInterval) == daikon.Quant.getElement_Object(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE, blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.size)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.size"))).intValue()));
			}
		});
		invariants8507.add(new Invariant(8173, "daikon.Quant.getElement_Object(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE, DataNode.instance.dnConf.ibrInterval) == daikon.Quant.getElement_Object(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE, blockManagerInstance.bmSafeMode.safeReplication-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.safeReplication"))).intValue()-1));
			}
		});
		invariants8507.add(new Invariant(8174, "daikon.Quant.getElement_Object(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE, DataNode.instance.dnConf.ibrInterval) == daikon.Quant.getElement_Object(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE, blockManagerInstance.defaultReplication-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.defaultReplication"))).intValue()-1));
			}
		});
		invariants8507.add(new Invariant(8175, "daikon.Quant.getElement_Object(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE, DataNode.instance.dnConf.ibrInterval) == daikon.Quant.getElement_Object(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE, blockManagerInstance.neededReconstruction.QUEUE_VERY_LOW_REDUNDANCY-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.QUEUE_VERY_LOW_REDUNDANCY"))).intValue()-1));
			}
		});
		invariants8507.add(new Invariant(8176, "daikon.Quant.getElement_Object(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE, DataNode.instance.dnConf.volsConfigured-1) == daikon.Quant.getElement_Object(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE, DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.volsConfigured"))).intValue()-1) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue()));
			}
		});
		invariants8507.add(new Invariant(8177, "daikon.Quant.getElement_Object(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE, DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS) == daikon.Quant.getElement_Object(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE, blockManagerInstance.blocksReplWorkMultiplier-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.blocksReplWorkMultiplier"))).intValue()-1));
			}
		});
		invariants8507.add(new Invariant(8178, "daikon.Quant.getElement_Object(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE, DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS) == daikon.Quant.getElement_Object(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE, blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.sequenceNumber-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.sequenceNumber"))).intValue()-1));
			}
		});
		invariants8507.add(new Invariant(8179, "daikon.Quant.getElement_Object(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE, DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS) == daikon.Quant.getElement_Object(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE, blockManagerInstance.maxReplicationStreams-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.maxReplicationStreams"))).intValue()-1));
			}
		});
		invariants8507.add(new Invariant(8180, "daikon.Quant.getElement_Object(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE, DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS) == daikon.Quant.getElement_Object(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE, blockManagerInstance.neededReconstruction.QUEUE_LOW_REDUNDANCY-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.QUEUE_LOW_REDUNDANCY"))).intValue()-1));
			}
		});
		invariants8507.add(new Invariant(8181, "daikon.Quant.getElement_Object(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE, DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS) == daikon.Quant.getElement_Object(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandMultiplier-1)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue()) == daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandMultiplier"))).intValue()-1));
			}
		});
		invariants8507.add(new Invariant(8182, "DataNode.instance.id.exportedKeys.keyUpdateInterval == 36000000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.exportedKeys.keyUpdateInterval"))).intValue() == 36000000);
			}
		});
		invariants8507.add(new Invariant(8183, "DataNode.instance.id.infoSecurePort == 46407"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoSecurePort"))).intValue() == 46407);
			}
		});
		invariants8507.add(new Invariant(8184, "DataNode.instance.id.ipcPort == 42731"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() == 42731);
			}
		});
		invariants8507.add(new Invariant(8185, "DataNode.instance.id.nsInfo.cTime == 1731381948608L || DataNode.instance.id.nsInfo.cTime == 1731381953948L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() == 1731381948608L || ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() == 1731381953948L);
			}
		});
		invariants8507.add(new Invariant(8186, "DataNode.instance.id.nsInfo.namespaceID == 100961160 || DataNode.instance.id.nsInfo.namespaceID == 142861123"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() == 100961160 || ((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() == 142861123);
			}
		});
		invariants8507.add(new Invariant(8187, "DataNode.instance.id.xferPort == 36651"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() == 36651);
			}
		});
		invariants8507.add(new Invariant(8188, "DataNode.instance.lastDiskErrorCheck == 118060808"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() == 118060808);
			}
		});
		invariants8507.add(new Invariant(8189, "DataNode.instance.storage.namespaceID == 0 || DataNode.instance.storage.namespaceID == 100961160 || DataNode.instance.storage.namespaceID == 142861123"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() == 100961160 || ((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() == 142861123);
			}
		});
		invariants8507.add(new Invariant(8190, "DataNode.instance.volumeChecker.lastAllVolumesCheck == 117159722 || DataNode.instance.volumeChecker.lastAllVolumesCheck == 118057588 || DataNode.instance.volumeChecker.lastAllVolumesCheck == 118060807"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() == 117159722 || ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() == 118057588 || ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() == 118060807);
			}
		});
		invariants8507.add(new Invariant(8191, "DataNode.instance.xserver.balanceThrottler.curPeriodStart == 118056878 || DataNode.instance.xserver.balanceThrottler.curPeriodStart == 118059724"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() == 118056878 || ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() == 118059724);
			}
		});
		invariants8507.add(new Invariant(8192, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118058080197977L || NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118059665305243L || NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos == 118060823564884L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118058080197977L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118059665305243L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() == 118060823564884L);
			}
		});
		invariants8507.add(new Invariant(8193, "NameNode.instance.namesystem.lazyPersistFileScrubberTS == 118055682 || NameNode.instance.namesystem.lazyPersistFileScrubberTS == 118059665"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() == 118055682 || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() == 118059665);
			}
		});
		invariants8507.add(new Invariant(8194, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime == 118054874 || NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime == 118059294"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() == 118054874 || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() == 118059294);
			}
		});
		invariants8507.add(new Invariant(8195, "NameNode.instance.namesystem.startTime == 1731381949966L || NameNode.instance.namesystem.startTime == 1731381954386L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() == 1731381949966L || ((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() == 1731381954386L);
			}
		});
		invariants8507.add(new Invariant(8196, "blockManagerInstance.blockReportLeaseManager.nextId == -5252279483860782811L || blockManagerInstance.blockReportLeaseManager.nextId == -5252279483860782810L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() == -5252279483860782811L || ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() == -5252279483860782810L);
			}
		});
		invariants8507.add(new Invariant(8197, "daikon.Quant.eltsNotEqual(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE, null)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.eltsNotEqual((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])), null));
			}
		});
		invariants8507.add(new Invariant(8198, "blockManagerInstance.blockTokenSecretManager.intRange == 2147483647"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.intRange"))).intValue() == 2147483647);
			}
		});
		invariants8507.add(new Invariant(8199, "blockManagerInstance.blockTokenSecretManager.keyUpdateInterval == 36000000"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.keyUpdateInterval"))).intValue() == 36000000);
			}
		});
		invariants8507.add(new Invariant(8200, "blockManagerInstance.blockTokenSecretManager.serialNo == 675004884 || blockManagerInstance.blockTokenSecretManager.serialNo == 675004885"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue() == 675004884 || ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue() == 675004885);
			}
		});
		invariants8507.add(new Invariant(8201, "blockManagerInstance.bmSafeMode.startTime == 0 || blockManagerInstance.bmSafeMode.startTime == 118059619"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() == 118059619);
			}
		});
		invariants8507.add(new Invariant(8202, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 0 || blockManagerInstance.heartbeatManager.stats.capacityRemaining == 93487210496L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 93487210496L);
			}
		});
		invariants8507.add(new Invariant(8203, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 0 || blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 33740980224L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 33740980224L);
			}
		});
		invariants8507.add(new Invariant(8204, "blockManagerInstance.invalidateBlocks.startupTime == 118059296"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue() == 118059296);
			}
		});
		invariants8507.add(new Invariant(8205, "daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE) == 2 || daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE) == 3"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))) == 2 || daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))) == 3);
			}
		});
		invariants8507.add(new Invariant(8206, "daikon.Quant.getElement_Object(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME) != null"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.CORE_THREADS_PER_VOLUME"))).intValue()) != null);
			}
		});
		invariants8507.add(new Invariant(8207, "daikon.Quant.getElement_Object(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE, DataNode.instance.data.asyncDiskService.numDeletedBlocks) != null"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncDiskService.numDeletedBlocks"))).intValue()) != null);
			}
		});
		invariants8507.add(new Invariant(8208, "daikon.Quant.getElement_Object(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE, DataNode.instance.data.cacheManager.numBlocksCached) != null"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue()) != null);
			}
		});
		invariants8507.add(new Invariant(8209, "daikon.Quant.getElement_Object(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE, DataNode.instance.directoryScanner.diffs.serialVersionUID-1) != null"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.diffs.serialVersionUID"))).intValue()-1) != null);
			}
		});
		invariants8507.add(new Invariant(8210, "daikon.Quant.getElement_Object(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE, DataNode.instance.dnConf.ibrInterval) != null"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.getElement_Object((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])), ((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue()) != null);
			}
		});
		invariants8507.add(new Invariant(8211, "DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8212, "DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION >= daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.MAX_BLOCK_EVICTIONS_PER_ITERATION"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8213, "DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8214, "DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME <= daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.CORE_THREADS_PER_VOLUME"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])))-1);
			}
		});
		invariants8507.add(new Invariant(8215, "DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8216, "DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.asyncLazyPersistService.THREADS_KEEP_ALIVE_SECONDS"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8217, "DataNode.instance.data.cacheManager.numBlocksCached < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8218, "DataNode.instance.data.cacheManager.numBlocksCached < daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.numBlocksCached"))).intValue() < daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])))-1);
			}
		});
		invariants8507.add(new Invariant(8219, "DataNode.instance.data.cacheManager.revocationMs < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8220, "DataNode.instance.data.cacheManager.revocationMs > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationMs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8221, "DataNode.instance.data.cacheManager.revocationPollingMs < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationPollingMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8222, "DataNode.instance.data.cacheManager.revocationPollingMs > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationPollingMs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8223, "DataNode.instance.data.maxDataLength < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.maxDataLength"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8224, "DataNode.instance.data.maxDataLength > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.maxDataLength"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8225, "DataNode.instance.data.smallBufferSize < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.smallBufferSize"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8226, "DataNode.instance.data.smallBufferSize > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.smallBufferSize"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8227, "DataNode.instance.data.volsConfigured < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8228, "DataNode.instance.data.volsConfigured <= daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8229, "DataNode.instance.data.volsConfigured >= daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.volsConfigured"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])))-1);
			}
		});
		invariants8507.add(new Invariant(8230, "DataNode.instance.directoryScanner.diffs.serialVersionUID < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.diffs.serialVersionUID"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8231, "DataNode.instance.directoryScanner.diffs.serialVersionUID <= daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.directoryScanner.diffs.serialVersionUID"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])))-1);
			}
		});
		invariants8507.add(new Invariant(8232, "DataNode.instance.dnConf.blockReportInterval < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportInterval"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8233, "DataNode.instance.dnConf.blockReportInterval > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportInterval"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8234, "DataNode.instance.dnConf.blockReportSplitThreshold < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportSplitThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8235, "DataNode.instance.dnConf.blockReportSplitThreshold > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportSplitThreshold"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8236, "DataNode.instance.dnConf.bpReadyTimeout < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.bpReadyTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8237, "DataNode.instance.dnConf.bpReadyTimeout > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.bpReadyTimeout"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8238, "DataNode.instance.dnConf.cacheReportInterval < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.cacheReportInterval"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8239, "DataNode.instance.dnConf.cacheReportInterval > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.cacheReportInterval"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8240, "DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8241, "DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.datanodeSlowIoWarningThresholdMs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8242, "DataNode.instance.dnConf.heartBeatInterval < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.heartBeatInterval"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8243, "DataNode.instance.dnConf.heartBeatInterval > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.heartBeatInterval"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8244, "DataNode.instance.dnConf.ibrInterval < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8245, "DataNode.instance.dnConf.ibrInterval < daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.ibrInterval"))).intValue() < daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])))-1);
			}
		});
		invariants8507.add(new Invariant(8246, "DataNode.instance.dnConf.lifelineIntervalMs < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.lifelineIntervalMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8247, "DataNode.instance.dnConf.lifelineIntervalMs > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.lifelineIntervalMs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8248, "DataNode.instance.dnConf.maxDataLength < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.maxDataLength"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8249, "DataNode.instance.dnConf.maxDataLength > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.maxDataLength"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8250, "DataNode.instance.dnConf.outliersReportIntervalMs < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.outliersReportIntervalMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8251, "DataNode.instance.dnConf.outliersReportIntervalMs > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.outliersReportIntervalMs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8252, "DataNode.instance.dnConf.readaheadLength < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.readaheadLength"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8253, "DataNode.instance.dnConf.readaheadLength > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.readaheadLength"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8254, "DataNode.instance.dnConf.restartReplicaExpiry < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.restartReplicaExpiry"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8255, "DataNode.instance.dnConf.restartReplicaExpiry > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.restartReplicaExpiry"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8256, "DataNode.instance.dnConf.socketKeepaliveTimeout < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketKeepaliveTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8257, "DataNode.instance.dnConf.socketKeepaliveTimeout > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketKeepaliveTimeout"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8258, "DataNode.instance.dnConf.socketTimeout < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8259, "DataNode.instance.dnConf.socketTimeout > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketTimeout"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8260, "DataNode.instance.dnConf.socketWriteTimeout < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketWriteTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8261, "DataNode.instance.dnConf.socketWriteTimeout > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketWriteTimeout"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8262, "DataNode.instance.dnConf.volsConfigured <= daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.volsConfigured"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8263, "DataNode.instance.dnConf.volsConfigured >= daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.volsConfigured"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])))-1);
			}
		});
		invariants8507.add(new Invariant(8264, "DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8265, "DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS <= daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_ACCEPTOR_THREADS"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])))-1);
			}
		});
		invariants8507.add(new Invariant(8266, "DataNode.instance.httpServer.HTTP_MAX_THREADS < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_MAX_THREADS"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8267, "DataNode.instance.httpServer.HTTP_MAX_THREADS > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_MAX_THREADS"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8268, "DataNode.instance.id.nsInfo.cTime > blockManagerInstance.blockTokenSecretManager.intRange"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.intRange"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8269, "DataNode.instance.id.nsInfo.cTime > blockManagerInstance.blockTokenSecretManager.keyUpdateInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.keyUpdateInterval"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8270, "DataNode.instance.id.nsInfo.cTime > blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8271, "DataNode.instance.id.nsInfo.cTime > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8272, "DataNode.instance.id.nsInfo.layoutVersion < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8273, "DataNode.instance.id.nsInfo.layoutVersion < daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.layoutVersion"))).intValue() < daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])))-1);
			}
		});
		invariants8507.add(new Invariant(8274, "DataNode.instance.id.nsInfo.namespaceID < blockManagerInstance.blockTokenSecretManager.intRange"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.intRange"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8275, "DataNode.instance.id.nsInfo.namespaceID > blockManagerInstance.blockTokenSecretManager.keyUpdateInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.keyUpdateInterval"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8276, "DataNode.instance.id.nsInfo.namespaceID < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8277, "DataNode.instance.id.nsInfo.namespaceID > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8278, "DataNode.instance.storage.layoutVersion < blockManagerInstance.blockTokenSecretManager.intRange"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.intRange"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8279, "DataNode.instance.storage.layoutVersion < blockManagerInstance.blockTokenSecretManager.keyUpdateInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.keyUpdateInterval"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8280, "DataNode.instance.storage.layoutVersion < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8281, "DataNode.instance.storage.layoutVersion < daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.layoutVersion"))).intValue() < daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])))-1);
			}
		});
		invariants8507.add(new Invariant(8282, "DataNode.instance.storage.namespaceID < blockManagerInstance.blockTokenSecretManager.intRange"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.intRange"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8283, "DataNode.instance.storage.namespaceID != blockManagerInstance.blockTokenSecretManager.keyUpdateInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.keyUpdateInterval"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8284, "DataNode.instance.storage.namespaceID < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8285, "DataNode.instance.storage.namespaceID != daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8286, "DataNode.instance.storage.namespaceID != daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])))-1);
			}
		});
		invariants8507.add(new Invariant(8287, "DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8288, "DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8289, "DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8290, "DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8291, "DataNode.instance.volumeChecker.lastAllVolumesCheck < blockManagerInstance.blockTokenSecretManager.intRange"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.intRange"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8292, "DataNode.instance.volumeChecker.lastAllVolumesCheck > blockManagerInstance.blockTokenSecretManager.keyUpdateInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.keyUpdateInterval"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8293, "DataNode.instance.volumeChecker.lastAllVolumesCheck < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8294, "DataNode.instance.volumeChecker.lastAllVolumesCheck > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8295, "DataNode.instance.volumeChecker.numSyncDatasetChecks < blockManagerInstance.blockTokenSecretManager.intRange"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.intRange"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8296, "DataNode.instance.volumeChecker.numSyncDatasetChecks < blockManagerInstance.blockTokenSecretManager.keyUpdateInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.keyUpdateInterval"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8297, "DataNode.instance.volumeChecker.numSyncDatasetChecks < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8298, "DataNode.instance.volumeChecker.numSyncDatasetChecks <= daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.numSyncDatasetChecks"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])))-1);
			}
		});
		invariants8507.add(new Invariant(8299, "DataNode.instance.xserver.balanceThrottler.bytesPerPeriod < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.bytesPerPeriod"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8300, "DataNode.instance.xserver.balanceThrottler.bytesPerPeriod > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.bytesPerPeriod"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8301, "DataNode.instance.xserver.balanceThrottler.curPeriodStart < blockManagerInstance.blockTokenSecretManager.intRange"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.intRange"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8302, "DataNode.instance.xserver.balanceThrottler.curPeriodStart > blockManagerInstance.blockTokenSecretManager.keyUpdateInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.keyUpdateInterval"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8303, "DataNode.instance.xserver.balanceThrottler.curPeriodStart < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8304, "DataNode.instance.xserver.balanceThrottler.curPeriodStart > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8305, "DataNode.instance.xserver.balanceThrottler.maxThreads < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.maxThreads"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8306, "DataNode.instance.xserver.balanceThrottler.maxThreads > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.maxThreads"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8307, "DataNode.instance.xserver.balanceThrottler.period < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.period"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8308, "DataNode.instance.xserver.balanceThrottler.period > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.period"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8309, "DataNode.instance.xserver.balanceThrottler.periodExtension < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.periodExtension"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8310, "DataNode.instance.xserver.balanceThrottler.periodExtension > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.periodExtension"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8311, "DataNode.instance.xserver.estimateBlockSize < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.estimateBlockSize"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8312, "DataNode.instance.xserver.estimateBlockSize > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.estimateBlockSize"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8313, "DataNode.instance.xserver.maxXceiverCount < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.maxXceiverCount"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8314, "DataNode.instance.xserver.maxXceiverCount > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.maxXceiverCount"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8315, "NameNode.instance.DEFAULT_PORT < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.DEFAULT_PORT"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8316, "NameNode.instance.DEFAULT_PORT > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.DEFAULT_PORT"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8317, "NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8318, "NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8319, "NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8320, "NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8321, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE < blockManagerInstance.blockTokenSecretManager.intRange"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.intRange"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8322, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE < blockManagerInstance.blockTokenSecretManager.keyUpdateInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.keyUpdateInterval"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8323, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8324, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8325, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8326, "NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size < daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size"))).intValue() < daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])))-1);
			}
		});
		invariants8507.add(new Invariant(8327, "NameNode.instance.namesystem.blockDeletionIncrement < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.blockDeletionIncrement"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8328, "NameNode.instance.namesystem.blockDeletionIncrement > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.blockDeletionIncrement"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8329, "daikon.Quant.subsetOf(NameNode.instance.namesystem.cacheManager.directivesById_FOR_ENCLOSING_USE, blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (daikon.Quant.subsetOf((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.directivesById")).toArray(new Object[0])), (Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8330, "NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8331, "NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8332, "NameNode.instance.namesystem.cacheManager.scanIntervalMs < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.scanIntervalMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8333, "NameNode.instance.namesystem.cacheManager.scanIntervalMs > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.cacheManager.scanIntervalMs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8334, "NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8335, "NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.REPORT_STALE_NODE_NODES_PER_LINE"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8336, "NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8337, "NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8338, "NameNode.instance.namesystem.dir.inodeXAttrsLimit < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.inodeXAttrsLimit"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8339, "NameNode.instance.namesystem.dir.inodeXAttrsLimit > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.inodeXAttrsLimit"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8340, "NameNode.instance.namesystem.dir.maxComponentLength < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxComponentLength"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8341, "NameNode.instance.namesystem.dir.maxComponentLength > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxComponentLength"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8342, "NameNode.instance.namesystem.dir.maxDirItems < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxDirItems"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8343, "NameNode.instance.namesystem.dir.maxDirItems > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxDirItems"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8344, "NameNode.instance.namesystem.dir.xattrMaxSize < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.xattrMaxSize"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8345, "NameNode.instance.namesystem.dir.xattrMaxSize > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.xattrMaxSize"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8346, "NameNode.instance.namesystem.editLogRollerThreshold < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogRollerThreshold"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8347, "NameNode.instance.namesystem.editLogRollerThreshold > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogRollerThreshold"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8348, "NameNode.instance.namesystem.fsImage.lastAppliedTxId < blockManagerInstance.blockTokenSecretManager.intRange"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.intRange"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8349, "NameNode.instance.namesystem.fsImage.lastAppliedTxId < blockManagerInstance.blockTokenSecretManager.keyUpdateInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.keyUpdateInterval"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8350, "NameNode.instance.namesystem.fsImage.lastAppliedTxId < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8351, "NameNode.instance.namesystem.fsImage.lastAppliedTxId <= daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() <= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8352, "NameNode.instance.namesystem.fsImage.lastAppliedTxId != daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsImage.lastAppliedTxId"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])))-1);
			}
		});
		invariants8507.add(new Invariant(8353, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos > blockManagerInstance.blockTokenSecretManager.intRange"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.intRange"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8354, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos > blockManagerInstance.blockTokenSecretManager.keyUpdateInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.keyUpdateInterval"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8355, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos > blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8356, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8357, "NameNode.instance.namesystem.lazyPersistFileScrubberTS < blockManagerInstance.blockTokenSecretManager.intRange"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.intRange"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8358, "NameNode.instance.namesystem.lazyPersistFileScrubberTS > blockManagerInstance.blockTokenSecretManager.keyUpdateInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.keyUpdateInterval"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8359, "NameNode.instance.namesystem.lazyPersistFileScrubberTS < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8360, "NameNode.instance.namesystem.lazyPersistFileScrubberTS > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8361, "NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8362, "NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8363, "NameNode.instance.namesystem.leaseManager.hardLimit < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.hardLimit"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8364, "NameNode.instance.namesystem.leaseManager.hardLimit > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.hardLimit"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8365, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime < blockManagerInstance.blockTokenSecretManager.intRange"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.intRange"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8366, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime > blockManagerInstance.blockTokenSecretManager.keyUpdateInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.keyUpdateInterval"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8367, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8368, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8369, "NameNode.instance.namesystem.leaseRecheckIntervalMs < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseRecheckIntervalMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8370, "NameNode.instance.namesystem.leaseRecheckIntervalMs > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseRecheckIntervalMs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8371, "NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8372, "NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8373, "NameNode.instance.namesystem.nnResourceChecker.duReserved < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.nnResourceChecker.duReserved"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8374, "NameNode.instance.namesystem.nnResourceChecker.duReserved > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.nnResourceChecker.duReserved"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8375, "NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8376, "NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8377, "NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8378, "NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8379, "NameNode.instance.namesystem.startTime > blockManagerInstance.blockTokenSecretManager.intRange"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.intRange"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8380, "NameNode.instance.namesystem.startTime > blockManagerInstance.blockTokenSecretManager.keyUpdateInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.keyUpdateInterval"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8381, "NameNode.instance.namesystem.startTime > blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8382, "NameNode.instance.namesystem.startTime > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8383, "blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8384, "blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8385, "blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID > blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8386, "blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8387, "blockManagerInstance.blockReportLeaseManager.maxPending < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.maxPending"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8388, "blockManagerInstance.blockReportLeaseManager.maxPending > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.maxPending"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8389, "blockManagerInstance.blockReportLeaseManager.nextId < blockManagerInstance.blockTokenSecretManager.intRange"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.intRange"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8390, "blockManagerInstance.blockReportLeaseManager.nextId < blockManagerInstance.blockTokenSecretManager.keyUpdateInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.keyUpdateInterval"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8391, "blockManagerInstance.blockReportLeaseManager.nextId < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8392, "blockManagerInstance.blockReportLeaseManager.nextId < daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() < daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])))-1);
			}
		});
		invariants8507.add(new Invariant(8393, "blockManagerInstance.blockTokenSecretManager.intRange > blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.intRange"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8394, "blockManagerInstance.blockTokenSecretManager.intRange > blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.intRange"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8395, "blockManagerInstance.blockTokenSecretManager.intRange > blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.intRange"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8396, "blockManagerInstance.blockTokenSecretManager.intRange != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.intRange"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8397, "blockManagerInstance.blockTokenSecretManager.intRange != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.intRange"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8398, "blockManagerInstance.blockTokenSecretManager.intRange != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.intRange"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8399, "blockManagerInstance.blockTokenSecretManager.intRange > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.intRange"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8400, "blockManagerInstance.blockTokenSecretManager.intRange > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.intRange"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8401, "blockManagerInstance.blockTokenSecretManager.keyUpdateInterval < blockManagerInstance.blockTokenSecretManager.serialNo"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.keyUpdateInterval"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8402, "blockManagerInstance.blockTokenSecretManager.keyUpdateInterval != blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.keyUpdateInterval"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8403, "blockManagerInstance.blockTokenSecretManager.keyUpdateInterval > blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.keyUpdateInterval"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8404, "blockManagerInstance.blockTokenSecretManager.keyUpdateInterval != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.keyUpdateInterval"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8405, "blockManagerInstance.blockTokenSecretManager.keyUpdateInterval != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.keyUpdateInterval"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8406, "blockManagerInstance.blockTokenSecretManager.keyUpdateInterval != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.keyUpdateInterval"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8407, "blockManagerInstance.blockTokenSecretManager.keyUpdateInterval > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.keyUpdateInterval"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8408, "blockManagerInstance.blockTokenSecretManager.keyUpdateInterval > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.keyUpdateInterval"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8409, "blockManagerInstance.blockTokenSecretManager.serialNo > blockManagerInstance.blocksMap.capacity"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.blocksMap.capacity"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8410, "blockManagerInstance.blockTokenSecretManager.serialNo > blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8411, "blockManagerInstance.blockTokenSecretManager.serialNo > blockManagerInstance.datanodeManager.defaultInfoPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoPort"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8412, "blockManagerInstance.blockTokenSecretManager.serialNo > blockManagerInstance.datanodeManager.defaultIpcPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultIpcPort"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8413, "blockManagerInstance.blockTokenSecretManager.serialNo > blockManagerInstance.datanodeManager.defaultXferPort"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultXferPort"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8414, "blockManagerInstance.blockTokenSecretManager.serialNo > blockManagerInstance.datanodeManager.heartbeatExpireInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatExpireInterval"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8415, "blockManagerInstance.blockTokenSecretManager.serialNo > blockManagerInstance.datanodeManager.heartbeatIntervalSeconds"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatIntervalSeconds"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8416, "blockManagerInstance.blockTokenSecretManager.serialNo > blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8417, "blockManagerInstance.blockTokenSecretManager.serialNo != blockManagerInstance.heartbeatManager.stats.capacityRemaining"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8418, "blockManagerInstance.blockTokenSecretManager.serialNo != blockManagerInstance.heartbeatManager.stats.capacityTotal"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8419, "blockManagerInstance.blockTokenSecretManager.serialNo != blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8420, "blockManagerInstance.blockTokenSecretManager.serialNo > blockManagerInstance.heartbeatManager.stats.nodesInService"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8421, "blockManagerInstance.blockTokenSecretManager.serialNo > blockManagerInstance.invalidateBlocks.startupTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8422, "blockManagerInstance.blockTokenSecretManager.serialNo > blockManagerInstance.neededReconstruction.LEVEL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.LEVEL"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8423, "blockManagerInstance.blockTokenSecretManager.serialNo > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8424, "blockManagerInstance.blockTokenSecretManager.serialNo > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8425, "blockManagerInstance.blockTokenSecretManager.serialNo > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8426, "blockManagerInstance.blockTokenSecretManager.serialNo > blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8427, "blockManagerInstance.blockTokenSecretManager.serialNo > blockManagerInstance.replQueueResetToHeadThreshold"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueResetToHeadThreshold"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8428, "blockManagerInstance.blockTokenSecretManager.serialNo > blockManagerInstance.storagePolicySuite.defaultPolicyID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue() > ((Number)(InvariantChecker.getValue("blockManagerInstance.storagePolicySuite.defaultPolicyID"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8429, "blockManagerInstance.blockTokenSecretManager.serialNo > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.serialNo"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8430, "blockManagerInstance.blocksMap.capacity > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blocksMap.capacity"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8431, "blockManagerInstance.bmSafeMode.startTime != daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8432, "blockManagerInstance.bmSafeMode.startTime != daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])))-1);
			}
		});
		invariants8507.add(new Invariant(8433, "blockManagerInstance.datanodeManager.defaultInfoPort > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultInfoPort"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8434, "blockManagerInstance.datanodeManager.defaultIpcPort > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultIpcPort"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8435, "blockManagerInstance.datanodeManager.defaultXferPort > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.defaultXferPort"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8436, "blockManagerInstance.datanodeManager.heartbeatExpireInterval > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatExpireInterval"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8437, "blockManagerInstance.datanodeManager.heartbeatIntervalSeconds >= daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatIntervalSeconds"))).intValue() >= daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8438, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed != daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8439, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed != daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])))-1);
			}
		});
		invariants8507.add(new Invariant(8440, "blockManagerInstance.heartbeatManager.stats.capacityRemaining != daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8441, "blockManagerInstance.heartbeatManager.stats.capacityRemaining != daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])))-1);
			}
		});
		invariants8507.add(new Invariant(8442, "blockManagerInstance.heartbeatManager.stats.capacityTotal != daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8443, "blockManagerInstance.heartbeatManager.stats.capacityTotal != daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityTotal"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])))-1);
			}
		});
		invariants8507.add(new Invariant(8444, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs != daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8445, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs != daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() != daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])))-1);
			}
		});
		invariants8507.add(new Invariant(8446, "blockManagerInstance.heartbeatManager.stats.nodesInService < daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)-1"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() < daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0])))-1);
			}
		});
		invariants8507.add(new Invariant(8447, "blockManagerInstance.invalidateBlocks.startupTime > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8448, "blockManagerInstance.neededReconstruction.LEVEL > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.LEVEL"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8449, "blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8450, "blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8451, "blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8452, "blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8453, "blockManagerInstance.replQueueResetToHeadThreshold > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueResetToHeadThreshold"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8454, "blockManagerInstance.storagePolicySuite.defaultPolicyID > daikon.Quant.size(blockManagerInstance.blockTokenSecretManager.allKeys_FOR_ENCLOSING_USE)"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.storagePolicySuite.defaultPolicyID"))).intValue() > daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("blockManagerInstance.blockTokenSecretManager.allKeys")).toArray(new Object[0]))));
			}
		});
		invariants8507.add(new Invariant(8455, "DataNode.instance.id.infoPort == 42145"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.infoPort"))).intValue() == 42145);
			}
		});
		invariants8507.add(new Invariant(8456, "DataNode.instance.id.ipcPort == 46407"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.ipcPort"))).intValue() == 46407);
			}
		});
		invariants8507.add(new Invariant(8457, "DataNode.instance.id.nsInfo.cTime == 1731381937765L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.cTime"))).intValue() == 1731381937765L);
			}
		});
		invariants8507.add(new Invariant(8458, "DataNode.instance.id.nsInfo.namespaceID == 1657243967"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.nsInfo.namespaceID"))).intValue() == 1657243967);
			}
		});
		invariants8507.add(new Invariant(8459, "DataNode.instance.id.xferPort == 43475"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.id.xferPort"))).intValue() == 43475);
			}
		});
		invariants8507.add(new Invariant(8460, "DataNode.instance.lastDiskErrorCheck == 118046769"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.lastDiskErrorCheck"))).intValue() == 118046769);
			}
		});
		invariants8507.add(new Invariant(8461, "DataNode.instance.storage.namespaceID == 1657243967"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storage.namespaceID"))).intValue() == 1657243967);
			}
		});
		invariants8507.add(new Invariant(8462, "DataNode.instance.volumeChecker.lastAllVolumesCheck == 117146154 || DataNode.instance.volumeChecker.lastAllVolumesCheck == 118046762"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() == 117146154 || ((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() == 118046762);
			}
		});
		invariants8507.add(new Invariant(8463, "DataNode.instance.xserver.balanceThrottler.curPeriodStart == 118046155"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.curPeriodStart"))).intValue() == 118046155);
			}
		});
		invariants8507.add(new Invariant(8464, "DataNode.instance.xserver.estimateBlockSize == 102400"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.estimateBlockSize"))).intValue() == 102400);
			}
		});
		invariants8507.add(new Invariant(8465, "NameNode.instance.namesystem.lazyPersistFileScrubberTS == 118044891"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.lazyPersistFileScrubberTS"))).intValue() == 118044891);
			}
		});
		invariants8507.add(new Invariant(8466, "NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime == 118044199"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime"))).intValue() == 118044199);
			}
		});
		invariants8507.add(new Invariant(8467, "NameNode.instance.namesystem.startTime == 1731381939291L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.startTime"))).intValue() == 1731381939291L);
			}
		});
		invariants8507.add(new Invariant(8468, "blockManagerInstance.blockReportLeaseManager.nextId == 3734955285369570802L || blockManagerInstance.blockReportLeaseManager.nextId == 3734955285369570805L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() == 3734955285369570802L || ((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() == 3734955285369570805L);
			}
		});
		invariants8507.add(new Invariant(8469, "blockManagerInstance.bmSafeMode.startTime == 0 || blockManagerInstance.bmSafeMode.startTime == 118044853"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue() == 118044853);
			}
		});
		invariants8507.add(new Invariant(8470, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 0 || blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 147456 || blockManagerInstance.heartbeatManager.stats.blockPoolUsed == 8197602"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 147456 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() == 8197602);
			}
		});
		invariants8507.add(new Invariant(8471, "blockManagerInstance.heartbeatManager.stats.capacityRemaining == 0 || blockManagerInstance.heartbeatManager.stats.capacityRemaining == 280452214784L || blockManagerInstance.heartbeatManager.stats.capacityRemaining == 280504369152L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 280452214784L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() == 280504369152L);
			}
		});
		invariants8507.add(new Invariant(8472, "blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 0 || blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 101180203008L || blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs == 101224204830L"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 101180203008L || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs"))).intValue() == 101224204830L);
			}
		});
		invariants8507.add(new Invariant(8473, "blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount == 0 || blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount == 3 || blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount == 8"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue() == 0 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue() == 3 || ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue() == 8);
			}
		});
		invariants8507.add(new Invariant(8474, "blockManagerInstance.invalidateBlocks.startupTime == 118044202"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.invalidateBlocks.startupTime"))).intValue() == 118044202);
			}
		});
		invariants8507.add(new Invariant(8475, "blockManagerInstance.lastRedundancyCycleTS == -1 || blockManagerInstance.lastRedundancyCycleTS == 118047852"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == -1 || ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue() == 118047852);
			}
		});
		invariants8507.add(new Invariant(8476, "DataNode.instance.data.cacheManager.revocationMs != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.data.cacheManager.revocationMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8477, "DataNode.instance.dnConf.blockReportSplitThreshold != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.blockReportSplitThreshold"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8478, "DataNode.instance.dnConf.outliersReportIntervalMs != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.outliersReportIntervalMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8479, "DataNode.instance.dnConf.readaheadLength != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.readaheadLength"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8480, "DataNode.instance.dnConf.socketWriteTimeout != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.dnConf.socketWriteTimeout"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8481, "DataNode.instance.httpServer.HTTP_MAX_THREADS != blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.httpServer.HTTP_MAX_THREADS"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8482, "DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.storageLocationChecker.delegateChecker.minMsBetweenChecks"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8483, "DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.delegateChecker.diskCheckTimeout"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8484, "DataNode.instance.volumeChecker.lastAllVolumesCheck > DataNode.instance.xserver.estimateBlockSize"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.volumeChecker.lastAllVolumesCheck"))).intValue() > ((Number)(InvariantChecker.getValue("DataNode.instance.xserver.estimateBlockSize"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8485, "DataNode.instance.xserver.balanceThrottler.bytesPerPeriod != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.balanceThrottler.bytesPerPeriod"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8486, "DataNode.instance.xserver.estimateBlockSize < blockManagerInstance.bmSafeMode.startTime"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.estimateBlockSize"))).intValue() < ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.startTime"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8487, "DataNode.instance.xserver.estimateBlockSize != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.estimateBlockSize"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8488, "DataNode.instance.xserver.estimateBlockSize != blockManagerInstance.lastRedundancyCycleTS"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("DataNode.instance.xserver.estimateBlockSize"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.lastRedundancyCycleTS"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8489, "NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8490, "NameNode.instance.namesystem.dir.maxDirItems != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.dir.maxDirItems"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8491, "NameNode.instance.namesystem.editLogRollerThreshold != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.editLogRollerThreshold"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8492, "NameNode.instance.namesystem.leaseManager.hardLimit != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.hardLimit"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8493, "blockManagerInstance.blockReportLeaseManager.leaseExpiryMs != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.leaseExpiryMs"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8494, "blockManagerInstance.blockReportLeaseManager.maxPending != blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.maxPending"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8495, "blockManagerInstance.blockReportThread.MAX_LOCK_HOLD_MS != blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportThread.MAX_LOCK_HOLD_MS"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8496, "blockManagerInstance.heartbeatManager.stats.capacityRemaining % blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.capacityRemaining"))).intValue() % ((Number)(InvariantChecker.getValue("blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE"))).intValue() == 0);
			}
		});
		invariants8507.add(new Invariant(8497, "blockManagerInstance.datanodeManager.heartbeatExpireInterval != blockManagerInstance.heartbeatManager.stats.blockPoolUsed"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.datanodeManager.heartbeatExpireInterval"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8498, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed != blockManagerInstance.storageInfoDefragmentInterval"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.storageInfoDefragmentInterval"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8499, "blockManagerInstance.heartbeatManager.stats.blockPoolUsed % daikon.Quant.size(NameNode.instance.namesystem.topMetrics.rollingWindowManagers_FOR_ENCLOSING_USE)-1 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.blockPoolUsed"))).intValue() % daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.topMetrics.rollingWindowManagers")).toArray(new Object[0])))-1 == 0);
			}
		});
		invariants8507.add(new Invariant(8500, "blockManagerInstance.heartbeatManager.stats.nodesInService <= blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() <= ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8501, "blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount != blockManagerInstance.neededReconstruction.LEVEL"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.neededReconstruction.LEVEL"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8502, "blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount != blockManagerInstance.storagePolicySuite.defaultPolicyID"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue() != ((Number)(InvariantChecker.getValue("blockManagerInstance.storagePolicySuite.defaultPolicyID"))).intValue());
			}
		});
		invariants8507.add(new Invariant(8503, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 653424575 * blockManagerInstance.heartbeatManager.stats.nodesInService - 178954609 * daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE) - 1.18044891964615E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 653424575 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() - 178954609 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))) - 1.18044891964615E14 == 0);
			}
		});
		invariants8507.add(new Invariant(8504, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 653424575 * blockManagerInstance.heartbeatManager.stats.nodesInService - 178954609 * daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)-1 - 1.18045070919224E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 653424575 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInService"))).intValue() - 178954609 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0])))-1 - 1.18045070919224E14 == 0);
			}
		});
		invariants8507.add(new Invariant(8505, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 653424575 * blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount - 178954609 * daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE) - 1.18044891964615E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 653424575 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue() - 178954609 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))) - 1.18044891964615E14 == 0);
			}
		});
		invariants8507.add(new Invariant(8506, "NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos - 653424575 * blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount - 178954609 * daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE)-1 - 1.18045070919224E14 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos"))).intValue() - 653424575 * ((Number)(InvariantChecker.getValue("blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount"))).intValue() - 178954609 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0])))-1 - 1.18045070919224E14 == 0);
			}
		});
		invariants8507.add(new Invariant(8507, "blockManagerInstance.blockReportLeaseManager.nextId - 3 * blockManagerInstance.replQueueCallsSinceReset - 3 * daikon.Quant.size(NameNode.instance.namesystem.leaseManager.leasesById_FOR_ENCLOSING_USE) - 3.7349552853695708E18 == 0"){
			@SuppressWarnings("unchecked")
			public boolean check() {
				return (((Number)(InvariantChecker.getValue("blockManagerInstance.blockReportLeaseManager.nextId"))).intValue() - 3 * ((Number)(InvariantChecker.getValue("blockManagerInstance.replQueueCallsSinceReset"))).intValue() - 3 * daikon.Quant.size((Set.class.cast(InvariantChecker.getValue("NameNode.instance.namesystem.leaseManager.leasesById")).toArray(new Object[0]))) - 3.7349552853695708E18 == 0);
			}
		});
	}
	static {
installInv8507();	}
}
